

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Aug 31 22:54:51 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext1,local,class=CONST,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	intentry,global,class=CODE,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	swtext2,local,class=CONST,delta=2
    78                           	psect	text52,local,class=CODE,merge=1,delta=2
    79                           	psect	text53,local,class=CODE,merge=1,delta=2
    80                           	psect	text54,local,class=CODE,merge=1,delta=2
    81                           	psect	text55,local,class=CODE,merge=1,delta=2
    82                           	psect	text56,local,class=CODE,merge=1,delta=2
    83                           	psect	text57,local,class=CODE,merge=1,delta=2
    84                           	psect	text58,local,class=CODE,merge=1,delta=2
    85                           	psect	text59,local,class=CODE,merge=1,delta=2
    86                           	psect	text60,local,class=CODE,merge=1,delta=2
    87                           	psect	text61,local,class=CODE,merge=1,delta=2
    88                           	psect	text62,local,class=CODE,merge=1,delta=2
    89                           	psect	text63,local,class=CODE,merge=1,delta=2
    90                           	psect	text64,local,class=CODE,merge=1,delta=2
    91                           	psect	text65,local,class=CODE,merge=1,delta=2
    92                           	psect	text66,local,class=CODE,merge=1,delta=2
    93                           	psect	text67,local,class=CODE,merge=1,delta=2
    94                           	dabs	1,0x20,48,_BDT
    95                           	dabs	1,0x50,8,_SetupPkt
    96                           	dabs	1,0x60,16,_CtrlTrfData
    97                           	dabs	1,0x7E,2
    98  0000                     
    99                           ; Version 1.42
   100                           ; Generated 13/04/2017 GMT
   101                           ; 
   102                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC16F1455 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000E                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  008C                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0095                     	;# 
   163  0096                     	;# 
   164  0097                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010E                     	;# 
   176  0111                     	;# 
   177  0112                     	;# 
   178  0113                     	;# 
   179  0114                     	;# 
   180  0115                     	;# 
   181  0116                     	;# 
   182  0117                     	;# 
   183  0118                     	;# 
   184  0119                     	;# 
   185  011D                     	;# 
   186  018C                     	;# 
   187  018E                     	;# 
   188  0191                     	;# 
   189  0191                     	;# 
   190  0192                     	;# 
   191  0193                     	;# 
   192  0193                     	;# 
   193  0194                     	;# 
   194  0195                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0199                     	;# 
   198  019A                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019C                     	;# 
   202  019D                     	;# 
   203  019E                     	;# 
   204  019F                     	;# 
   205  020C                     	;# 
   206  0211                     	;# 
   207  0211                     	;# 
   208  0212                     	;# 
   209  0212                     	;# 
   210  0213                     	;# 
   211  0213                     	;# 
   212  0214                     	;# 
   213  0214                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0216                     	;# 
   218  0216                     	;# 
   219  0217                     	;# 
   220  0217                     	;# 
   221  0391                     	;# 
   222  0392                     	;# 
   223  0393                     	;# 
   224  039A                     	;# 
   225  039B                     	;# 
   226  0611                     	;# 
   227  0612                     	;# 
   228  0613                     	;# 
   229  0613                     	;# 
   230  0614                     	;# 
   231  0615                     	;# 
   232  0616                     	;# 
   233  0616                     	;# 
   234  0691                     	;# 
   235  0692                     	;# 
   236  0693                     	;# 
   237  0694                     	;# 
   238  0695                     	;# 
   239  0E8E                     	;# 
   240  0E8F                     	;# 
   241  0E90                     	;# 
   242  0E91                     	;# 
   243  0E92                     	;# 
   244  0E93                     	;# 
   245  0E94                     	;# 
   246  0E94                     	;# 
   247  0E95                     	;# 
   248  0E96                     	;# 
   249  0E97                     	;# 
   250  0E98                     	;# 
   251  0E99                     	;# 
   252  0E9A                     	;# 
   253  0E9B                     	;# 
   254  0E9C                     	;# 
   255  0E9D                     	;# 
   256  0E9E                     	;# 
   257  0E9F                     	;# 
   258  0FE4                     	;# 
   259  0FE5                     	;# 
   260  0FE6                     	;# 
   261  0FE7                     	;# 
   262  0FE8                     	;# 
   263  0FE9                     	;# 
   264  0FEA                     	;# 
   265  0FEB                     	;# 
   266  0FED                     	;# 
   267  0FEE                     	;# 
   268  0FEF                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000E                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  008C                     	;# 
   295  008E                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009B                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  010C                     	;# 
   311  010E                     	;# 
   312  0111                     	;# 
   313  0112                     	;# 
   314  0113                     	;# 
   315  0114                     	;# 
   316  0115                     	;# 
   317  0116                     	;# 
   318  0117                     	;# 
   319  0118                     	;# 
   320  0119                     	;# 
   321  011D                     	;# 
   322  018C                     	;# 
   323  018E                     	;# 
   324  0191                     	;# 
   325  0191                     	;# 
   326  0192                     	;# 
   327  0193                     	;# 
   328  0193                     	;# 
   329  0194                     	;# 
   330  0195                     	;# 
   331  0196                     	;# 
   332  0197                     	;# 
   333  0199                     	;# 
   334  019A                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019C                     	;# 
   338  019D                     	;# 
   339  019E                     	;# 
   340  019F                     	;# 
   341  020C                     	;# 
   342  0211                     	;# 
   343  0211                     	;# 
   344  0212                     	;# 
   345  0212                     	;# 
   346  0213                     	;# 
   347  0213                     	;# 
   348  0214                     	;# 
   349  0214                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0215                     	;# 
   353  0216                     	;# 
   354  0216                     	;# 
   355  0217                     	;# 
   356  0217                     	;# 
   357  0391                     	;# 
   358  0392                     	;# 
   359  0393                     	;# 
   360  039A                     	;# 
   361  039B                     	;# 
   362  0611                     	;# 
   363  0612                     	;# 
   364  0613                     	;# 
   365  0613                     	;# 
   366  0614                     	;# 
   367  0615                     	;# 
   368  0616                     	;# 
   369  0616                     	;# 
   370  0691                     	;# 
   371  0692                     	;# 
   372  0693                     	;# 
   373  0694                     	;# 
   374  0695                     	;# 
   375  0E8E                     	;# 
   376  0E8F                     	;# 
   377  0E90                     	;# 
   378  0E91                     	;# 
   379  0E92                     	;# 
   380  0E93                     	;# 
   381  0E94                     	;# 
   382  0E94                     	;# 
   383  0E95                     	;# 
   384  0E96                     	;# 
   385  0E97                     	;# 
   386  0E98                     	;# 
   387  0E99                     	;# 
   388  0E9A                     	;# 
   389  0E9B                     	;# 
   390  0E9C                     	;# 
   391  0E9D                     	;# 
   392  0E9E                     	;# 
   393  0E9F                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000E                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  008C                     	;# 
   431  008E                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  010C                     	;# 
   447  010E                     	;# 
   448  0111                     	;# 
   449  0112                     	;# 
   450  0113                     	;# 
   451  0114                     	;# 
   452  0115                     	;# 
   453  0116                     	;# 
   454  0117                     	;# 
   455  0118                     	;# 
   456  0119                     	;# 
   457  011D                     	;# 
   458  018C                     	;# 
   459  018E                     	;# 
   460  0191                     	;# 
   461  0191                     	;# 
   462  0192                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0197                     	;# 
   469  0199                     	;# 
   470  019A                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019D                     	;# 
   475  019E                     	;# 
   476  019F                     	;# 
   477  020C                     	;# 
   478  0211                     	;# 
   479  0211                     	;# 
   480  0212                     	;# 
   481  0212                     	;# 
   482  0213                     	;# 
   483  0213                     	;# 
   484  0214                     	;# 
   485  0214                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0216                     	;# 
   490  0216                     	;# 
   491  0217                     	;# 
   492  0217                     	;# 
   493  0391                     	;# 
   494  0392                     	;# 
   495  0393                     	;# 
   496  039A                     	;# 
   497  039B                     	;# 
   498  0611                     	;# 
   499  0612                     	;# 
   500  0613                     	;# 
   501  0613                     	;# 
   502  0614                     	;# 
   503  0615                     	;# 
   504  0616                     	;# 
   505  0616                     	;# 
   506  0691                     	;# 
   507  0692                     	;# 
   508  0693                     	;# 
   509  0694                     	;# 
   510  0695                     	;# 
   511  0E8E                     	;# 
   512  0E8F                     	;# 
   513  0E90                     	;# 
   514  0E91                     	;# 
   515  0E92                     	;# 
   516  0E93                     	;# 
   517  0E94                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E96                     	;# 
   521  0E97                     	;# 
   522  0E98                     	;# 
   523  0E99                     	;# 
   524  0E9A                     	;# 
   525  0E9B                     	;# 
   526  0E9C                     	;# 
   527  0E9D                     	;# 
   528  0E9E                     	;# 
   529  0E9F                     	;# 
   530  0FE4                     	;# 
   531  0FE5                     	;# 
   532  0FE6                     	;# 
   533  0FE7                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEB                     	;# 
   538  0FED                     	;# 
   539  0FEE                     	;# 
   540  0FEF                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000E                     	;# 
   555  0011                     	;# 
   556  0012                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  001A                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  008C                     	;# 
   567  008E                     	;# 
   568  0091                     	;# 
   569  0092                     	;# 
   570  0095                     	;# 
   571  0096                     	;# 
   572  0097                     	;# 
   573  0098                     	;# 
   574  0099                     	;# 
   575  009A                     	;# 
   576  009B                     	;# 
   577  009B                     	;# 
   578  009C                     	;# 
   579  009D                     	;# 
   580  009E                     	;# 
   581  009F                     	;# 
   582  010C                     	;# 
   583  010E                     	;# 
   584  0111                     	;# 
   585  0112                     	;# 
   586  0113                     	;# 
   587  0114                     	;# 
   588  0115                     	;# 
   589  0116                     	;# 
   590  0117                     	;# 
   591  0118                     	;# 
   592  0119                     	;# 
   593  011D                     	;# 
   594  018C                     	;# 
   595  018E                     	;# 
   596  0191                     	;# 
   597  0191                     	;# 
   598  0192                     	;# 
   599  0193                     	;# 
   600  0193                     	;# 
   601  0194                     	;# 
   602  0195                     	;# 
   603  0196                     	;# 
   604  0197                     	;# 
   605  0199                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019D                     	;# 
   611  019E                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  0211                     	;# 
   615  0211                     	;# 
   616  0212                     	;# 
   617  0212                     	;# 
   618  0213                     	;# 
   619  0213                     	;# 
   620  0214                     	;# 
   621  0214                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0215                     	;# 
   625  0216                     	;# 
   626  0216                     	;# 
   627  0217                     	;# 
   628  0217                     	;# 
   629  0391                     	;# 
   630  0392                     	;# 
   631  0393                     	;# 
   632  039A                     	;# 
   633  039B                     	;# 
   634  0611                     	;# 
   635  0612                     	;# 
   636  0613                     	;# 
   637  0613                     	;# 
   638  0614                     	;# 
   639  0615                     	;# 
   640  0616                     	;# 
   641  0616                     	;# 
   642  0691                     	;# 
   643  0692                     	;# 
   644  0693                     	;# 
   645  0694                     	;# 
   646  0695                     	;# 
   647  0E8E                     	;# 
   648  0E8F                     	;# 
   649  0E90                     	;# 
   650  0E91                     	;# 
   651  0E92                     	;# 
   652  0E93                     	;# 
   653  0E94                     	;# 
   654  0E94                     	;# 
   655  0E95                     	;# 
   656  0E96                     	;# 
   657  0E97                     	;# 
   658  0E98                     	;# 
   659  0E99                     	;# 
   660  0E9A                     	;# 
   661  0E9B                     	;# 
   662  0E9C                     	;# 
   663  0E9D                     	;# 
   664  0E9E                     	;# 
   665  0E9F                     	;# 
   666  0FE4                     	;# 
   667  0FE5                     	;# 
   668  0FE6                     	;# 
   669  0FE7                     	;# 
   670  0FE8                     	;# 
   671  0FE9                     	;# 
   672  0FEA                     	;# 
   673  0FEB                     	;# 
   674  0FED                     	;# 
   675  0FEE                     	;# 
   676  0FEF                     	;# 
   677  0000                     	;# 
   678  0001                     	;# 
   679  0002                     	;# 
   680  0003                     	;# 
   681  0004                     	;# 
   682  0005                     	;# 
   683  0006                     	;# 
   684  0007                     	;# 
   685  0008                     	;# 
   686  0009                     	;# 
   687  000A                     	;# 
   688  000B                     	;# 
   689  000C                     	;# 
   690  000E                     	;# 
   691  0011                     	;# 
   692  0012                     	;# 
   693  0015                     	;# 
   694  0016                     	;# 
   695  0016                     	;# 
   696  0017                     	;# 
   697  0018                     	;# 
   698  0019                     	;# 
   699  001A                     	;# 
   700  001B                     	;# 
   701  001C                     	;# 
   702  008C                     	;# 
   703  008E                     	;# 
   704  0091                     	;# 
   705  0092                     	;# 
   706  0095                     	;# 
   707  0096                     	;# 
   708  0097                     	;# 
   709  0098                     	;# 
   710  0099                     	;# 
   711  009A                     	;# 
   712  009B                     	;# 
   713  009B                     	;# 
   714  009C                     	;# 
   715  009D                     	;# 
   716  009E                     	;# 
   717  009F                     	;# 
   718  010C                     	;# 
   719  010E                     	;# 
   720  0111                     	;# 
   721  0112                     	;# 
   722  0113                     	;# 
   723  0114                     	;# 
   724  0115                     	;# 
   725  0116                     	;# 
   726  0117                     	;# 
   727  0118                     	;# 
   728  0119                     	;# 
   729  011D                     	;# 
   730  018C                     	;# 
   731  018E                     	;# 
   732  0191                     	;# 
   733  0191                     	;# 
   734  0192                     	;# 
   735  0193                     	;# 
   736  0193                     	;# 
   737  0194                     	;# 
   738  0195                     	;# 
   739  0196                     	;# 
   740  0197                     	;# 
   741  0199                     	;# 
   742  019A                     	;# 
   743  019B                     	;# 
   744  019B                     	;# 
   745  019C                     	;# 
   746  019D                     	;# 
   747  019E                     	;# 
   748  019F                     	;# 
   749  020C                     	;# 
   750  0211                     	;# 
   751  0211                     	;# 
   752  0212                     	;# 
   753  0212                     	;# 
   754  0213                     	;# 
   755  0213                     	;# 
   756  0214                     	;# 
   757  0214                     	;# 
   758  0215                     	;# 
   759  0215                     	;# 
   760  0215                     	;# 
   761  0216                     	;# 
   762  0216                     	;# 
   763  0217                     	;# 
   764  0217                     	;# 
   765  0391                     	;# 
   766  0392                     	;# 
   767  0393                     	;# 
   768  039A                     	;# 
   769  039B                     	;# 
   770  0611                     	;# 
   771  0612                     	;# 
   772  0613                     	;# 
   773  0613                     	;# 
   774  0614                     	;# 
   775  0615                     	;# 
   776  0616                     	;# 
   777  0616                     	;# 
   778  0691                     	;# 
   779  0692                     	;# 
   780  0693                     	;# 
   781  0694                     	;# 
   782  0695                     	;# 
   783  0E8E                     	;# 
   784  0E8F                     	;# 
   785  0E90                     	;# 
   786  0E91                     	;# 
   787  0E92                     	;# 
   788  0E93                     	;# 
   789  0E94                     	;# 
   790  0E94                     	;# 
   791  0E95                     	;# 
   792  0E96                     	;# 
   793  0E97                     	;# 
   794  0E98                     	;# 
   795  0E99                     	;# 
   796  0E9A                     	;# 
   797  0E9B                     	;# 
   798  0E9C                     	;# 
   799  0E9D                     	;# 
   800  0E9E                     	;# 
   801  0E9F                     	;# 
   802  0FE4                     	;# 
   803  0FE5                     	;# 
   804  0FE6                     	;# 
   805  0FE7                     	;# 
   806  0FE8                     	;# 
   807  0FE9                     	;# 
   808  0FEA                     	;# 
   809  0FEB                     	;# 
   810  0FED                     	;# 
   811  0FEE                     	;# 
   812  0FEF                     	;# 
   813  0000                     	;# 
   814  0001                     	;# 
   815  0002                     	;# 
   816  0003                     	;# 
   817  0004                     	;# 
   818  0005                     	;# 
   819  0006                     	;# 
   820  0007                     	;# 
   821  0008                     	;# 
   822  0009                     	;# 
   823  000A                     	;# 
   824  000B                     	;# 
   825  000C                     	;# 
   826  000E                     	;# 
   827  0011                     	;# 
   828  0012                     	;# 
   829  0015                     	;# 
   830  0016                     	;# 
   831  0016                     	;# 
   832  0017                     	;# 
   833  0018                     	;# 
   834  0019                     	;# 
   835  001A                     	;# 
   836  001B                     	;# 
   837  001C                     	;# 
   838  008C                     	;# 
   839  008E                     	;# 
   840  0091                     	;# 
   841  0092                     	;# 
   842  0095                     	;# 
   843  0096                     	;# 
   844  0097                     	;# 
   845  0098                     	;# 
   846  0099                     	;# 
   847  009A                     	;# 
   848  009B                     	;# 
   849  009B                     	;# 
   850  009C                     	;# 
   851  009D                     	;# 
   852  009E                     	;# 
   853  009F                     	;# 
   854  010C                     	;# 
   855  010E                     	;# 
   856  0111                     	;# 
   857  0112                     	;# 
   858  0113                     	;# 
   859  0114                     	;# 
   860  0115                     	;# 
   861  0116                     	;# 
   862  0117                     	;# 
   863  0118                     	;# 
   864  0119                     	;# 
   865  011D                     	;# 
   866  018C                     	;# 
   867  018E                     	;# 
   868  0191                     	;# 
   869  0191                     	;# 
   870  0192                     	;# 
   871  0193                     	;# 
   872  0193                     	;# 
   873  0194                     	;# 
   874  0195                     	;# 
   875  0196                     	;# 
   876  0197                     	;# 
   877  0199                     	;# 
   878  019A                     	;# 
   879  019B                     	;# 
   880  019B                     	;# 
   881  019C                     	;# 
   882  019D                     	;# 
   883  019E                     	;# 
   884  019F                     	;# 
   885  020C                     	;# 
   886  0211                     	;# 
   887  0211                     	;# 
   888  0212                     	;# 
   889  0212                     	;# 
   890  0213                     	;# 
   891  0213                     	;# 
   892  0214                     	;# 
   893  0214                     	;# 
   894  0215                     	;# 
   895  0215                     	;# 
   896  0215                     	;# 
   897  0216                     	;# 
   898  0216                     	;# 
   899  0217                     	;# 
   900  0217                     	;# 
   901  0391                     	;# 
   902  0392                     	;# 
   903  0393                     	;# 
   904  039A                     	;# 
   905  039B                     	;# 
   906  0611                     	;# 
   907  0612                     	;# 
   908  0613                     	;# 
   909  0613                     	;# 
   910  0614                     	;# 
   911  0615                     	;# 
   912  0616                     	;# 
   913  0616                     	;# 
   914  0691                     	;# 
   915  0692                     	;# 
   916  0693                     	;# 
   917  0694                     	;# 
   918  0695                     	;# 
   919  0E8E                     	;# 
   920  0E8F                     	;# 
   921  0E90                     	;# 
   922  0E91                     	;# 
   923  0E92                     	;# 
   924  0E93                     	;# 
   925  0E94                     	;# 
   926  0E94                     	;# 
   927  0E95                     	;# 
   928  0E96                     	;# 
   929  0E97                     	;# 
   930  0E98                     	;# 
   931  0E99                     	;# 
   932  0E9A                     	;# 
   933  0E9B                     	;# 
   934  0E9C                     	;# 
   935  0E9D                     	;# 
   936  0E9E                     	;# 
   937  0E9F                     	;# 
   938  0FE4                     	;# 
   939  0FE5                     	;# 
   940  0FE6                     	;# 
   941  0FE7                     	;# 
   942  0FE8                     	;# 
   943  0FE9                     	;# 
   944  0FEA                     	;# 
   945  0FEB                     	;# 
   946  0FED                     	;# 
   947  0FEE                     	;# 
   948  0FEF                     	;# 
   949  0000                     	;# 
   950  0001                     	;# 
   951  0002                     	;# 
   952  0003                     	;# 
   953  0004                     	;# 
   954  0005                     	;# 
   955  0006                     	;# 
   956  0007                     	;# 
   957  0008                     	;# 
   958  0009                     	;# 
   959  000A                     	;# 
   960  000B                     	;# 
   961  000C                     	;# 
   962  000E                     	;# 
   963  0011                     	;# 
   964  0012                     	;# 
   965  0015                     	;# 
   966  0016                     	;# 
   967  0016                     	;# 
   968  0017                     	;# 
   969  0018                     	;# 
   970  0019                     	;# 
   971  001A                     	;# 
   972  001B                     	;# 
   973  001C                     	;# 
   974  008C                     	;# 
   975  008E                     	;# 
   976  0091                     	;# 
   977  0092                     	;# 
   978  0095                     	;# 
   979  0096                     	;# 
   980  0097                     	;# 
   981  0098                     	;# 
   982  0099                     	;# 
   983  009A                     	;# 
   984  009B                     	;# 
   985  009B                     	;# 
   986  009C                     	;# 
   987  009D                     	;# 
   988  009E                     	;# 
   989  009F                     	;# 
   990  010C                     	;# 
   991  010E                     	;# 
   992  0111                     	;# 
   993  0112                     	;# 
   994  0113                     	;# 
   995  0114                     	;# 
   996  0115                     	;# 
   997  0116                     	;# 
   998  0117                     	;# 
   999  0118                     	;# 
  1000  0119                     	;# 
  1001  011D                     	;# 
  1002  018C                     	;# 
  1003  018E                     	;# 
  1004  0191                     	;# 
  1005  0191                     	;# 
  1006  0192                     	;# 
  1007  0193                     	;# 
  1008  0193                     	;# 
  1009  0194                     	;# 
  1010  0195                     	;# 
  1011  0196                     	;# 
  1012  0197                     	;# 
  1013  0199                     	;# 
  1014  019A                     	;# 
  1015  019B                     	;# 
  1016  019B                     	;# 
  1017  019C                     	;# 
  1018  019D                     	;# 
  1019  019E                     	;# 
  1020  019F                     	;# 
  1021  020C                     	;# 
  1022  0211                     	;# 
  1023  0211                     	;# 
  1024  0212                     	;# 
  1025  0212                     	;# 
  1026  0213                     	;# 
  1027  0213                     	;# 
  1028  0214                     	;# 
  1029  0214                     	;# 
  1030  0215                     	;# 
  1031  0215                     	;# 
  1032  0215                     	;# 
  1033  0216                     	;# 
  1034  0216                     	;# 
  1035  0217                     	;# 
  1036  0217                     	;# 
  1037  0391                     	;# 
  1038  0392                     	;# 
  1039  0393                     	;# 
  1040  039A                     	;# 
  1041  039B                     	;# 
  1042  0611                     	;# 
  1043  0612                     	;# 
  1044  0613                     	;# 
  1045  0613                     	;# 
  1046  0614                     	;# 
  1047  0615                     	;# 
  1048  0616                     	;# 
  1049  0616                     	;# 
  1050  0691                     	;# 
  1051  0692                     	;# 
  1052  0693                     	;# 
  1053  0694                     	;# 
  1054  0695                     	;# 
  1055  0E8E                     	;# 
  1056  0E8F                     	;# 
  1057  0E90                     	;# 
  1058  0E91                     	;# 
  1059  0E92                     	;# 
  1060  0E93                     	;# 
  1061  0E94                     	;# 
  1062  0E94                     	;# 
  1063  0E95                     	;# 
  1064  0E96                     	;# 
  1065  0E97                     	;# 
  1066  0E98                     	;# 
  1067  0E99                     	;# 
  1068  0E9A                     	;# 
  1069  0E9B                     	;# 
  1070  0E9C                     	;# 
  1071  0E9D                     	;# 
  1072  0E9E                     	;# 
  1073  0E9F                     	;# 
  1074  0FE4                     	;# 
  1075  0FE5                     	;# 
  1076  0FE6                     	;# 
  1077  0FE7                     	;# 
  1078  0FE8                     	;# 
  1079  0FE9                     	;# 
  1080  0FEA                     	;# 
  1081  0FEB                     	;# 
  1082  0FED                     	;# 
  1083  0FEE                     	;# 
  1084  0FEF                     	;# 
  1085  0000                     	;# 
  1086  0001                     	;# 
  1087  0002                     	;# 
  1088  0003                     	;# 
  1089  0004                     	;# 
  1090  0005                     	;# 
  1091  0006                     	;# 
  1092  0007                     	;# 
  1093  0008                     	;# 
  1094  0009                     	;# 
  1095  000A                     	;# 
  1096  000B                     	;# 
  1097  000C                     	;# 
  1098  000E                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008E                     	;# 
  1112  0091                     	;# 
  1113  0092                     	;# 
  1114  0095                     	;# 
  1115  0096                     	;# 
  1116  0097                     	;# 
  1117  0098                     	;# 
  1118  0099                     	;# 
  1119  009A                     	;# 
  1120  009B                     	;# 
  1121  009B                     	;# 
  1122  009C                     	;# 
  1123  009D                     	;# 
  1124  009E                     	;# 
  1125  009F                     	;# 
  1126  010C                     	;# 
  1127  010E                     	;# 
  1128  0111                     	;# 
  1129  0112                     	;# 
  1130  0113                     	;# 
  1131  0114                     	;# 
  1132  0115                     	;# 
  1133  0116                     	;# 
  1134  0117                     	;# 
  1135  0118                     	;# 
  1136  0119                     	;# 
  1137  011D                     	;# 
  1138  018C                     	;# 
  1139  018E                     	;# 
  1140  0191                     	;# 
  1141  0191                     	;# 
  1142  0192                     	;# 
  1143  0193                     	;# 
  1144  0193                     	;# 
  1145  0194                     	;# 
  1146  0195                     	;# 
  1147  0196                     	;# 
  1148  0197                     	;# 
  1149  0199                     	;# 
  1150  019A                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019C                     	;# 
  1154  019D                     	;# 
  1155  019E                     	;# 
  1156  019F                     	;# 
  1157  020C                     	;# 
  1158  0211                     	;# 
  1159  0211                     	;# 
  1160  0212                     	;# 
  1161  0212                     	;# 
  1162  0213                     	;# 
  1163  0213                     	;# 
  1164  0214                     	;# 
  1165  0214                     	;# 
  1166  0215                     	;# 
  1167  0215                     	;# 
  1168  0215                     	;# 
  1169  0216                     	;# 
  1170  0216                     	;# 
  1171  0217                     	;# 
  1172  0217                     	;# 
  1173  0391                     	;# 
  1174  0392                     	;# 
  1175  0393                     	;# 
  1176  039A                     	;# 
  1177  039B                     	;# 
  1178  0611                     	;# 
  1179  0612                     	;# 
  1180  0613                     	;# 
  1181  0613                     	;# 
  1182  0614                     	;# 
  1183  0615                     	;# 
  1184  0616                     	;# 
  1185  0616                     	;# 
  1186  0691                     	;# 
  1187  0692                     	;# 
  1188  0693                     	;# 
  1189  0694                     	;# 
  1190  0695                     	;# 
  1191  0E8E                     	;# 
  1192  0E8F                     	;# 
  1193  0E90                     	;# 
  1194  0E91                     	;# 
  1195  0E92                     	;# 
  1196  0E93                     	;# 
  1197  0E94                     	;# 
  1198  0E94                     	;# 
  1199  0E95                     	;# 
  1200  0E96                     	;# 
  1201  0E97                     	;# 
  1202  0E98                     	;# 
  1203  0E99                     	;# 
  1204  0E9A                     	;# 
  1205  0E9B                     	;# 
  1206  0E9C                     	;# 
  1207  0E9D                     	;# 
  1208  0E9E                     	;# 
  1209  0E9F                     	;# 
  1210  0FE4                     	;# 
  1211  0FE5                     	;# 
  1212  0FE6                     	;# 
  1213  0FE7                     	;# 
  1214  0FE8                     	;# 
  1215  0FE9                     	;# 
  1216  0FEA                     	;# 
  1217  0FEB                     	;# 
  1218  0FED                     	;# 
  1219  0FEE                     	;# 
  1220  0FEF                     	;# 
  1221                           
  1222                           	psect	stringtext1
  1223  188F                     __pstringtext1:	
  1224  188F                     _USB_SD_Ptr:	
  1225  188F  3495               	retlw	low (_sd000| (0+32768))
  1226  1890  3498               	retlw	high (_sd000| (0+32768))
  1227  1891  346B               	retlw	low (_sd001| (0+32768))
  1228  1892  3498               	retlw	high (_sd001| (0+32768))
  1229  1893  3443               	retlw	low (_sd002| (0+32768))
  1230  1894  3498               	retlw	high (_sd002| (0+32768))
  1231  1895                     __end_of_USB_SD_Ptr:	
  1232                           
  1233                           	psect	stringtext2
  1234  1899                     __pstringtext2:	
  1235  1899                     _USB_CD_Ptr:	
  1236  1899  3400               	retlw	low (_configDescriptor1| (0+32768))
  1237  189A  3498               	retlw	high (_configDescriptor1| (0+32768))
  1238  189B                     __end_of_USB_CD_Ptr:	
  1239                           
  1240                           	psect	stringtext3
  1241  1800                     __pstringtext3:	
  1242  1800                     _configDescriptor1:	
  1243  1800  3409               	retlw	9
  1244  1801  3402               	retlw	2
  1245  1802  3443               	retlw	67
  1246  1803  3400               	retlw	0
  1247  1804  3402               	retlw	2
  1248  1805  3401               	retlw	1
  1249  1806  3400               	retlw	0
  1250  1807  34C0               	retlw	192
  1251  1808  3432               	retlw	50
  1252  1809  3409               	retlw	9
  1253  180A  3404               	retlw	4
  1254  180B  3400               	retlw	0
  1255  180C  3400               	retlw	0
  1256  180D  3401               	retlw	1
  1257  180E  3402               	retlw	2
  1258  180F  3402               	retlw	2
  1259  1810  3401               	retlw	1
  1260  1811  3400               	retlw	0
  1261  1812  3405               	retlw	5
  1262  1813  3424               	retlw	36
  1263  1814  3400               	retlw	0
  1264  1815  3410               	retlw	16
  1265  1816  3401               	retlw	1
  1266  1817  3404               	retlw	4
  1267  1818  3424               	retlw	36
  1268  1819  3402               	retlw	2
  1269  181A  3402               	retlw	2
  1270  181B  3405               	retlw	5
  1271  181C  3424               	retlw	36
  1272  181D  3406               	retlw	6
  1273  181E  3400               	retlw	0
  1274  181F  3401               	retlw	1
  1275  1820  3405               	retlw	5
  1276  1821  3424               	retlw	36
  1277  1822  3401               	retlw	1
  1278  1823  3400               	retlw	0
  1279  1824  3401               	retlw	1
  1280  1825  3407               	retlw	7
  1281  1826  3405               	retlw	5
  1282  1827  3481               	retlw	129
  1283  1828  3403               	retlw	3
  1284  1829  3408               	retlw	8
  1285  182A  3400               	retlw	0
  1286  182B  3402               	retlw	2
  1287  182C  3409               	retlw	9
  1288  182D  3404               	retlw	4
  1289  182E  3401               	retlw	1
  1290  182F  3400               	retlw	0
  1291  1830  3402               	retlw	2
  1292  1831  340A               	retlw	10
  1293  1832  3400               	retlw	0
  1294  1833  3400               	retlw	0
  1295  1834  3400               	retlw	0
  1296  1835  3407               	retlw	7
  1297  1836  3405               	retlw	5
  1298  1837  3402               	retlw	2
  1299  1838  3402               	retlw	2
  1300  1839  3440               	retlw	64
  1301  183A  3400               	retlw	0
  1302  183B  3400               	retlw	0
  1303  183C  3407               	retlw	7
  1304  183D  3405               	retlw	5
  1305  183E  3482               	retlw	130
  1306  183F  3402               	retlw	2
  1307  1840  3440               	retlw	64
  1308  1841  3400               	retlw	0
  1309  1842  3400               	retlw	0
  1310  1843                     __end_of_configDescriptor1:	
  1311                           
  1312                           	psect	stringtext4
  1313  1843                     __pstringtext4:	
  1314  1843                     _sd002:	
  1315  1843  3428               	retlw	40
  1316  1844  3403               	retlw	3
  1317  1845  3454               	retlw	84
  1318  1846  3400               	retlw	0
  1319  1847  3469               	retlw	105
  1320  1848  3400               	retlw	0
  1321  1849  346E               	retlw	110
  1322  184A  3400               	retlw	0
  1323  184B  3479               	retlw	121
  1324  184C  3400               	retlw	0
  1325  184D  3446               	retlw	70
  1326  184E  3400               	retlw	0
  1327  184F  3450               	retlw	80
  1328  1850  3400               	retlw	0
  1329  1851  3447               	retlw	71
  1330  1852  3400               	retlw	0
  1331  1853  3441               	retlw	65
  1332  1854  3400               	retlw	0
  1333  1855  3420               	retlw	32
  1334  1856  3400               	retlw	0
  1335  1857  3450               	retlw	80
  1336  1858  3400               	retlw	0
  1337  1859  3472               	retlw	114
  1338  185A  3400               	retlw	0
  1339  185B  346F               	retlw	111
  1340  185C  3400               	retlw	0
  1341  185D  3467               	retlw	103
  1342  185E  3400               	retlw	0
  1343  185F  3472               	retlw	114
  1344  1860  3400               	retlw	0
  1345  1861  3461               	retlw	97
  1346  1862  3400               	retlw	0
  1347  1863  346D               	retlw	109
  1348  1864  3400               	retlw	0
  1349  1865  346D               	retlw	109
  1350  1866  3400               	retlw	0
  1351  1867  3465               	retlw	101
  1352  1868  3400               	retlw	0
  1353  1869  3472               	retlw	114
  1354  186A  3400               	retlw	0
  1355  186B                     __end_of_sd002:	
  1356                           
  1357                           	psect	stringtext5
  1358  186B                     __pstringtext5:	
  1359  186B                     _sd001:	
  1360  186B  3412               	retlw	18
  1361  186C  3403               	retlw	3
  1362  186D  3454               	retlw	84
  1363  186E  3400               	retlw	0
  1364  186F  3469               	retlw	105
  1365  1870  3400               	retlw	0
  1366  1871  346E               	retlw	110
  1367  1872  3400               	retlw	0
  1368  1873  3479               	retlw	121
  1369  1874  3400               	retlw	0
  1370  1875  3446               	retlw	70
  1371  1876  3400               	retlw	0
  1372  1877  3450               	retlw	80
  1373  1878  3400               	retlw	0
  1374  1879  3447               	retlw	71
  1375  187A  3400               	retlw	0
  1376  187B  3441               	retlw	65
  1377  187C  3400               	retlw	0
  1378  187D                     __end_of_sd001:	
  1379                           
  1380                           	psect	stringtext6
  1381  187D                     __pstringtext6:	
  1382  187D                     _device_dsc:	
  1383  187D  3412               	retlw	18
  1384  187E  3401               	retlw	1
  1385  187F  3400               	retlw	0
  1386  1880  3402               	retlw	2
  1387  1881  3402               	retlw	2
  1388  1882  3400               	retlw	0
  1389  1883  3400               	retlw	0
  1390  1884  3410               	retlw	16
  1391  1885  3409               	retlw	9
  1392  1886  3412               	retlw	18
  1393  1887  3401               	retlw	1
  1394  1888  3421               	retlw	33
  1395  1889  3400               	retlw	0
  1396  188A  3401               	retlw	1
  1397  188B  3401               	retlw	1
  1398  188C  3402               	retlw	2
  1399  188D  3400               	retlw	0
  1400  188E  3401               	retlw	1
  1401  188F                     __end_of_device_dsc:	
  1402                           
  1403                           	psect	stringtext7
  1404  1895                     __pstringtext7:	
  1405  1895                     _sd000:	
  1406  1895  3404               	retlw	4
  1407  1896  3403               	retlw	3
  1408  1897  3409               	retlw	9
  1409  1898  3404               	retlw	4
  1410  1899                     __end_of_sd000:	
  1411  000E                     _PORTC	set	14
  1412  0012                     _PIR2bits	set	18
  1413  000B                     _INTCONbits	set	11
  1414  0097                     _WDTCON	set	151
  1415  0098                     _OSCTUNE	set	152
  1416  0099                     _OSCCON	set	153
  1417  0095                     _OPTION_REGbits	set	149
  1418  008E                     _TRISC	set	142
  1419  008C                     _TRISA	set	140
  1420  0092                     _PIE2bits	set	146
  1421  04D6                     _PLLRDY	set	1238
  1422  011D                     _APFCON	set	285
  1423  010E                     _LATC	set	270
  1424  010C                     _LATA	set	268
  1425  018C                     _ANSELA	set	396
  1426  018E                     _ANSELC	set	398
  1427  020C                     _WPUA	set	524
  1428  039B                     _ACTCON	set	923
  1429  0E98                     _UEP0bits	set	3736
  1430  0E8E                     _UCON	set	3726
  1431  0E8F                     _USTAT	set	3727
  1432  0E92                     _UIEbits	set	3730
  1433  0E90                     _UIRbits	set	3728
  1434  0E96                     _UADDR	set	3734
  1435  0E92                     _UIE	set	3730
  1436  0E97                     _UEIE	set	3735
  1437  0E91                     _UCFG	set	3729
  1438  0E90                     _UIR	set	3728
  1439  0E93                     _UEIR	set	3731
  1440  0E8E                     _UCONbits	set	3726
  1441  0E99                     _UEP1	set	3737
  1442  0E98                     _UEP0	set	3736
  1443                           
  1444                           ; #config settings
  1445  0000                     
  1446                           	psect	cinit
  1447  001A                     start_initialization:	
  1448  001A                     __initialization:	
  1449                           
  1450                           ; Clear objects allocated to BANK1
  1451  001A  30C6               	movlw	low __pbssBANK1
  1452  001B  0084               	movwf	4
  1453  001C  3000               	movlw	high __pbssBANK1
  1454  001D  0085               	movwf	5
  1455  001E  301C               	movlw	28
  1456  001F  319F  27F0  3180   	fcall	clear_ram0
  1457                           
  1458                           ; Clear objects allocated to BANK2
  1459  0022  3020               	movlw	low __pbssBANK2
  1460  0023  0084               	movwf	4
  1461  0024  3001               	movlw	high __pbssBANK2
  1462  0025  0085               	movwf	5
  1463  0026  3047               	movlw	71
  1464  0027  319F  27F0  3180   	fcall	clear_ram0
  1465                           
  1466                           ; Clear objects allocated to BANK3
  1467  002A  30A0               	movlw	low __pbssBANK3
  1468  002B  0084               	movwf	4
  1469  002C  3001               	movlw	high __pbssBANK3
  1470  002D  0085               	movwf	5
  1471  002E  3040               	movlw	64
  1472  002F  319F  27F0  3180   	fcall	clear_ram0
  1473                           
  1474                           ; Clear objects allocated to BANK4
  1475  0032  3020               	movlw	low __pbssBANK4
  1476  0033  0084               	movwf	4
  1477  0034  3002               	movlw	high __pbssBANK4
  1478  0035  0085               	movwf	5
  1479  0036  3040               	movlw	64
  1480  0037  319F  27F0  3180   	fcall	clear_ram0
  1481                           
  1482                           ; Clear objects allocated to BANK5
  1483  003A  30A0               	movlw	low __pbssBANK5
  1484  003B  0084               	movwf	4
  1485  003C  3002               	movlw	high __pbssBANK5
  1486  003D  0085               	movwf	5
  1487  003E  3040               	movlw	64
  1488  003F  319F  27F0  3180   	fcall	clear_ram0
  1489                           
  1490                           ; Clear objects allocated to BANK6
  1491  0042  3020               	movlw	low __pbssBANK6
  1492  0043  0084               	movwf	4
  1493  0044  3003               	movlw	high __pbssBANK6
  1494  0045  0085               	movwf	5
  1495  0046  3040               	movlw	64
  1496  0047  319F  27F0         	fcall	clear_ram0
  1497  0049                     end_of_initialization:	
  1498                           ;End of C runtime variable initialization code
  1499                           
  1500  0049                     __end_of__initialization:	
  1501  0049  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1502  004A  0020               	movlb	0
  1503  004B  3190  2852         	ljmp	_main	;jump to C main() function
  1504                           
  1505                           	psect	bssBANK1
  1506  00C6                     __pbssBANK1:	
  1507  00C6                     _outPipes:	
  1508  00C6                     	ds	7
  1509  00CD                     _pBDTEntryIn:	
  1510  00CD                     	ds	6
  1511  00D3                     _inPipes:	
  1512  00D3                     	ds	5
  1513  00D8                     _pBDTEntryEP0OutNext:	
  1514  00D8                     	ds	2
  1515  00DA                     _USBDeferStatusStagePacket:	
  1516  00DA                     	ds	1
  1517  00DB                     _endpoint_number:	
  1518  00DB                     	ds	1
  1519  00DC                     _controlTransferState:	
  1520  00DC                     	ds	1
  1521  00DD                     _shortPacketStatus:	
  1522  00DD                     	ds	1
  1523  00DE                     _pBDTEntryEP0OutCurrent:	
  1524  00DE                     	ds	1
  1525  00DF                     _USBDeviceState:	
  1526  00DF                     	ds	1
  1527  00E0                     _USTATcopy:	
  1528  00E0                     	ds	1
  1529  00E1                     _USBActiveConfiguration:	
  1530  00E1                     	ds	1
  1531                           
  1532                           	psect	bssBANK2
  1533  0120                     __pbssBANK2:	
  1534  0120                     _cdc_notice:	
  1535  0120                     	ds	10
  1536  012A                     _pBDTEntryOut:	
  1537  012A                     	ds	6
  1538  0130                     _USB1msTickCount:	
  1539  0130                     	ds	4
  1540  0134                     _BaudRateGen:	
  1541  0134                     	ds	4
  1542  0138                     _ep_data_out:	
  1543  0138                     	ds	3
  1544  013B                     _ep_data_in:	
  1545  013B                     	ds	3
  1546  013E                     _CDCDataInHandle:	
  1547  013E                     	ds	2
  1548  0140                     _CDCDataOutHandle:	
  1549  0140                     	ds	2
  1550  0142                     _pCDCDst:	
  1551  0142                     	ds	2
  1552  0144                     _pCDCSrc:	
  1553  0144                     	ds	2
  1554  0146                     _USBTicksSinceSuspendEnd:	
  1555  0146                     	ds	1
  1556  0147                     _USBDeferOUTDataStagePackets:	
  1557  0147                     	ds	1
  1558  0148                     _USBDeferINDataStagePackets:	
  1559  0148                     	ds	1
  1560  0149                     _USBStatusStageEnabledFlag2:	
  1561  0149                     	ds	1
  1562  014A                     _USBStatusStageEnabledFlag1:	
  1563  014A                     	ds	1
  1564  014B                     _USBStatusStageTimeoutCounter:	
  1565  014B                     	ds	1
  1566  014C                     _BothEP0OutUOWNsSet:	
  1567  014C                     	ds	1
  1568  014D                     _USBBusIsSuspended:	
  1569  014D                     	ds	1
  1570  014E                     _RemoteWakeup:	
  1571  014E                     	ds	1
  1572  014F                     _pDst:	
  1573  014F                     	ds	1
  1574  0150                     process_gpio_cmd@gpio_dir:	
  1575  0150                     	ds	1
  1576  0151                     _control_signal_bitmap:	
  1577  0151                     	ds	1
  1578  0152                     _cdc_mem_type:	
  1579  0152                     	ds	1
  1580  0153                     _cdc_tx_len:	
  1581  0153                     	ds	1
  1582  0154                     _cdc_trf_state:	
  1583  0154                     	ds	1
  1584  0155                     _cdc_rx_len:	
  1585  0155                     	ds	1
  1586  0156                     _dummy_encapsulated_cmd_response:	
  1587  0156                     	ds	8
  1588  015E                     _line_coding:	
  1589  015E                     	ds	7
  1590  0165                     _USBAlternateInterface:	
  1591  0165                     	ds	2
  1592                           
  1593                           	psect	bssBANK3
  1594  01A0                     __pbssBANK3:	
  1595  01A0                     _cdc_data_rx:	
  1596  01A0                     	ds	64
  1597                           
  1598                           	psect	bssBANK4
  1599  0220                     __pbssBANK4:	
  1600  0220                     _cdc_data_tx:	
  1601  0220                     	ds	64
  1602                           
  1603                           	psect	bssBANK5
  1604  02A0                     __pbssBANK5:	
  1605  02A0                     gpio_task@usb_rx_buf:	
  1606  02A0                     	ds	64
  1607                           
  1608                           	psect	bssBANK6
  1609  0320                     __pbssBANK6:	
  1610  0320                     gpio_task@usb_tx_buf:	
  1611  0320                     	ds	64
  1612                           
  1613                           	psect	clrtext
  1614  1FF0                     clear_ram0:	
  1615                           ;	Called with FSR0 containing the base address, and
  1616                           ;	WREG with the size to clear
  1617                           
  1618  1FF0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1619  1FF1                     clrloop0:	
  1620  1FF1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1621  1FF2  3101               	addfsr 0,1
  1622  1FF3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1623  1FF4  2FF1               	goto	clrloop0	;have we reached the end yet?
  1624  1FF5  3400               	retlw	0	;all done for this memory range, return
  1625                           
  1626                           	psect	cstackBANK3
  1627  01E0                     __pcstackBANK3:	
  1628  01E0                     ??_USBDeviceTasks:	
  1629                           
  1630                           ; 1 bytes @ 0x0
  1631  01E0                     	ds	2
  1632                           
  1633                           	psect	cstackBANK2
  1634  0167                     __pcstackBANK2:	
  1635  0167                     USBStdSetCfgHandler@p:	
  1636  0167                     USBStdFeatureReqHandler@pUEP:	
  1637                           ; 2 bytes @ 0x0
  1638                           
  1639                           
  1640                           ; 2 bytes @ 0x0
  1641  0167                     	ds	2
  1642  0169                     USBStdSetCfgHandler@i_2174:	
  1643  0169                     USBStdFeatureReqHandler@current_ep_data:	
  1644                           ; 1 bytes @ 0x2
  1645                           
  1646                           
  1647                           ; 1 bytes @ 0x2
  1648  0169                     	ds	1
  1649  016A                     USBStdSetCfgHandler@i:	
  1650  016A                     USBStdFeatureReqHandler@p:	
  1651                           ; 1 bytes @ 0x3
  1652                           
  1653                           
  1654                           ; 2 bytes @ 0x3
  1655  016A                     	ds	2
  1656  016C                     ??_USBCtrlEPService:	
  1657                           
  1658                           ; 1 bytes @ 0x5
  1659  016C                     	ds	3
  1660  016F                     USBDeviceTasks@i:	
  1661                           
  1662                           ; 1 bytes @ 0x8
  1663  016F                     	ds	1
  1664                           
  1665                           	psect	cstackBANK1
  1666  00A0                     __pcstackBANK1:	
  1667  00A0                     i1USBStdSetCfgHandler@p:	
  1668  00A0                     i1USBStdFeatureReqHandler@pUEP:	
  1669                           ; 2 bytes @ 0x0
  1670                           
  1671                           
  1672                           ; 2 bytes @ 0x0
  1673  00A0                     	ds	2
  1674  00A2                     i1USBStdSetCfgHandler@i_2174:	
  1675  00A2                     i1USBStdFeatureReqHandler@current_ep_data:	
  1676                           ; 1 bytes @ 0x2
  1677                           
  1678                           
  1679                           ; 1 bytes @ 0x2
  1680  00A2                     	ds	1
  1681  00A3                     i1USBStdSetCfgHandler@i:	
  1682  00A3                     i1USBStdFeatureReqHandler@p:	
  1683                           ; 1 bytes @ 0x3
  1684                           
  1685                           
  1686                           ; 2 bytes @ 0x3
  1687  00A3                     	ds	2
  1688  00A5                     ??i1_USBCheckStdRequest:	
  1689                           
  1690                           ; 1 bytes @ 0x5
  1691  00A5                     	ds	1
  1692  00A6                     ??i1_USBCtrlTrfSetupHandler:	
  1693                           
  1694                           ; 1 bytes @ 0x6
  1695  00A6                     	ds	1
  1696  00A7                     ??i1_USBCtrlEPService:	
  1697                           
  1698                           ; 1 bytes @ 0x7
  1699  00A7                     	ds	3
  1700  00AA                     ??i1_USBDeviceTasks:	
  1701                           
  1702                           ; 1 bytes @ 0xA
  1703  00AA                     	ds	2
  1704  00AC                     i1USBDeviceTasks@i:	
  1705                           
  1706                           ; 1 bytes @ 0xC
  1707  00AC                     	ds	1
  1708  00AD                     ??_INTERRUPT_InterruptManager:	
  1709                           
  1710                           ; 1 bytes @ 0xD
  1711  00AD                     	ds	1
  1712  00AE                     ??_OSCILLATOR_Initialize:	
  1713  00AE                     ??_WDT_Initialize:	
  1714                           ; 1 bytes @ 0xE
  1715                           
  1716  00AE                     ??_USBDeviceInit:	
  1717                           ; 1 bytes @ 0xE
  1718                           
  1719  00AE                     ??_USBDeviceAttach:	
  1720                           ; 1 bytes @ 0xE
  1721                           
  1722  00AE                     ??_USBIncrement1msInternalTimers:	
  1723                           ; 1 bytes @ 0xE
  1724                           
  1725  00AE                     ??_USBCtrlEPAllowStatusStage:	
  1726                           ; 1 bytes @ 0xE
  1727                           
  1728  00AE                     ??_USBStallHandler:	
  1729                           ; 1 bytes @ 0xE
  1730                           
  1731  00AE                     ?_USBConfigureEndpoint:	
  1732                           ; 1 bytes @ 0xE
  1733                           
  1734  00AE                     ??_USBCtrlTrfTxService:	
  1735                           ; 1 bytes @ 0xE
  1736                           
  1737  00AE                     ??_USBCheckCDCRequest:	
  1738                           ; 1 bytes @ 0xE
  1739                           
  1740  00AE                     ?_putUSBUSART:	
  1741                           ; 1 bytes @ 0xE
  1742                           
  1743  00AE                     ??_PIN_MANAGER_Initialize:	
  1744                           ; 1 bytes @ 0xE
  1745                           
  1746  00AE                     ?_process_gpio_cmd:	
  1747                           ; 1 bytes @ 0xE
  1748                           
  1749  00AE                     ??_gpio_init:	
  1750                           ; 1 bytes @ 0xE
  1751                           
  1752  00AE                     ??_USBStdGetDscHandler:	
  1753                           ; 1 bytes @ 0xE
  1754                           
  1755  00AE                     ??_USBStdGetStatusHandler:	
  1756                           ; 1 bytes @ 0xE
  1757                           
  1758  00AE                     ?_USBTransferOnePacket:	
  1759                           ; 1 bytes @ 0xE
  1760                           
  1761  00AE                     ?_memset:	
  1762                           ; 2 bytes @ 0xE
  1763                           
  1764  00AE                     putUSBUSART@length:	
  1765                           ; 2 bytes @ 0xE
  1766                           
  1767  00AE                     process_gpio_cmd@rsp:	
  1768                           ; 1 bytes @ 0xE
  1769                           
  1770  00AE                     USBTransferOnePacket@dir:	
  1771                           ; 1 bytes @ 0xE
  1772                           
  1773  00AE                     USBConfigureEndpoint@direction:	
  1774                           ; 1 bytes @ 0xE
  1775                           
  1776  00AE                     memset@p1:	
  1777                           ; 1 bytes @ 0xE
  1778                           
  1779                           
  1780                           ; 2 bytes @ 0xE
  1781  00AE                     	ds	1
  1782  00AF                     ??_USBConfigureEndpoint:	
  1783  00AF                     ??_putUSBUSART:	
  1784                           ; 1 bytes @ 0xF
  1785                           
  1786  00AF                     ??_process_gpio_cmd:	
  1787                           ; 1 bytes @ 0xF
  1788                           
  1789  00AF                     USBDeviceInit@p:	
  1790                           ; 1 bytes @ 0xF
  1791                           
  1792  00AF                     USBTransferOnePacket@data:	
  1793                           ; 2 bytes @ 0xF
  1794                           
  1795  00AF                     USBStdGetStatusHandler@p:	
  1796                           ; 2 bytes @ 0xF
  1797                           
  1798                           
  1799                           ; 2 bytes @ 0xF
  1800  00AF                     	ds	1
  1801  00B0                     ??_USBCtrlTrfRxService:	
  1802  00B0                     putUSBUSART@data:	
  1803                           ; 1 bytes @ 0x10
  1804                           
  1805  00B0                     process_gpio_cmd@cmd_type:	
  1806                           ; 1 bytes @ 0x10
  1807                           
  1808  00B0                     USBCtrlTrfTxService@byteToSend:	
  1809                           ; 1 bytes @ 0x10
  1810                           
  1811  00B0                     memset@c:	
  1812                           ; 1 bytes @ 0x10
  1813                           
  1814                           
  1815                           ; 2 bytes @ 0x10
  1816  00B0                     	ds	1
  1817  00B1                     ??_USBCtrlTrfInHandler:	
  1818  00B1                     ??_USBCtrlEPAllowDataStage:	
  1819                           ; 1 bytes @ 0x11
  1820                           
  1821  00B1                     process_gpio_cmd@i:	
  1822                           ; 1 bytes @ 0x11
  1823                           
  1824  00B1                     USBDeviceInit@i_1509:	
  1825                           ; 1 bytes @ 0x11
  1826                           
  1827  00B1                     USBTransferOnePacket@len:	
  1828                           ; 1 bytes @ 0x11
  1829                           
  1830                           
  1831                           ; 1 bytes @ 0x11
  1832  00B1                     	ds	1
  1833  00B2                     ??_USBTransferOnePacket:	
  1834  00B2                     process_gpio_cmd@cmd:	
  1835                           ; 1 bytes @ 0x12
  1836                           
  1837  00B2                     USBDeviceInit@i:	
  1838                           ; 1 bytes @ 0x12
  1839                           
  1840  00B2                     USBCtrlTrfRxService@i:	
  1841                           ; 1 bytes @ 0x12
  1842                           
  1843  00B2                     memset@n:	
  1844                           ; 1 bytes @ 0x12
  1845                           
  1846                           
  1847                           ; 2 bytes @ 0x12
  1848  00B2                     	ds	1
  1849  00B3                     ??_SYSTEM_Initialize:	
  1850  00B3                     ??_USBCtrlEPServiceComplete:	
  1851                           ; 1 bytes @ 0x13
  1852                           
  1853  00B3                     USBConfigureEndpoint@EPNum:	
  1854                           ; 1 bytes @ 0x13
  1855                           
  1856  00B3                     USBCtrlTrfRxService@byteToRead:	
  1857                           ; 1 bytes @ 0x13
  1858                           
  1859  00B3                     USBCtrlTrfInHandler@lastDTS:	
  1860                           ; 1 bytes @ 0x13
  1861                           
  1862                           
  1863                           ; 1 bytes @ 0x13
  1864  00B3                     	ds	1
  1865  00B4                     ??_memset:	
  1866  00B4                     ??_USBCtrlTrfOutHandler:	
  1867                           ; 1 bytes @ 0x14
  1868                           
  1869  00B4                     USBConfigureEndpoint@handle:	
  1870                           ; 1 bytes @ 0x14
  1871                           
  1872  00B4                     memset@p:	
  1873                           ; 1 bytes @ 0x14
  1874                           
  1875                           
  1876                           ; 2 bytes @ 0x14
  1877  00B4                     	ds	1
  1878  00B5                     ?_USBEnableEndpoint:	
  1879  00B5                     USBEnableEndpoint@options:	
  1880                           ; 1 bytes @ 0x15
  1881                           
  1882                           
  1883                           ; 1 bytes @ 0x15
  1884  00B5                     	ds	1
  1885  00B6                     ??_USBEnableEndpoint:	
  1886  00B6                     USBTransferOnePacket@ep:	
  1887                           ; 1 bytes @ 0x16
  1888                           
  1889                           
  1890                           ; 1 bytes @ 0x16
  1891  00B6                     	ds	1
  1892  00B7                     USBTransferOnePacket@handle:	
  1893                           
  1894                           ; 2 bytes @ 0x17
  1895  00B7                     	ds	1
  1896  00B8                     USBEnableEndpoint@p:	
  1897                           
  1898                           ; 2 bytes @ 0x18
  1899  00B8                     	ds	1
  1900  00B9                     ?_getsUSBUSART:	
  1901  00B9                     ??_CDCTxService:	
  1902                           ; 1 bytes @ 0x19
  1903                           
  1904  00B9                     getsUSBUSART@len:	
  1905                           ; 1 bytes @ 0x19
  1906                           
  1907                           
  1908                           ; 1 bytes @ 0x19
  1909  00B9                     	ds	1
  1910  00BA                     ??_getsUSBUSART:	
  1911  00BA                     CDCTxService@i:	
  1912                           ; 1 bytes @ 0x1A
  1913                           
  1914  00BA                     USBEnableEndpoint@ep:	
  1915                           ; 1 bytes @ 0x1A
  1916                           
  1917                           
  1918                           ; 1 bytes @ 0x1A
  1919  00BA                     	ds	1
  1920  00BB                     ??_CDCInitEP:	
  1921  00BB                     CDCTxService@byte_to_send:	
  1922                           ; 1 bytes @ 0x1B
  1923                           
  1924                           
  1925                           ; 1 bytes @ 0x1B
  1926  00BB                     	ds	1
  1927  00BC                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1928  00BC                     getsUSBUSART@buffer:	
  1929                           ; 1 bytes @ 0x1C
  1930                           
  1931  00BC                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1932                           ; 1 bytes @ 0x1C
  1933                           
  1934                           
  1935                           ; 2 bytes @ 0x1C
  1936  00BC                     	ds	1
  1937  00BD                     ??_gpio_task:	
  1938                           
  1939                           ; 1 bytes @ 0x1D
  1940  00BD                     	ds	1
  1941  00BE                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1942                           
  1943                           ; 2 bytes @ 0x1E
  1944  00BE                     	ds	1
  1945  00BF                     gpio_task@bytes_rcvd:	
  1946                           
  1947                           ; 1 bytes @ 0x1F
  1948  00BF                     	ds	1
  1949  00C0                     gpio_task@has_output:	
  1950  00C0                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1951                           ; 1 bytes @ 0x20
  1952                           
  1953                           
  1954                           ; 2 bytes @ 0x20
  1955  00C0                     	ds	1
  1956  00C1                     gpio_task@rx_ptr:	
  1957                           
  1958                           ; 1 bytes @ 0x21
  1959  00C1                     	ds	1
  1960  00C2                     ??_USBWakeFromSuspend:	
  1961  00C2                     ??_USBSuspend:	
  1962                           ; 1 bytes @ 0x22
  1963                           
  1964  00C2                     ??_USBStdFeatureReqHandler:	
  1965                           ; 1 bytes @ 0x22
  1966                           
  1967  00C2                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  1968                           ; 1 bytes @ 0x22
  1969                           
  1970  00C2                     ??_USBStdSetCfgHandler:	
  1971                           ; 1 bytes @ 0x22
  1972                           
  1973  00C2                     gpio_task@tx_ptr:	
  1974                           ; 1 bytes @ 0x22
  1975                           
  1976                           
  1977                           ; 1 bytes @ 0x22
  1978  00C2                     	ds	2
  1979  00C4                     ??_USBCheckStdRequest:	
  1980                           
  1981                           ; 1 bytes @ 0x24
  1982  00C4                     	ds	1
  1983  00C5                     ??_USBCtrlTrfSetupHandler:	
  1984                           
  1985                           ; 1 bytes @ 0x25
  1986  00C5                     	ds	1
  1987  00C6                     ??_usb_task:	
  1988  00C6                     ??_main:	
  1989                           ; 1 bytes @ 0x26
  1990                           
  1991                           
  1992                           	psect	cstackCOMMON
  1993  0070                     __pcstackCOMMON:	
  1994                           ; 1 bytes @ 0x26
  1995                           
  1996  0070                     ?_USBDeviceTasks:	
  1997  0070                     ?_OSCILLATOR_Initialize:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000  0070                     ?_WDT_Initialize:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003  0070                     ?_USBDeviceInit:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006  0070                     ?_USBDeviceAttach:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009  0070                     ?_USBWakeFromSuspend:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012  0070                     ?_USBSuspend:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015  0070                     ?_USBIncrement1msInternalTimers:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018  0070                     ?_USBCtrlEPAllowStatusStage:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021  0070                     ?_USBStallHandler:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024  0070                     ?_USBCtrlEPService:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027  0070                     ?_USBCtrlTrfTxService:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030  0070                     ?_USBCtrlTrfSetupHandler:	
  2031                           ; 1 bytes @ 0x0
  2032                           
  2033  0070                     ?_USBCtrlTrfOutHandler:	
  2034                           ; 1 bytes @ 0x0
  2035                           
  2036  0070                     ?_USBCtrlTrfInHandler:	
  2037                           ; 1 bytes @ 0x0
  2038                           
  2039  0070                     ?_USBCheckStdRequest:	
  2040                           ; 1 bytes @ 0x0
  2041                           
  2042  0070                     ?_USBStdFeatureReqHandler:	
  2043                           ; 1 bytes @ 0x0
  2044                           
  2045  0070                     ?_USBCheckCDCRequest:	
  2046                           ; 1 bytes @ 0x0
  2047                           
  2048  0070                     ?_CDCInitEP:	
  2049                           ; 1 bytes @ 0x0
  2050                           
  2051  0070                     ?_CDCTxService:	
  2052                           ; 1 bytes @ 0x0
  2053                           
  2054  0070                     ?_INTERRUPT_InterruptManager:	
  2055                           ; 1 bytes @ 0x0
  2056                           
  2057  0070                     ?_PIN_MANAGER_Initialize:	
  2058                           ; 1 bytes @ 0x0
  2059                           
  2060  0070                     ?_SYSTEM_Initialize:	
  2061                           ; 1 bytes @ 0x0
  2062                           
  2063  0070                     ?_usb_task:	
  2064                           ; 1 bytes @ 0x0
  2065                           
  2066  0070                     ?_gpio_init:	
  2067                           ; 1 bytes @ 0x0
  2068                           
  2069  0070                     ?_gpio_task:	
  2070                           ; 1 bytes @ 0x0
  2071                           
  2072  0070                     ?_main:	
  2073                           ; 1 bytes @ 0x0
  2074                           
  2075  0070                     ?_USBCtrlEPAllowDataStage:	
  2076                           ; 1 bytes @ 0x0
  2077                           
  2078  0070                     ?_USBCtrlEPServiceComplete:	
  2079                           ; 1 bytes @ 0x0
  2080                           
  2081  0070                     ?_USBCtrlTrfRxService:	
  2082                           ; 1 bytes @ 0x0
  2083                           
  2084  0070                     ?_USBStdSetCfgHandler:	
  2085                           ; 1 bytes @ 0x0
  2086                           
  2087  0070                     ?_USBStdGetDscHandler:	
  2088                           ; 1 bytes @ 0x0
  2089                           
  2090  0070                     ?_USBStdGetStatusHandler:	
  2091                           ; 1 bytes @ 0x0
  2092                           
  2093  0070                     ?i1_USBCheckCDCRequest:	
  2094                           ; 1 bytes @ 0x0
  2095                           
  2096  0070                     ??i1_USBCheckCDCRequest:	
  2097                           ; 1 bytes @ 0x0
  2098                           
  2099  0070                     ?i1_CDCInitEP:	
  2100                           ; 1 bytes @ 0x0
  2101                           
  2102  0070                     ?i1_USBDeviceInit:	
  2103                           ; 1 bytes @ 0x0
  2104                           
  2105  0070                     ??i1_USBDeviceInit:	
  2106                           ; 1 bytes @ 0x0
  2107                           
  2108  0070                     ?i1_USBDeviceTasks:	
  2109                           ; 1 bytes @ 0x0
  2110                           
  2111  0070                     ?i1_USBCtrlEPAllowStatusStage:	
  2112                           ; 1 bytes @ 0x0
  2113                           
  2114  0070                     ??i1_USBCtrlEPAllowStatusStage:	
  2115                           ; 1 bytes @ 0x0
  2116                           
  2117  0070                     ?i1_USBCtrlEPAllowDataStage:	
  2118                           ; 1 bytes @ 0x0
  2119                           
  2120  0070                     ?i1_USBConfigureEndpoint:	
  2121                           ; 1 bytes @ 0x0
  2122                           
  2123  0070                     ?i1_USBCtrlEPServiceComplete:	
  2124                           ; 1 bytes @ 0x0
  2125                           
  2126  0070                     ?i1_USBCtrlTrfTxService:	
  2127                           ; 1 bytes @ 0x0
  2128                           
  2129  0070                     ??i1_USBCtrlTrfTxService:	
  2130                           ; 1 bytes @ 0x0
  2131                           
  2132  0070                     ?i1_USBCtrlTrfRxService:	
  2133                           ; 1 bytes @ 0x0
  2134                           
  2135  0070                     ?i1_USBStdSetCfgHandler:	
  2136                           ; 1 bytes @ 0x0
  2137                           
  2138  0070                     ?i1_USBStdGetDscHandler:	
  2139                           ; 1 bytes @ 0x0
  2140                           
  2141  0070                     ??i1_USBStdGetDscHandler:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144  0070                     ?i1_USBStdGetStatusHandler:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147  0070                     ??i1_USBStdGetStatusHandler:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150  0070                     ?i1_USBStallHandler:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153  0070                     ??i1_USBStallHandler:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156  0070                     ?i1_USBSuspend:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159  0070                     ?i1_USBWakeFromSuspend:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162  0070                     ?i1_USBCtrlEPService:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165  0070                     ?i1_USBCtrlTrfSetupHandler:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168  0070                     ?i1_USBCtrlTrfOutHandler:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171  0070                     ?i1_USBCtrlTrfInHandler:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174  0070                     ?i1_USBCheckStdRequest:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177  0070                     ?i1_USBStdFeatureReqHandler:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180  0070                     ?i1_USBIncrement1msInternalTimers:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183  0070                     ??i1_USBIncrement1msInternalTimers:	
  2184                           ; 1 bytes @ 0x0
  2185                           
  2186  0070                     ?i1_memset:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189  0070                     ?i1_USBTransferOnePacket:	
  2190                           ; 1 bytes @ 0x0
  2191                           
  2192  0070                     i1USBTransferOnePacket@dir:	
  2193                           ; 2 bytes @ 0x0
  2194                           
  2195  0070                     i1USBConfigureEndpoint@direction:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198  0070                     i1memset@p1:	
  2199                           ; 1 bytes @ 0x0
  2200                           
  2201                           
  2202                           ; 2 bytes @ 0x0
  2203  0070                     	ds	1
  2204  0071                     ??i1_USBConfigureEndpoint:	
  2205  0071                     i1USBDeviceInit@p:	
  2206                           ; 1 bytes @ 0x1
  2207                           
  2208  0071                     i1USBTransferOnePacket@data:	
  2209                           ; 2 bytes @ 0x1
  2210                           
  2211  0071                     i1USBStdGetStatusHandler@p:	
  2212                           ; 2 bytes @ 0x1
  2213                           
  2214                           
  2215                           ; 2 bytes @ 0x1
  2216  0071                     	ds	1
  2217  0072                     ??i1_USBCtrlTrfRxService:	
  2218  0072                     i1USBCtrlTrfTxService@byteToSend:	
  2219                           ; 1 bytes @ 0x2
  2220                           
  2221  0072                     i1memset@c:	
  2222                           ; 1 bytes @ 0x2
  2223                           
  2224                           
  2225                           ; 2 bytes @ 0x2
  2226  0072                     	ds	1
  2227  0073                     ??i1_USBCtrlEPAllowDataStage:	
  2228  0073                     ??i1_USBCtrlTrfInHandler:	
  2229                           ; 1 bytes @ 0x3
  2230                           
  2231  0073                     i1USBDeviceInit@i_1509:	
  2232                           ; 1 bytes @ 0x3
  2233                           
  2234  0073                     i1USBTransferOnePacket@len:	
  2235                           ; 1 bytes @ 0x3
  2236                           
  2237                           
  2238                           ; 1 bytes @ 0x3
  2239  0073                     	ds	1
  2240  0074                     ??i1_USBTransferOnePacket:	
  2241  0074                     i1USBDeviceInit@i:	
  2242                           ; 1 bytes @ 0x4
  2243                           
  2244  0074                     i1USBCtrlTrfRxService@i:	
  2245                           ; 1 bytes @ 0x4
  2246                           
  2247  0074                     i1memset@n:	
  2248                           ; 1 bytes @ 0x4
  2249                           
  2250                           
  2251                           ; 2 bytes @ 0x4
  2252  0074                     	ds	1
  2253  0075                     ??i1_USBCtrlEPServiceComplete:	
  2254  0075                     i1USBConfigureEndpoint@EPNum:	
  2255                           ; 1 bytes @ 0x5
  2256                           
  2257  0075                     i1USBCtrlTrfRxService@byteToRead:	
  2258                           ; 1 bytes @ 0x5
  2259                           
  2260  0075                     i1USBCtrlTrfInHandler@lastDTS:	
  2261                           ; 1 bytes @ 0x5
  2262                           
  2263                           
  2264                           ; 1 bytes @ 0x5
  2265  0075                     	ds	1
  2266  0076                     ??i1_USBCtrlTrfOutHandler:	
  2267  0076                     ??i1_memset:	
  2268                           ; 1 bytes @ 0x6
  2269                           
  2270  0076                     i1USBConfigureEndpoint@handle:	
  2271                           ; 1 bytes @ 0x6
  2272                           
  2273  0076                     i1memset@p:	
  2274                           ; 1 bytes @ 0x6
  2275                           
  2276                           
  2277                           ; 2 bytes @ 0x6
  2278  0076                     	ds	1
  2279  0077                     ?i1_USBEnableEndpoint:	
  2280  0077                     i1USBEnableEndpoint@options:	
  2281                           ; 1 bytes @ 0x7
  2282                           
  2283                           
  2284                           ; 1 bytes @ 0x7
  2285  0077                     	ds	1
  2286  0078                     ??i1_USBEnableEndpoint:	
  2287  0078                     i1USBTransferOnePacket@ep:	
  2288                           ; 1 bytes @ 0x8
  2289                           
  2290                           
  2291                           ; 1 bytes @ 0x8
  2292  0078                     	ds	1
  2293  0079                     i1USBTransferOnePacket@handle:	
  2294                           
  2295                           ; 2 bytes @ 0x9
  2296  0079                     	ds	1
  2297  007A                     i1USBEnableEndpoint@p:	
  2298                           
  2299                           ; 2 bytes @ 0xA
  2300  007A                     	ds	2
  2301  007C                     i1USBEnableEndpoint@ep:	
  2302                           
  2303                           ; 1 bytes @ 0xC
  2304  007C                     	ds	1
  2305  007D                     ??i1_CDCInitEP:	
  2306                           
  2307                           ; 1 bytes @ 0xD
  2308  007D                     	ds	1
  2309  007E                     ??i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2310                           
  2311                           	psect	cstackBANK0h
  2312  0058                     __pcstackBANK0h:	
  2313                           ; 1 bytes @ 0xE
  2314                           
  2315  0058                     ?i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2316  0058                     i1USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319                           
  2320                           ; 2 bytes @ 0x0
  2321  0058                     	ds	2
  2322  005A                     i1USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2323                           
  2324                           ; 2 bytes @ 0x2
  2325  005A                     	ds	2
  2326  005C                     i1USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2327                           
  2328                           ; 2 bytes @ 0x4
  2329  005C                     	ds	2
  2330  005E                     ??i1_USBStdSetCfgHandler:	
  2331  005E                     ??i1_USBSuspend:	
  2332                           ; 1 bytes @ 0x6
  2333                           
  2334  005E                     ??i1_USBWakeFromSuspend:	
  2335                           ; 1 bytes @ 0x6
  2336                           
  2337  005E                     ??i1_USBStdFeatureReqHandler:	
  2338                           ; 1 bytes @ 0x6
  2339                           
  2340                           
  2341                           ; 1 bytes @ 0x6
  2342  005E                     	ds	2
  2343                           
  2344                           	psect	maintext
  2345  1052                     __pmaintext:	
  2346 ;;
  2347 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2348 ;;
  2349 ;; *************** function _main *****************
  2350 ;; Defined at:
  2351 ;;		line 126 in file "main.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : B1F/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;Total ram usage:        0 bytes
  2370 ;; Hardware stack levels required when called:   20
  2371 ;; This function calls:
  2372 ;;		_SYSTEM_Initialize
  2373 ;;		_USBDeviceInit
  2374 ;;		_gpio_init
  2375 ;;		_gpio_task
  2376 ;;		_usb_task
  2377 ;; This function is called by:
  2378 ;;		Startup code after reset
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _main
  2384  1052                     _main:	
  2385                           
  2386                           ;main.c: 127: SYSTEM_Initialize();
  2387                           
  2388                           ;incstack = 0
  2389 ;; hardware stack exceeded
  2390                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2391  1052  3190  2043  3190   	fcall	_SYSTEM_Initialize
  2392                           
  2393                           ;main.c: 128: USBDeviceInit();
  2394  1055  3185  258F  3190   	fcall	_USBDeviceInit
  2395                           
  2396                           ;main.c: 129: gpio_init();
  2397  1058  319F  27EC  3190   	fcall	_gpio_init
  2398  105B                     l7113:	
  2399                           ;main.c: 131: while (1) {
  2400                           
  2401                           
  2402                           ;main.c: 132: usb_task();
  2403  105B  3190  2035  3190   	fcall	_usb_task
  2404                           
  2405                           ;main.c: 133: gpio_task();
  2406  105E  3193  2328  3190   	fcall	_gpio_task
  2407  1061  285B               	goto	l7113
  2408  1062                     __end_of_main:	
  2409                           
  2410                           	psect	text1
  2411  1035                     __ptext1:	
  2412 ;; *************** function _usb_task *****************
  2413 ;; Defined at:
  2414 ;;		line 28 in file "main.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:   19
  2435 ;; This function calls:
  2436 ;;		_CDCTxService
  2437 ;;		_USBDeviceTasks
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _usb_task
  2445  1035                     _usb_task:	
  2446                           
  2447                           ;main.c: 29: USBDeviceTasks();
  2448                           
  2449                           ;incstack = 0
  2450 ;; hardware stack exceeded
  2451                           ; Regs used in _usb_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2452  1035  3182  22F7  3190   	fcall	_USBDeviceTasks
  2453                           
  2454                           ;main.c: 31: if (
  2455                           ;main.c: 32: (USBDeviceState >= CONFIGURED_STATE) &&
  2456                           ;main.c: 33: (UCONbits.SUSPND == 0)
  2457                           ;main.c: 34: ) {
  2458  1038  3020               	movlw	32
  2459  1039  0021               	movlb	1	; select bank1
  2460  103A  025F               	subwf	_USBDeviceState^(0+128),w	;volatile
  2461  103B  1C03               	skipc
  2462  103C  0008               	return
  2463  103D  003D               	movlb	29	; select bank29
  2464  103E  188E               	btfsc	14,1	;volatile
  2465  103F  0008               	return
  2466                           
  2467                           ;main.c: 35: CDCTxService();
  2468  1040  3184  24BD         	fcall	_CDCTxService
  2469  1042  0008               	return
  2470  1043                     __end_of_usb_task:	
  2471                           
  2472                           	psect	text2
  2473  02F7                     __ptext2:	
  2474 ;; *************** function _USBDeviceTasks *****************
  2475 ;; Defined at:
  2476 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  i               1    8[BANK2 ] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2491 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2492 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  2493 ;;      Totals:         0       0       0       1       2       0       0       0       0       0       0       0       
      +0       0
  2494 ;;Total ram usage:        3 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:   18
  2497 ;; This function calls:
  2498 ;;		_USBCtrlEPAllowStatusStage
  2499 ;;		_USBCtrlEPService
  2500 ;;		_USBDeviceInit
  2501 ;;		_USBIncrement1msInternalTimers
  2502 ;;		_USBStallHandler
  2503 ;;		_USBSuspend
  2504 ;;		_USBWakeFromSuspend
  2505 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2506 ;; This function is called by:
  2507 ;;		_usb_task
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function _USBDeviceTasks
  2513  02F7                     _USBDeviceTasks:	
  2514                           
  2515                           ;usb_device.c: 479: uint8_t i;
  2516                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  2517                           
  2518                           ;incstack = 0
  2519 ;; hardware stack exceeded
  2520                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2521  02F7  0021               	movlb	1	; select bank1
  2522  02F8  035F               	decf	_USBDeviceState^(0+128),w	;volatile
  2523  02F9  1D03               	btfss	3,2
  2524  02FA  2B07               	goto	l6809
  2525                           
  2526                           ;usb_device.c: 591: {
  2527                           ;usb_device.c: 601: if(!UCONbits.SE0)
  2528  02FB  003D               	movlb	29	; select bank29
  2529  02FC  1A8E               	btfsc	14,5	;volatile
  2530  02FD  2B07               	goto	l6809
  2531                           
  2532                           ;usb_device.c: 602: {
  2533                           ;usb_device.c: 608: {UIR = 0;};
  2534  02FE  0190               	clrf	16	;volatile
  2535                           
  2536                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  2537  02FF  1412               	bsf	18,0	;volatile
  2538                           
  2539                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  2540  0300  1612               	bsf	18,4	;volatile
  2541                           
  2542                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  2543  0301  3002               	movlw	2
  2544  0302  0023               	movlb	3	; select bank3
  2545  0303  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2546  0304  0860               	movf	??_USBDeviceTasks^(0+384),w
  2547  0305  0021               	movlb	1	; select bank1
  2548  0306  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  2549  0307                     l6809:	
  2550                           
  2551                           ;usb_device.c: 617: }
  2552                           ;usb_device.c: 618: }
  2553                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  2554  0307  003D               	movlb	29	; select bank29
  2555  0308  1910               	btfsc	16,2	;volatile
  2556  0309  1D12               	btfss	18,2	;volatile
  2557  030A  2B14               	goto	l6817
  2558                           
  2559                           ;usb_device.c: 635: {
  2560                           ;usb_device.c: 636: (UIR &= 0xFB);
  2561  030B  30FB               	movlw	251
  2562  030C  0023               	movlb	3	; select bank3
  2563  030D  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2564  030E  0860               	movf	??_USBDeviceTasks^(0+384),w
  2565  030F  003D               	movlb	29	; select bank29
  2566  0310  0590               	andwf	16,f	;volatile
  2567                           
  2568                           ;usb_device.c: 640: USBWakeFromSuspend();
  2569  0311  3191  2190  3182   	fcall	_USBWakeFromSuspend
  2570  0314                     l6817:	
  2571                           
  2572                           ;usb_device.c: 642: }
  2573                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  2574  0314  003D               	movlb	29	; select bank29
  2575  0315  1C8E               	btfss	14,1	;volatile
  2576  0316  2B1A               	goto	l436
  2577                           
  2578                           ;usb_device.c: 648: {
  2579                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  2580  0317  0020               	movlb	0	; select bank0
  2581  0318  1112               	bcf	18,2	;volatile
  2582                           
  2583                           ;usb_device.c: 650: return;
  2584  0319  0008               	return
  2585  031A                     l436:	
  2586                           
  2587                           ;usb_device.c: 651: }
  2588                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  2589  031A  1810               	btfsc	16,0	;volatile
  2590  031B  1C12               	btfss	18,0	;volatile
  2591  031C  2B2E               	goto	l6831
  2592                           
  2593                           ;usb_device.c: 664: {
  2594                           ;usb_device.c: 665: USBDeviceInit();
  2595  031D  3185  258F  3182   	fcall	_USBDeviceInit
  2596                           
  2597                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  2598  0320  0021               	movlb	1	; select bank1
  2599  0321  1512               	bsf	18,2	;volatile
  2600                           
  2601                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  2602  0322  3004               	movlw	4
  2603  0323  0023               	movlb	3	; select bank3
  2604  0324  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2605  0325  0860               	movf	??_USBDeviceTasks^(0+384),w
  2606  0326  0021               	movlb	1	; select bank1
  2607  0327  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  2608                           
  2609                           ;usb_device.c: 681: (UIR &= 0xFE);
  2610  0328  30FE               	movlw	254
  2611  0329  0023               	movlb	3	; select bank3
  2612  032A  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2613  032B  0860               	movf	??_USBDeviceTasks^(0+384),w
  2614  032C  003D               	movlb	29	; select bank29
  2615  032D  0590               	andwf	16,f	;volatile
  2616  032E                     l6831:	
  2617                           
  2618                           ;usb_device.c: 682: }
  2619                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  2620  032E  1A10               	btfsc	16,4	;volatile
  2621  032F  1E12               	btfss	18,4	;volatile
  2622  0330  2B34               	goto	l6837
  2623                           
  2624                           ;usb_device.c: 688: {
  2625                           ;usb_device.c: 694: USBSuspend();
  2626  0331  3191  2131  3182   	fcall	_USBSuspend
  2627  0334                     l6837:	
  2628                           
  2629                           ;usb_device.c: 696: }
  2630                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  2631  0334  003D               	movlb	29	; select bank29
  2632  0335  1F10               	btfss	16,6	;volatile
  2633  0336  2B5E               	goto	l6853
  2634                           
  2635                           ;usb_device.c: 709: {
  2636                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  2637  0337  1F12               	btfss	18,6	;volatile
  2638  0338  2B49               	goto	l6843
  2639                           
  2640                           ;usb_device.c: 712: {
  2641                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  2642  0339  3073               	movlw	115
  2643  033A  0021               	movlb	1	; select bank1
  2644  033B  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2645  033C  3000               	movlw	0
  2646  033D  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2647  033E  3000               	movlw	0
  2648  033F  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2649  0340  3000               	movlw	0
  2650  0341  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2651  0342  3001               	movlw	1
  2652  0343  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2653  0344  3000               	movlw	0
  2654  0345  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  2655  0346  3192  224F  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2656  0349                     l6843:	
  2657                           
  2658                           ;usb_device.c: 714: }
  2659                           ;usb_device.c: 715: (UIR &= 0xBF);
  2660  0349  30BF               	movlw	191
  2661  034A  0023               	movlb	3	; select bank3
  2662  034B  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2663  034C  0860               	movf	??_USBDeviceTasks^(0+384),w
  2664  034D  003D               	movlb	29	; select bank29
  2665  034E  0590               	andwf	16,f	;volatile
  2666                           
  2667                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  2668  034F  3190  20F6  3182   	fcall	_USBIncrement1msInternalTimers
  2669                           
  2670                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  2671  0352  0022               	movlb	2	; select bank2
  2672  0353  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  2673  0354  1903               	btfsc	3,2
  2674  0355  2B58               	goto	l442
  2675                           
  2676                           ;usb_device.c: 736: {
  2677                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  2678  0356  3001               	movlw	1
  2679  0357  02CB               	subwf	_USBStatusStageTimeoutCounter^(0+256),f	;volatile
  2680  0358                     l442:	
  2681                           
  2682                           ;usb_device.c: 738: }
  2683                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  2684  0358  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  2685  0359  1D03               	btfss	3,2
  2686  035A  2B5E               	goto	l6853
  2687                           
  2688                           ;usb_device.c: 745: {
  2689                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  2690  035B  318A  22AD  3182   	fcall	_USBCtrlEPAllowStatusStage
  2691  035E                     l6853:	
  2692                           
  2693                           ;usb_device.c: 747: }
  2694                           ;usb_device.c: 749: }
  2695                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  2696  035E  003D               	movlb	29	; select bank29
  2697  035F  1A90               	btfsc	16,5	;volatile
  2698  0360  1E92               	btfss	18,5	;volatile
  2699  0361  2B65               	goto	l6859
  2700                           
  2701                           ;usb_device.c: 752: {
  2702                           ;usb_device.c: 753: USBStallHandler();
  2703  0362  3191  21F8  3182   	fcall	_USBStallHandler
  2704  0365                     l6859:	
  2705                           
  2706                           ;usb_device.c: 754: }
  2707                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  2708  0365  003D               	movlb	29	; select bank29
  2709  0366  1890               	btfsc	16,1	;volatile
  2710  0367  1C92               	btfss	18,1	;volatile
  2711  0368  2B7B               	goto	l6867
  2712                           
  2713                           ;usb_device.c: 757: {
  2714                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  2715  0369  30FF               	movlw	255
  2716  036A  0021               	movlb	1	; select bank1
  2717  036B  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2718  036C  307F               	movlw	127
  2719  036D  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2720  036E  3000               	movlw	0
  2721  036F  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2722  0370  3000               	movlw	0
  2723  0371  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2724  0372  3001               	movlw	1
  2725  0373  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2726  0374  3000               	movlw	0
  2727  0375  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  2728  0376  3192  224F  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2729                           
  2730                           ;usb_device.c: 759: {UEIR = 0;};
  2731  0379  003D               	movlb	29	; select bank29
  2732  037A  0193               	clrf	19	;volatile
  2733  037B                     l6867:	
  2734                           
  2735                           ;usb_device.c: 767: }
  2736                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  2737  037B  3004               	movlw	4
  2738  037C  0021               	movlb	1	; select bank1
  2739  037D  025F               	subwf	_USBDeviceState^(0+128),w	;volatile
  2740  037E  1803               	skipnc
  2741  037F  2B83               	goto	l446
  2742                           
  2743                           ;usb_device.c: 775: {
  2744                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  2745  0380  0020               	movlb	0	; select bank0
  2746  0381  1112               	bcf	18,2	;volatile
  2747                           
  2748                           ;usb_device.c: 777: return;
  2749  0382  0008               	return
  2750  0383                     l446:	
  2751                           
  2752                           ;usb_device.c: 778: }
  2753                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  2754  0383  003D               	movlb	29	; select bank29
  2755  0384  1D92               	btfss	18,3	;volatile
  2756  0385  2BDD               	goto	l447
  2757                           
  2758                           ;usb_device.c: 784: {
  2759                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  2760  0386  0022               	movlb	2	; select bank2
  2761  0387  01EF               	clrf	USBDeviceTasks@i^(0+256)
  2762  0388  3004               	movlw	4
  2763  0389  026F               	subwf	USBDeviceTasks@i^(0+256),w
  2764  038A  1803               	btfsc	3,0
  2765  038B  2BDD               	goto	l447
  2766  038C                     l448:	
  2767                           
  2768                           ;usb_device.c: 786: {
  2769                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  2770  038C  003D               	movlb	29	; select bank29
  2771  038D  1D90               	btfss	16,3	;volatile
  2772  038E  2BDD               	goto	l447
  2773                           
  2774                           ;usb_device.c: 788: {
  2775                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  2776  038F  080F               	movf	15,w	;volatile
  2777  0390  0023               	movlb	3	; select bank3
  2778  0391  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2779  0392  0860               	movf	??_USBDeviceTasks^(0+384),w
  2780  0393  0021               	movlb	1	; select bank1
  2781  0394  00E0               	movwf	_USTATcopy^(0+128)	;volatile
  2782                           
  2783                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  2784  0395  0C60               	rrf	_USTATcopy^(0+128),w	;volatile
  2785  0396  0023               	movlb	3	; select bank3
  2786  0397  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2787  0398  0CE0               	rrf	??_USBDeviceTasks^(0+384),f
  2788  0399  0C60               	rrf	??_USBDeviceTasks^(0+384),w
  2789  039A  390F               	andlw	15
  2790  039B  00E1               	movwf	(??_USBDeviceTasks+1)^(0+384)
  2791  039C  0861               	movf	(??_USBDeviceTasks+1)^(0+384),w
  2792  039D  0021               	movlb	1	; select bank1
  2793  039E  00DB               	movwf	_endpoint_number^(0+128)	;volatile
  2794                           
  2795                           ;usb_device.c: 793: (UIR &= 0xF7);
  2796  039F  30F7               	movlw	247
  2797  03A0  0023               	movlb	3	; select bank3
  2798  03A1  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2799  03A2  0860               	movf	??_USBDeviceTasks^(0+384),w
  2800  03A3  003D               	movlb	29	; select bank29
  2801  03A4  0590               	andwf	16,f	;volatile
  2802                           
  2803                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  2804  03A5  0021               	movlb	1	; select bank1
  2805  03A6  1960               	btfsc	_USTATcopy^(0+128),2	;volatile
  2806  03A7  2BAB               	goto	l6887
  2807                           
  2808                           ;usb_device.c: 799: {
  2809                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  2810  03A8  085B               	movf	_endpoint_number^(0+128),w	;volatile
  2811  03A9  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  2812  03AA  2BAE               	goto	L1
  2813  03AB                     l6887:	
  2814                           ;usb_device.c: 801: }
  2815                           
  2816                           
  2817                           ;usb_device.c: 802: else
  2818                           ;usb_device.c: 803: {
  2819                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  2820  03AB  0021               	movlb	1	; select bank1
  2821  03AC  085B               	movf	_endpoint_number^(0+128),w	;volatile
  2822  03AD  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  2823  03AE                     L1:	
  2824  03AE  0086               	movwf	6
  2825  03AF  3001               	movlw	1	; select bank2/3
  2826  03B0  0087               	movwf	7
  2827  03B1  0801               	movf	1,w
  2828  03B2  3901               	andlw	1
  2829  03B3  0023               	movlb	3	; select bank3
  2830  03B4  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2831  03B5  3001               	movlw	1
  2832  03B6  06E0               	xorwf	??_USBDeviceTasks^(0+384),f
  2833  03B7  0801               	movf	1,w
  2834  03B8  0660               	xorwf	??_USBDeviceTasks^(0+384),w
  2835  03B9  39FE               	andlw	-2
  2836  03BA  0660               	xorwf	??_USBDeviceTasks^(0+384),w
  2837  03BB  0081               	movwf	1
  2838                           
  2839                           ;usb_device.c: 805: }
  2840                           ;usb_device.c: 810: if(endpoint_number == 0)
  2841  03BC  0021               	movlb	1	; select bank1
  2842  03BD  085B               	movf	_endpoint_number^(0+128),w	;volatile
  2843  03BE  1D03               	btfss	3,2
  2844  03BF  2BC4               	goto	l6893
  2845                           
  2846                           ;usb_device.c: 811: {
  2847                           ;usb_device.c: 812: USBCtrlEPService();
  2848  03C0  3195  25D5  3182   	fcall	_USBCtrlEPService
  2849                           
  2850                           ;usb_device.c: 813: }
  2851  03C3  2BD3               	goto	l6895
  2852  03C4                     l6893:	
  2853                           
  2854                           ;usb_device.c: 814: else
  2855                           ;usb_device.c: 815: {
  2856                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  2857  03C4  3072               	movlw	114
  2858  03C5  0021               	movlb	1	; select bank1
  2859  03C6  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2860  03C7  3000               	movlw	0
  2861  03C8  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2862  03C9  30E0               	movlw	low _USTATcopy
  2863  03CA  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2864  03CB  3000               	movlw	high _USTATcopy
  2865  03CC  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2866  03CD  3000               	movlw	0
  2867  03CE  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2868  03CF  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  2869  03D0  3192  224F  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2870  03D3                     l6895:	
  2871                           ;usb_device.c: 819: else
  2872                           ;usb_device.c: 820: {
  2873                           ;usb_device.c: 821: break;
  2874                           
  2875                           ;usb_device.c: 817: }
  2876                           ;usb_device.c: 818: }
  2877                           
  2878  03D3  3001               	movlw	1
  2879  03D4  0023               	movlb	3	; select bank3
  2880  03D5  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2881  03D6  0860               	movf	??_USBDeviceTasks^(0+384),w
  2882  03D7  0022               	movlb	2	; select bank2
  2883  03D8  07EF               	addwf	USBDeviceTasks@i^(0+256),f
  2884  03D9  3004               	movlw	4
  2885  03DA  026F               	subwf	USBDeviceTasks@i^(0+256),w
  2886  03DB  1C03               	skipc
  2887  03DC  2B8C               	goto	l448
  2888  03DD                     l447:	
  2889                           
  2890                           ;usb_device.c: 822: }
  2891                           ;usb_device.c: 823: }
  2892                           ;usb_device.c: 824: }
  2893                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  2894  03DD  0020               	movlb	0	; select bank0
  2895  03DE  1112               	bcf	18,2	;volatile
  2896  03DF  0008               	return
  2897  03E0                     __end_of_USBDeviceTasks:	
  2898                           
  2899                           	psect	text3
  2900  1190                     __ptext3:	
  2901 ;; *************** function _USBWakeFromSuspend *****************
  2902 ;; Defined at:
  2903 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2920 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2921 ;;Total ram usage:        1 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:   14
  2924 ;; This function calls:
  2925 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2926 ;; This function is called by:
  2927 ;;		_USBDeviceTasks
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           
  2932                           ;psect for function _USBWakeFromSuspend
  2933  1190                     _USBWakeFromSuspend:	
  2934                           
  2935                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  2936                           
  2937                           ;incstack = 0
  2938 ;; hardware stack exceeded
  2939                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2940  1190  0022               	movlb	2	; select bank2
  2941  1191  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
  2942                           
  2943                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  2944  1192  3074               	movlw	116
  2945  1193  0021               	movlb	1	; select bank1
  2946  1194  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2947  1195  3000               	movlw	0
  2948  1196  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2949  1197  3000               	movlw	0
  2950  1198  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2951  1199  3000               	movlw	0
  2952  119A  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2953  119B  3000               	movlw	0
  2954  119C  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2955  119D  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  2956  119E  3192  224F  3191   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2957                           
  2958                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  2959  11A1  003D               	movlb	29	; select bank29
  2960  11A2  108E               	bcf	14,1	;volatile
  2961                           
  2962                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  2963  11A3  1112               	bcf	18,2	;volatile
  2964  11A4                     l6617:	
  2965                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  2966                           
  2967  11A4  1D10               	btfss	16,2	;volatile
  2968  11A5  29AD               	goto	l6619
  2969                           
  2970                           ;usb_device.c: 2343: {
  2971                           ;usb_device.c: 2344: (UIR &= 0xFB);
  2972  11A6  30FB               	movlw	251
  2973  11A7  0021               	movlb	1	; select bank1
  2974  11A8  00C2               	movwf	??_USBWakeFromSuspend^(0+128)
  2975  11A9  0842               	movf	??_USBWakeFromSuspend^(0+128),w
  2976  11AA  003D               	movlb	29	; select bank29
  2977  11AB  0590               	andwf	16,f	;volatile
  2978  11AC  29A4               	goto	l6617
  2979  11AD                     l6619:	
  2980                           
  2981                           ;usb_device.c: 2345: }
  2982                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  2983  11AD  0022               	movlb	2	; select bank2
  2984  11AE  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  2985  11AF  0008               	return
  2986  11B0                     __end_of_USBWakeFromSuspend:	
  2987                           
  2988                           	psect	text4
  2989  1131                     __ptext4:	
  2990 ;; *************** function _USBSuspend *****************
  2991 ;; Defined at:
  2992 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;Total ram usage:        1 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:   14
  3013 ;; This function calls:
  3014 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3015 ;; This function is called by:
  3016 ;;		_USBDeviceTasks
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           
  3021                           ;psect for function _USBSuspend
  3022  1131                     _USBSuspend:	
  3023                           
  3024                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  3025                           
  3026                           ;incstack = 0
  3027 ;; hardware stack exceeded
  3028                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3029  1131  003D               	movlb	29	; select bank29
  3030  1132  1512               	bsf	18,2	;volatile
  3031                           
  3032                           ;usb_device.c: 2271: (UIR &= 0xEF);
  3033  1133  30EF               	movlw	239
  3034  1134  0021               	movlb	1	; select bank1
  3035  1135  00C2               	movwf	??_USBSuspend^(0+128)
  3036  1136  0842               	movf	??_USBSuspend^(0+128),w
  3037  1137  003D               	movlb	29	; select bank29
  3038  1138  0590               	andwf	16,f	;volatile
  3039                           
  3040                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  3041  1139  148E               	bsf	14,1	;volatile
  3042                           
  3043                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  3044  113A  3001               	movlw	1
  3045  113B  0021               	movlb	1	; select bank1
  3046  113C  00C2               	movwf	??_USBSuspend^(0+128)
  3047  113D  0842               	movf	??_USBSuspend^(0+128),w
  3048  113E  0022               	movlb	2	; select bank2
  3049  113F  00CD               	movwf	_USBBusIsSuspended^(0+256)	;volatile
  3050                           
  3051                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  3052  1140  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  3053                           
  3054                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  3055  1141  3075               	movlw	117
  3056  1142  0021               	movlb	1	; select bank1
  3057  1143  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3058  1144  3000               	movlw	0
  3059  1145  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  3060  1146  3000               	movlw	0
  3061  1147  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3062  1148  3000               	movlw	0
  3063  1149  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3064  114A  3000               	movlw	0
  3065  114B  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3066  114C  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3067  114D  3192  224F         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3068  114F  0008               	return
  3069  1150                     __end_of_USBSuspend:	
  3070                           
  3071                           	psect	text5
  3072  11F8                     __ptext5:	
  3073 ;; *************** function _USBStallHandler *****************
  3074 ;; Defined at:
  3075 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3091 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3092 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;Total ram usage:        1 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:   10
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_USBDeviceTasks
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           
  3104                           ;psect for function _USBStallHandler
  3105  11F8                     _USBStallHandler:	
  3106                           
  3107                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  3111  11F8  003D               	movlb	29	; select bank29
  3112  11F9  1C18               	btfss	24,0	;volatile
  3113  11FA  2A18               	goto	l6651
  3114                           
  3115                           ;usb_device.c: 2215: {
  3116                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  3117  11FB  0021               	movlb	1	; select bank1
  3118  11FC  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3119  11FD  0086               	movwf	6
  3120  11FE  0187               	clrf	7
  3121  11FF  3080               	movlw	128
  3122  1200  0601               	xorwf	1,w
  3123  1201  1D03               	btfss	3,2
  3124  1202  2A16               	goto	l6649
  3125  1203  084D               	movf	_pBDTEntryIn^(0+128),w
  3126  1204  0086               	movwf	6
  3127  1205  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3128  1206  0087               	movwf	7
  3129  1207  3084               	movlw	132
  3130  1208  0601               	xorwf	1,w
  3131  1209  1D03               	btfss	3,2
  3132  120A  2A16               	goto	l6649
  3133                           
  3134                           ;usb_device.c: 2218: {
  3135                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3136  120B  300C               	movlw	12
  3137  120C  00AE               	movwf	??_USBStallHandler^(0+128)
  3138  120D  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3139  120E  0086               	movwf	6
  3140  120F  0187               	clrf	7
  3141  1210  082E               	movf	??_USBStallHandler^(0+128),w
  3142  1211  0081               	movwf	1
  3143                           
  3144                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  3145  1212  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3146  1213  0086               	movwf	6
  3147  1214  0187               	clrf	7
  3148  1215  1781               	bsf	1,7
  3149  1216                     l6649:	
  3150                           
  3151                           ;usb_device.c: 2222: }
  3152                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  3153  1216  003D               	movlb	29	; select bank29
  3154  1217  1018               	bcf	24,0	;volatile
  3155  1218                     l6651:	
  3156                           
  3157                           ;usb_device.c: 2224: }
  3158                           ;usb_device.c: 2226: (UIR &= 0xDF);
  3159  1218  30DF               	movlw	223
  3160  1219  0021               	movlb	1	; select bank1
  3161  121A  00AE               	movwf	??_USBStallHandler^(0+128)
  3162  121B  082E               	movf	??_USBStallHandler^(0+128),w
  3163  121C  003D               	movlb	29	; select bank29
  3164  121D  0590               	andwf	16,f	;volatile
  3165  121E  0008               	return
  3166  121F                     __end_of_USBStallHandler:	
  3167                           
  3168                           	psect	text6
  3169  10F6                     __ptext6:	
  3170 ;; *************** function _USBIncrement1msInternalTimers *****************
  3171 ;; Defined at:
  3172 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3188 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3189 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3190 ;;Total ram usage:        1 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:   10
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_USBDeviceTasks
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function _USBIncrement1msInternalTimers
  3202  10F6                     _USBIncrement1msInternalTimers:	
  3203                           
  3204                           ;usb_device.c: 3033: USB1msTickCount++;
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  3208  10F6  3001               	movlw	1
  3209  10F7  0022               	movlb	2	; select bank2
  3210  10F8  07B0               	addwf	_USB1msTickCount^(0+256),f	;volatile
  3211  10F9  3000               	movlw	0
  3212  10FA  3DB1               	addwfc	(_USB1msTickCount+1)^(0+256),f	;volatile
  3213  10FB  3000               	movlw	0
  3214  10FC  3DB2               	addwfc	(_USB1msTickCount+2)^(0+256),f	;volatile
  3215  10FD  3000               	movlw	0
  3216  10FE  3DB3               	addwfc	(_USB1msTickCount+3)^(0+256),f	;volatile
  3217                           
  3218                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  3219  10FF  084D               	movf	_USBBusIsSuspended^(0+256),w	;volatile
  3220  1100  1D03               	btfss	3,2
  3221  1101  0008               	return
  3222                           
  3223                           ;usb_device.c: 3035: {
  3224                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  3225  1102  3001               	movlw	1
  3226  1103  0021               	movlb	1	; select bank1
  3227  1104  00AE               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  3228  1105  082E               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  3229  1106  0022               	movlb	2	; select bank2
  3230  1107  07C6               	addwf	_USBTicksSinceSuspendEnd^(0+256),f	;volatile
  3231                           
  3232                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  3233  1108  0846               	movf	_USBTicksSinceSuspendEnd^(0+256),w	;volatile
  3234  1109  1D03               	btfss	3,2
  3235  110A  0008               	return
  3236                           
  3237                           ;usb_device.c: 3039: {
  3238                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  3239  110B  30FF               	movlw	255
  3240  110C  0021               	movlb	1	; select bank1
  3241  110D  00AE               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  3242  110E  082E               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  3243  110F  0022               	movlb	2	; select bank2
  3244  1110  00C6               	movwf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  3245  1111  0008               	return
  3246  1112                     __end_of_USBIncrement1msInternalTimers:	
  3247                           
  3248                           	psect	text7
  3249  15D5                     __ptext7:	
  3250 ;; *************** function _USBCtrlEPService *****************
  3251 ;; Defined at:
  3252 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;Total ram usage:        3 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:   17
  3273 ;; This function calls:
  3274 ;;		_USBCtrlTrfInHandler
  3275 ;;		_USBCtrlTrfOutHandler
  3276 ;;		_USBCtrlTrfSetupHandler
  3277 ;; This function is called by:
  3278 ;;		_USBDeviceTasks
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           
  3283                           ;psect for function _USBCtrlEPService
  3284  15D5                     _USBCtrlEPService:	
  3285                           
  3286                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  3287                           
  3288                           ;incstack = 0
  3289 ;; hardware stack exceeded
  3290                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3291  15D5  302D               	movlw	45
  3292  15D6  0022               	movlb	2	; select bank2
  3293  15D7  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3294  15D8  086C               	movf	??_USBCtrlEPService^(0+256),w
  3295  15D9  00CB               	movwf	_USBStatusStageTimeoutCounter^(0+256)	;volatile
  3296                           
  3297                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  3298  15DA  0021               	movlb	1	; select bank1
  3299  15DB  0860               	movf	_USTATcopy^(0+128),w	;volatile
  3300  15DC  39FD               	andlw	253
  3301  15DD  1D03               	btfss	3,2
  3302  15DE  2E23               	goto	l6671
  3303                           
  3304                           ;usb_device.c: 2383: {
  3305                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  3306  15DF  3660               	lsrf	_USTATcopy^(0+128),w	;volatile
  3307  15E0  393F               	andlw	63
  3308  15E1  0022               	movlb	2	; select bank2
  3309  15E2  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3310  15E3  3001               	movlw	1
  3311  15E4                     u6885:	
  3312  15E4  35EC               	lslf	??_USBCtrlEPService^(0+256),f
  3313  15E5  3EFF               	addlw	-1
  3314  15E6  1D03               	skipz
  3315  15E7  2DE4               	goto	u6885
  3316  15E8  356C               	lslf	??_USBCtrlEPService^(0+256),w
  3317  15E9  3E20               	addlw	32
  3318  15EA  00ED               	movwf	(??_USBCtrlEPService+1)^(0+256)
  3319  15EB  086D               	movf	(??_USBCtrlEPService+1)^(0+256),w
  3320  15EC  0021               	movlb	1	; select bank1
  3321  15ED  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  3322                           
  3323                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  3324  15EE  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3325  15EF  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  3326  15F0  39FF               	andlw	255
  3327  15F1  1D03               	skipz
  3328  15F2  3000               	movlw	0
  3329  15F3  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  3330                           
  3331                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  3332  15F4  3004               	movlw	4
  3333  15F5  0658               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  3334  15F6  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  3335  15F7  3000               	movlw	0
  3336  15F8  0659               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3337  15F9  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  3338                           
  3339                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  3340  15FA  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3341  15FB  0086               	movwf	6
  3342  15FC  0187               	clrf	7
  3343  15FD  0C01               	rrf	1,w
  3344  15FE  0C89               	rrf	9,f
  3345  15FF  390F               	andlw	15
  3346  1600  3A0D               	xorlw	13
  3347  1601  1D03               	skipz
  3348  1602  2E20               	goto	l6669
  3349                           
  3350                           ;usb_device.c: 2400: {
  3351                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  3352  1603  3050               	movlw	80
  3353  1604  0086               	movwf	6
  3354  1605  0187               	clrf	7
  3355  1606  0021               	movlb	1	; select bank1
  3356  1607  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3357  1608  3E02               	addlw	2
  3358  1609  0084               	movwf	4
  3359  160A  0185               	clrf	5
  3360  160B  3F00               	moviw [0]fsr0
  3361  160C  0022               	movlb	2	; select bank2
  3362  160D  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3363  160E  3F01               	moviw [1]fsr0
  3364  160F  00ED               	movwf	(??_USBCtrlEPService^(0+256)+1)
  3365  1610  086C               	movf	??_USBCtrlEPService^(0+256),w
  3366  1611  0084               	movwf	4
  3367  1612  086D               	movf	(??_USBCtrlEPService+1)^(0+256),w
  3368  1613  0085               	movwf	5
  3369  1614  3008               	movlw	8
  3370  1615  00EE               	movwf	(??_USBCtrlEPService+2)^(0+256)
  3371  1616  086E               	movf	(??_USBCtrlEPService+2)^(0+256),w
  3372  1617  1903               	skipnz
  3373  1618  2E1D               	goto	l6667
  3374  1619                     u690m0:	
  3375  1619  0012               	moviw fsr0++
  3376  161A  001E               	movwi fsr1++
  3377  161B  0BEE               	decfsz	(??_USBCtrlEPService+2)^(0+256),f
  3378  161C  2E19               	goto	u690m0
  3379  161D                     l6667:	
  3380                           
  3381                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  3382  161D  3194  2433         	fcall	_USBCtrlTrfSetupHandler
  3383                           
  3384                           ;usb_device.c: 2409: }
  3385  161F  0008               	return
  3386  1620                     l6669:	
  3387                           
  3388                           ;usb_device.c: 2410: else
  3389                           ;usb_device.c: 2411: {
  3390                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  3391  1620  3188  2001         	fcall	_USBCtrlTrfOutHandler
  3392                           
  3393                           ;usb_device.c: 2414: }
  3394                           ;usb_device.c: 2415: }
  3395  1622  0008               	return
  3396  1623                     l6671:	
  3397                           
  3398                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  3399  1623  30FD               	movlw	253
  3400  1624  0021               	movlb	1	; select bank1
  3401  1625  0560               	andwf	_USTATcopy^(0+128),w	;volatile
  3402  1626  0022               	movlb	2	; select bank2
  3403  1627  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3404  1628  3004               	movlw	4
  3405  1629  066C               	xorwf	??_USBCtrlEPService^(0+256),w
  3406  162A  1D03               	btfss	3,2
  3407  162B  0008               	return
  3408                           
  3409                           ;usb_device.c: 2417: {
  3410                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  3411  162C  3189  2161         	fcall	_USBCtrlTrfInHandler
  3412  162E  0008               	return
  3413  162F                     __end_of_USBCtrlEPService:	
  3414                           
  3415                           	psect	text8
  3416  1433                     __ptext8:	
  3417 ;; *************** function _USBCtrlTrfSetupHandler *****************
  3418 ;; Defined at:
  3419 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;		None
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3435 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3437 ;;Total ram usage:        1 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:   16
  3440 ;; This function calls:
  3441 ;;		_USBCheckStdRequest
  3442 ;;		_USBCtrlEPServiceComplete
  3443 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3444 ;; This function is called by:
  3445 ;;		_USBCtrlEPService
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _USBCtrlTrfSetupHandler
  3451  1433                     _USBCtrlTrfSetupHandler:	
  3452                           
  3453                           ;usb_device.c: 2470: shortPacketStatus = 0;
  3454                           
  3455                           ;incstack = 0
  3456 ;; hardware stack exceeded
  3457                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3458  1433  0021               	movlb	1	; select bank1
  3459  1434  01DD               	clrf	_shortPacketStatus^(0+128)	;volatile
  3460                           
  3461                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  3462  1435  01DA               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
  3463                           
  3464                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  3465  1436  0022               	movlb	2	; select bank2
  3466  1437  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3467                           
  3468                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  3469  1438  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3470                           
  3471                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  3472  1439  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  3473                           
  3474                           ;usb_device.c: 2475: controlTransferState = 0;
  3475  143A  0021               	movlb	1	; select bank1
  3476  143B  01DC               	clrf	_controlTransferState^(0+128)	;volatile
  3477                           
  3478                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  3479  143C  307F               	movlw	127
  3480  143D  00C5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  3481  143E  084D               	movf	_pBDTEntryIn^(0+128),w
  3482  143F  0086               	movwf	6
  3483  1440  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3484  1441  0087               	movwf	7
  3485  1442  0845               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  3486  1443  0581               	andwf	1,f
  3487                           
  3488                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  3489  1444  3004               	movlw	4
  3490  1445  064D               	xorwf	_pBDTEntryIn^(0+128),w
  3491  1446  00CD               	movwf	_pBDTEntryIn^(0+128)
  3492  1447  3000               	movlw	0
  3493  1448  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
  3494  1449  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  3495                           
  3496                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  3497  144A  307F               	movlw	127
  3498  144B  00C5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  3499  144C  084D               	movf	_pBDTEntryIn^(0+128),w
  3500  144D  0086               	movwf	6
  3501  144E  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3502  144F  0087               	movwf	7
  3503  1450  0845               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  3504  1451  0581               	andwf	1,f
  3505                           
  3506                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  3507  1452  3004               	movlw	4
  3508  1453  064D               	xorwf	_pBDTEntryIn^(0+128),w
  3509  1454  00CD               	movwf	_pBDTEntryIn^(0+128)
  3510  1455  3000               	movlw	0
  3511  1456  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
  3512  1457  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  3513                           
  3514                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  3515  1458  307F               	movlw	127
  3516  1459  00C5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  3517  145A  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3518  145B  0086               	movwf	6
  3519  145C  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3520  145D  0087               	movwf	7
  3521  145E  0845               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  3522  145F  0581               	andwf	1,f
  3523                           
  3524                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  3525  1460  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  3526                           
  3527                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  3528  1461  01D6               	clrf	(_inPipes^(0+128)+3)	;volatile
  3529  1462  01D7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  3530                           
  3531                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  3532  1463  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
  3533                           
  3534                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  3535  1464  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
  3536  1465  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  3537                           
  3538                           ;usb_device.c: 2500: USBCheckStdRequest();
  3539  1466  3188  2038  3194   	fcall	_USBCheckStdRequest
  3540                           
  3541                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  3542  1469  3000               	movlw	0
  3543  146A  0021               	movlb	1	; select bank1
  3544  146B  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  3545  146C  3003               	movlw	3
  3546  146D  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3547  146E  3000               	movlw	0
  3548  146F  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3549  1470  3000               	movlw	0
  3550  1471  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3551  1472  3000               	movlw	0
  3552  1473  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3553  1474  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3554  1475  3192  224F  3194   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3555                           
  3556                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  3557  1478  318E  26D1         	fcall	_USBCtrlEPServiceComplete
  3558  147A  0008               	return
  3559  147B                     __end_of_USBCtrlTrfSetupHandler:	
  3560                           
  3561                           	psect	text9
  3562  0ED1                     __ptext9:	
  3563 ;; *************** function _USBCtrlEPServiceComplete *****************
  3564 ;; Defined at:
  3565 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3581 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3582 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;Total ram usage:        2 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:   12
  3586 ;; This function calls:
  3587 ;;		_USBCtrlEPAllowDataStage
  3588 ;;		_USBCtrlEPAllowStatusStage
  3589 ;; This function is called by:
  3590 ;;		_USBCtrlTrfSetupHandler
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function _USBCtrlEPServiceComplete
  3596  0ED1                     _USBCtrlEPServiceComplete:	
  3597                           
  3598                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  3599                           
  3600                           ;incstack = 0
  3601 ;; hardware stack exceeded
  3602                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3603  0ED1  003D               	movlb	29	; select bank29
  3604  0ED2  120E               	bcf	14,4	;volatile
  3605                           
  3606                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  3607  0ED3  0021               	movlb	1	; select bank1
  3608  0ED4  1BD5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  3609  0ED5  2F17               	goto	l510
  3610                           
  3611                           ;usb_device.c: 1629: {
  3612                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  3613  0ED6  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
  3614  0ED7  2EE6               	goto	l6139
  3615                           
  3616                           ;usb_device.c: 1631: {
  3617                           ;usb_device.c: 1632: controlTransferState = 2;
  3618  0ED8  3002               	movlw	2
  3619  0ED9  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3620  0EDA  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3621  0EDB  00DC               	movwf	_controlTransferState^(0+128)	;volatile
  3622                           
  3623                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  3624  0EDC  0022               	movlb	2	; select bank2
  3625  0EDD  0847               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
  3626  0EDE  1D03               	btfss	3,2
  3627  0EDF  2EE2               	goto	l6135
  3628                           
  3629                           ;usb_device.c: 1644: {
  3630                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  3631  0EE0  3196  26E5         	fcall	_USBCtrlEPAllowDataStage
  3632  0EE2                     l6135:	
  3633                           
  3634                           ;usb_device.c: 1646: }
  3635                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  3636  0EE2  0022               	movlb	2	; select bank2
  3637  0EE3  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3638                           
  3639                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  3640  0EE4  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3641                           
  3642                           ;usb_device.c: 1652: }
  3643  0EE5  0008               	return
  3644  0EE6                     l6139:	
  3645                           
  3646                           ;usb_device.c: 1653: else
  3647                           ;usb_device.c: 1654: {
  3648                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 16;
  3649  0EE6  0021               	movlb	1	; select bank1
  3650  0EE7  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3651  0EE8  3E01               	addlw	1
  3652  0EE9  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3653  0EEA  3000               	movlw	0
  3654  0EEB  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3655  0EEC  00B4               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  3656  0EED  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3657  0EEE  0086               	movwf	6
  3658  0EEF  0834               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  3659  0EF0  0087               	movwf	7
  3660  0EF1  3010               	movlw	16
  3661  0EF2  0081               	movwf	1
  3662                           
  3663                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3664  0EF3  3050               	movlw	80
  3665  0EF4  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3666  0EF5  3000               	movlw	0
  3667  0EF6  00B4               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  3668  0EF7  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3669  0EF8  0086               	movwf	6
  3670  0EF9  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3671  0EFA  0087               	movwf	7
  3672  0EFB  3142               	addfsr 1,2
  3673  0EFC  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3674  0EFD  3FC0               	movwi [0]fsr1
  3675  0EFE  0834               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  3676  0EFF  3FC1               	movwi [1]fsr1
  3677                           
  3678                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3679  0F00  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3680  0F01  0086               	movwf	6
  3681  0F02  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3682  0F03  0087               	movwf	7
  3683  0F04  300C               	movlw	12
  3684  0F05  0081               	movwf	1
  3685                           
  3686                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3687  0F06  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3688  0F07  0086               	movwf	6
  3689  0F08  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3690  0F09  0087               	movwf	7
  3691  0F0A  1781               	bsf	1,7
  3692                           
  3693                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  3694  0F0B  084D               	movf	_pBDTEntryIn^(0+128),w
  3695  0F0C  0086               	movwf	6
  3696  0F0D  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3697  0F0E  0087               	movwf	7
  3698  0F0F  3004               	movlw	4
  3699  0F10  0081               	movwf	1
  3700                           
  3701                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3702  0F11  084D               	movf	_pBDTEntryIn^(0+128),w
  3703  0F12  0086               	movwf	6
  3704  0F13  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3705  0F14  0087               	movwf	7
  3706  0F15  1781               	bsf	1,7
  3707                           
  3708                           ;usb_device.c: 1665: }
  3709                           ;usb_device.c: 1666: }
  3710  0F16  0008               	return
  3711  0F17                     l510:	
  3712                           
  3713                           ;usb_device.c: 1667: else
  3714                           ;usb_device.c: 1668: {
  3715                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  3716  0F17  0020               	movlb	0	; select bank0
  3717  0F18  1FD0               	btfss	80,7	;volatile
  3718  0F19  2F30               	goto	l6165
  3719                           
  3720                           ;usb_device.c: 1670: {
  3721                           ;usb_device.c: 1671: controlTransferState = 1;
  3722  0F1A  3001               	movlw	1
  3723  0F1B  0021               	movlb	1	; select bank1
  3724  0F1C  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3725  0F1D  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3726  0F1E  00DC               	movwf	_controlTransferState^(0+128)	;volatile
  3727                           
  3728                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  3729  0F1F  0022               	movlb	2	; select bank2
  3730  0F20  0848               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
  3731  0F21  1D03               	btfss	3,2
  3732  0F22  2F26               	goto	l6157
  3733                           
  3734                           ;usb_device.c: 1686: {
  3735                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  3736  0F23  3196  26E5  318E   	fcall	_USBCtrlEPAllowDataStage
  3737  0F26                     l6157:	
  3738                           
  3739                           ;usb_device.c: 1688: }
  3740                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  3741  0F26  0022               	movlb	2	; select bank2
  3742  0F27  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3743                           
  3744                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  3745  0F28  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3746                           
  3747                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  3748  0F29  0021               	movlb	1	; select bank1
  3749  0F2A  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  3750  0F2B  1D03               	btfss	3,2
  3751  0F2C  0008               	return
  3752                           
  3753                           ;usb_device.c: 1713: {
  3754                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  3755  0F2D  318A  22AD         	fcall	_USBCtrlEPAllowStatusStage
  3756                           
  3757                           ;usb_device.c: 1715: }
  3758                           ;usb_device.c: 1716: }
  3759  0F2F  0008               	return
  3760  0F30                     l6165:	
  3761                           
  3762                           ;usb_device.c: 1717: else
  3763                           ;usb_device.c: 1718: {
  3764                           ;usb_device.c: 1729: controlTransferState = 2;
  3765  0F30  3002               	movlw	2
  3766  0F31  0021               	movlb	1	; select bank1
  3767  0F32  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3768  0F33  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3769  0F34  00DC               	movwf	_controlTransferState^(0+128)	;volatile
  3770                           
  3771                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 16;
  3772  0F35  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3773  0F36  3E01               	addlw	1
  3774  0F37  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3775  0F38  3000               	movlw	0
  3776  0F39  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3777  0F3A  00B4               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  3778  0F3B  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3779  0F3C  0086               	movwf	6
  3780  0F3D  0834               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  3781  0F3E  0087               	movwf	7
  3782  0F3F  3010               	movlw	16
  3783  0F40  0081               	movwf	1
  3784                           
  3785                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3786  0F41  3050               	movlw	80
  3787  0F42  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3788  0F43  3000               	movlw	0
  3789  0F44  00B4               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  3790  0F45  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3791  0F46  0086               	movwf	6
  3792  0F47  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3793  0F48  0087               	movwf	7
  3794  0F49  3142               	addfsr 1,2
  3795  0F4A  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3796  0F4B  3FC0               	movwi [0]fsr1
  3797  0F4C  0834               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  3798  0F4D  3FC1               	movwi [1]fsr1
  3799                           
  3800                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  3801  0F4E  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3802  0F4F  0086               	movwf	6
  3803  0F50  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3804  0F51  0087               	movwf	7
  3805  0F52  3004               	movlw	4
  3806  0F53  0081               	movwf	1
  3807                           
  3808                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3809  0F54  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3810  0F55  0086               	movwf	6
  3811  0F56  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3812  0F57  0087               	movwf	7
  3813  0F58  1781               	bsf	1,7
  3814                           
  3815                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  3816  0F59  0022               	movlb	2	; select bank2
  3817  0F5A  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3818                           
  3819                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  3820  0F5B  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3821                           
  3822                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  3823  0F5C  0021               	movlb	1	; select bank1
  3824  0F5D  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  3825  0F5E  1D03               	btfss	3,2
  3826  0F5F  0008               	return
  3827                           
  3828                           ;usb_device.c: 1741: {
  3829                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  3830  0F60  318A  22AD         	fcall	_USBCtrlEPAllowStatusStage
  3831  0F62  0008               	return
  3832  0F63                     __end_of_USBCtrlEPServiceComplete:	
  3833                           
  3834                           	psect	text10
  3835  16E5                     __ptext10:	
  3836 ;; *************** function _USBCtrlEPAllowDataStage *****************
  3837 ;; Defined at:
  3838 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3855 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3856 ;;Total ram usage:        2 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:   11
  3859 ;; This function calls:
  3860 ;;		_USBCtrlTrfTxService
  3861 ;; This function is called by:
  3862 ;;		_USBCtrlEPServiceComplete
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           
  3867                           ;psect for function _USBCtrlEPAllowDataStage
  3868  16E5                     _USBCtrlEPAllowDataStage:	
  3869                           
  3870                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  3871                           
  3872                           ;incstack = 0
  3873 ;; hardware stack exceeded
  3874                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3875  16E5  0022               	movlb	2	; select bank2
  3876  16E6  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3877                           
  3878                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  3879  16E7  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3880                           
  3881                           ;usb_device.c: 1493: if(controlTransferState == 2)
  3882  16E8  3002               	movlw	2
  3883  16E9  0021               	movlb	1	; select bank1
  3884  16EA  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
  3885  16EB  1D03               	btfss	3,2
  3886  16EC  2F12               	goto	l5899
  3887                           
  3888                           ;usb_device.c: 1494: {
  3889                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 16;
  3890  16ED  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3891  16EE  3E01               	addlw	1
  3892  16EF  00B1               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  3893  16F0  3000               	movlw	0
  3894  16F1  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3895  16F2  00B2               	movwf	(??_USBCtrlEPAllowDataStage+1)^(0+128)
  3896  16F3  0831               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  3897  16F4  0086               	movwf	6
  3898  16F5  0832               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
  3899  16F6  0087               	movwf	7
  3900  16F7  3010               	movlw	16
  3901  16F8  0081               	movwf	1
  3902                           
  3903                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3904  16F9  3060               	movlw	96
  3905  16FA  00B1               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  3906  16FB  3000               	movlw	0
  3907  16FC  00B2               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  3908  16FD  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3909  16FE  0086               	movwf	6
  3910  16FF  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3911  1700  0087               	movwf	7
  3912  1701  3142               	addfsr 1,2
  3913  1702  0831               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  3914  1703  3FC0               	movwi [0]fsr1
  3915  1704  0832               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  3916  1705  3FC1               	movwi [1]fsr1
  3917                           
  3918                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  3919  1706  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3920  1707  0086               	movwf	6
  3921  1708  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3922  1709  0087               	movwf	7
  3923  170A  3048               	movlw	72
  3924  170B  0081               	movwf	1
  3925                           
  3926                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3927  170C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3928  170D  0086               	movwf	6
  3929  170E  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3930  170F  0087               	movwf	7
  3931  1710  1781               	bsf	1,7
  3932                           
  3933                           ;usb_device.c: 1500: }
  3934  1711  0008               	return
  3935  1712                     l5899:	
  3936                           
  3937                           ;usb_device.c: 1501: else
  3938                           ;usb_device.c: 1502: {
  3939                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  3940  1712  0857               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  3941  1713  0020               	movlb	0	; select bank0
  3942  1714  0257               	subwf	87,w	;volatile
  3943  1715  1D03               	skipz
  3944  1716  2F1B               	goto	u5965
  3945  1717  0021               	movlb	1	; select bank1
  3946  1718  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
  3947  1719  0020               	movlb	0	; select bank0
  3948  171A  0256               	subwf	86,w	;volatile
  3949  171B                     u5965:	
  3950  171B  1803               	skipnc
  3951  171C  2F24               	goto	l5903
  3952                           
  3953                           ;usb_device.c: 1506: {
  3954                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  3955  171D  0857               	movf	87,w	;volatile
  3956  171E  0021               	movlb	1	; select bank1
  3957  171F  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  3958  1720  0020               	movlb	0	; select bank0
  3959  1721  0856               	movf	86,w	;volatile
  3960  1722  0021               	movlb	1	; select bank1
  3961  1723  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  3962  1724                     l5903:	
  3963                           
  3964                           ;usb_device.c: 1508: }
  3965                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  3966  1724  318A  223B         	fcall	_USBCtrlTrfTxService
  3967                           
  3968                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3969  1726  3060               	movlw	96
  3970  1727  0021               	movlb	1	; select bank1
  3971  1728  00B1               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  3972  1729  3000               	movlw	0
  3973  172A  00B2               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  3974  172B  084D               	movf	_pBDTEntryIn^(0+128),w
  3975  172C  0086               	movwf	6
  3976  172D  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3977  172E  0087               	movwf	7
  3978  172F  3142               	addfsr 1,2
  3979  1730  0831               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  3980  1731  3FC0               	movwi [0]fsr1
  3981  1732  0832               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  3982  1733  3FC1               	movwi [1]fsr1
  3983                           
  3984                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  3985  1734  084D               	movf	_pBDTEntryIn^(0+128),w
  3986  1735  0086               	movwf	6
  3987  1736  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3988  1737  0087               	movwf	7
  3989  1738  3048               	movlw	72
  3990  1739  0081               	movwf	1
  3991                           
  3992                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3993  173A  084D               	movf	_pBDTEntryIn^(0+128),w
  3994  173B  0086               	movwf	6
  3995  173C  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3996  173D  0087               	movwf	7
  3997  173E  1781               	bsf	1,7
  3998  173F  0008               	return
  3999  1740                     __end_of_USBCtrlEPAllowDataStage:	
  4000                           
  4001                           	psect	text11
  4002  0838                     __ptext11:	
  4003 ;; *************** function _USBCheckStdRequest *****************
  4004 ;; Defined at:
  4005 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4021 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4022 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4023 ;;Total ram usage:        1 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:   15
  4026 ;; This function calls:
  4027 ;;		_USBStdFeatureReqHandler
  4028 ;;		_USBStdGetDscHandler
  4029 ;;		_USBStdGetStatusHandler
  4030 ;;		_USBStdSetCfgHandler
  4031 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4032 ;; This function is called by:
  4033 ;;		_USBCtrlTrfSetupHandler
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           
  4038                           ;psect for function _USBCheckStdRequest
  4039  0838                     _USBCheckStdRequest:	
  4040                           
  4041                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  4042                           
  4043                           ;incstack = 0
  4044 ;; hardware stack exceeded
  4045                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4046  0838  0020               	movlb	0	; select bank0
  4047  0839  0E50               	swapf	80,w	;volatile
  4048  083A  0C89               	rrf	9,f
  4049  083B  3903               	andlw	3
  4050  083C  3A00               	xorlw	0
  4051  083D  1D03               	btfss	3,2
  4052  083E  0008               	return
  4053  083F  288C               	goto	l6259
  4054  0840                     l637:	
  4055                           ;usb_device.c: 2691: {
  4056                           ;usb_device.c: 2692: case 5:
  4057                           
  4058                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  4059                           
  4060                           
  4061                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  4062  0840  0021               	movlb	1	; select bank1
  4063  0841  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4064                           
  4065                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  4066  0842  3008               	movlw	8
  4067  0843  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4068  0844  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4069  0845  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  4070                           
  4071                           ;usb_device.c: 2696: break;
  4072  0846  0008               	return
  4073  0847                     l6229:	
  4074                           ;usb_device.c: 2697: case 6:
  4075                           
  4076                           
  4077                           ;usb_device.c: 2698: USBStdGetDscHandler();
  4078  0847  318B  23A0         	fcall	_USBStdGetDscHandler
  4079                           
  4080                           ;usb_device.c: 2699: break;
  4081  0849  0008               	return
  4082  084A                     l6231:	
  4083                           ;usb_device.c: 2700: case 9:
  4084                           
  4085                           
  4086                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  4087  084A  318D  2520         	fcall	_USBStdSetCfgHandler
  4088                           
  4089                           ;usb_device.c: 2702: break;
  4090  084C  0008               	return
  4091  084D                     l6233:	
  4092                           ;usb_device.c: 2703: case 8:
  4093                           
  4094                           
  4095                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  4096  084D  30E1               	movlw	low _USBActiveConfiguration
  4097  084E  0021               	movlb	1	; select bank1
  4098  084F  00D3               	movwf	_inPipes^(0+128)	;volatile
  4099  0850  3000               	movlw	high _USBActiveConfiguration
  4100  0851  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4101                           
  4102                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4103  0852  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4104                           
  4105                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  4106  0853  3001               	movlw	1
  4107  0854  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4108  0855  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4109  0856  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4110                           
  4111                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  4112  0857  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4113                           
  4114                           ;usb_device.c: 2708: break;
  4115  0858  0008               	return
  4116  0859                     l6241:	
  4117                           ;usb_device.c: 2709: case 0:
  4118                           
  4119                           
  4120                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  4121  0859  3195  257D         	fcall	_USBStdGetStatusHandler
  4122                           
  4123                           ;usb_device.c: 2711: break;
  4124  085B  0008               	return
  4125  085C                     l6243:	
  4126                           ;usb_device.c: 2712: case 1:
  4127                           
  4128                           
  4129                           ;usb_device.c: 2713: case 3:
  4130                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  4131  085C  3180  204D         	fcall	_USBStdFeatureReqHandler
  4132                           
  4133                           ;usb_device.c: 2715: break;
  4134  085E  0008               	return
  4135  085F                     l6245:	
  4136                           ;usb_device.c: 2716: case 10:
  4137                           
  4138                           
  4139                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  4140  085F  0020               	movlb	0	; select bank0
  4141  0860  0854               	movf	84,w	;volatile
  4142  0861  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  4143  0862  0021               	movlb	1	; select bank1
  4144  0863  00D3               	movwf	_inPipes^(0+128)	;volatile
  4145  0864  3001               	movlw	1
  4146  0865  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4147                           
  4148                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4149  0866  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4150                           
  4151                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  4152  0867  3001               	movlw	1
  4153  0868  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4154  0869  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4155  086A  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4156                           
  4157                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  4158  086B  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4159                           
  4160                           ;usb_device.c: 2721: break;
  4161  086C  0008               	return
  4162  086D                     l646:	
  4163                           ;usb_device.c: 2722: case 11:
  4164                           
  4165                           
  4166                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  4167  086D  0021               	movlb	1	; select bank1
  4168  086E  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4169                           
  4170                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  4171  086F  0020               	movlb	0	; select bank0
  4172  0870  0852               	movf	82,w	;volatile
  4173  0871  0021               	movlb	1	; select bank1
  4174  0872  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4175  0873  0020               	movlb	0	; select bank0
  4176  0874  0854               	movf	84,w	;volatile
  4177  0875  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  4178  0876  0086               	movwf	6
  4179  0877  3001               	movlw	1	; select bank2/3
  4180  0878  0087               	movwf	7
  4181  0879  0021               	movlb	1	; select bank1
  4182  087A  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4183  087B  0081               	movwf	1
  4184                           
  4185                           ;usb_device.c: 2725: break;
  4186  087C  0008               	return
  4187  087D                     l6255:	
  4188                           ;usb_device.c: 2726: case 7:
  4189                           
  4190                           
  4191                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  4192  087D  3000               	movlw	0
  4193  087E  0021               	movlb	1	; select bank1
  4194  087F  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4195  0880  3002               	movlw	2
  4196  0881  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4197  0882  3000               	movlw	0
  4198  0883  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4199  0884  3000               	movlw	0
  4200  0885  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4201  0886  3000               	movlw	0
  4202  0887  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4203  0888  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4204  0889  3192  224F         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4205                           
  4206                           ;usb_device.c: 2732: }
  4207                           
  4208                           ;usb_device.c: 2731: break;
  4209                           
  4210                           ;usb_device.c: 2730: default:
  4211                           
  4212                           ;usb_device.c: 2729: case 12:
  4213                           
  4214                           ;usb_device.c: 2728: break;
  4215  088B  0008               	return
  4216  088C                     l6259:	
  4217  088C  0020               	movlb	0	; select bank0
  4218  088D  0851               	movf	81,w	;volatile
  4219                           
  4220                           ; Switch size 1, requested type "space"
  4221                           ; Number of cases is 11, Range of values is 0 to 12
  4222                           ; switch strategies available:
  4223                           ; Name         Instructions Cycles
  4224                           ; direct_byte           32     6 (fixed)
  4225                           ; simple_byte           34    18 (average)
  4226                           ; jumptable            260     6 (fixed)
  4227                           ;	Chosen strategy is direct_byte
  4228  088E  0084               	movwf	4
  4229  088F  300D               	movlw	13
  4230  0890  0204               	subwf	4,w
  4231  0891  1803               	skipnc
  4232  0892  0008               	return
  4233  0893  3190               	movlp	high S7237
  4234  0894  3504               	lslf	4,w
  4235  0895  3E00               	addlw	low S7237
  4236  0896  0082               	movwf	2
  4237  0897                     l635:	
  4238  0897  0008               	return
  4239  0898                     __end_of_USBCheckStdRequest:	
  4240                           
  4241                           	psect	swtext1
  4242  1000                     __pswtext1:	
  4243  1000                     S7237:	
  4244  1000  3188  2859         	ljmp	l6241
  4245  1002  3188  285C         	ljmp	l6243
  4246  1004  3188  2897         	ljmp	l635
  4247  1006  3188  285C         	ljmp	l6243
  4248  1008  3188  2897         	ljmp	l635
  4249  100A  3188  2840         	ljmp	l637
  4250  100C  3188  2847         	ljmp	l6229
  4251  100E  3188  287D         	ljmp	l6255
  4252  1010  3188  284D         	ljmp	l6233
  4253  1012  3188  284A         	ljmp	l6231
  4254  1014  3188  285F         	ljmp	l6245
  4255  1016  3188  286D         	ljmp	l646
  4256  1018  3188  2897         	ljmp	l635
  4257                           
  4258                           	psect	text12
  4259  0D20                     __ptext12:	
  4260 ;; *************** function _USBStdSetCfgHandler *****************
  4261 ;; Defined at:
  4262 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;		None
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  p               2    0[BANK2 ] PTR unsigned char 
  4267 ;;		 -> UEP1(1), 
  4268 ;;  i               1    2[BANK2 ] unsigned char 
  4269 ;;  i               1    3[BANK2 ] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4280 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4281 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;      Totals:         0       0       1       4       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;Total ram usage:        5 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:   14
  4286 ;; This function calls:
  4287 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4288 ;;		_memset
  4289 ;; This function is called by:
  4290 ;;		_USBCheckStdRequest
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _USBStdSetCfgHandler
  4296  0D20                     _USBStdSetCfgHandler:	
  4297                           
  4298                           ;usb_device.c: 1970: uint8_t i;
  4299                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  4300                           
  4301                           ;incstack = 0
  4302 ;; hardware stack exceeded
  4303                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4304  0D20  0021               	movlb	1	; select bank1
  4305  0D21  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4306                           
  4307                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  4308  0D22  300E               	movlw	14
  4309  0D23  0022               	movlb	2	; select bank2
  4310  0D24  00E8               	movwf	(USBStdSetCfgHandler@p+1)^(0+256)
  4311  0D25  3099               	movlw	153
  4312  0D26  00E7               	movwf	USBStdSetCfgHandler@p^(0+256)
  4313  0D27  01E9               	clrf	USBStdSetCfgHandler@i_2174^(0+256)
  4314  0D28  3002               	movlw	2
  4315  0D29  0269               	subwf	USBStdSetCfgHandler@i_2174^(0+256),w
  4316  0D2A  1803               	btfsc	3,0
  4317  0D2B  2D3F               	goto	l5927
  4318  0D2C                     l5919:	
  4319  0D2C  0867               	movf	USBStdSetCfgHandler@p^(0+256),w
  4320  0D2D  0086               	movwf	6
  4321  0D2E  0868               	movf	(USBStdSetCfgHandler@p+1)^(0+256),w
  4322  0D2F  0087               	movwf	7
  4323  0D30  0181               	clrf	1
  4324  0D31  3001               	movlw	1
  4325  0D32  07E7               	addwf	USBStdSetCfgHandler@p^(0+256),f
  4326  0D33  3000               	movlw	0
  4327  0D34  3DE8               	addwfc	(USBStdSetCfgHandler@p+1)^(0+256),f
  4328  0D35  3001               	movlw	1
  4329  0D36  0021               	movlb	1	; select bank1
  4330  0D37  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4331  0D38  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4332  0D39  0022               	movlb	2	; select bank2
  4333  0D3A  07E9               	addwf	USBStdSetCfgHandler@i_2174^(0+256),f
  4334  0D3B  3002               	movlw	2
  4335  0D3C  0269               	subwf	USBStdSetCfgHandler@i_2174^(0+256),w
  4336  0D3D  1C03               	skipc
  4337  0D3E  2D2C               	goto	l5919
  4338  0D3F                     l5927:	
  4339                           
  4340                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  4341  0D3F  3020               	movlw	32
  4342  0D40  0021               	movlb	1	; select bank1
  4343  0D41  00AE               	movwf	memset@p1^(0+128)
  4344  0D42  3000               	movlw	0
  4345  0D43  00AF               	movwf	(memset@p1+1)^(0+128)
  4346  0D44  3000               	movlw	0
  4347  0D45  00B0               	movwf	memset@c^(0+128)
  4348  0D46  00B1               	movwf	(memset@c+1)^(0+128)
  4349  0D47  3030               	movlw	48
  4350  0D48  00B2               	movwf	memset@n^(0+128)
  4351  0D49  3000               	movlw	0
  4352  0D4A  00B3               	movwf	(memset@n^(0+128)+1)
  4353  0D4B  3190  20A7  318D   	fcall	_memset
  4354                           
  4355                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  4356  0D4E  003D               	movlb	29	; select bank29
  4357  0D4F  170E               	bsf	14,6	;volatile
  4358                           
  4359                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  4360  0D50  0022               	movlb	2	; select bank2
  4361  0D51  01EA               	clrf	USBStdSetCfgHandler@i^(0+256)
  4362  0D52  3003               	movlw	3
  4363  0D53  026A               	subwf	USBStdSetCfgHandler@i^(0+256),w
  4364  0D54  1803               	btfsc	3,0
  4365  0D55  2D6C               	goto	l5943
  4366  0D56                     l5937:	
  4367                           
  4368                           ;usb_device.c: 1988: {
  4369                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  4370  0D56  086A               	movf	USBStdSetCfgHandler@i^(0+256),w
  4371  0D57  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4372  0D58  0086               	movwf	6
  4373  0D59  3001               	movlw	1	; select bank2/3
  4374  0D5A  0087               	movwf	7
  4375  0D5B  0181               	clrf	1
  4376                           
  4377                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  4378  0D5C  086A               	movf	USBStdSetCfgHandler@i^(0+256),w
  4379  0D5D  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4380  0D5E  0086               	movwf	6
  4381  0D5F  3001               	movlw	1	; select bank2/3
  4382  0D60  0087               	movwf	7
  4383  0D61  0181               	clrf	1
  4384  0D62  3001               	movlw	1
  4385  0D63  0021               	movlb	1	; select bank1
  4386  0D64  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4387  0D65  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4388  0D66  0022               	movlb	2	; select bank2
  4389  0D67  07EA               	addwf	USBStdSetCfgHandler@i^(0+256),f
  4390  0D68  3003               	movlw	3
  4391  0D69  026A               	subwf	USBStdSetCfgHandler@i^(0+256),w
  4392  0D6A  1C03               	skipc
  4393  0D6B  2D56               	goto	l5937
  4394  0D6C                     l5943:	
  4395                           
  4396                           ;usb_device.c: 1991: }
  4397                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  4398  0D6C  3065               	movlw	low _USBAlternateInterface
  4399  0D6D  0021               	movlb	1	; select bank1
  4400  0D6E  00AE               	movwf	memset@p1^(0+128)
  4401  0D6F  3001               	movlw	high _USBAlternateInterface
  4402  0D70  00AF               	movwf	(memset@p1+1)^(0+128)
  4403  0D71  3000               	movlw	0
  4404  0D72  00B0               	movwf	memset@c^(0+128)
  4405  0D73  00B1               	movwf	(memset@c+1)^(0+128)
  4406  0D74  3002               	movlw	2
  4407  0D75  00B2               	movwf	memset@n^(0+128)
  4408  0D76  3000               	movlw	0
  4409  0D77  00B3               	movwf	(memset@n^(0+128)+1)
  4410  0D78  3190  20A7  318D   	fcall	_memset
  4411                           
  4412                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  4413  0D7B  003D               	movlb	29	; select bank29
  4414  0D7C  130E               	bcf	14,6	;volatile
  4415                           
  4416                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4417  0D7D  3028               	movlw	40
  4418  0D7E  0021               	movlb	1	; select bank1
  4419  0D7F  00CD               	movwf	_pBDTEntryIn^(0+128)
  4420  0D80  3000               	movlw	0
  4421  0D81  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  4422                           
  4423                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  4424  0D82  3020               	movlw	32
  4425  0D83  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4426  0D84  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4427  0D85  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  4428                           
  4429                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4430  0D86  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4431  0D87  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4432  0D88  39FF               	andlw	255
  4433  0D89  1D03               	skipz
  4434  0D8A  3000               	movlw	0
  4435  0D8B  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4436                           
  4437                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  4438  0D8C  0020               	movlb	0	; select bank0
  4439  0D8D  0852               	movf	82,w	;volatile
  4440  0D8E  0021               	movlb	1	; select bank1
  4441  0D8F  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4442  0D90  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4443  0D91  00E1               	movwf	_USBActiveConfiguration^(0+128)	;volatile
  4444                           
  4445                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  4446  0D92  0861               	movf	_USBActiveConfiguration^(0+128),w	;volatile
  4447  0D93  1D03               	btfss	3,2
  4448  0D94  2D9A               	goto	l5959
  4449                           
  4450                           ;usb_device.c: 2010: {
  4451                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  4452  0D95  3010               	movlw	16
  4453  0D96  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4454  0D97  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4455  0D98  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  4456                           
  4457                           ;usb_device.c: 2013: }
  4458  0D99  0008               	return
  4459  0D9A                     l5959:	
  4460                           
  4461                           ;usb_device.c: 2014: else
  4462                           ;usb_device.c: 2015: {
  4463                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  4464  0D9A  3000               	movlw	0
  4465  0D9B  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4466  0D9C  3001               	movlw	1
  4467  0D9D  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4468  0D9E  30E1               	movlw	low _USBActiveConfiguration
  4469  0D9F  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4470  0DA0  3000               	movlw	high _USBActiveConfiguration
  4471  0DA1  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4472  0DA2  3001               	movlw	1
  4473  0DA3  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4474  0DA4  3000               	movlw	0
  4475  0DA5  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  4476  0DA6  3192  224F         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4477                           
  4478                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  4479  0DA8  3020               	movlw	32
  4480  0DA9  0021               	movlb	1	; select bank1
  4481  0DAA  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4482  0DAB  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4483  0DAC  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  4484  0DAD  0008               	return
  4485  0DAE                     __end_of_USBStdSetCfgHandler:	
  4486                           
  4487                           	psect	text13
  4488  10A7                     __ptext13:	
  4489 ;; *************** function _memset *****************
  4490 ;; Defined at:
  4491 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  p1              2   14[BANK1 ] PTR void 
  4494 ;;		 -> USBAlternateInterface(2), BDT(48), 
  4495 ;;  c               2   16[BANK1 ] int 
  4496 ;;  n               2   18[BANK1 ] unsigned int 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  p               2   20[BANK1 ] PTR unsigned char 
  4499 ;;		 -> USBAlternateInterface(2), BDT(48), 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  2   14[BANK1 ] PTR void 
  4502 ;; Registers used:
  4503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4509 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;Total ram usage:        8 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:   10
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_USBStdSetCfgHandler
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function _memset
  4525  10A7                     _memset:	
  4526                           
  4527                           ;incstack = 0
  4528 ;; hardware stack exceeded
  4529                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4530  10A7  0021               	movlb	1	; select bank1
  4531  10A8  082F               	movf	(memset@p1+1)^(0+128),w
  4532  10A9  00B5               	movwf	(memset@p+1)^(0+128)
  4533  10AA  082E               	movf	memset@p1^(0+128),w
  4534  10AB  00B4               	movwf	memset@p^(0+128)
  4535  10AC                     l5831:	
  4536  10AC  3001               	movlw	1
  4537  10AD  02B2               	subwf	memset@n^(0+128),f
  4538  10AE  3000               	movlw	0
  4539  10AF  3BB3               	subwfb	(memset@n+1)^(0+128),f
  4540  10B0  0A32               	incf	memset@n^(0+128),w
  4541  10B1  1903               	btfsc	3,2
  4542  10B2  0A33               	incf	(memset@n+1)^(0+128),w
  4543  10B3  1903               	btfsc	3,2
  4544  10B4  0008               	return
  4545  10B5  0834               	movf	memset@p^(0+128),w
  4546  10B6  0086               	movwf	6
  4547  10B7  0835               	movf	(memset@p+1)^(0+128),w
  4548  10B8  0087               	movwf	7
  4549  10B9  0830               	movf	memset@c^(0+128),w
  4550  10BA  0081               	movwf	1
  4551  10BB  3001               	movlw	1
  4552  10BC  07B4               	addwf	memset@p^(0+128),f
  4553  10BD  3000               	movlw	0
  4554  10BE  3DB5               	addwfc	(memset@p+1)^(0+128),f
  4555  10BF  28AC               	goto	l5831
  4556  10C0                     __end_of_memset:	
  4557                           ;	Return value of _memset is never used
  4558                           
  4559                           
  4560                           	psect	text14
  4561  157D                     __ptext14:	
  4562 ;; *************** function _USBStdGetStatusHandler *****************
  4563 ;; Defined at:
  4564 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;		None
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  p               2   15[BANK1 ] PTR struct __BDT
  4569 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;Total ram usage:        3 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:   10
  4586 ;; This function calls:
  4587 ;;		Nothing
  4588 ;; This function is called by:
  4589 ;;		_USBCheckStdRequest
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           
  4594                           ;psect for function _USBStdGetStatusHandler
  4595  157D                     _USBStdGetStatusHandler:	
  4596                           
  4597                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  4598                           
  4599                           ;incstack = 0
  4600                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  4601  157D  0020               	movlb	0	; select bank0
  4602  157E  01E0               	clrf	96	;volatile
  4603                           
  4604                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  4605  157F  01E1               	clrf	97	;volatile
  4606                           
  4607                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  4608  1580  2DBC               	goto	l6015
  4609  1581                     l575:	
  4610                           ;usb_device.c: 2135: {
  4611                           ;usb_device.c: 2136: case (0x00):
  4612                           
  4613                           
  4614                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  4615  1581  0021               	movlb	1	; select bank1
  4616  1582  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4617                           
  4618                           ;usb_device.c: 2145: }
  4619                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  4620                           
  4621                           ;usb_device.c: 2143: {
  4622                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  4623                           
  4624                           ;usb_device.c: 2142: if(0 == 1)
  4625  1583  0022               	movlb	2	; select bank2
  4626  1584  034E               	decf	_RemoteWakeup^(0+256),w	;volatile
  4627  1585  1D03               	btfss	3,2
  4628  1586  2DC8               	goto	l578
  4629                           
  4630                           ;usb_device.c: 2148: {
  4631                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  4632  1587  0020               	movlb	0	; select bank0
  4633  1588  14E0               	bsf	96,1	;volatile
  4634                           
  4635                           ;usb_device.c: 2150: }
  4636                           ;usb_device.c: 2151: break;
  4637  1589  2DC8               	goto	l578
  4638  158A                     l579:	
  4639                           ;usb_device.c: 2152: case (0x01):
  4640                           
  4641                           
  4642                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  4643  158A  0021               	movlb	1	; select bank1
  4644  158B  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4645                           
  4646                           ;usb_device.c: 2154: break;
  4647  158C  2DC8               	goto	l578
  4648  158D                     l580:	
  4649                           ;usb_device.c: 2155: case (0x02):
  4650                           
  4651                           
  4652                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  4653  158D  0021               	movlb	1	; select bank1
  4654  158E  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4655                           
  4656                           ;usb_device.c: 2160: {
  4657                           ;usb_device.c: 2161: BDT_ENTRY *p;
  4658                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  4659  158F  0020               	movlb	0	; select bank0
  4660  1590  1BD4               	btfsc	84,7	;volatile
  4661  1591  2D9E               	goto	l6005
  4662                           
  4663                           ;usb_device.c: 2164: {
  4664                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  4665  1592  0854               	movf	84,w	;volatile
  4666  1593  390F               	andlw	15
  4667  1594  0709               	addwf	9,w
  4668  1595  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4669  1596  0086               	movwf	6
  4670  1597  3001               	movlw	1	; select bank2/3
  4671  1598  0087               	movwf	7
  4672  1599  3F40               	moviw [0]fsr1
  4673  159A  0021               	movlb	1	; select bank1
  4674  159B  00AF               	movwf	USBStdGetStatusHandler@p^(0+128)
  4675  159C  3F41               	moviw [1]fsr1
  4676  159D  2DA9               	goto	L2
  4677  159E                     l6005:	
  4678                           ;usb_device.c: 2166: }
  4679                           
  4680                           
  4681                           ;usb_device.c: 2167: else
  4682                           ;usb_device.c: 2168: {
  4683                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  4684  159E  0020               	movlb	0	; select bank0
  4685  159F  0854               	movf	84,w	;volatile
  4686  15A0  390F               	andlw	15
  4687  15A1  0709               	addwf	9,w
  4688  15A2  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  4689  15A3  0086               	movwf	6
  4690  15A4  0187               	clrf	7
  4691  15A5  3F40               	moviw [0]fsr1
  4692  15A6  0021               	movlb	1	; select bank1
  4693  15A7  00AF               	movwf	USBStdGetStatusHandler@p^(0+128)
  4694  15A8  3F41               	moviw [1]fsr1
  4695  15A9                     L2:	
  4696  15A9  00B0               	movwf	(USBStdGetStatusHandler@p+1)^(0+128)
  4697                           
  4698                           ;usb_device.c: 2170: }
  4699                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  4700  15AA  082F               	movf	USBStdGetStatusHandler@p^(0+128),w
  4701  15AB  0086               	movwf	6
  4702  15AC  0830               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  4703  15AD  0087               	movwf	7
  4704  15AE  1F81               	btfss	1,7
  4705  15AF  2DC8               	goto	l578
  4706  15B0  082F               	movf	USBStdGetStatusHandler@p^(0+128),w
  4707  15B1  0086               	movwf	6
  4708  15B2  0830               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  4709  15B3  0087               	movwf	7
  4710  15B4  1D01               	btfss	1,2
  4711  15B5  2DC8               	goto	l578
  4712                           
  4713                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  4714  15B6  3001               	movlw	1
  4715  15B7  00AE               	movwf	??_USBStdGetStatusHandler^(0+128)
  4716  15B8  082E               	movf	??_USBStdGetStatusHandler^(0+128),w
  4717  15B9  0020               	movlb	0	; select bank0
  4718  15BA  00E0               	movwf	96	;volatile
  4719                           
  4720                           ;usb_device.c: 2175: }
  4721                           ;usb_device.c: 2176: }
  4722                           
  4723                           ;usb_device.c: 2174: break;
  4724  15BB  2DC8               	goto	l578
  4725  15BC                     l6015:	
  4726  15BC  0850               	movf	80,w	;volatile
  4727  15BD  391F               	andlw	31
  4728                           
  4729                           ; Switch size 1, requested type "space"
  4730                           ; Number of cases is 3, Range of values is 0 to 2
  4731                           ; switch strategies available:
  4732                           ; Name         Instructions Cycles
  4733                           ; simple_byte           10     6 (average)
  4734                           ; direct_byte           12     6 (fixed)
  4735                           ; jumptable            260     6 (fixed)
  4736                           ;	Chosen strategy is simple_byte
  4737  15BE  3A00               	xorlw	0	; case 0
  4738  15BF  1903               	skipnz
  4739  15C0  2D81               	goto	l575
  4740  15C1  3A01               	xorlw	1	; case 1
  4741  15C2  1903               	skipnz
  4742  15C3  2D8A               	goto	l579
  4743  15C4  3A03               	xorlw	3	; case 2
  4744  15C5  1903               	skipnz
  4745  15C6  2D8D               	goto	l580
  4746  15C7  2DC8               	goto	l578
  4747  15C8                     l578:	
  4748                           
  4749                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  4750  15C8  0021               	movlb	1	; select bank1
  4751  15C9  1FD5               	btfss	(_inPipes^(0+128)+2),7	;volatile
  4752  15CA  0008               	return
  4753                           
  4754                           ;usb_device.c: 2179: {
  4755                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  4756  15CB  3060               	movlw	96
  4757  15CC  00D3               	movwf	_inPipes^(0+128)	;volatile
  4758  15CD  3000               	movlw	0
  4759  15CE  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4760                           
  4761                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4762  15CF  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4763                           
  4764                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  4765  15D0  3002               	movlw	2
  4766  15D1  00AE               	movwf	??_USBStdGetStatusHandler^(0+128)
  4767  15D2  082E               	movf	??_USBStdGetStatusHandler^(0+128),w
  4768  15D3  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4769  15D4  0008               	return
  4770  15D5                     __end_of_USBStdGetStatusHandler:	
  4771                           
  4772                           	psect	text15
  4773  0BA0                     __ptext15:	
  4774 ;; *************** function _USBStdGetDscHandler *****************
  4775 ;; Defined at:
  4776 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;		None
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;		None
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;Total ram usage:        3 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:   10
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_USBCheckStdRequest
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           
  4805                           ;psect for function _USBStdGetDscHandler
  4806  0BA0                     _USBStdGetDscHandler:	
  4807                           
  4808                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  4809                           
  4810                           ;incstack = 0
  4811                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  4812  0BA0  3080               	movlw	128
  4813  0BA1  0020               	movlb	0	; select bank0
  4814  0BA2  0650               	xorwf	80,w	;volatile
  4815  0BA3  1D03               	btfss	3,2
  4816  0BA4  0008               	return
  4817                           
  4818                           ;usb_device.c: 2046: {
  4819                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  4820  0BA5  30C0               	movlw	192
  4821  0BA6  0021               	movlb	1	; select bank1
  4822  0BA7  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4823  0BA8  082E               	movf	??_USBStdGetDscHandler^(0+128),w
  4824  0BA9  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
  4825                           
  4826                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  4827  0BAA  2C12               	goto	l5993
  4828  0BAB                     l5967:	
  4829                           ;usb_device.c: 2050: {
  4830                           ;usb_device.c: 2051: case 0x01:
  4831                           
  4832                           
  4833                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  4834  0BAB  307D               	movlw	low (_device_dsc| (0+32768))
  4835  0BAC  0021               	movlb	1	; select bank1
  4836  0BAD  00D3               	movwf	_inPipes^(0+128)	;volatile
  4837  0BAE  3098               	movlw	high (_device_dsc| (0+32768))
  4838  0BAF  00D4               	movwf	(_inPipes^(0+128)+1)	;volatile
  4839                           
  4840                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  4841  0BB0  3000               	movlw	0
  4842  0BB1  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  4843  0BB2  3012               	movlw	18
  4844  0BB3  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4845                           
  4846                           ;usb_device.c: 2058: break;
  4847  0BB4  0008               	return
  4848  0BB5                     l5971:	
  4849                           ;usb_device.c: 2059: case 0x02:
  4850                           
  4851                           
  4852                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  4853  0BB5  0020               	movlb	0	; select bank0
  4854  0BB6  0852               	movf	82,w	;volatile
  4855  0BB7  1D03               	btfss	3,2
  4856  0BB8  2BE8               	goto	l5979
  4857                           
  4858                           ;usb_device.c: 2064: {
  4859                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  4860  0BB9  0852               	movf	82,w	;volatile
  4861  0BBA  0021               	movlb	1	; select bank1
  4862  0BBB  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4863  0BBC  01AF               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  4864  0BBD  35AE               	lslf	??_USBStdGetDscHandler^(0+128),f
  4865  0BBE  0DAF               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  4866  0BBF  3099               	movlw	low (_USB_CD_Ptr| (0+32768))
  4867  0BC0  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4868  0BC1  0084               	movwf	4
  4869  0BC2  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
  4870  0BC3  3D2F               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  4871  0BC4  0085               	movwf	5
  4872  0BC5  3F00               	moviw [0]fsr0
  4873  0BC6  00D3               	movwf	_inPipes^(0+128)	;volatile
  4874  0BC7  3F01               	moviw [1]fsr0
  4875  0BC8  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4876                           
  4877                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  4878  0BC9  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  4879  0BCA  00AF               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  4880  0BCB  0853               	movf	_inPipes^(0+128),w	;volatile
  4881  0BCC  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4882  0BCD  3002               	movlw	2
  4883  0BCE  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4884  0BCF  0084               	movwf	4
  4885  0BD0  082F               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  4886  0BD1  1803               	skipnc
  4887  0BD2  0A2F               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  4888  0BD3  0085               	movwf	5
  4889  0BD4  0800               	movf	0,w	;code access
  4890  0BD5  00B0               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  4891  0BD6  0830               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  4892  0BD7  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4893                           
  4894                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  4895  0BD8  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  4896  0BD9  00AF               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  4897  0BDA  0853               	movf	_inPipes^(0+128),w	;volatile
  4898  0BDB  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4899  0BDC  3003               	movlw	3
  4900  0BDD  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4901  0BDE  0084               	movwf	4
  4902  0BDF  082F               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  4903  0BE0  1803               	skipnc
  4904  0BE1  0A2F               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  4905  0BE2  0085               	movwf	5
  4906  0BE3  0800               	movf	0,w	;code access
  4907  0BE4  00B0               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  4908  0BE5  0830               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  4909  0BE6  00D7               	movwf	(_inPipes^(0+128)+4)	;volatile
  4910                           
  4911                           ;usb_device.c: 2076: }
  4912  0BE7  0008               	return
  4913  0BE8                     l5979:	
  4914                           
  4915                           ;usb_device.c: 2077: else
  4916                           ;usb_device.c: 2078: {
  4917                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  4918  0BE8  0021               	movlb	1	; select bank1
  4919  0BE9  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4920                           
  4921                           ;usb_device.c: 2080: }
  4922                           ;usb_device.c: 2081: break;
  4923  0BEA  0008               	return
  4924  0BEB                     l5981:	
  4925                           ;usb_device.c: 2082: case 0x03:
  4926                           
  4927                           
  4928                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  4929  0BEB  3003               	movlw	3
  4930  0BEC  0020               	movlb	0	; select bank0
  4931  0BED  0252               	subwf	82,w	;volatile
  4932  0BEE  1803               	skipnc
  4933  0BEF  2C0C               	goto	l5987
  4934                           
  4935                           ;usb_device.c: 2087: {
  4936                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  4937  0BF0  0852               	movf	82,w	;volatile
  4938  0BF1  0021               	movlb	1	; select bank1
  4939  0BF2  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4940  0BF3  01AF               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  4941  0BF4  35AE               	lslf	??_USBStdGetDscHandler^(0+128),f
  4942  0BF5  0DAF               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  4943  0BF6  308F               	movlw	low (_USB_SD_Ptr| (0+32768))
  4944  0BF7  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4945  0BF8  0084               	movwf	4
  4946  0BF9  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
  4947  0BFA  3D2F               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  4948  0BFB  0085               	movwf	5
  4949  0BFC  3F00               	moviw [0]fsr0
  4950  0BFD  00D3               	movwf	_inPipes^(0+128)	;volatile
  4951  0BFE  3F01               	moviw [1]fsr0
  4952  0BFF  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4953                           
  4954                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  4955  0C00  0853               	movf	_inPipes^(0+128),w	;volatile
  4956  0C01  0084               	movwf	4
  4957  0C02  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  4958  0C03  0085               	movwf	5
  4959  0C04  0800               	movf	0,w	;code access
  4960  0C05  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4961  0C06  01AF               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  4962  0C07  082E               	movf	??_USBStdGetDscHandler^(0+128),w
  4963  0C08  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4964  0C09  082F               	movf	(??_USBStdGetDscHandler+1)^(0+128),w
  4965  0C0A  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  4966                           
  4967                           ;usb_device.c: 2092: }
  4968  0C0B  0008               	return
  4969  0C0C                     l5987:	
  4970                           
  4971                           ;usb_device.c: 2102: else
  4972                           ;usb_device.c: 2103: {
  4973                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  4974  0C0C  0021               	movlb	1	; select bank1
  4975  0C0D  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4976                           
  4977                           ;usb_device.c: 2105: }
  4978                           ;usb_device.c: 2106: break;
  4979  0C0E  0008               	return
  4980  0C0F                     l5989:	
  4981                           ;usb_device.c: 2107: default:
  4982                           
  4983                           
  4984                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  4985  0C0F  0021               	movlb	1	; select bank1
  4986  0C10  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4987                           
  4988                           ;usb_device.c: 2110: }
  4989                           
  4990                           ;usb_device.c: 2109: break;
  4991  0C11  0008               	return
  4992  0C12                     l5993:	
  4993  0C12  0020               	movlb	0	; select bank0
  4994  0C13  0853               	movf	83,w	;volatile
  4995                           
  4996                           ; Switch size 1, requested type "space"
  4997                           ; Number of cases is 3, Range of values is 1 to 3
  4998                           ; switch strategies available:
  4999                           ; Name         Instructions Cycles
  5000                           ; simple_byte           10     6 (average)
  5001                           ; direct_byte           15     9 (fixed)
  5002                           ; jumptable            263     9 (fixed)
  5003                           ;	Chosen strategy is simple_byte
  5004  0C14  3A01               	xorlw	1	; case 1
  5005  0C15  1903               	skipnz
  5006  0C16  2BAB               	goto	l5967
  5007  0C17  3A03               	xorlw	3	; case 2
  5008  0C18  1903               	skipnz
  5009  0C19  2BB5               	goto	l5971
  5010  0C1A  3A01               	xorlw	1	; case 3
  5011  0C1B  1903               	skipnz
  5012  0C1C  2BEB               	goto	l5981
  5013  0C1D  2C0F               	goto	l5989
  5014  0C1E  0008               	return
  5015  0C1F                     __end_of_USBStdGetDscHandler:	
  5016                           
  5017                           	psect	text16
  5018  004D                     __ptext16:	
  5019 ;; *************** function _USBStdFeatureReqHandler *****************
  5020 ;; Defined at:
  5021 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;		None
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;  p               2    3[BANK2 ] PTR struct __BDT
  5026 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  5027 ;;  pUEP            2    0[BANK2 ] PTR unsigned char 
  5028 ;;		 -> UEP0(1), 
  5029 ;;  current_ep_d    1    2[BANK2 ] struct .
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Totals:         0       0       2       5       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;Total ram usage:        7 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:   14
  5046 ;; This function calls:
  5047 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5048 ;; This function is called by:
  5049 ;;		_USBCheckStdRequest
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function _USBStdFeatureReqHandler
  5055  004D                     _USBStdFeatureReqHandler:	
  5056                           
  5057                           ;usb_device.c: 2756: BDT_ENTRY *p;
  5058                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  5059                           ;usb_device.c: 2761: unsigned char* pUEP;
  5060                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  5061                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  5062                           
  5063                           ;incstack = 0
  5064 ;; hardware stack exceeded
  5065                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5066  004D  0020               	movlb	0	; select bank0
  5067  004E  0352               	decf	82,w	;volatile
  5068  004F  1D03               	btfss	3,2
  5069  0050  2866               	goto	l6035
  5070  0051  0850               	movf	80,w	;volatile
  5071  0052  391F               	andlw	31
  5072  0053  3A00               	xorlw	0
  5073  0054  1D03               	skipz
  5074  0055  2866               	goto	l6035
  5075                           
  5076                           ;usb_device.c: 2801: {
  5077                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  5078  0056  0021               	movlb	1	; select bank1
  5079  0057  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5080                           
  5081                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  5082  0058  3003               	movlw	3
  5083  0059  0020               	movlb	0	; select bank0
  5084  005A  0651               	xorwf	81,w	;volatile
  5085  005B  1D03               	btfss	3,2
  5086  005C  2864               	goto	l6033
  5087                           
  5088                           ;usb_device.c: 2804: RemoteWakeup = 1;
  5089  005D  3001               	movlw	1
  5090  005E  0021               	movlb	1	; select bank1
  5091  005F  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5092  0060  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5093  0061  0022               	movlb	2	; select bank2
  5094  0062  00CE               	movwf	_RemoteWakeup^(0+256)	;volatile
  5095  0063  2866               	goto	l6035
  5096  0064                     l6033:	
  5097                           
  5098                           ;usb_device.c: 2805: else
  5099                           ;usb_device.c: 2806: RemoteWakeup = 0;
  5100  0064  0022               	movlb	2	; select bank2
  5101  0065  01CE               	clrf	_RemoteWakeup^(0+256)	;volatile
  5102  0066                     l6035:	
  5103                           
  5104                           ;usb_device.c: 2807: }
  5105                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  5106                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  5107                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  5108                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  5109  0066  0020               	movlb	0	; select bank0
  5110  0067  0852               	movf	82,w	;volatile
  5111  0068  1D03               	btfss	3,2
  5112  0069  0008               	return
  5113  006A  0850               	movf	80,w	;volatile
  5114  006B  391F               	andlw	31
  5115  006C  3A02               	xorlw	2
  5116  006D  1D03               	skipz
  5117  006E  0008               	return
  5118  006F  0854               	movf	84,w	;volatile
  5119  0070  390F               	andlw	15
  5120  0071  3A00               	xorlw	0
  5121  0072  1903               	skipnz
  5122  0073  0008               	return
  5123  0074  0854               	movf	84,w	;volatile
  5124  0075  390F               	andlw	15
  5125  0076  0021               	movlb	1	; select bank1
  5126  0077  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5127  0078  3003               	movlw	3
  5128  0079  0242               	subwf	??_USBStdFeatureReqHandler^(0+128),w
  5129  007A  1803               	skipnc
  5130  007B  0008               	return
  5131  007C  3020               	movlw	32
  5132  007D  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
  5133  007E  1D03               	btfss	3,2
  5134  007F  0008               	return
  5135                           
  5136                           ;usb_device.c: 2814: {
  5137                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  5138  0080  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5139                           
  5140                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  5141  0081  0020               	movlb	0	; select bank0
  5142  0082  1BD4               	btfsc	84,7	;volatile
  5143  0083  2895               	goto	l6049
  5144                           
  5145                           ;usb_device.c: 2821: {
  5146                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5147  0084  0854               	movf	84,w	;volatile
  5148  0085  390F               	andlw	15
  5149  0086  0709               	addwf	9,w
  5150  0087  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5151  0088  0086               	movwf	6
  5152  0089  3001               	movlw	1	; select bank2/3
  5153  008A  0087               	movwf	7
  5154  008B  3F40               	moviw [0]fsr1
  5155  008C  0022               	movlb	2	; select bank2
  5156  008D  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5157  008E  3F41               	moviw [1]fsr1
  5158  008F  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5159                           
  5160                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  5161  0090  0020               	movlb	0	; select bank0
  5162  0091  0854               	movf	84,w	;volatile
  5163  0092  390F               	andlw	15
  5164  0093  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5165  0094  28A5               	goto	L3
  5166  0095                     l6049:	
  5167                           ;usb_device.c: 2824: }
  5168                           
  5169                           
  5170                           ;usb_device.c: 2825: else
  5171                           ;usb_device.c: 2826: {
  5172                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5173  0095  0020               	movlb	0	; select bank0
  5174  0096  0854               	movf	84,w	;volatile
  5175  0097  390F               	andlw	15
  5176  0098  0709               	addwf	9,w
  5177  0099  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5178  009A  0086               	movwf	6
  5179  009B  0187               	clrf	7
  5180  009C  3F40               	moviw [0]fsr1
  5181  009D  0022               	movlb	2	; select bank2
  5182  009E  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5183  009F  3F41               	moviw [1]fsr1
  5184  00A0  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5185                           
  5186                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  5187  00A1  0020               	movlb	0	; select bank0
  5188  00A2  0854               	movf	84,w	;volatile
  5189  00A3  390F               	andlw	15
  5190  00A4  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5191  00A5                     L3:	
  5192  00A5  0086               	movwf	6
  5193  00A6  3001               	movlw	1	; select bank2/3
  5194  00A7  0087               	movwf	7
  5195  00A8  0801               	movf	1,w
  5196  00A9  0021               	movlb	1	; select bank1
  5197  00AA  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5198  00AB  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5199  00AC  0022               	movlb	2	; select bank2
  5200  00AD  00E9               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+256)
  5201                           
  5202                           ;usb_device.c: 2829: }
  5203                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  5204  00AE  1869               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+256),0
  5205  00AF  28C0               	goto	l6055
  5206                           
  5207                           ;usb_device.c: 2836: {
  5208                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  5209  00B0  30FB               	movlw	251
  5210  00B1  0021               	movlb	1	; select bank1
  5211  00B2  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5212  00B3  30FF               	movlw	255
  5213  00B4  00C3               	movwf	(??_USBStdFeatureReqHandler^(0+128)+1)
  5214  00B5  0022               	movlb	2	; select bank2
  5215  00B6  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5216  00B7  0021               	movlb	1	; select bank1
  5217  00B8  0542               	andwf	??_USBStdFeatureReqHandler^(0+128),w
  5218  00B9  0022               	movlb	2	; select bank2
  5219  00BA  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5220  00BB  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5221  00BC  0021               	movlb	1	; select bank1
  5222  00BD  0543               	andwf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  5223  00BE  0022               	movlb	2	; select bank2
  5224  00BF  28C5               	goto	L4
  5225  00C0                     l6055:	
  5226                           ;usb_device.c: 2838: }
  5227                           
  5228                           
  5229                           ;usb_device.c: 2839: else
  5230                           ;usb_device.c: 2840: {
  5231                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  5232  00C0  3004               	movlw	4
  5233  00C1  046A               	iorwf	USBStdFeatureReqHandler@p^(0+256),w
  5234  00C2  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5235  00C3  3000               	movlw	0
  5236  00C4  046B               	iorwf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5237  00C5                     L4:	
  5238  00C5  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5239                           
  5240                           ;usb_device.c: 2842: }
  5241                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  5242  00C6  0020               	movlb	0	; select bank0
  5243  00C7  1BD4               	btfsc	84,7	;volatile
  5244  00C8  28D6               	goto	l6061
  5245                           
  5246                           ;usb_device.c: 2848: {
  5247                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5248  00C9  0854               	movf	84,w	;volatile
  5249  00CA  390F               	andlw	15
  5250  00CB  0709               	addwf	9,w
  5251  00CC  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5252  00CD  0086               	movwf	6
  5253  00CE  3001               	movlw	1	; select bank2/3
  5254  00CF  0087               	movwf	7
  5255  00D0  0022               	movlb	2	; select bank2
  5256  00D1  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5257  00D2  3FC0               	movwi [0]fsr1
  5258  00D3  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5259  00D4  3FC1               	movwi [1]fsr1
  5260                           
  5261                           ;usb_device.c: 2850: }
  5262  00D5  28E2               	goto	l6063
  5263  00D6                     l6061:	
  5264                           
  5265                           ;usb_device.c: 2851: else
  5266                           ;usb_device.c: 2852: {
  5267                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5268  00D6  0020               	movlb	0	; select bank0
  5269  00D7  0854               	movf	84,w	;volatile
  5270  00D8  390F               	andlw	15
  5271  00D9  0709               	addwf	9,w
  5272  00DA  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5273  00DB  0086               	movwf	6
  5274  00DC  0187               	clrf	7
  5275  00DD  0022               	movlb	2	; select bank2
  5276  00DE  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5277  00DF  3FC0               	movwi [0]fsr1
  5278  00E0  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5279  00E1  3FC1               	movwi [1]fsr1
  5280  00E2                     l6063:	
  5281                           
  5282                           ;usb_device.c: 2854: }
  5283                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  5284  00E2  3003               	movlw	3
  5285  00E3  0020               	movlb	0	; select bank0
  5286  00E4  0651               	xorwf	81,w	;volatile
  5287  00E5  1D03               	btfss	3,2
  5288  00E6  2908               	goto	l6077
  5289                           
  5290                           ;usb_device.c: 2858: {
  5291                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  5292  00E7  0022               	movlb	2	; select bank2
  5293  00E8  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5294  00E9  0086               	movwf	6
  5295  00EA  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5296  00EB  0087               	movwf	7
  5297  00EC  1F81               	btfss	1,7
  5298  00ED  28FC               	goto	l6073
  5299                           
  5300                           ;usb_device.c: 2860: {
  5301                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  5302  00EE  0020               	movlb	0	; select bank0
  5303  00EF  1BD4               	btfsc	84,7	;volatile
  5304  00F0  28F5               	goto	l6071
  5305                           
  5306                           ;usb_device.c: 2864: {
  5307                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5308  00F1  0854               	movf	84,w	;volatile
  5309  00F2  390F               	andlw	15
  5310  00F3  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5311  00F4  28F8               	goto	L5
  5312  00F5                     l6071:	
  5313                           ;usb_device.c: 2866: }
  5314                           
  5315                           
  5316                           ;usb_device.c: 2867: else
  5317                           ;usb_device.c: 2868: {
  5318                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5319  00F5  0854               	movf	84,w	;volatile
  5320  00F6  390F               	andlw	15
  5321  00F7  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5322  00F8                     L5:	
  5323  00F8  0086               	movwf	6
  5324  00F9  3001               	movlw	1	; select bank2/3
  5325  00FA  0087               	movwf	7
  5326  00FB  1481               	bsf	1,1
  5327  00FC                     l6073:	
  5328                           
  5329                           ;usb_device.c: 2870: }
  5330                           ;usb_device.c: 2871: }
  5331                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  5332  00FC  0022               	movlb	2	; select bank2
  5333  00FD  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5334  00FE  0086               	movwf	6
  5335  00FF  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5336  0100  0087               	movwf	7
  5337  0101  1501               	bsf	1,2
  5338                           
  5339                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  5340  0102  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5341  0103  0086               	movwf	6
  5342  0104  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5343  0105  0087               	movwf	7
  5344  0106  1781               	bsf	1,7
  5345                           
  5346                           ;usb_device.c: 2876: }
  5347  0107  0008               	return
  5348  0108                     l6077:	
  5349                           
  5350                           ;usb_device.c: 2877: else
  5351                           ;usb_device.c: 2878: {
  5352                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  5353  0108  3004               	movlw	4
  5354  0109  0022               	movlb	2	; select bank2
  5355  010A  066A               	xorwf	USBStdFeatureReqHandler@p^(0+256),w
  5356  010B  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5357  010C  3000               	movlw	0
  5358  010D  066B               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5359  010E  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5360                           
  5361                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  5362  010F  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5363  0110  0086               	movwf	6
  5364  0111  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5365  0112  0087               	movwf	7
  5366  0113  1F81               	btfss	1,7
  5367  0114  293B               	goto	l6087
  5368                           
  5369                           ;usb_device.c: 2885: {
  5370                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  5371  0115  307F               	movlw	127
  5372  0116  0021               	movlb	1	; select bank1
  5373  0117  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5374  0118  0022               	movlb	2	; select bank2
  5375  0119  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5376  011A  0086               	movwf	6
  5377  011B  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5378  011C  0087               	movwf	7
  5379  011D  0021               	movlb	1	; select bank1
  5380  011E  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5381  011F  0581               	andwf	1,f
  5382                           
  5383                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  5384  0120  0022               	movlb	2	; select bank2
  5385  0121  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5386  0122  0086               	movwf	6
  5387  0123  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5388  0124  0087               	movwf	7
  5389  0125  1701               	bsf	1,6
  5390                           
  5391                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5392  0126  3000               	movlw	0
  5393  0127  0021               	movlb	1	; select bank1
  5394  0128  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5395  0129  3005               	movlw	5
  5396  012A  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5397  012B  0022               	movlb	2	; select bank2
  5398  012C  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5399  012D  0021               	movlb	1	; select bank1
  5400  012E  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5401  012F  0022               	movlb	2	; select bank2
  5402  0130  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5403  0131  0021               	movlb	1	; select bank1
  5404  0132  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5405  0133  3002               	movlw	2
  5406  0134  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5407  0135  3000               	movlw	0
  5408  0136  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  5409  0137  3192  224F  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5410                           
  5411                           ;usb_device.c: 2891: }
  5412  013A  2941               	goto	l6089
  5413  013B                     l6087:	
  5414                           
  5415                           ;usb_device.c: 2892: else
  5416                           ;usb_device.c: 2893: {
  5417                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  5418  013B  0022               	movlb	2	; select bank2
  5419  013C  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5420  013D  0086               	movwf	6
  5421  013E  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5422  013F  0087               	movwf	7
  5423  0140  1701               	bsf	1,6
  5424  0141                     l6089:	
  5425                           
  5426                           ;usb_device.c: 2896: }
  5427                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  5428  0141  3004               	movlw	4
  5429  0142  0022               	movlb	2	; select bank2
  5430  0143  066A               	xorwf	USBStdFeatureReqHandler@p^(0+256),w
  5431  0144  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5432  0145  3000               	movlw	0
  5433  0146  066B               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5434  0147  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5435                           
  5436                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  5437  0148  18E9               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+256),1
  5438  0149  2950               	goto	l671
  5439  014A  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5440  014B  0086               	movwf	6
  5441  014C  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5442  014D  0087               	movwf	7
  5443  014E  1F81               	btfss	1,7
  5444  014F  297D               	goto	l6101
  5445  0150                     l671:	
  5446                           
  5447                           ;usb_device.c: 2907: {
  5448                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  5449  0150  0020               	movlb	0	; select bank0
  5450  0151  1BD4               	btfsc	84,7	;volatile
  5451  0152  2957               	goto	l6097
  5452                           
  5453                           ;usb_device.c: 2909: {
  5454                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5455  0153  0854               	movf	84,w	;volatile
  5456  0154  390F               	andlw	15
  5457  0155  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5458  0156  295A               	goto	L6
  5459  0157                     l6097:	
  5460                           ;usb_device.c: 2911: }
  5461                           
  5462                           
  5463                           ;usb_device.c: 2912: else
  5464                           ;usb_device.c: 2913: {
  5465                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5466  0157  0854               	movf	84,w	;volatile
  5467  0158  390F               	andlw	15
  5468  0159  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5469  015A                     L6:	
  5470  015A  0086               	movwf	6
  5471  015B  3001               	movlw	1	; select bank2/3
  5472  015C  0087               	movwf	7
  5473  015D  1081               	bcf	1,1
  5474                           
  5475                           ;usb_device.c: 2915: }
  5476                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5477  015E  303B               	movlw	59
  5478  015F  0021               	movlb	1	; select bank1
  5479  0160  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5480  0161  0022               	movlb	2	; select bank2
  5481  0162  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5482  0163  0086               	movwf	6
  5483  0164  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5484  0165  0087               	movwf	7
  5485  0166  0021               	movlb	1	; select bank1
  5486  0167  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5487  0168  0581               	andwf	1,f
  5488                           
  5489                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5490  0169  3000               	movlw	0
  5491  016A  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5492  016B  3005               	movlw	5
  5493  016C  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5494  016D  0022               	movlb	2	; select bank2
  5495  016E  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5496  016F  0021               	movlb	1	; select bank1
  5497  0170  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5498  0171  0022               	movlb	2	; select bank2
  5499  0172  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5500  0173  0021               	movlb	1	; select bank1
  5501  0174  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5502  0175  3002               	movlw	2
  5503  0176  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5504  0177  3000               	movlw	0
  5505  0178  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  5506  0179  3192  224F  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5507                           
  5508                           ;usb_device.c: 2921: }
  5509  017C  2988               	goto	l6103
  5510  017D                     l6101:	
  5511                           
  5512                           ;usb_device.c: 2922: else
  5513                           ;usb_device.c: 2923: {
  5514                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5515  017D  303B               	movlw	59
  5516  017E  0021               	movlb	1	; select bank1
  5517  017F  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5518  0180  0022               	movlb	2	; select bank2
  5519  0181  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5520  0182  0086               	movwf	6
  5521  0183  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5522  0184  0087               	movwf	7
  5523  0185  0021               	movlb	1	; select bank1
  5524  0186  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5525  0187  0581               	andwf	1,f
  5526  0188                     l6103:	
  5527                           
  5528                           ;usb_device.c: 2926: }
  5529                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  5530  0188  0020               	movlb	0	; select bank0
  5531  0189  0854               	movf	84,w	;volatile
  5532  018A  390F               	andlw	15
  5533  018B  3E98               	addlw	152
  5534  018C  0021               	movlb	1	; select bank1
  5535  018D  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5536  018E  01C3               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
  5537  018F  300E               	movlw	14
  5538  0190  3DC3               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
  5539  0191  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5540  0192  0022               	movlb	2	; select bank2
  5541  0193  00E7               	movwf	USBStdFeatureReqHandler@pUEP^(0+256)
  5542  0194  0021               	movlb	1	; select bank1
  5543  0195  0843               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  5544  0196  0022               	movlb	2	; select bank2
  5545  0197  00E8               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+256)
  5546                           
  5547                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  5548  0198  30FE               	movlw	254
  5549  0199  0021               	movlb	1	; select bank1
  5550  019A  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5551  019B  0022               	movlb	2	; select bank2
  5552  019C  0867               	movf	USBStdFeatureReqHandler@pUEP^(0+256),w
  5553  019D  0086               	movwf	6
  5554  019E  0868               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+256),w
  5555  019F  0087               	movwf	7
  5556  01A0  0021               	movlb	1	; select bank1
  5557  01A1  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5558  01A2  0581               	andwf	1,f
  5559  01A3  0008               	return
  5560  01A4                     __end_of_USBStdFeatureReqHandler:	
  5561                           
  5562                           	psect	text17
  5563  124F                     __ptext17:	
  5564 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  5565 ;; Defined at:
  5566 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  event           2   28[BANK1 ] enum E34
  5569 ;;  pdata           2   30[BANK1 ] PTR void 
  5570 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
  5571 ;;		 -> NULL(0), 
  5572 ;;  size            2   32[BANK1 ] unsigned int 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  1    wreg      unsigned char 
  5577 ;; Registers used:
  5578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5584 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;Total ram usage:        6 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:   13
  5591 ;; This function calls:
  5592 ;;		_CDCInitEP
  5593 ;;		_USBCheckCDCRequest
  5594 ;; This function is called by:
  5595 ;;		_USBDeviceTasks
  5596 ;;		_USBStdSetCfgHandler
  5597 ;;		_USBSuspend
  5598 ;;		_USBWakeFromSuspend
  5599 ;;		_USBCtrlTrfSetupHandler
  5600 ;;		_USBCheckStdRequest
  5601 ;;		_USBStdFeatureReqHandler
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           
  5606                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  5607  124F                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  5608                           
  5609                           ;usb_device_events.c: 51: switch( (int) event )
  5610                           
  5611                           ;incstack = 0
  5612                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5613  124F  2A56               	goto	l5775
  5614  1250                     l5769:	
  5615                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
  5616                           
  5617                           ;usb_device_events.c: 73: break;
  5618                           
  5619                           ;usb_device_events.c: 68: case EVENT_RESUME:
  5620                           
  5621                           ;usb_device_events.c: 66: break;
  5622                           
  5623                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
  5624                           
  5625                           ;usb_device_events.c: 57: break;
  5626                           
  5627                           ;usb_device_events.c: 56: case EVENT_SOF:
  5628                           
  5629                           ;usb_device_events.c: 54: break;
  5630                           
  5631                           ;usb_device_events.c: 52: {
  5632                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
  5633                           
  5634                           
  5635                           ;usb_device_events.c: 76: CDCInitEP();
  5636  1250  3192  22EB         	fcall	_CDCInitEP
  5637                           
  5638                           ;usb_device_events.c: 80: break;
  5639                           
  5640                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
  5641                           
  5642                           ;usb_device_events.c: 77: break;
  5643  1252  0008               	return
  5644  1253                     l5771:	
  5645                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
  5646                           
  5647                           
  5648                           ;usb_device_events.c: 85: USBCheckCDCRequest();
  5649  1253  3188  2098         	fcall	_USBCheckCDCRequest
  5650                           
  5651                           ;usb_device_events.c: 96: }
  5652                           
  5653                           ;usb_device_events.c: 95: break;
  5654                           
  5655                           ;usb_device_events.c: 94: default:
  5656                           
  5657                           ;usb_device_events.c: 92: break;
  5658                           
  5659                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
  5660                           
  5661                           ;usb_device_events.c: 89: break;
  5662                           
  5663                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
  5664                           
  5665                           ;usb_device_events.c: 86: break;
  5666  1255  0008               	return
  5667  1256                     l5775:	
  5668                           
  5669                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5670                           ; Switch size 1, requested type "space"
  5671                           ; Number of cases is 2, Range of values is 0 to 127
  5672                           ; switch strategies available:
  5673                           ; Name         Instructions Cycles
  5674                           ; simple_byte            7     4 (average)
  5675                           ; direct_byte          262     6 (fixed)
  5676                           ; jumptable            260     6 (fixed)
  5677                           ;	Chosen strategy is simple_byte
  5678  1256  0021               	movlb	1	; select bank1
  5679  1257  083D               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
  5680  1258  3A00               	xorlw	0	; case 0
  5681  1259  1903               	skipnz
  5682  125A  2A5F               	goto	l7239
  5683  125B  3A7F               	xorlw	127	; case 127
  5684  125C  1903               	skipnz
  5685  125D  2A79               	goto	l7241
  5686  125E  2A7E               	goto	l287
  5687  125F                     l7239:	
  5688                           
  5689                           ; Switch size 1, requested type "space"
  5690                           ; Number of cases is 8, Range of values is 1 to 117
  5691                           ; switch strategies available:
  5692                           ; Name         Instructions Cycles
  5693                           ; simple_byte           25    13 (average)
  5694                           ; direct_byte          243     9 (fixed)
  5695                           ; jumptable            263     9 (fixed)
  5696                           ;	Chosen strategy is simple_byte
  5697  125F  083C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  5698  1260  3A01               	xorlw	1	; case 1
  5699  1261  1903               	skipnz
  5700  1262  2A50               	goto	l5769
  5701  1263  3A03               	xorlw	3	; case 2
  5702  1264  1903               	skipnz
  5703  1265  2A7E               	goto	l287
  5704  1266  3A01               	xorlw	1	; case 3
  5705  1267  1903               	skipnz
  5706  1268  2A53               	goto	l5771
  5707  1269  3A06               	xorlw	6	; case 5
  5708  126A  1903               	skipnz
  5709  126B  2A7E               	goto	l287
  5710  126C  3A77               	xorlw	119	; case 114
  5711  126D  1903               	skipnz
  5712  126E  2A7E               	goto	l287
  5713  126F  3A01               	xorlw	1	; case 115
  5714  1270  1903               	skipnz
  5715  1271  2A7E               	goto	l287
  5716  1272  3A07               	xorlw	7	; case 116
  5717  1273  1903               	skipnz
  5718  1274  2A7E               	goto	l287
  5719  1275  3A01               	xorlw	1	; case 117
  5720  1276  1903               	skipnz
  5721  1277  2A7E               	goto	l287
  5722  1278  2A7E               	goto	l287
  5723  1279                     l7241:	
  5724                           
  5725                           ; Switch size 1, requested type "space"
  5726                           ; Number of cases is 1, Range of values is 255 to 255
  5727                           ; switch strategies available:
  5728                           ; Name         Instructions Cycles
  5729                           ; simple_byte            4     3 (average)
  5730                           ; direct_byte            7     5 (fixed)
  5731                           ; jumptable            263     9 (fixed)
  5732                           ;	Chosen strategy is simple_byte
  5733  1279  083C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  5734  127A  3AFF               	xorlw	255	; case 255
  5735  127B  1903               	skipnz
  5736  127C  2A7E               	goto	l287
  5737  127D  2A7E               	goto	l287
  5738  127E                     l287:	
  5739                           ;usb_device_events.c: 97: return 1;
  5740                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  5741                           
  5742  127E  0008               	return
  5743  127F                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  5744                           
  5745                           	psect	text18
  5746  0898                     __ptext18:	
  5747 ;; *************** function _USBCheckCDCRequest *****************
  5748 ;; Defined at:
  5749 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;		None
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;		None
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;Total ram usage:        1 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:   10
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           
  5778                           ;psect for function _USBCheckCDCRequest
  5779  0898                     _USBCheckCDCRequest:	
  5780                           
  5781                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
  5782                           
  5783                           ;incstack = 0
  5784                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  5785  0898  0020               	movlb	0	; select bank0
  5786  0899  0850               	movf	80,w	;volatile
  5787  089A  391F               	andlw	31
  5788  089B  3A01               	xorlw	1
  5789  089C  1D03               	btfss	3,2
  5790  089D  0008               	return
  5791                           
  5792                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
  5793  089E  0E50               	swapf	80,w	;volatile
  5794  089F  0C89               	rrf	9,f
  5795  08A0  3903               	andlw	3
  5796  08A1  3A01               	xorlw	1
  5797  08A2  1D03               	btfss	3,2
  5798  08A3  0008               	return
  5799                           
  5800                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
  5801                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
  5802  08A4  0854               	movf	84,w	;volatile
  5803  08A5  1903               	btfsc	3,2
  5804  08A6  28E6               	goto	l5747
  5805  08A7  0354               	decf	84,w	;volatile
  5806  08A8  1D03               	btfss	3,2
  5807  08A9  0008               	return
  5808  08AA  28E6               	goto	l5747
  5809  08AB                     l5717:	
  5810                           ;usb_device_cdc.c: 166: {
  5811                           ;usb_device_cdc.c: 168: case 0x00:
  5812                           
  5813                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
  5814                           
  5815                           
  5816                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  5817  08AB  3056               	movlw	low _dummy_encapsulated_cmd_response
  5818  08AC  0021               	movlb	1	; select bank1
  5819  08AD  00D3               	movwf	_inPipes^(0+128)	;volatile
  5820  08AE  3001               	movlw	high _dummy_encapsulated_cmd_response
  5821  08AF  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5822                           
  5823                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
  5824  08B0  3000               	movlw	0
  5825  08B1  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5826  08B2  3008               	movlw	8
  5827  08B3  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5828                           
  5829                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5830  08B4  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5831                           
  5832                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
  5833  08B5  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5834                           
  5835                           ;usb_device_cdc.c: 174: break;
  5836  08B6  0008               	return
  5837  08B7                     l5725:	
  5838                           ;usb_device_cdc.c: 175: case 0x01:
  5839                           
  5840                           
  5841                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  5842  08B7  3056               	movlw	low _dummy_encapsulated_cmd_response
  5843  08B8  0021               	movlb	1	; select bank1
  5844  08B9  00D3               	movwf	_inPipes^(0+128)	;volatile
  5845  08BA  3001               	movlw	high _dummy_encapsulated_cmd_response
  5846  08BB  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5847                           
  5848                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
  5849  08BC  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5850                           
  5851                           ;usb_device_cdc.c: 179: break;
  5852  08BD  0008               	return
  5853  08BE                     l5729:	
  5854                           ;usb_device_cdc.c: 183: case 0x20:
  5855                           
  5856                           
  5857                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
  5858  08BE  0020               	movlb	0	; select bank0
  5859  08BF  0857               	movf	87,w	;volatile
  5860  08C0  0021               	movlb	1	; select bank1
  5861  08C1  00CA               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
  5862  08C2  0020               	movlb	0	; select bank0
  5863  08C3  0856               	movf	86,w	;volatile
  5864  08C4  0021               	movlb	1	; select bank1
  5865  08C5  00C9               	movwf	(_outPipes^(0+128)+3)	;volatile
  5866                           
  5867                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  5868  08C6  305E               	movlw	(low (_line_coding| (0+256)))& (0+255)
  5869  08C7  00AE               	movwf	??_USBCheckCDCRequest^(0+128)
  5870  08C8  082E               	movf	??_USBCheckCDCRequest^(0+128),w
  5871  08C9  00C6               	movwf	_outPipes^(0+128)	;volatile
  5872                           
  5873                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
  5874  08CA  01CB               	clrf	(low ((_outPipes| 0+5)))^(0+128)	;volatile
  5875  08CB  01CC               	clrf	((low ((_outPipes| 0+5))+1))^(0+128)	;volatile
  5876                           
  5877                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
  5878  08CC  17C8               	bsf	(_outPipes^(0+128)+2),7	;volatile
  5879                           
  5880                           ;usb_device_cdc.c: 188: break;
  5881  08CD  0008               	return
  5882  08CE                     l5735:	
  5883                           ;usb_device_cdc.c: 190: case 0x21:
  5884                           
  5885                           
  5886                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  5887  08CE  305E               	movlw	low _line_coding
  5888  08CF  0021               	movlb	1	; select bank1
  5889  08D0  00D3               	movwf	_inPipes^(0+128)	;volatile
  5890  08D1  3001               	movlw	high _line_coding
  5891  08D2  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5892  08D3  3000               	movlw	0
  5893  08D4  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5894  08D5  3007               	movlw	7
  5895  08D6  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5896  08D7  30C1               	movlw	193
  5897  08D8  00AE               	movwf	??_USBCheckCDCRequest^(0+128)
  5898  08D9  082E               	movf	??_USBCheckCDCRequest^(0+128),w
  5899  08DA  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
  5900                           
  5901                           ;usb_device_cdc.c: 195: break;
  5902  08DB  0008               	return
  5903  08DC                     l5741:	
  5904                           ;usb_device_cdc.c: 197: case 0x22:
  5905                           
  5906                           
  5907                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  5908  08DC  0020               	movlb	0	; select bank0
  5909  08DD  0852               	movf	82,w	;volatile
  5910  08DE  0021               	movlb	1	; select bank1
  5911  08DF  00AE               	movwf	??_USBCheckCDCRequest^(0+128)
  5912  08E0  082E               	movf	??_USBCheckCDCRequest^(0+128),w
  5913  08E1  0022               	movlb	2	; select bank2
  5914  08E2  00D1               	movwf	_control_signal_bitmap^(0+256)
  5915                           
  5916                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
  5917  08E3  0021               	movlb	1	; select bank1
  5918  08E4  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5919                           
  5920                           ;usb_device_cdc.c: 257: }
  5921                           
  5922                           ;usb_device_cdc.c: 256: break;
  5923                           
  5924                           ;usb_device_cdc.c: 255: default:
  5925                           
  5926                           ;usb_device_cdc.c: 231: break;
  5927  08E5  0008               	return
  5928  08E6                     l5747:	
  5929  08E6  0020               	movlb	0	; select bank0
  5930  08E7  0851               	movf	81,w	;volatile
  5931                           
  5932                           ; Switch size 1, requested type "space"
  5933                           ; Number of cases is 5, Range of values is 0 to 34
  5934                           ; switch strategies available:
  5935                           ; Name         Instructions Cycles
  5936                           ; simple_byte           16     9 (average)
  5937                           ; direct_byte           76     6 (fixed)
  5938                           ; jumptable            260     6 (fixed)
  5939                           ;	Chosen strategy is simple_byte
  5940  08E8  3A00               	xorlw	0	; case 0
  5941  08E9  1903               	skipnz
  5942  08EA  28AB               	goto	l5717
  5943  08EB  3A01               	xorlw	1	; case 1
  5944  08EC  1903               	skipnz
  5945  08ED  28B7               	goto	l5725
  5946  08EE  3A21               	xorlw	33	; case 32
  5947  08EF  1903               	skipnz
  5948  08F0  28BE               	goto	l5729
  5949  08F1  3A01               	xorlw	1	; case 33
  5950  08F2  1903               	skipnz
  5951  08F3  28CE               	goto	l5735
  5952  08F4  3A03               	xorlw	3	; case 34
  5953  08F5  1903               	skipnz
  5954  08F6  28DC               	goto	l5741
  5955  08F7  28F8               	goto	l46
  5956  08F8                     l46:	
  5957  08F8  0008               	return
  5958  08F9                     __end_of_USBCheckCDCRequest:	
  5959                           
  5960                           	psect	text19
  5961  12EB                     __ptext19:	
  5962 ;; *************** function _CDCInitEP *****************
  5963 ;; Defined at:
  5964 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      void 
  5971 ;; Registers used:
  5972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5981 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;Total ram usage:        1 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:   12
  5985 ;; This function calls:
  5986 ;;		_USBEnableEndpoint
  5987 ;;		_USBTransferOnePacket
  5988 ;; This function is called by:
  5989 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           
  5994                           ;psect for function _CDCInitEP
  5995  12EB                     _CDCInitEP:	
  5996                           
  5997                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
  5998                           
  5999                           ;incstack = 0
  6000                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6001  12EB  3000               	movlw	0
  6002  12EC  0022               	movlb	2	; select bank2
  6003  12ED  00E1               	movwf	(_line_coding+3)^(0+256)
  6004  12EE  3000               	movlw	0
  6005  12EF  00E0               	movwf	(_line_coding+2)^(0+256)
  6006  12F0  304B               	movlw	75
  6007  12F1  00DF               	movwf	(_line_coding+1)^(0+256)
  6008  12F2  3000               	movlw	0
  6009  12F3  00DE               	movwf	_line_coding^(0+256)
  6010                           
  6011                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
  6012  12F4  01E2               	clrf	(_line_coding^(0+256)+4)
  6013                           
  6014                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
  6015  12F5  01E3               	clrf	(_line_coding^(0+256)+5)
  6016                           
  6017                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
  6018  12F6  3008               	movlw	8
  6019  12F7  0021               	movlb	1	; select bank1
  6020  12F8  00BB               	movwf	??_CDCInitEP^(0+128)
  6021  12F9  083B               	movf	??_CDCInitEP^(0+128),w
  6022  12FA  0022               	movlb	2	; select bank2
  6023  12FB  00E4               	movwf	(_line_coding^(0+256)+6)
  6024                           
  6025                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
  6026  12FC  01D5               	clrf	_cdc_rx_len^(0+256)
  6027                           
  6028                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
  6029  12FD  301A               	movlw	26
  6030  12FE  0021               	movlb	1	; select bank1
  6031  12FF  00BB               	movwf	??_CDCInitEP^(0+128)
  6032  1300  083B               	movf	??_CDCInitEP^(0+128),w
  6033  1301  00B5               	movwf	USBEnableEndpoint@options^(0+128)
  6034  1302  3001               	movlw	1
  6035  1303  3191  21B0  3192   	fcall	_USBEnableEndpoint
  6036                           
  6037                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  6038  1306  301E               	movlw	30
  6039  1307  0021               	movlb	1	; select bank1
  6040  1308  00BB               	movwf	??_CDCInitEP^(0+128)
  6041  1309  083B               	movf	??_CDCInitEP^(0+128),w
  6042  130A  00B5               	movwf	USBEnableEndpoint@options^(0+128)
  6043  130B  3002               	movlw	2
  6044  130C  3191  21B0  3192   	fcall	_USBEnableEndpoint
  6045                           
  6046                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  6047  130F  0021               	movlb	1	; select bank1
  6048  1310  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  6049  1311  30A0               	movlw	low _cdc_data_rx
  6050  1312  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  6051  1313  3001               	movlw	high _cdc_data_rx
  6052  1314  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  6053  1315  3040               	movlw	64
  6054  1316  00BB               	movwf	??_CDCInitEP^(0+128)
  6055  1317  083B               	movf	??_CDCInitEP^(0+128),w
  6056  1318  00B1               	movwf	USBTransferOnePacket@len^(0+128)
  6057  1319  3002               	movlw	2
  6058  131A  318C  249F         	fcall	_USBTransferOnePacket
  6059  131C  0021               	movlb	1	; select bank1
  6060  131D  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  6061  131E  0022               	movlb	2	; select bank2
  6062  131F  00C1               	movwf	(_CDCDataOutHandle+1)^(0+256)
  6063  1320  0021               	movlb	1	; select bank1
  6064  1321  082E               	movf	?_USBTransferOnePacket^(0+128),w
  6065  1322  0022               	movlb	2	; select bank2
  6066  1323  00C0               	movwf	_CDCDataOutHandle^(0+256)
  6067                           
  6068                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
  6069  1324  01BE               	clrf	_CDCDataInHandle^(0+256)
  6070  1325  01BF               	clrf	(_CDCDataInHandle+1)^(0+256)
  6071                           
  6072                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
  6073  1326  01D4               	clrf	_cdc_trf_state^(0+256)
  6074  1327  0008               	return
  6075  1328                     __end_of_CDCInitEP:	
  6076                           
  6077                           	psect	text20
  6078  11B0                     __ptext20:	
  6079 ;; *************** function _USBEnableEndpoint *****************
  6080 ;; Defined at:
  6081 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  ep              1    wreg     unsigned char 
  6084 ;;  options         1   21[BANK1 ] unsigned char 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;  ep              1   26[BANK1 ] unsigned char 
  6087 ;;  p               2   24[BANK1 ] PTR unsigned char 
  6088 ;;		 -> UEP0(1), 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      void 
  6091 ;; Registers used:
  6092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6098 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6102 ;;Total ram usage:        6 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:   11
  6105 ;; This function calls:
  6106 ;;		_USBConfigureEndpoint
  6107 ;; This function is called by:
  6108 ;;		_CDCInitEP
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           
  6113                           ;psect for function _USBEnableEndpoint
  6114  11B0                     _USBEnableEndpoint:	
  6115                           
  6116                           ;incstack = 0
  6117                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6118                           ;USBEnableEndpoint@ep stored from wreg
  6119  11B0  0021               	movlb	1	; select bank1
  6120  11B1  00BA               	movwf	USBEnableEndpoint@ep^(0+128)
  6121                           
  6122                           ;usb_device.c: 880: unsigned char* p;
  6123                           ;usb_device.c: 884: if(options & 0x04)
  6124  11B2  1D35               	btfss	USBEnableEndpoint@options^(0+128),2
  6125  11B3  29B9               	goto	l5667
  6126                           
  6127                           ;usb_device.c: 885: {
  6128                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  6129  11B4  01AE               	clrf	USBConfigureEndpoint@direction^(0+128)
  6130  11B5  083A               	movf	USBEnableEndpoint@ep^(0+128),w
  6131  11B6  3193  23A9  3191   	fcall	_USBConfigureEndpoint
  6132  11B9                     l5667:	
  6133                           
  6134                           ;usb_device.c: 887: }
  6135                           ;usb_device.c: 888: if(options & 0x02)
  6136  11B9  0021               	movlb	1	; select bank1
  6137  11BA  1CB5               	btfss	USBEnableEndpoint@options^(0+128),1
  6138  11BB  29C1               	goto	l5671
  6139                           
  6140                           ;usb_device.c: 889: {
  6141                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  6142  11BC  01AE               	clrf	USBConfigureEndpoint@direction^(0+128)
  6143  11BD  0AAE               	incf	USBConfigureEndpoint@direction^(0+128),f
  6144  11BE  083A               	movf	USBEnableEndpoint@ep^(0+128),w
  6145  11BF  3193  23A9         	fcall	_USBConfigureEndpoint
  6146  11C1                     l5671:	
  6147                           
  6148                           ;usb_device.c: 891: }
  6149                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  6150  11C1  0021               	movlb	1	; select bank1
  6151  11C2  083A               	movf	USBEnableEndpoint@ep^(0+128),w
  6152  11C3  3E98               	addlw	152
  6153  11C4  00B6               	movwf	??_USBEnableEndpoint^(0+128)
  6154  11C5  01B7               	clrf	(??_USBEnableEndpoint^(0+128)+1)
  6155  11C6  300E               	movlw	14
  6156  11C7  3DB7               	addwfc	(??_USBEnableEndpoint^(0+128)+1),f
  6157  11C8  0836               	movf	??_USBEnableEndpoint^(0+128),w
  6158  11C9  00B8               	movwf	USBEnableEndpoint@p^(0+128)
  6159  11CA  0837               	movf	(??_USBEnableEndpoint+1)^(0+128),w
  6160  11CB  00B9               	movwf	(USBEnableEndpoint@p+1)^(0+128)
  6161                           
  6162                           ;usb_device.c: 901: *p = options;
  6163  11CC  0838               	movf	USBEnableEndpoint@p^(0+128),w
  6164  11CD  0086               	movwf	6
  6165  11CE  0839               	movf	(USBEnableEndpoint@p+1)^(0+128),w
  6166  11CF  0087               	movwf	7
  6167  11D0  0835               	movf	USBEnableEndpoint@options^(0+128),w
  6168  11D1  0081               	movwf	1
  6169  11D2  0008               	return
  6170  11D3                     __end_of_USBEnableEndpoint:	
  6171                           
  6172                           	psect	text21
  6173  13A9                     __ptext21:	
  6174 ;; *************** function _USBConfigureEndpoint *****************
  6175 ;; Defined at:
  6176 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;  EPNum           1    wreg     unsigned char 
  6179 ;;  direction       1   14[BANK1 ] unsigned char 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;  EPNum           1   19[BANK1 ] unsigned char 
  6182 ;;  handle          1   20[BANK1 ] PTR volatile struct __BD
  6183 ;;		 -> BDT(48), 
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1    wreg      void 
  6186 ;; Registers used:
  6187 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6193 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6194 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;Total ram usage:        7 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:   10
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_USBEnableEndpoint
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           
  6208                           ;psect for function _USBConfigureEndpoint
  6209  13A9                     _USBConfigureEndpoint:	
  6210                           
  6211                           ;incstack = 0
  6212                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  6213                           ;USBConfigureEndpoint@EPNum stored from wreg
  6214  13A9  0021               	movlb	1	; select bank1
  6215  13AA  00B3               	movwf	USBConfigureEndpoint@EPNum^(0+128)
  6216                           
  6217                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  6218                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  6219  13AB  3020               	movlw	32
  6220  13AC  00AF               	movwf	??_USBConfigureEndpoint^(0+128)
  6221  13AD  082F               	movf	??_USBConfigureEndpoint^(0+128),w
  6222  13AE  00B4               	movwf	USBConfigureEndpoint@handle^(0+128)
  6223                           
  6224                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  6225  13AF  082E               	movf	USBConfigureEndpoint@direction^(0+128),w
  6226  13B0  00AF               	movwf	??_USBConfigureEndpoint^(0+128)
  6227  13B1  3001               	movlw	1
  6228  13B2                     u5715:	
  6229  13B2  35AF               	lslf	??_USBConfigureEndpoint^(0+128),f
  6230  13B3  0B89               	decfsz	9,f
  6231  13B4  2BB2               	goto	u5715
  6232  13B5  0833               	movf	USBConfigureEndpoint@EPNum^(0+128),w
  6233  13B6  00B0               	movwf	(??_USBConfigureEndpoint+1)^(0+128)
  6234  13B7  3001               	movlw	1
  6235  13B8                     u5725:	
  6236  13B8  35B0               	lslf	(??_USBConfigureEndpoint+1)^(0+128),f
  6237  13B9  3EFF               	addlw	-1
  6238  13BA  1D03               	skipz
  6239  13BB  2BB8               	goto	u5725
  6240  13BC  3530               	lslf	(??_USBConfigureEndpoint+1)^(0+128),w
  6241  13BD  072F               	addwf	??_USBConfigureEndpoint^(0+128),w
  6242  13BE  00B1               	movwf	(??_USBConfigureEndpoint+2)^(0+128)
  6243  13BF  3001               	movlw	1
  6244  13C0                     u5735:	
  6245  13C0  35B1               	lslf	(??_USBConfigureEndpoint+2)^(0+128),f
  6246  13C1  3EFF               	addlw	-1
  6247  13C2  1D03               	skipz
  6248  13C3  2BC0               	goto	u5735
  6249  13C4  3531               	lslf	(??_USBConfigureEndpoint+2)^(0+128),w
  6250  13C5  00B2               	movwf	(??_USBConfigureEndpoint+3)^(0+128)
  6251  13C6  0832               	movf	(??_USBConfigureEndpoint+3)^(0+128),w
  6252  13C7  07B4               	addwf	USBConfigureEndpoint@handle^(0+128),f
  6253                           
  6254                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  6255  13C8  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6256  13C9  0086               	movwf	6
  6257  13CA  0187               	clrf	7
  6258  13CB  1381               	bcf	1,7
  6259                           
  6260                           ;usb_device.c: 1557: if(direction == 0)
  6261  13CC  082E               	movf	USBConfigureEndpoint@direction^(0+128),w
  6262  13CD  1D03               	btfss	3,2
  6263  13CE  2BD9               	goto	l5657
  6264                           
  6265                           ;usb_device.c: 1558: {
  6266                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  6267  13CF  3533               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  6268  13D0  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6269  13D1  0086               	movwf	6
  6270  13D2  3001               	movlw	1	; select bank2/3
  6271  13D3  0087               	movwf	7
  6272  13D4  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6273  13D5  3FC0               	movwi [0]fsr1
  6274  13D6  3000               	movlw	0
  6275  13D7  3FC1               	movwi [1]fsr1
  6276                           
  6277                           ;usb_device.c: 1560: }
  6278  13D8  2BE1               	goto	l5659
  6279  13D9                     l5657:	
  6280                           
  6281                           ;usb_device.c: 1561: else
  6282                           ;usb_device.c: 1562: {
  6283                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  6284  13D9  3533               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  6285  13DA  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6286  13DB  0086               	movwf	6
  6287  13DC  0187               	clrf	7
  6288  13DD  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6289  13DE  3FC0               	movwi [0]fsr1
  6290  13DF  3000               	movlw	0
  6291  13E0  3FC1               	movwi [1]fsr1
  6292  13E1                     l5659:	
  6293                           
  6294                           ;usb_device.c: 1564: }
  6295                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  6296  13E1  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6297  13E2  0086               	movwf	6
  6298  13E3  0187               	clrf	7
  6299  13E4  1301               	bcf	1,6
  6300                           
  6301                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  6302  13E5  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6303  13E6  3E04               	addlw	4
  6304  13E7  0086               	movwf	6
  6305  13E8  0187               	clrf	7
  6306  13E9  1701               	bsf	1,6
  6307  13EA  0008               	return
  6308  13EB                     __end_of_USBConfigureEndpoint:	
  6309                           
  6310                           	psect	text22
  6311  0801                     __ptext22:	
  6312 ;; *************** function _USBCtrlTrfOutHandler *****************
  6313 ;; Defined at:
  6314 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;		None
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;Total ram usage:        2 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:   12
  6335 ;; This function calls:
  6336 ;;		_USBCtrlTrfRxService
  6337 ;; This function is called by:
  6338 ;;		_USBCtrlEPService
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           
  6343                           ;psect for function _USBCtrlTrfOutHandler
  6344  0801                     _USBCtrlTrfOutHandler:	
  6345                           
  6346                           ;usb_device.c: 2540: if(controlTransferState == 2)
  6347                           
  6348                           ;incstack = 0
  6349                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6350  0801  3002               	movlw	2
  6351  0802  0021               	movlb	1	; select bank1
  6352  0803  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
  6353  0804  1D03               	btfss	3,2
  6354  0805  2809               	goto	l6431
  6355                           
  6356                           ;usb_device.c: 2541: {
  6357                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  6358  0806  3186  26F2         	fcall	_USBCtrlTrfRxService
  6359                           
  6360                           ;usb_device.c: 2543: }
  6361  0808  0008               	return
  6362  0809                     l6431:	
  6363                           
  6364                           ;usb_device.c: 2544: else
  6365                           ;usb_device.c: 2545: {
  6366                           ;usb_device.c: 2548: controlTransferState = 0;
  6367  0809  0021               	movlb	1	; select bank1
  6368  080A  01DC               	clrf	_controlTransferState^(0+128)	;volatile
  6369                           
  6370                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  6371  080B  0022               	movlb	2	; select bank2
  6372  080C  084C               	movf	_BothEP0OutUOWNsSet^(0+256),w	;volatile
  6373  080D  1D03               	btfss	3,2
  6374  080E  2835               	goto	l6443
  6375                           
  6376                           ;usb_device.c: 2556: {
  6377                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 16;
  6378  080F  0021               	movlb	1	; select bank1
  6379  0810  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6380  0811  3E01               	addlw	1
  6381  0812  00B4               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  6382  0813  3000               	movlw	0
  6383  0814  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6384  0815  00B5               	movwf	(??_USBCtrlTrfOutHandler+1)^(0+128)
  6385  0816  0834               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  6386  0817  0086               	movwf	6
  6387  0818  0835               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
  6388  0819  0087               	movwf	7
  6389  081A  3010               	movlw	16
  6390  081B  0081               	movwf	1
  6391                           
  6392                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6393  081C  3050               	movlw	80
  6394  081D  00B4               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  6395  081E  3000               	movlw	0
  6396  081F  00B5               	movwf	(??_USBCtrlTrfOutHandler^(0+128)+1)
  6397  0820  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6398  0821  0086               	movwf	6
  6399  0822  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6400  0823  0087               	movwf	7
  6401  0824  3142               	addfsr 1,2
  6402  0825  0834               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  6403  0826  3FC0               	movwi [0]fsr1
  6404  0827  0835               	movf	(??_USBCtrlTrfOutHandler^(0+128)+1),w
  6405  0828  3FC1               	movwi [1]fsr1
  6406                           
  6407                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6408  0829  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6409  082A  0086               	movwf	6
  6410  082B  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6411  082C  0087               	movwf	7
  6412  082D  300C               	movlw	12
  6413  082E  0081               	movwf	1
  6414                           
  6415                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6416  082F  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6417  0830  0086               	movwf	6
  6418  0831  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6419  0832  0087               	movwf	7
  6420  0833  1781               	bsf	1,7
  6421                           
  6422                           ;usb_device.c: 2561: }
  6423  0834  0008               	return
  6424  0835                     l6443:	
  6425                           
  6426                           ;usb_device.c: 2562: else
  6427                           ;usb_device.c: 2563: {
  6428                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  6429  0835  0022               	movlb	2	; select bank2
  6430  0836  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  6431  0837  0008               	return
  6432  0838                     __end_of_USBCtrlTrfOutHandler:	
  6433                           
  6434                           	psect	text23
  6435  06F2                     __ptext23:	
  6436 ;; *************** function _USBCtrlTrfRxService *****************
  6437 ;; Defined at:
  6438 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;  byteToRead      1   19[BANK1 ] unsigned char 
  6443 ;;  i               1   18[BANK1 ] unsigned char 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  1    wreg      void 
  6446 ;; Registers used:
  6447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;Total ram usage:        4 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:   11
  6460 ;; This function calls:
  6461 ;;		_USBCtrlEPAllowStatusStage
  6462 ;; This function is called by:
  6463 ;;		_USBCtrlTrfOutHandler
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           
  6468                           ;psect for function _USBCtrlTrfRxService
  6469  06F2                     _USBCtrlTrfRxService:	
  6470                           
  6471                           ;usb_device.c: 1854: uint8_t byteToRead;
  6472                           ;usb_device.c: 1855: uint8_t i;
  6473                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  6474                           
  6475                           ;incstack = 0
  6476                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6477  06F2  0021               	movlb	1	; select bank1
  6478  06F3  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6479  06F4  0086               	movwf	6
  6480  06F5  0187               	clrf	7
  6481  06F6  3F41               	moviw [1]fsr1
  6482  06F7  00B3               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  6483                           
  6484                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  6485  06F8  0833               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  6486  06F9  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6487  06FA  01B1               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  6488  06FB  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6489  06FC  024A               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
  6490  06FD  1D03               	skipz
  6491  06FE  2F01               	goto	u6355
  6492  06FF  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6493  0700  0249               	subwf	(_outPipes^(0+128)+3),w	;volatile
  6494  0701                     u6355:	
  6495  0701  1803               	skipnc
  6496  0702  2F07               	goto	l538
  6497                           
  6498                           ;usb_device.c: 1866: {
  6499                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  6500  0703  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
  6501  0704  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6502  0705  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6503  0706  00B3               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  6504  0707                     l538:	
  6505                           
  6506                           ;usb_device.c: 1868: }
  6507                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  6508  0707  0833               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  6509  0708  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6510  0709  01B1               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  6511  070A  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6512  070B  02C9               	subwf	(_outPipes^(0+128)+3),f	;volatile
  6513  070C  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6514  070D  3BCA               	subwfb	((_outPipes+1)^(0+128)+3),f	;volatile
  6515                           
  6516                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  6517  070E  01B2               	clrf	USBCtrlTrfRxService@i^(0+128)
  6518  070F                     l6195:	
  6519  070F  0833               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  6520  0710  0232               	subwf	USBCtrlTrfRxService@i^(0+128),w
  6521  0711  1803               	btfsc	3,0
  6522  0712  2F28               	goto	l6197
  6523                           
  6524                           ;usb_device.c: 1875: {
  6525                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  6526  0713  0832               	movf	USBCtrlTrfRxService@i^(0+128),w
  6527  0714  3E60               	addlw	96
  6528  0715  0086               	movwf	6
  6529  0716  0187               	clrf	7
  6530  0717  0801               	movf	1,w
  6531  0718  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6532  0719  0846               	movf	_outPipes^(0+128),w	;volatile
  6533  071A  0086               	movwf	6
  6534  071B  3001               	movlw	1	; select bank2/3
  6535  071C  0087               	movwf	7
  6536  071D  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6537  071E  0081               	movwf	1
  6538  071F  3001               	movlw	1
  6539  0720  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6540  0721  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6541  0722  07C6               	addwf	_outPipes^(0+128),f	;volatile
  6542  0723  3001               	movlw	1
  6543  0724  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6544  0725  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6545  0726  07B2               	addwf	USBCtrlTrfRxService@i^(0+128),f
  6546  0727  2F0F               	goto	l6195
  6547  0728                     l6197:	
  6548                           
  6549                           ;usb_device.c: 1877: }
  6550                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  6551  0728  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
  6552  0729  044A               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
  6553  072A  1903               	btfsc	3,2
  6554  072B  2F62               	goto	l6209
  6555                           
  6556                           ;usb_device.c: 1882: {
  6557                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 16;
  6558  072C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6559  072D  3E01               	addlw	1
  6560  072E  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6561  072F  3000               	movlw	0
  6562  0730  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6563  0731  00B1               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  6564  0732  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6565  0733  0086               	movwf	6
  6566  0734  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6567  0735  0087               	movwf	7
  6568  0736  3010               	movlw	16
  6569  0737  0081               	movwf	1
  6570                           
  6571                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6572  0738  3060               	movlw	96
  6573  0739  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6574  073A  3000               	movlw	0
  6575  073B  00B1               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  6576  073C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6577  073D  0086               	movwf	6
  6578  073E  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6579  073F  0087               	movwf	7
  6580  0740  3142               	addfsr 1,2
  6581  0741  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6582  0742  3FC0               	movwi [0]fsr1
  6583  0743  0831               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  6584  0744  3FC1               	movwi [1]fsr1
  6585                           
  6586                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  6587  0745  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6588  0746  0086               	movwf	6
  6589  0747  0187               	clrf	7
  6590  0748  1B01               	btfsc	1,6
  6591  0749  2F56               	goto	l6207
  6592                           
  6593                           ;usb_device.c: 1886: {
  6594                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6595  074A  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6596  074B  0086               	movwf	6
  6597  074C  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6598  074D  0087               	movwf	7
  6599  074E  3048               	movlw	72
  6600  074F  0081               	movwf	1
  6601                           
  6602                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6603  0750  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6604  0751  0086               	movwf	6
  6605  0752  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6606  0753  0087               	movwf	7
  6607  0754  1781               	bsf	1,7
  6608                           
  6609                           ;usb_device.c: 1889: }
  6610  0755  0008               	return
  6611  0756                     l6207:	
  6612                           
  6613                           ;usb_device.c: 1890: else
  6614                           ;usb_device.c: 1891: {
  6615                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  6616  0756  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6617  0757  0086               	movwf	6
  6618  0758  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6619  0759  0087               	movwf	7
  6620  075A  3008               	movlw	8
  6621  075B  0081               	movwf	1
  6622                           
  6623                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6624  075C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6625  075D  0086               	movwf	6
  6626  075E  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6627  075F  0087               	movwf	7
  6628  0760  1781               	bsf	1,7
  6629                           
  6630                           ;usb_device.c: 1894: }
  6631                           ;usb_device.c: 1895: }
  6632  0761  0008               	return
  6633  0762                     l6209:	
  6634                           
  6635                           ;usb_device.c: 1896: else
  6636                           ;usb_device.c: 1897: {
  6637                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 16;
  6638  0762  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6639  0763  3E01               	addlw	1
  6640  0764  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6641  0765  3000               	movlw	0
  6642  0766  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6643  0767  00B1               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  6644  0768  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6645  0769  0086               	movwf	6
  6646  076A  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6647  076B  0087               	movwf	7
  6648  076C  3010               	movlw	16
  6649  076D  0081               	movwf	1
  6650                           
  6651                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6652  076E  3050               	movlw	80
  6653  076F  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6654  0770  3000               	movlw	0
  6655  0771  00B1               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  6656  0772  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6657  0773  0086               	movwf	6
  6658  0774  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6659  0775  0087               	movwf	7
  6660  0776  3142               	addfsr 1,2
  6661  0777  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6662  0778  3FC0               	movwi [0]fsr1
  6663  0779  0831               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  6664  077A  3FC1               	movwi [1]fsr1
  6665                           
  6666                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6667  077B  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6668  077C  0086               	movwf	6
  6669  077D  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6670  077E  0087               	movwf	7
  6671  077F  3004               	movlw	4
  6672  0780  0081               	movwf	1
  6673                           
  6674                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6675  0781  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6676  0782  0086               	movwf	6
  6677  0783  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6678  0784  0087               	movwf	7
  6679  0785  1781               	bsf	1,7
  6680                           
  6681                           ;usb_device.c: 1915: {
  6682                           ;usb_device.c: 1921: outPipes[0].pFunc();
  6683  0786  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  6684  0787  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  6685                           
  6686                           ;usb_device.c: 1926: }
  6687                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  6688  0788  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
  6689                           
  6690                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  6691  0789  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  6692  078A  1D03               	btfss	3,2
  6693  078B  0008               	return
  6694                           
  6695                           ;usb_device.c: 1942: {
  6696                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  6697  078C  318A  22AD         	fcall	_USBCtrlEPAllowStatusStage
  6698  078E  0008               	return
  6699  078F                     __end_of_USBCtrlTrfRxService:	
  6700                           
  6701                           	psect	text24
  6702  0AAD                     __ptext24:	
  6703 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  6704 ;; Defined at:
  6705 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;		None
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;		None
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6721 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6722 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6723 ;;Total ram usage:        2 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:   10
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_USBDeviceTasks
  6730 ;;		_USBCtrlEPServiceComplete
  6731 ;;		_USBCtrlTrfRxService
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           
  6736                           ;psect for function _USBCtrlEPAllowStatusStage
  6737  0AAD                     _USBCtrlEPAllowStatusStage:	
  6738                           
  6739                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  6740                           
  6741                           ;incstack = 0
  6742                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  6743  0AAD  0022               	movlb	2	; select bank2
  6744  0AAE  084A               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
  6745  0AAF  1D03               	btfss	3,2
  6746  0AB0  0008               	return
  6747                           
  6748                           ;usb_device.c: 1424: {
  6749                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  6750  0AB1  3001               	movlw	1
  6751  0AB2  0021               	movlb	1	; select bank1
  6752  0AB3  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6753  0AB4  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6754  0AB5  0022               	movlb	2	; select bank2
  6755  0AB6  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  6756                           
  6757                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  6758  0AB7  0849               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
  6759  0AB8  1D03               	btfss	3,2
  6760  0AB9  0008               	return
  6761                           
  6762                           ;usb_device.c: 1427: {
  6763                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  6764  0ABA  3001               	movlw	1
  6765  0ABB  0021               	movlb	1	; select bank1
  6766  0ABC  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6767  0ABD  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6768  0ABE  0022               	movlb	2	; select bank2
  6769  0ABF  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  6770                           
  6771                           ;usb_device.c: 1432: if(controlTransferState == 2)
  6772  0AC0  3002               	movlw	2
  6773  0AC1  0021               	movlb	1	; select bank1
  6774  0AC2  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
  6775  0AC3  1D03               	btfss	3,2
  6776  0AC4  2AD7               	goto	l5867
  6777                           
  6778                           ;usb_device.c: 1433: {
  6779                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  6780  0AC5  084D               	movf	_pBDTEntryIn^(0+128),w
  6781  0AC6  0086               	movwf	6
  6782  0AC7  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6783  0AC8  0087               	movwf	7
  6784  0AC9  3141               	addfsr 1,1
  6785  0ACA  0181               	clrf	1
  6786                           
  6787                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6788  0ACB  084D               	movf	_pBDTEntryIn^(0+128),w
  6789  0ACC  0086               	movwf	6
  6790  0ACD  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6791  0ACE  0087               	movwf	7
  6792  0ACF  3048               	movlw	72
  6793  0AD0  0081               	movwf	1
  6794                           
  6795                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6796  0AD1  084D               	movf	_pBDTEntryIn^(0+128),w
  6797  0AD2  0086               	movwf	6
  6798  0AD3  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6799  0AD4  0087               	movwf	7
  6800  0AD5  1781               	bsf	1,7
  6801                           
  6802                           ;usb_device.c: 1437: }
  6803  0AD6  0008               	return
  6804  0AD7                     l5867:	
  6805                           
  6806                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  6807  0AD7  035C               	decf	_controlTransferState^(0+128),w	;volatile
  6808  0AD8  1D03               	btfss	3,2
  6809  0AD9  0008               	return
  6810                           
  6811                           ;usb_device.c: 1439: {
  6812                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  6813  0ADA  0022               	movlb	2	; select bank2
  6814  0ADB  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  6815                           
  6816                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 16;
  6817  0ADC  3010               	movlw	16
  6818  0ADD  0021               	movlb	1	; select bank1
  6819  0ADE  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6820  0ADF  0A5E               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  6821  0AE0  0086               	movwf	6
  6822  0AE1  0187               	clrf	7
  6823  0AE2  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6824  0AE3  0081               	movwf	1
  6825                           
  6826                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6827  0AE4  3050               	movlw	80
  6828  0AE5  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6829  0AE6  3000               	movlw	0
  6830  0AE7  00AF               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  6831  0AE8  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6832  0AE9  3E02               	addlw	2
  6833  0AEA  0086               	movwf	6
  6834  0AEB  0187               	clrf	7
  6835  0AEC  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6836  0AED  3FC0               	movwi [0]fsr1
  6837  0AEE  082F               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  6838  0AEF  3FC1               	movwi [1]fsr1
  6839                           
  6840                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  6841  0AF0  3004               	movlw	4
  6842  0AF1  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6843  0AF2  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6844  0AF3  0086               	movwf	6
  6845  0AF4  0187               	clrf	7
  6846  0AF5  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6847  0AF6  0081               	movwf	1
  6848                           
  6849                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6850  0AF7  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6851  0AF8  0086               	movwf	6
  6852  0AF9  0187               	clrf	7
  6853  0AFA  1781               	bsf	1,7
  6854                           
  6855                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  6856  0AFB  3001               	movlw	1
  6857  0AFC  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6858  0AFD  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6859  0AFE  0022               	movlb	2	; select bank2
  6860  0AFF  00CC               	movwf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  6861                           
  6862                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 16;
  6863  0B00  0021               	movlb	1	; select bank1
  6864  0B01  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6865  0B02  3E01               	addlw	1
  6866  0B03  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6867  0B04  3000               	movlw	0
  6868  0B05  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6869  0B06  00AF               	movwf	(??_USBCtrlEPAllowStatusStage+1)^(0+128)
  6870  0B07  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6871  0B08  0086               	movwf	6
  6872  0B09  082F               	movf	(??_USBCtrlEPAllowStatusStage+1)^(0+128),w
  6873  0B0A  0087               	movwf	7
  6874  0B0B  3010               	movlw	16
  6875  0B0C  0081               	movwf	1
  6876                           
  6877                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6878  0B0D  3050               	movlw	80
  6879  0B0E  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6880  0B0F  3000               	movlw	0
  6881  0B10  00AF               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  6882  0B11  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6883  0B12  0086               	movwf	6
  6884  0B13  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6885  0B14  0087               	movwf	7
  6886  0B15  3142               	addfsr 1,2
  6887  0B16  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6888  0B17  3FC0               	movwi [0]fsr1
  6889  0B18  082F               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  6890  0B19  3FC1               	movwi [1]fsr1
  6891                           
  6892                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  6893  0B1A  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6894  0B1B  0086               	movwf	6
  6895  0B1C  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6896  0B1D  0087               	movwf	7
  6897  0B1E  3080               	movlw	128
  6898  0B1F  0081               	movwf	1
  6899  0B20  0008               	return
  6900  0B21                     __end_of_USBCtrlEPAllowStatusStage:	
  6901                           
  6902                           	psect	text25
  6903  0961                     __ptext25:	
  6904 ;; *************** function _USBCtrlTrfInHandler *****************
  6905 ;; Defined at:
  6906 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  lastDTS         1   19[BANK1 ] unsigned char 
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6921 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6922 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;Total ram usage:        3 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:   11
  6927 ;; This function calls:
  6928 ;;		_USBCtrlTrfTxService
  6929 ;; This function is called by:
  6930 ;;		_USBCtrlEPService
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           
  6935                           ;psect for function _USBCtrlTrfInHandler
  6936  0961                     _USBCtrlTrfInHandler:	
  6937                           
  6938                           ;usb_device.c: 2594: uint8_t lastDTS;
  6939                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  6940                           
  6941                           ;incstack = 0
  6942                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6943  0961  0021               	movlb	1	; select bank1
  6944  0962  084D               	movf	_pBDTEntryIn^(0+128),w
  6945  0963  0086               	movwf	6
  6946  0964  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6947  0965  0087               	movwf	7
  6948  0966  3000               	movlw	0
  6949  0967  1B01               	btfsc	1,6
  6950  0968  3001               	movlw	1
  6951  0969  00B3               	movwf	USBCtrlTrfInHandler@lastDTS^(0+128)
  6952                           
  6953                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6954  096A  3004               	movlw	4
  6955  096B  064D               	xorwf	_pBDTEntryIn^(0+128),w
  6956  096C  00CD               	movwf	_pBDTEntryIn^(0+128)
  6957  096D  3000               	movlw	0
  6958  096E  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
  6959  096F  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  6960                           
  6961                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  6962  0970  3008               	movlw	8
  6963  0971  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
  6964  0972  1D03               	btfss	3,2
  6965  0973  2983               	goto	l6459
  6966                           
  6967                           ;usb_device.c: 2605: {
  6968                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  6969  0974  0020               	movlb	0	; select bank0
  6970  0975  0852               	movf	82,w	;volatile
  6971  0976  397F               	andlw	127
  6972  0977  003D               	movlb	29	; select bank29
  6973  0978  0096               	movwf	22	;volatile
  6974                           
  6975                           ;usb_device.c: 2607: if(UADDR != 0u)
  6976  0979  0816               	movf	22,w	;volatile
  6977  097A  1903               	btfsc	3,2
  6978  097B  297E               	goto	l6457
  6979                           
  6980                           ;usb_device.c: 2608: {
  6981                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  6982  097C  3010               	movlw	16
  6983  097D  297F               	goto	L7
  6984  097E                     l6457:	
  6985                           ;usb_device.c: 2610: }
  6986                           
  6987                           
  6988                           ;usb_device.c: 2611: else
  6989                           ;usb_device.c: 2612: {
  6990                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  6991  097E  3004               	movlw	4
  6992  097F                     L7:	
  6993  097F  0021               	movlb	1	; select bank1
  6994  0980  00B1               	movwf	??_USBCtrlTrfInHandler^(0+128)
  6995  0981  0831               	movf	??_USBCtrlTrfInHandler^(0+128),w
  6996  0982  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  6997  0983                     l6459:	
  6998                           
  6999                           ;usb_device.c: 2614: }
  7000                           ;usb_device.c: 2615: }
  7001                           ;usb_device.c: 2618: if(controlTransferState == 1)
  7002  0983  035C               	decf	_controlTransferState^(0+128),w	;volatile
  7003  0984  1D03               	btfss	3,2
  7004  0985  29C2               	goto	l623
  7005                           
  7006                           ;usb_device.c: 2619: {
  7007                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  7008  0986  3060               	movlw	96
  7009  0987  00B1               	movwf	??_USBCtrlTrfInHandler^(0+128)
  7010  0988  3000               	movlw	0
  7011  0989  00B2               	movwf	(??_USBCtrlTrfInHandler^(0+128)+1)
  7012  098A  084D               	movf	_pBDTEntryIn^(0+128),w
  7013  098B  0086               	movwf	6
  7014  098C  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7015  098D  0087               	movwf	7
  7016  098E  3142               	addfsr 1,2
  7017  098F  0831               	movf	??_USBCtrlTrfInHandler^(0+128),w
  7018  0990  3FC0               	movwi [0]fsr1
  7019  0991  0832               	movf	(??_USBCtrlTrfInHandler^(0+128)+1),w
  7020  0992  3FC1               	movwi [1]fsr1
  7021                           
  7022                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  7023  0993  318A  223B  3189   	fcall	_USBCtrlTrfTxService
  7024                           
  7025                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  7026  0996  3002               	movlw	2
  7027  0997  0021               	movlb	1	; select bank1
  7028  0998  065D               	xorwf	_shortPacketStatus^(0+128),w	;volatile
  7029  0999  1D03               	btfss	3,2
  7030  099A  29A7               	goto	l6469
  7031                           
  7032                           ;usb_device.c: 2628: {
  7033                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  7034  099B  084D               	movf	_pBDTEntryIn^(0+128),w
  7035  099C  0086               	movwf	6
  7036  099D  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7037  099E  0087               	movwf	7
  7038  099F  3004               	movlw	4
  7039  09A0  0081               	movwf	1
  7040                           
  7041                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7042  09A1  084D               	movf	_pBDTEntryIn^(0+128),w
  7043  09A2  0086               	movwf	6
  7044  09A3  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7045  09A4  0087               	movwf	7
  7046  09A5  1781               	bsf	1,7
  7047                           
  7048                           ;usb_device.c: 2633: }
  7049  09A6  0008               	return
  7050  09A7                     l6469:	
  7051                           
  7052                           ;usb_device.c: 2634: else
  7053                           ;usb_device.c: 2635: {
  7054                           ;usb_device.c: 2636: if(lastDTS == 0)
  7055  09A7  0833               	movf	USBCtrlTrfInHandler@lastDTS^(0+128),w
  7056  09A8  1D03               	btfss	3,2
  7057  09A9  29B6               	goto	l6473
  7058                           
  7059                           ;usb_device.c: 2637: {
  7060                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7061  09AA  084D               	movf	_pBDTEntryIn^(0+128),w
  7062  09AB  0086               	movwf	6
  7063  09AC  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7064  09AD  0087               	movwf	7
  7065  09AE  3048               	movlw	72
  7066  09AF  0081               	movwf	1
  7067                           
  7068                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7069  09B0  084D               	movf	_pBDTEntryIn^(0+128),w
  7070  09B1  0086               	movwf	6
  7071  09B2  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7072  09B3  0087               	movwf	7
  7073  09B4  1781               	bsf	1,7
  7074                           
  7075                           ;usb_device.c: 2640: }
  7076  09B5  0008               	return
  7077  09B6                     l6473:	
  7078                           
  7079                           ;usb_device.c: 2641: else
  7080                           ;usb_device.c: 2642: {
  7081                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  7082  09B6  084D               	movf	_pBDTEntryIn^(0+128),w
  7083  09B7  0086               	movwf	6
  7084  09B8  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7085  09B9  0087               	movwf	7
  7086  09BA  3008               	movlw	8
  7087  09BB  0081               	movwf	1
  7088                           
  7089                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7090  09BC  084D               	movf	_pBDTEntryIn^(0+128),w
  7091  09BD  0086               	movwf	6
  7092  09BE  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7093  09BF  0087               	movwf	7
  7094  09C0  1781               	bsf	1,7
  7095                           
  7096                           ;usb_device.c: 2645: }
  7097                           ;usb_device.c: 2646: }
  7098                           ;usb_device.c: 2647: }
  7099  09C1  0008               	return
  7100  09C2                     l623:	
  7101                           
  7102                           ;usb_device.c: 2648: else
  7103                           ;usb_device.c: 2649: {
  7104                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  7105  09C2  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
  7106  09C3  29C7               	goto	l6477
  7107                           
  7108                           ;usb_device.c: 2656: {
  7109                           ;usb_device.c: 2657: outPipes[0].pFunc();
  7110  09C4  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  7111  09C5  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  7112                           
  7113                           ;usb_device.c: 2658: }
  7114                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  7115  09C6  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
  7116  09C7                     l6477:	
  7117                           
  7118                           ;usb_device.c: 2660: }
  7119                           ;usb_device.c: 2662: controlTransferState = 0;
  7120  09C7  01DC               	clrf	_controlTransferState^(0+128)	;volatile
  7121  09C8  0008               	return
  7122  09C9                     __end_of_USBCtrlTrfInHandler:	
  7123                           
  7124                           	psect	text26
  7125  0A3B                     __ptext26:	
  7126 ;; *************** function _USBCtrlTrfTxService *****************
  7127 ;; Defined at:
  7128 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;		None
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;  byteToSend      1   16[BANK1 ] unsigned char 
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      void 
  7135 ;; Registers used:
  7136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7144 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7145 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;Total ram usage:        3 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:   10
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_USBCtrlEPAllowDataStage
  7153 ;;		_USBCtrlTrfInHandler
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           
  7158                           ;psect for function _USBCtrlTrfTxService
  7159  0A3B                     _USBCtrlTrfTxService:	
  7160                           
  7161                           ;usb_device.c: 1773: uint8_t byteToSend;
  7162                           ;usb_device.c: 1777: byteToSend = 16;
  7163                           
  7164                           ;incstack = 0
  7165 ;; hardware stack exceeded
  7166                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  7167  0A3B  3010               	movlw	16
  7168  0A3C  0021               	movlb	1	; select bank1
  7169  0A3D  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7170  0A3E  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7171  0A3F  00B0               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  7172                           
  7173                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)16)
  7174  0A40  3000               	movlw	0
  7175  0A41  0257               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  7176  0A42  3010               	movlw	16
  7177  0A43  1903               	skipnz
  7178  0A44  0256               	subwf	(_inPipes^(0+128)+3),w	;volatile
  7179  0A45  1803               	skipnc
  7180  0A46  2A57               	goto	l523
  7181                           
  7182                           ;usb_device.c: 1779: {
  7183                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  7184  0A47  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
  7185  0A48  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7186  0A49  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7187  0A4A  00B0               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  7188                           
  7189                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  7190  0A4B  085D               	movf	_shortPacketStatus^(0+128),w	;volatile
  7191  0A4C  1D03               	btfss	3,2
  7192  0A4D  2A50               	goto	l5793
  7193                           
  7194                           ;usb_device.c: 1788: {
  7195                           ;usb_device.c: 1789: shortPacketStatus = 1;
  7196  0A4E  3001               	movlw	1
  7197  0A4F  2A54               	goto	L8
  7198  0A50                     l5793:	
  7199                           ;usb_device.c: 1790: }
  7200                           
  7201                           
  7202                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  7203  0A50  035D               	decf	_shortPacketStatus^(0+128),w	;volatile
  7204  0A51  1D03               	btfss	3,2
  7205  0A52  2A57               	goto	l523
  7206                           
  7207                           ;usb_device.c: 1792: {
  7208                           ;usb_device.c: 1793: shortPacketStatus = 2;
  7209  0A53  3002               	movlw	2
  7210  0A54                     L8:	
  7211  0A54  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7212  0A55  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7213  0A56  00DD               	movwf	_shortPacketStatus^(0+128)	;volatile
  7214  0A57                     l523:	
  7215                           
  7216                           ;usb_device.c: 1794: }
  7217                           ;usb_device.c: 1795: }
  7218                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  7219  0A57  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7220  0A58  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7221  0A59  01AF               	clrf	(??_USBCtrlTrfTxService^(0+128)+1)
  7222  0A5A  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7223  0A5B  02D6               	subwf	(_inPipes^(0+128)+3),f	;volatile
  7224  0A5C  082F               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  7225  0A5D  3BD7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
  7226                           
  7227                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  7228  0A5E  084D               	movf	_pBDTEntryIn^(0+128),w
  7229  0A5F  3E01               	addlw	1
  7230  0A60  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7231  0A61  3000               	movlw	0
  7232  0A62  3D4E               	addwfc	(_pBDTEntryIn+1)^(0+128),w
  7233  0A63  00AF               	movwf	(??_USBCtrlTrfTxService+1)^(0+128)
  7234  0A64  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7235  0A65  0086               	movwf	6
  7236  0A66  082F               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  7237  0A67  0087               	movwf	7
  7238  0A68  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7239  0A69  0081               	movwf	1
  7240                           
  7241                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  7242  0A6A  3060               	movlw	96
  7243  0A6B  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7244  0A6C  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7245  0A6D  0022               	movlb	2	; select bank2
  7246  0A6E  00CF               	movwf	_pDst^(0+256)
  7247                           
  7248                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  7249  0A6F  0021               	movlb	1	; select bank1
  7250  0A70  1C55               	btfss	(_inPipes^(0+128)+2),0	;volatile
  7251  0A71  2A8C               	goto	l5813
  7252  0A72  2AA9               	goto	l5823
  7253  0A73                     l5805:	
  7254                           ;usb_device.c: 1810: {
  7255                           ;usb_device.c: 1811: while(byteToSend)
  7256                           
  7257                           
  7258                           ;usb_device.c: 1812: {
  7259                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  7260  0A73  0853               	movf	_inPipes^(0+128),w	;volatile
  7261  0A74  0084               	movwf	4
  7262  0A75  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  7263  0A76  0085               	movwf	5
  7264  0A77  0800               	movf	0,w	;code access
  7265  0A78  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7266  0A79  0022               	movlb	2	; select bank2
  7267  0A7A  084F               	movf	_pDst^(0+256),w
  7268  0A7B  0086               	movwf	6
  7269  0A7C  0187               	clrf	7
  7270  0A7D  0021               	movlb	1	; select bank1
  7271  0A7E  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7272  0A7F  0081               	movwf	1
  7273  0A80  3001               	movlw	1
  7274  0A81  07D3               	addwf	_inPipes^(0+128),f	;volatile
  7275  0A82  3000               	movlw	0
  7276  0A83  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  7277  0A84  3001               	movlw	1
  7278  0A85  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7279  0A86  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7280  0A87  0022               	movlb	2	; select bank2
  7281  0A88  07CF               	addwf	_pDst^(0+256),f
  7282                           
  7283                           ;usb_device.c: 1814: byteToSend--;
  7284  0A89  3001               	movlw	1
  7285  0A8A  0021               	movlb	1	; select bank1
  7286  0A8B  02B0               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  7287  0A8C                     l5813:	
  7288  0A8C  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7289  0A8D  1903               	btfsc	3,2
  7290  0A8E  0008               	return
  7291  0A8F  2A73               	goto	l5805
  7292  0A90                     l5815:	
  7293                           ;usb_device.c: 1817: else
  7294                           ;usb_device.c: 1818: {
  7295                           ;usb_device.c: 1819: while(byteToSend)
  7296                           
  7297                           ;usb_device.c: 1815: }
  7298                           ;usb_device.c: 1816: }
  7299                           
  7300                           
  7301                           ;usb_device.c: 1820: {
  7302                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  7303  0A90  0853               	movf	_inPipes^(0+128),w	;volatile
  7304  0A91  0084               	movwf	4
  7305  0A92  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  7306  0A93  0085               	movwf	5
  7307  0A94  0800               	movf	0,w	;code access
  7308  0A95  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7309  0A96  0022               	movlb	2	; select bank2
  7310  0A97  084F               	movf	_pDst^(0+256),w
  7311  0A98  0086               	movwf	6
  7312  0A99  0187               	clrf	7
  7313  0A9A  0021               	movlb	1	; select bank1
  7314  0A9B  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7315  0A9C  0081               	movwf	1
  7316  0A9D  3001               	movlw	1
  7317  0A9E  07D3               	addwf	_inPipes^(0+128),f	;volatile
  7318  0A9F  3000               	movlw	0
  7319  0AA0  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  7320  0AA1  3001               	movlw	1
  7321  0AA2  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7322  0AA3  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7323  0AA4  0022               	movlb	2	; select bank2
  7324  0AA5  07CF               	addwf	_pDst^(0+256),f
  7325                           
  7326                           ;usb_device.c: 1822: byteToSend--;
  7327  0AA6  3001               	movlw	1
  7328  0AA7  0021               	movlb	1	; select bank1
  7329  0AA8  02B0               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  7330  0AA9                     l5823:	
  7331  0AA9  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7332  0AAA  1903               	btfsc	3,2
  7333  0AAB  0008               	return
  7334  0AAC  2A90               	goto	l5815
  7335  0AAD                     __end_of_USBCtrlTrfTxService:	
  7336                           
  7337                           	psect	text27
  7338  04BD                     __ptext27:	
  7339 ;; *************** function _CDCTxService *****************
  7340 ;; Defined at:
  7341 ;;		line 835 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;		None
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;  byte_to_send    1   27[BANK1 ] unsigned char 
  7346 ;;  i               1   26[BANK1 ] unsigned char 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7357 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7358 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;Total ram usage:        3 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:   11
  7363 ;; This function calls:
  7364 ;;		_USBTransferOnePacket
  7365 ;; This function is called by:
  7366 ;;		_usb_task
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           
  7371                           ;psect for function _CDCTxService
  7372  04BD                     _CDCTxService:	
  7373                           
  7374                           ;usb_device_cdc.c: 837: uint8_t byte_to_send;
  7375                           ;usb_device_cdc.c: 838: uint8_t i;
  7376                           ;usb_device_cdc.c: 840: {PIE2bits.USBIE = 0;};
  7377                           
  7378                           ;incstack = 0
  7379                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7380  04BD  0021               	movlb	1	; select bank1
  7381  04BE  1112               	bcf	18,2	;volatile
  7382                           
  7383                           ;usb_device_cdc.c: 842: {};
  7384                           ;usb_device_cdc.c: 844: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  7385  04BF  0022               	movlb	2	; select bank2
  7386  04C0  083E               	movf	_CDCDataInHandle^(0+256),w
  7387  04C1  043F               	iorwf	(_CDCDataInHandle+1)^(0+256),w
  7388  04C2  1903               	btfsc	3,2
  7389  04C3  2CCD               	goto	l6733
  7390  04C4  083E               	movf	_CDCDataInHandle^(0+256),w
  7391  04C5  0086               	movwf	6
  7392  04C6  083F               	movf	(_CDCDataInHandle+1)^(0+256),w
  7393  04C7  0087               	movwf	7
  7394  04C8  1F81               	btfss	1,7
  7395  04C9  2CCD               	goto	l6733
  7396                           
  7397                           ;usb_device_cdc.c: 845: {
  7398                           ;usb_device_cdc.c: 846: {PIE2bits.USBIE = 1;};
  7399  04CA  0021               	movlb	1	; select bank1
  7400  04CB  1512               	bsf	18,2	;volatile
  7401                           
  7402                           ;usb_device_cdc.c: 847: return;
  7403  04CC  0008               	return
  7404  04CD                     l6733:	
  7405                           
  7406                           ;usb_device_cdc.c: 848: }
  7407                           ;usb_device_cdc.c: 855: if(cdc_trf_state == 3)
  7408  04CD  3003               	movlw	3
  7409  04CE  0022               	movlb	2	; select bank2
  7410  04CF  0654               	xorwf	_cdc_trf_state^(0+256),w
  7411  04D0  1903               	btfsc	3,2
  7412                           
  7413                           ;usb_device_cdc.c: 856: cdc_trf_state = 0;
  7414  04D1  01D4               	clrf	_cdc_trf_state^(0+256)
  7415                           
  7416                           ;usb_device_cdc.c: 861: if(cdc_trf_state == 0)
  7417  04D2  0854               	movf	_cdc_trf_state^(0+256),w
  7418  04D3  1D03               	btfss	3,2
  7419  04D4  2CD8               	goto	l6741
  7420                           
  7421                           ;usb_device_cdc.c: 862: {
  7422                           ;usb_device_cdc.c: 863: {PIE2bits.USBIE = 1;};
  7423  04D5  0021               	movlb	1	; select bank1
  7424  04D6  1512               	bsf	18,2	;volatile
  7425                           
  7426                           ;usb_device_cdc.c: 864: return;
  7427  04D7  0008               	return
  7428  04D8                     l6741:	
  7429                           
  7430                           ;usb_device_cdc.c: 865: }
  7431                           ;usb_device_cdc.c: 870: if(cdc_trf_state == 2)
  7432  04D8  3002               	movlw	2
  7433  04D9  0022               	movlb	2	; select bank2
  7434  04DA  0654               	xorwf	_cdc_trf_state^(0+256),w
  7435  04DB  1D03               	btfss	3,2
  7436  04DC  2CF8               	goto	l6747
  7437                           
  7438                           ;usb_device_cdc.c: 871: {
  7439                           ;usb_device_cdc.c: 872: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  7440  04DD  0021               	movlb	1	; select bank1
  7441  04DE  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  7442  04DF  0AAE               	incf	USBTransferOnePacket@dir^(0+128),f
  7443  04E0  3000               	movlw	0
  7444  04E1  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  7445  04E2  3000               	movlw	0
  7446  04E3  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  7447  04E4  01B1               	clrf	USBTransferOnePacket@len^(0+128)
  7448  04E5  3002               	movlw	2
  7449  04E6  318C  249F  3184   	fcall	_USBTransferOnePacket
  7450  04E9  0021               	movlb	1	; select bank1
  7451  04EA  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  7452  04EB  0022               	movlb	2	; select bank2
  7453  04EC  00BF               	movwf	(_CDCDataInHandle+1)^(0+256)
  7454  04ED  0021               	movlb	1	; select bank1
  7455  04EE  082E               	movf	?_USBTransferOnePacket^(0+128),w
  7456  04EF  0022               	movlb	2	; select bank2
  7457  04F0  00BE               	movwf	_CDCDataInHandle^(0+256)
  7458                           
  7459                           ;usb_device_cdc.c: 874: cdc_trf_state = 3;
  7460  04F1  3003               	movlw	3
  7461  04F2  0021               	movlb	1	; select bank1
  7462  04F3  00B9               	movwf	??_CDCTxService^(0+128)
  7463  04F4  0839               	movf	??_CDCTxService^(0+128),w
  7464  04F5  0022               	movlb	2	; select bank2
  7465  04F6  00D4               	movwf	_cdc_trf_state^(0+256)
  7466                           
  7467                           ;usb_device_cdc.c: 875: }
  7468  04F7  2D8C               	goto	l6795
  7469  04F8                     l6747:	
  7470                           
  7471                           ;usb_device_cdc.c: 876: else if(cdc_trf_state == 1)
  7472  04F8  0354               	decf	_cdc_trf_state^(0+256),w
  7473  04F9  1D03               	btfss	3,2
  7474  04FA  2D8C               	goto	l6795
  7475                           
  7476                           ;usb_device_cdc.c: 877: {
  7477                           ;usb_device_cdc.c: 881: if(cdc_tx_len > sizeof(cdc_data_tx))
  7478  04FB  3041               	movlw	65
  7479  04FC  0253               	subwf	_cdc_tx_len^(0+256),w
  7480  04FD  1C03               	skipc
  7481  04FE  2D01               	goto	l6753
  7482                           
  7483                           ;usb_device_cdc.c: 882: byte_to_send = sizeof(cdc_data_tx);
  7484  04FF  3040               	movlw	64
  7485  0500  2D03               	goto	L9
  7486  0501                     l6753:	
  7487                           
  7488                           ;usb_device_cdc.c: 883: else
  7489                           ;usb_device_cdc.c: 884: byte_to_send = cdc_tx_len;
  7490  0501  0022               	movlb	2	; select bank2
  7491  0502  0853               	movf	_cdc_tx_len^(0+256),w
  7492  0503                     L9:	
  7493  0503  0021               	movlb	1	; select bank1
  7494  0504  00B9               	movwf	??_CDCTxService^(0+128)
  7495  0505  0839               	movf	??_CDCTxService^(0+128),w
  7496  0506  00BB               	movwf	CDCTxService@byte_to_send^(0+128)
  7497                           
  7498                           ;usb_device_cdc.c: 889: cdc_tx_len = cdc_tx_len - byte_to_send;
  7499  0507  033B               	decf	CDCTxService@byte_to_send^(0+128),w
  7500  0508  3AFF               	xorlw	255
  7501  0509  0022               	movlb	2	; select bank2
  7502  050A  0753               	addwf	_cdc_tx_len^(0+256),w
  7503  050B  0021               	movlb	1	; select bank1
  7504  050C  00B9               	movwf	??_CDCTxService^(0+128)
  7505  050D  0839               	movf	??_CDCTxService^(0+128),w
  7506  050E  0022               	movlb	2	; select bank2
  7507  050F  00D3               	movwf	_cdc_tx_len^(0+256)
  7508                           
  7509                           ;usb_device_cdc.c: 891: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  7510  0510  3020               	movlw	(low (_cdc_data_tx| (0+512)))& (0+255)
  7511  0511  0021               	movlb	1	; select bank1
  7512  0512  00B9               	movwf	??_CDCTxService^(0+128)
  7513  0513  0839               	movf	??_CDCTxService^(0+128),w
  7514  0514  0022               	movlb	2	; select bank2
  7515  0515  00C2               	movwf	_pCDCDst^(0+256)
  7516                           
  7517                           ;usb_device_cdc.c: 893: i = byte_to_send;
  7518  0516  0021               	movlb	1	; select bank1
  7519  0517  083B               	movf	CDCTxService@byte_to_send^(0+128),w
  7520  0518  00B9               	movwf	??_CDCTxService^(0+128)
  7521  0519  0839               	movf	??_CDCTxService^(0+128),w
  7522  051A  00BA               	movwf	CDCTxService@i^(0+128)
  7523                           
  7524                           ;usb_device_cdc.c: 894: if(cdc_mem_type == 0x00)
  7525  051B  0022               	movlb	2	; select bank2
  7526  051C  0852               	movf	_cdc_mem_type^(0+256),w
  7527  051D  1903               	btfsc	3,2
  7528  051E  2D3E               	goto	l6773
  7529  051F  2D61               	goto	l6783
  7530  0520                     l6765:	
  7531                           ;usb_device_cdc.c: 895: {
  7532                           ;usb_device_cdc.c: 896: while(i)
  7533                           
  7534                           
  7535                           ;usb_device_cdc.c: 897: {
  7536                           ;usb_device_cdc.c: 898: *pCDCDst.bRam = *pCDCSrc.bRom;
  7537  0520  0022               	movlb	2	; select bank2
  7538  0521  0844               	movf	_pCDCSrc^(0+256),w
  7539  0522  0086               	movwf	6
  7540  0523  3003               	movlw	3	; select bank6/7
  7541  0524  0087               	movwf	7
  7542  0525  0801               	movf	1,w
  7543  0526  0021               	movlb	1	; select bank1
  7544  0527  00B9               	movwf	??_CDCTxService^(0+128)
  7545  0528  0022               	movlb	2	; select bank2
  7546  0529  0842               	movf	_pCDCDst^(0+256),w
  7547  052A  0086               	movwf	6
  7548  052B  3002               	movlw	2	; select bank4/5
  7549  052C  0087               	movwf	7
  7550  052D  0021               	movlb	1	; select bank1
  7551  052E  0839               	movf	??_CDCTxService^(0+128),w
  7552  052F  0081               	movwf	1
  7553                           
  7554                           ;usb_device_cdc.c: 899: pCDCDst.bRam++;
  7555  0530  3001               	movlw	1
  7556  0531  00B9               	movwf	??_CDCTxService^(0+128)
  7557  0532  0839               	movf	??_CDCTxService^(0+128),w
  7558  0533  0022               	movlb	2	; select bank2
  7559  0534  07C2               	addwf	_pCDCDst^(0+256),f
  7560                           
  7561                           ;usb_device_cdc.c: 900: pCDCSrc.bRom++;
  7562  0535  3001               	movlw	1
  7563  0536  0021               	movlb	1	; select bank1
  7564  0537  00B9               	movwf	??_CDCTxService^(0+128)
  7565  0538  0839               	movf	??_CDCTxService^(0+128),w
  7566  0539  0022               	movlb	2	; select bank2
  7567  053A  07C4               	addwf	_pCDCSrc^(0+256),f
  7568                           
  7569                           ;usb_device_cdc.c: 901: i--;
  7570  053B  3001               	movlw	1
  7571  053C  0021               	movlb	1	; select bank1
  7572  053D  02BA               	subwf	CDCTxService@i^(0+128),f
  7573  053E                     l6773:	
  7574  053E  0021               	movlb	1	; select bank1
  7575  053F  083A               	movf	CDCTxService@i^(0+128),w
  7576  0540  1903               	btfsc	3,2
  7577  0541  2D65               	goto	l6785
  7578  0542  2D20               	goto	l6765
  7579  0543                     l6775:	
  7580                           ;usb_device_cdc.c: 904: else
  7581                           ;usb_device_cdc.c: 905: {
  7582                           ;usb_device_cdc.c: 906: while(i)
  7583                           
  7584                           ;usb_device_cdc.c: 902: }
  7585                           ;usb_device_cdc.c: 903: }
  7586                           
  7587                           
  7588                           ;usb_device_cdc.c: 907: {
  7589                           ;usb_device_cdc.c: 908: *pCDCDst.bRam = *pCDCSrc.bRam;
  7590  0543  0022               	movlb	2	; select bank2
  7591  0544  0844               	movf	_pCDCSrc^(0+256),w
  7592  0545  0086               	movwf	6
  7593  0546  3003               	movlw	3	; select bank6/7
  7594  0547  0087               	movwf	7
  7595  0548  0801               	movf	1,w
  7596  0549  0021               	movlb	1	; select bank1
  7597  054A  00B9               	movwf	??_CDCTxService^(0+128)
  7598  054B  0022               	movlb	2	; select bank2
  7599  054C  0842               	movf	_pCDCDst^(0+256),w
  7600  054D  0086               	movwf	6
  7601  054E  3002               	movlw	2	; select bank4/5
  7602  054F  0087               	movwf	7
  7603  0550  0021               	movlb	1	; select bank1
  7604  0551  0839               	movf	??_CDCTxService^(0+128),w
  7605  0552  0081               	movwf	1
  7606                           
  7607                           ;usb_device_cdc.c: 909: pCDCDst.bRam++;
  7608  0553  3001               	movlw	1
  7609  0554  00B9               	movwf	??_CDCTxService^(0+128)
  7610  0555  0839               	movf	??_CDCTxService^(0+128),w
  7611  0556  0022               	movlb	2	; select bank2
  7612  0557  07C2               	addwf	_pCDCDst^(0+256),f
  7613                           
  7614                           ;usb_device_cdc.c: 910: pCDCSrc.bRam++;
  7615  0558  3001               	movlw	1
  7616  0559  0021               	movlb	1	; select bank1
  7617  055A  00B9               	movwf	??_CDCTxService^(0+128)
  7618  055B  0839               	movf	??_CDCTxService^(0+128),w
  7619  055C  0022               	movlb	2	; select bank2
  7620  055D  07C4               	addwf	_pCDCSrc^(0+256),f
  7621                           
  7622                           ;usb_device_cdc.c: 911: i--;
  7623  055E  3001               	movlw	1
  7624  055F  0021               	movlb	1	; select bank1
  7625  0560  02BA               	subwf	CDCTxService@i^(0+128),f
  7626  0561                     l6783:	
  7627  0561  0021               	movlb	1	; select bank1
  7628  0562  083A               	movf	CDCTxService@i^(0+128),w
  7629  0563  1D03               	btfss	3,2
  7630  0564  2D43               	goto	l6775
  7631  0565                     l6785:	
  7632                           
  7633                           ;usb_device_cdc.c: 912: }
  7634                           ;usb_device_cdc.c: 913: }
  7635                           ;usb_device_cdc.c: 919: if(cdc_tx_len == 0)
  7636  0565  0022               	movlb	2	; select bank2
  7637  0566  0853               	movf	_cdc_tx_len^(0+256),w
  7638  0567  1D03               	btfss	3,2
  7639  0568  2D76               	goto	l6793
  7640                           
  7641                           ;usb_device_cdc.c: 920: {
  7642                           ;usb_device_cdc.c: 921: if(byte_to_send == 64)
  7643  0569  3040               	movlw	64
  7644  056A  0021               	movlb	1	; select bank1
  7645  056B  063B               	xorwf	CDCTxService@byte_to_send^(0+128),w
  7646  056C  1D03               	btfss	3,2
  7647  056D  2D70               	goto	l6791
  7648                           
  7649                           ;usb_device_cdc.c: 922: cdc_trf_state = 2;
  7650  056E  3002               	movlw	2
  7651  056F  2D72               	goto	L10
  7652  0570                     l6791:	
  7653                           
  7654                           ;usb_device_cdc.c: 923: else
  7655                           ;usb_device_cdc.c: 924: cdc_trf_state = 3;
  7656  0570  3003               	movlw	3
  7657  0571  0021               	movlb	1	; select bank1
  7658  0572                     L10:	
  7659  0572  00B9               	movwf	??_CDCTxService^(0+128)
  7660  0573  0839               	movf	??_CDCTxService^(0+128),w
  7661  0574  0022               	movlb	2	; select bank2
  7662  0575  00D4               	movwf	_cdc_trf_state^(0+256)
  7663  0576                     l6793:	
  7664                           
  7665                           ;usb_device_cdc.c: 925: }
  7666                           ;usb_device_cdc.c: 926: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  7667  0576  0021               	movlb	1	; select bank1
  7668  0577  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  7669  0578  0AAE               	incf	USBTransferOnePacket@dir^(0+128),f
  7670  0579  3020               	movlw	low _cdc_data_tx
  7671  057A  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  7672  057B  3002               	movlw	high _cdc_data_tx
  7673  057C  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  7674  057D  083B               	movf	CDCTxService@byte_to_send^(0+128),w
  7675  057E  00B9               	movwf	??_CDCTxService^(0+128)
  7676  057F  0839               	movf	??_CDCTxService^(0+128),w
  7677  0580  00B1               	movwf	USBTransferOnePacket@len^(0+128)
  7678  0581  3002               	movlw	2
  7679  0582  318C  249F         	fcall	_USBTransferOnePacket
  7680  0584  0021               	movlb	1	; select bank1
  7681  0585  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  7682  0586  0022               	movlb	2	; select bank2
  7683  0587  00BF               	movwf	(_CDCDataInHandle+1)^(0+256)
  7684  0588  0021               	movlb	1	; select bank1
  7685  0589  082E               	movf	?_USBTransferOnePacket^(0+128),w
  7686  058A  0022               	movlb	2	; select bank2
  7687  058B  00BE               	movwf	_CDCDataInHandle^(0+256)
  7688  058C                     l6795:	
  7689                           
  7690                           ;usb_device_cdc.c: 928: }
  7691                           ;usb_device_cdc.c: 930: {PIE2bits.USBIE = 1;};
  7692  058C  0021               	movlb	1	; select bank1
  7693  058D  1512               	bsf	18,2	;volatile
  7694  058E  0008               	return
  7695  058F                     __end_of_CDCTxService:	
  7696                           
  7697                           	psect	text28
  7698  1328                     __ptext28:	
  7699 ;; *************** function _gpio_task *****************
  7700 ;; Defined at:
  7701 ;;		line 100 in file "main.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;		None
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;  has_output      1   32[BANK1 ] unsigned char 
  7706 ;;  rx_ptr          1   33[BANK1 ] unsigned char 
  7707 ;;  tx_ptr          1   34[BANK1 ] unsigned char 
  7708 ;;  bytes_rcvd      1   31[BANK1 ] unsigned char 
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1    wreg      void 
  7711 ;; Registers used:
  7712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;Total ram usage:        6 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; Hardware stack levels required when called:   12
  7725 ;; This function calls:
  7726 ;;		_getsUSBUSART
  7727 ;;		_process_gpio_cmd
  7728 ;;		_putUSBUSART
  7729 ;; This function is called by:
  7730 ;;		_main
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           
  7735                           ;psect for function _gpio_task
  7736  1328                     _gpio_task:	
  7737                           
  7738                           ;main.c: 101: static uint8_t usb_rx_buf[64];
  7739                           ;main.c: 102: static uint8_t usb_tx_buf[64];
  7740                           ;main.c: 104: if ((cdc_trf_state == 0)) {
  7741                           
  7742                           ;incstack = 0
  7743                           ; Regs used in _gpio_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7744  1328  0022               	movlb	2	; select bank2
  7745  1329  0854               	movf	_cdc_trf_state^(0+256),w
  7746  132A  1D03               	btfss	3,2
  7747  132B  0008               	return
  7748                           
  7749                           ;main.c: 105: uint8_t bytes_rcvd = getsUSBUSART(usb_rx_buf, 64);
  7750  132C  3040               	movlw	64
  7751  132D  0021               	movlb	1	; select bank1
  7752  132E  00BD               	movwf	??_gpio_task^(0+128)
  7753  132F  083D               	movf	??_gpio_task^(0+128),w
  7754  1330  00B9               	movwf	getsUSBUSART@len^(0+128)
  7755  1331  30A0               	movlw	(low (gpio_task@usb_rx_buf| (0+512)))& (0+255)
  7756  1332  3196  268A  3193   	fcall	_getsUSBUSART
  7757  1335  0021               	movlb	1	; select bank1
  7758  1336  00BE               	movwf	(??_gpio_task+1)^(0+128)
  7759  1337  083E               	movf	(??_gpio_task+1)^(0+128),w
  7760  1338  00BF               	movwf	gpio_task@bytes_rcvd^(0+128)
  7761                           
  7762                           ;main.c: 106: uint8_t tx_ptr = 0;
  7763  1339  01C2               	clrf	gpio_task@tx_ptr^(0+128)
  7764                           
  7765                           ;main.c: 108: for (uint8_t rx_ptr = 0; rx_ptr < bytes_rcvd; rx_ptr++) {
  7766  133A  01C1               	clrf	gpio_task@rx_ptr^(0+128)
  7767  133B                     l6975:	
  7768  133B  083F               	movf	gpio_task@bytes_rcvd^(0+128),w
  7769  133C  0241               	subwf	gpio_task@rx_ptr^(0+128),w
  7770  133D  1803               	btfsc	3,0
  7771  133E  2B5D               	goto	l6977
  7772                           
  7773                           ;main.c: 109: bool has_output = process_gpio_cmd(usb_rx_buf[rx_ptr], &(usb_tx_buf[tx_ptr
      +                          ]));
  7774  133F  0842               	movf	gpio_task@tx_ptr^(0+128),w
  7775  1340  3E20               	addlw	(low (gpio_task@usb_tx_buf| (0+768)))& (0+255)
  7776  1341  00BD               	movwf	??_gpio_task^(0+128)
  7777  1342  083D               	movf	??_gpio_task^(0+128),w
  7778  1343  00AE               	movwf	process_gpio_cmd@rsp^(0+128)
  7779  1344  0841               	movf	gpio_task@rx_ptr^(0+128),w
  7780  1345  3EA0               	addlw	(low (gpio_task@usb_rx_buf| (0+512)))& (0+255)
  7781  1346  0086               	movwf	6
  7782  1347  3002               	movlw	2	; select bank5/6
  7783  1348  0087               	movwf	7
  7784  1349  0801               	movf	1,w
  7785  134A  3195  2526  3193   	fcall	_process_gpio_cmd
  7786  134D  0021               	movlb	1	; select bank1
  7787  134E  00BE               	movwf	(??_gpio_task+1)^(0+128)
  7788  134F  083E               	movf	(??_gpio_task+1)^(0+128),w
  7789  1350  00C0               	movwf	gpio_task@has_output^(0+128)
  7790                           
  7791                           ;main.c: 111: if (has_output) {
  7792  1351  0840               	movf	gpio_task@has_output^(0+128),w
  7793  1352  1903               	btfsc	3,2
  7794  1353  2B58               	goto	l243
  7795                           
  7796                           ;main.c: 112: tx_ptr += 1;
  7797  1354  3001               	movlw	1
  7798  1355  00BD               	movwf	??_gpio_task^(0+128)
  7799  1356  083D               	movf	??_gpio_task^(0+128),w
  7800  1357  07C2               	addwf	gpio_task@tx_ptr^(0+128),f
  7801  1358                     l243:	
  7802  1358  3001               	movlw	1
  7803  1359  00BD               	movwf	??_gpio_task^(0+128)
  7804  135A  083D               	movf	??_gpio_task^(0+128),w
  7805  135B  07C1               	addwf	gpio_task@rx_ptr^(0+128),f
  7806  135C  2B3B               	goto	l6975
  7807  135D                     l6977:	
  7808                           
  7809                           ;main.c: 113: }
  7810                           ;main.c: 114: }
  7811                           ;main.c: 116: if (tx_ptr > 0) {
  7812  135D  0842               	movf	gpio_task@tx_ptr^(0+128),w
  7813  135E  1903               	btfsc	3,2
  7814  135F  0008               	return
  7815                           
  7816                           ;main.c: 117: putUSBUSART(usb_tx_buf, tx_ptr);
  7817  1360  0842               	movf	gpio_task@tx_ptr^(0+128),w
  7818  1361  00BD               	movwf	??_gpio_task^(0+128)
  7819  1362  083D               	movf	??_gpio_task^(0+128),w
  7820  1363  00AE               	movwf	putUSBUSART@length^(0+128)
  7821  1364  3020               	movlw	(low (gpio_task@usb_tx_buf| (0+768)))& (0+255)
  7822  1365  3190  20C0         	fcall	_putUSBUSART
  7823  1367  0008               	return
  7824  1368                     __end_of_gpio_task:	
  7825                           
  7826                           	psect	text29
  7827  10C0                     __ptext29:	
  7828 ;; *************** function _putUSBUSART *****************
  7829 ;; Defined at:
  7830 ;;		line 555 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;  data            1    wreg     PTR unsigned char 
  7833 ;;		 -> gpio_task@usb_tx_buf(64), 
  7834 ;;  length          1   14[BANK1 ] unsigned char 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  data            1   16[BANK1 ] PTR unsigned char 
  7837 ;;		 -> gpio_task@usb_tx_buf(64), 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      void 
  7840 ;; Registers used:
  7841 ;;		wreg, status,2, status,0
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7847 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;Total ram usage:        3 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:   10
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		_gpio_task
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           
  7862                           ;psect for function _putUSBUSART
  7863  10C0                     _putUSBUSART:	
  7864                           
  7865                           ;incstack = 0
  7866                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  7867                           ;putUSBUSART@data stored from wreg
  7868  10C0  0021               	movlb	1	; select bank1
  7869  10C1  00B0               	movwf	putUSBUSART@data^(0+128)
  7870                           
  7871                           ;usb_device_cdc.c: 580: {PIE2bits.USBIE = 0;};
  7872  10C2  1112               	bcf	18,2	;volatile
  7873                           
  7874                           ;usb_device_cdc.c: 581: if(cdc_trf_state == 0)
  7875  10C3  0022               	movlb	2	; select bank2
  7876  10C4  0854               	movf	_cdc_trf_state^(0+256),w
  7877  10C5  1D03               	btfss	3,2
  7878  10C6  28D7               	goto	l4855
  7879                           
  7880                           ;usb_device_cdc.c: 582: {
  7881                           ;usb_device_cdc.c: 583: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  7882  10C7  0021               	movlb	1	; select bank1
  7883  10C8  0830               	movf	putUSBUSART@data^(0+128),w
  7884  10C9  00AF               	movwf	??_putUSBUSART^(0+128)
  7885  10CA  082F               	movf	??_putUSBUSART^(0+128),w
  7886  10CB  0022               	movlb	2	; select bank2
  7887  10CC  00C4               	movwf	_pCDCSrc^(0+256)
  7888  10CD  0021               	movlb	1	; select bank1
  7889  10CE  082E               	movf	putUSBUSART@length^(0+128),w
  7890  10CF  00AF               	movwf	??_putUSBUSART^(0+128)
  7891  10D0  082F               	movf	??_putUSBUSART^(0+128),w
  7892  10D1  0022               	movlb	2	; select bank2
  7893  10D2  00D3               	movwf	_cdc_tx_len^(0+256)
  7894  10D3  01D2               	clrf	_cdc_mem_type^(0+256)
  7895  10D4  0AD2               	incf	_cdc_mem_type^(0+256),f
  7896  10D5  01D4               	clrf	_cdc_trf_state^(0+256)
  7897  10D6  0AD4               	incf	_cdc_trf_state^(0+256),f
  7898  10D7                     l4855:	
  7899                           
  7900                           ;usb_device_cdc.c: 584: }
  7901                           ;usb_device_cdc.c: 585: {PIE2bits.USBIE = 1;};
  7902  10D7  0021               	movlb	1	; select bank1
  7903  10D8  1512               	bsf	18,2	;volatile
  7904  10D9  0008               	return
  7905  10DA                     __end_of_putUSBUSART:	
  7906                           
  7907                           	psect	text30
  7908  1526                     __ptext30:	
  7909 ;; *************** function _process_gpio_cmd *****************
  7910 ;; Defined at:
  7911 ;;		line 64 in file "main.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  cmd             1    wreg     unsigned char 
  7914 ;;  rsp             1   14[BANK1 ] PTR unsigned char 
  7915 ;;		 -> gpio_task@usb_tx_buf(64), 
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;  cmd             1   18[BANK1 ] unsigned char 
  7918 ;;  i               1   17[BANK1 ] unsigned char 
  7919 ;;  cmd_type        1   16[BANK1 ] unsigned char 
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      unsigned char 
  7922 ;; Registers used:
  7923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7929 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;Total ram usage:        5 bytes
  7934 ;; Hardware stack levels used:    1
  7935 ;; Hardware stack levels required when called:   10
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_gpio_task
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function _process_gpio_cmd
  7945  1526                     _process_gpio_cmd:	
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in _process_gpio_cmd: [wreg-fsr1h+status,2+status,0]
  7949                           ;process_gpio_cmd@cmd stored from wreg
  7950  1526  0021               	movlb	1	; select bank1
  7951  1527  00B2               	movwf	process_gpio_cmd@cmd^(0+128)
  7952                           
  7953                           ;main.c: 65: static uint8_t gpio_dir = 0;
  7954                           ;main.c: 66: uint8_t cmd_type = cmd & 0xC0;
  7955  1528  0832               	movf	process_gpio_cmd@cmd^(0+128),w
  7956  1529  39C0               	andlw	192
  7957  152A  00AF               	movwf	??_process_gpio_cmd^(0+128)
  7958  152B  082F               	movf	??_process_gpio_cmd^(0+128),w
  7959  152C  00B0               	movwf	process_gpio_cmd@cmd_type^(0+128)
  7960                           
  7961                           ;main.c: 68: switch (cmd_type) {
  7962  152D  2D6D               	goto	l5113
  7963  152E                     l5075:	
  7964                           ;main.c: 69: case 0x00:
  7965                           
  7966                           
  7967                           ;main.c: 70: gpio_dir = cmd & 0x3f;
  7968  152E  0832               	movf	process_gpio_cmd@cmd^(0+128),w
  7969  152F  393F               	andlw	63
  7970  1530  00AF               	movwf	??_process_gpio_cmd^(0+128)
  7971  1531  082F               	movf	??_process_gpio_cmd^(0+128),w
  7972  1532  0022               	movlb	2	; select bank2
  7973  1533  00D0               	movwf	process_gpio_cmd@gpio_dir^(0+256)
  7974                           
  7975                           ;main.c: 71: TRISC = gpio_dir;
  7976  1534  0850               	movf	process_gpio_cmd@gpio_dir^(0+256),w
  7977  1535  0021               	movlb	1	; select bank1
  7978  1536  008E               	movwf	14	;volatile
  7979                           
  7980                           ;main.c: 72: return 0;
  7981  1537  3000               	movlw	0
  7982  1538  0008               	return
  7983  1539                     l5083:	
  7984                           ;main.c: 74: case 0x40:
  7985                           
  7986                           
  7987                           ;main.c: 75: for (uint8_t i = 0; i < 100; i++) {
  7988  1539  01B1               	clrf	process_gpio_cmd@i^(0+128)
  7989  153A  3064               	movlw	100
  7990  153B  0231               	subwf	process_gpio_cmd@i^(0+128),w
  7991  153C  1803               	btfsc	3,0
  7992  153D  2D4F               	goto	l5093
  7993  153E                     l226:	
  7994                           
  7995                           ;main.c: 76: LATC |= 0x10;
  7996  153E  0022               	movlb	2	; select bank2
  7997  153F  160E               	bsf	14,4	;volatile
  7998                           
  7999                           ;main.c: 77: LATC &= 0xEF;
  8000  1540  30EF               	movlw	239
  8001  1541  0021               	movlb	1	; select bank1
  8002  1542  00AF               	movwf	??_process_gpio_cmd^(0+128)
  8003  1543  082F               	movf	??_process_gpio_cmd^(0+128),w
  8004  1544  0022               	movlb	2	; select bank2
  8005  1545  058E               	andwf	14,f	;volatile
  8006  1546  3001               	movlw	1
  8007  1547  0021               	movlb	1	; select bank1
  8008  1548  00AF               	movwf	??_process_gpio_cmd^(0+128)
  8009  1549  082F               	movf	??_process_gpio_cmd^(0+128),w
  8010  154A  07B1               	addwf	process_gpio_cmd@i^(0+128),f
  8011  154B  3064               	movlw	100
  8012  154C  0231               	subwf	process_gpio_cmd@i^(0+128),w
  8013  154D  1C03               	skipc
  8014  154E  2D3E               	goto	l226
  8015  154F                     l5093:	
  8016                           
  8017                           ;main.c: 78: }
  8018                           ;main.c: 79: return 0;
  8019  154F  3000               	movlw	0
  8020  1550  0008               	return
  8021  1551                     l5097:	
  8022                           ;main.c: 81: case 0x80:
  8023                           
  8024                           
  8025                           ;main.c: 82: LATC = cmd & ~gpio_dir;
  8026  1551  0022               	movlb	2	; select bank2
  8027  1552  0950               	comf	process_gpio_cmd@gpio_dir^(0+256),w
  8028  1553  0021               	movlb	1	; select bank1
  8029  1554  0532               	andwf	process_gpio_cmd@cmd^(0+128),w
  8030  1555  0022               	movlb	2	; select bank2
  8031  1556  008E               	movwf	14	;volatile
  8032                           
  8033                           ;main.c: 83: return 0;
  8034  1557  3000               	movlw	0
  8035  1558  0008               	return
  8036  1559                     l5103:	
  8037                           ;main.c: 85: case 0xC0:
  8038                           
  8039                           
  8040                           ;main.c: 86: (*rsp) = PORTC & gpio_dir;
  8041  1559  0020               	movlb	0	; select bank0
  8042  155A  080E               	movf	14,w	;volatile
  8043  155B  0022               	movlb	2	; select bank2
  8044  155C  0550               	andwf	process_gpio_cmd@gpio_dir^(0+256),w
  8045  155D  0021               	movlb	1	; select bank1
  8046  155E  00AF               	movwf	??_process_gpio_cmd^(0+128)
  8047  155F  082E               	movf	process_gpio_cmd@rsp^(0+128),w
  8048  1560  0086               	movwf	6
  8049  1561  3003               	movlw	3	; select bank6/7
  8050  1562  0087               	movwf	7
  8051  1563  082F               	movf	??_process_gpio_cmd^(0+128),w
  8052  1564  0081               	movwf	1
  8053                           
  8054                           ;main.c: 87: LATC = cmd & ~gpio_dir;
  8055  1565  0022               	movlb	2	; select bank2
  8056  1566  0950               	comf	process_gpio_cmd@gpio_dir^(0+256),w
  8057  1567  0021               	movlb	1	; select bank1
  8058  1568  0532               	andwf	process_gpio_cmd@cmd^(0+128),w
  8059  1569  0022               	movlb	2	; select bank2
  8060  156A  008E               	movwf	14	;volatile
  8061                           
  8062                           ;main.c: 88: return 1;
  8063  156B  3001               	movlw	1
  8064                           
  8065                           ;main.c: 89: }
  8066  156C  0008               	return
  8067  156D                     l5113:	
  8068  156D  0021               	movlb	1	; select bank1
  8069  156E  0830               	movf	process_gpio_cmd@cmd_type^(0+128),w
  8070                           
  8071                           ; Switch size 1, requested type "space"
  8072                           ; Number of cases is 4, Range of values is 0 to 192
  8073                           ; switch strategies available:
  8074                           ; Name         Instructions Cycles
  8075                           ; simple_byte           13     7 (average)
  8076                           ; jumptable            260     6 (fixed)
  8077                           ;	Chosen strategy is simple_byte
  8078  156F  3A00               	xorlw	0	; case 0
  8079  1570  1903               	skipnz
  8080  1571  2D2E               	goto	l5075
  8081  1572  3A40               	xorlw	64	; case 64
  8082  1573  1903               	skipnz
  8083  1574  2D39               	goto	l5083
  8084  1575  3AC0               	xorlw	192	; case 128
  8085  1576  1903               	skipnz
  8086  1577  2D51               	goto	l5097
  8087  1578  3A40               	xorlw	64	; case 192
  8088  1579  1903               	skipnz
  8089  157A  2D59               	goto	l5103
  8090  157B  2D7C               	goto	l224
  8091  157C                     l224:	
  8092  157C  0008               	return
  8093  157D                     __end_of_process_gpio_cmd:	
  8094                           
  8095                           	psect	text31
  8096  168A                     __ptext31:	
  8097 ;; *************** function _getsUSBUSART *****************
  8098 ;; Defined at:
  8099 ;;		line 484 in file "mcc_generated_files/usb/usb_device_cdc.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;  buffer          1    wreg     PTR unsigned char 
  8102 ;;		 -> gpio_task@usb_rx_buf(64), 
  8103 ;;  len             1   25[BANK1 ] unsigned char 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;  buffer          1   28[BANK1 ] PTR unsigned char 
  8106 ;;		 -> gpio_task@usb_rx_buf(64), 
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      unsigned char 
  8109 ;; Registers used:
  8110 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8116 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8119 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8120 ;;Total ram usage:        4 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:   11
  8123 ;; This function calls:
  8124 ;;		_USBTransferOnePacket
  8125 ;; This function is called by:
  8126 ;;		_gpio_task
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           
  8131                           ;psect for function _getsUSBUSART
  8132  168A                     _getsUSBUSART:	
  8133                           
  8134                           ;incstack = 0
  8135                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8136                           ;getsUSBUSART@buffer stored from wreg
  8137  168A  0021               	movlb	1	; select bank1
  8138  168B  00BC               	movwf	getsUSBUSART@buffer^(0+128)
  8139                           
  8140                           ;usb_device_cdc.c: 486: cdc_rx_len = 0;
  8141  168C  0022               	movlb	2	; select bank2
  8142  168D  01D5               	clrf	_cdc_rx_len^(0+256)
  8143                           
  8144                           ;usb_device_cdc.c: 488: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  8145  168E  0840               	movf	_CDCDataOutHandle^(0+256),w
  8146  168F  0441               	iorwf	(_CDCDataOutHandle+1)^(0+256),w
  8147  1690  1903               	btfsc	3,2
  8148  1691  2E98               	goto	l6707
  8149  1692  0840               	movf	_CDCDataOutHandle^(0+256),w
  8150  1693  0086               	movwf	6
  8151  1694  0841               	movf	(_CDCDataOutHandle+1)^(0+256),w
  8152  1695  0087               	movwf	7
  8153  1696  1B81               	btfsc	1,7
  8154  1697  2EE3               	goto	l6721
  8155  1698                     l6707:	
  8156                           
  8157                           ;usb_device_cdc.c: 489: {
  8158                           ;usb_device_cdc.c: 494: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  8159  1698  0840               	movf	_CDCDataOutHandle^(0+256),w
  8160  1699  0086               	movwf	6
  8161  169A  0841               	movf	(_CDCDataOutHandle+1)^(0+256),w
  8162  169B  0087               	movwf	7
  8163  169C  3141               	addfsr 1,1
  8164  169D  0021               	movlb	1	; select bank1
  8165  169E  0839               	movf	getsUSBUSART@len^(0+128),w
  8166  169F  0201               	subwf	1,w
  8167  16A0  1803               	skipnc
  8168  16A1  2EAD               	goto	l6711
  8169                           
  8170                           ;usb_device_cdc.c: 495: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  8171  16A2  0022               	movlb	2	; select bank2
  8172  16A3  0840               	movf	_CDCDataOutHandle^(0+256),w
  8173  16A4  0086               	movwf	6
  8174  16A5  0841               	movf	(_CDCDataOutHandle+1)^(0+256),w
  8175  16A6  0087               	movwf	7
  8176  16A7  3141               	addfsr 1,1
  8177  16A8  0801               	movf	1,w
  8178  16A9  0021               	movlb	1	; select bank1
  8179  16AA  00BA               	movwf	??_getsUSBUSART^(0+128)
  8180  16AB  083A               	movf	??_getsUSBUSART^(0+128),w
  8181  16AC  00B9               	movwf	getsUSBUSART@len^(0+128)
  8182  16AD                     l6711:	
  8183                           
  8184                           ;usb_device_cdc.c: 500: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  8185  16AD  0022               	movlb	2	; select bank2
  8186  16AE  01D5               	clrf	_cdc_rx_len^(0+256)
  8187  16AF                     l6717:	
  8188  16AF  0021               	movlb	1	; select bank1
  8189  16B0  0839               	movf	getsUSBUSART@len^(0+128),w
  8190  16B1  0022               	movlb	2	; select bank2
  8191  16B2  0255               	subwf	_cdc_rx_len^(0+256),w
  8192  16B3  1803               	btfsc	3,0
  8193  16B4  2ECE               	goto	l6719
  8194                           
  8195                           ;usb_device_cdc.c: 501: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  8196  16B5  0855               	movf	_cdc_rx_len^(0+256),w
  8197  16B6  3EA0               	addlw	(low (_cdc_data_rx| (0+256)))& (0+255)
  8198  16B7  0086               	movwf	6
  8199  16B8  3001               	movlw	1	; select bank3/4
  8200  16B9  0087               	movwf	7
  8201  16BA  0801               	movf	1,w
  8202  16BB  0021               	movlb	1	; select bank1
  8203  16BC  00BA               	movwf	??_getsUSBUSART^(0+128)
  8204  16BD  0022               	movlb	2	; select bank2
  8205  16BE  0855               	movf	_cdc_rx_len^(0+256),w
  8206  16BF  0021               	movlb	1	; select bank1
  8207  16C0  073C               	addwf	getsUSBUSART@buffer^(0+128),w
  8208  16C1  00BB               	movwf	(??_getsUSBUSART+1)^(0+128)
  8209  16C2  083B               	movf	(??_getsUSBUSART+1)^(0+128),w
  8210  16C3  0086               	movwf	6
  8211  16C4  3002               	movlw	2	; select bank4/5
  8212  16C5  0087               	movwf	7
  8213  16C6  083A               	movf	??_getsUSBUSART^(0+128),w
  8214  16C7  0081               	movwf	1
  8215  16C8  3001               	movlw	1
  8216  16C9  00BA               	movwf	??_getsUSBUSART^(0+128)
  8217  16CA  083A               	movf	??_getsUSBUSART^(0+128),w
  8218  16CB  0022               	movlb	2	; select bank2
  8219  16CC  07D5               	addwf	_cdc_rx_len^(0+256),f
  8220  16CD  2EAF               	goto	l6717
  8221  16CE                     l6719:	
  8222                           
  8223                           ;usb_device_cdc.c: 507: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8224  16CE  0021               	movlb	1	; select bank1
  8225  16CF  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  8226  16D0  30A0               	movlw	low _cdc_data_rx
  8227  16D1  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  8228  16D2  3001               	movlw	high _cdc_data_rx
  8229  16D3  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  8230  16D4  3040               	movlw	64
  8231  16D5  00BA               	movwf	??_getsUSBUSART^(0+128)
  8232  16D6  083A               	movf	??_getsUSBUSART^(0+128),w
  8233  16D7  00B1               	movwf	USBTransferOnePacket@len^(0+128)
  8234  16D8  3002               	movlw	2
  8235  16D9  318C  249F         	fcall	_USBTransferOnePacket
  8236  16DB  0021               	movlb	1	; select bank1
  8237  16DC  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  8238  16DD  0022               	movlb	2	; select bank2
  8239  16DE  00C1               	movwf	(_CDCDataOutHandle+1)^(0+256)
  8240  16DF  0021               	movlb	1	; select bank1
  8241  16E0  082E               	movf	?_USBTransferOnePacket^(0+128),w
  8242  16E1  0022               	movlb	2	; select bank2
  8243  16E2  00C0               	movwf	_CDCDataOutHandle^(0+256)
  8244  16E3                     l6721:	
  8245                           
  8246                           ;usb_device_cdc.c: 509: }
  8247                           ;usb_device_cdc.c: 511: return cdc_rx_len;
  8248  16E3  0855               	movf	_cdc_rx_len^(0+256),w
  8249  16E4  0008               	return
  8250  16E5                     __end_of_getsUSBUSART:	
  8251                           
  8252                           	psect	text32
  8253  0C9F                     __ptext32:	
  8254 ;; *************** function _USBTransferOnePacket *****************
  8255 ;; Defined at:
  8256 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;  ep              1    wreg     unsigned char 
  8259 ;;  dir             1   14[BANK1 ] unsigned char 
  8260 ;;  data            2   15[BANK1 ] PTR unsigned char 
  8261 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
  8262 ;;  len             1   17[BANK1 ] unsigned char 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;  ep              1   22[BANK1 ] unsigned char 
  8265 ;;  handle          2   23[BANK1 ] PTR volatile struct __BD
  8266 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  2   14[BANK1 ] PTR void 
  8269 ;; Registers used:
  8270 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8276 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;Total ram usage:       11 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; Hardware stack levels required when called:   10
  8283 ;; This function calls:
  8284 ;;		Nothing
  8285 ;; This function is called by:
  8286 ;;		_CDCInitEP
  8287 ;;		_getsUSBUSART
  8288 ;;		_CDCTxService
  8289 ;;		_USBCDCEventHandler
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           
  8294                           ;psect for function _USBTransferOnePacket
  8295  0C9F                     _USBTransferOnePacket:	
  8296                           
  8297                           ;incstack = 0
  8298                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  8299                           ;USBTransferOnePacket@ep stored from wreg
  8300  0C9F  0021               	movlb	1	; select bank1
  8301  0CA0  00B6               	movwf	USBTransferOnePacket@ep^(0+128)
  8302                           
  8303                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8304                           ;usb_device.c: 1000: if(dir != 0)
  8305  0CA1  082E               	movf	USBTransferOnePacket@dir^(0+128),w
  8306  0CA2  1903               	btfsc	3,2
  8307  0CA3  2CAC               	goto	l5679
  8308                           
  8309                           ;usb_device.c: 1001: {
  8310                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8311  0CA4  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8312  0CA5  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8313  0CA6  0086               	movwf	6
  8314  0CA7  0187               	clrf	7
  8315  0CA8  3F40               	moviw [0]fsr1
  8316  0CA9  00B7               	movwf	USBTransferOnePacket@handle^(0+128)
  8317  0CAA  3F41               	moviw [1]fsr1
  8318  0CAB  2CB4               	goto	L11
  8319  0CAC                     l5679:	
  8320                           ;usb_device.c: 1004: }
  8321                           
  8322                           
  8323                           ;usb_device.c: 1005: else
  8324                           ;usb_device.c: 1006: {
  8325                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8326  0CAC  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8327  0CAD  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8328  0CAE  0086               	movwf	6
  8329  0CAF  3001               	movlw	1	; select bank2/3
  8330  0CB0  0087               	movwf	7
  8331  0CB1  3F40               	moviw [0]fsr1
  8332  0CB2  00B7               	movwf	USBTransferOnePacket@handle^(0+128)
  8333  0CB3  3F41               	moviw [1]fsr1
  8334  0CB4                     L11:	
  8335  0CB4  00B8               	movwf	(USBTransferOnePacket@handle+1)^(0+128)
  8336                           
  8337                           ;usb_device.c: 1009: }
  8338                           ;usb_device.c: 1013: if(handle == 0)
  8339  0CB5  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8340  0CB6  0438               	iorwf	(USBTransferOnePacket@handle+1)^(0+128),w
  8341  0CB7  1D03               	btfss	3,2
  8342  0CB8  2CBC               	goto	l5687
  8343                           
  8344                           ;usb_device.c: 1014: {
  8345                           ;usb_device.c: 1015: return 0;
  8346  0CB9  01AE               	clrf	?_USBTransferOnePacket^(0+128)
  8347  0CBA  01AF               	clrf	(?_USBTransferOnePacket+1)^(0+128)
  8348  0CBB  0008               	return
  8349  0CBC                     l5687:	
  8350                           
  8351                           ;usb_device.c: 1016: }
  8352                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8353  0CBC  30FF               	movlw	255
  8354  0CBD  052F               	andwf	USBTransferOnePacket@data^(0+128),w
  8355  0CBE  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8356  0CBF  307F               	movlw	127
  8357  0CC0  0530               	andwf	(USBTransferOnePacket@data+1)^(0+128),w
  8358  0CC1  00B3               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  8359  0CC2  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8360  0CC3  0086               	movwf	6
  8361  0CC4  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8362  0CC5  0087               	movwf	7
  8363  0CC6  3142               	addfsr 1,2
  8364  0CC7  0832               	movf	??_USBTransferOnePacket^(0+128),w
  8365  0CC8  3FC0               	movwi [0]fsr1
  8366  0CC9  0833               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  8367  0CCA  3FC1               	movwi [1]fsr1
  8368                           
  8369                           ;usb_device.c: 1030: handle->CNT = len;
  8370  0CCB  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8371  0CCC  3E01               	addlw	1
  8372  0CCD  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8373  0CCE  3000               	movlw	0
  8374  0CCF  3D38               	addwfc	(USBTransferOnePacket@handle+1)^(0+128),w
  8375  0CD0  00B3               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  8376  0CD1  0832               	movf	??_USBTransferOnePacket^(0+128),w
  8377  0CD2  0086               	movwf	6
  8378  0CD3  0833               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  8379  0CD4  0087               	movwf	7
  8380  0CD5  0831               	movf	USBTransferOnePacket@len^(0+128),w
  8381  0CD6  0081               	movwf	1
  8382                           
  8383                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8384  0CD7  3040               	movlw	64
  8385  0CD8  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8386  0CD9  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8387  0CDA  0086               	movwf	6
  8388  0CDB  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8389  0CDC  0087               	movwf	7
  8390  0CDD  0832               	movf	??_USBTransferOnePacket^(0+128),w
  8391  0CDE  0581               	andwf	1,f
  8392                           
  8393                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8394  0CDF  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8395  0CE0  0086               	movwf	6
  8396  0CE1  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8397  0CE2  0087               	movwf	7
  8398  0CE3  1581               	bsf	1,3
  8399                           
  8400                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8401  0CE4  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8402  0CE5  0086               	movwf	6
  8403  0CE6  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8404  0CE7  0087               	movwf	7
  8405  0CE8  1781               	bsf	1,7
  8406                           
  8407                           ;usb_device.c: 1036: if(dir != 0)
  8408  0CE9  082E               	movf	USBTransferOnePacket@dir^(0+128),w
  8409  0CEA  1903               	btfsc	3,2
  8410  0CEB  2D03               	goto	l5697
  8411                           
  8412                           ;usb_device.c: 1037: {
  8413                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8414  0CEC  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8415  0CED  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8416  0CEE  0086               	movwf	6
  8417  0CEF  0187               	clrf	7
  8418  0CF0  3F40               	moviw [0]fsr1
  8419  0CF1  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8420  0CF2  3F41               	moviw [1]fsr1
  8421  0CF3  00B3               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  8422  0CF4  3004               	movlw	4
  8423  0CF5  0632               	xorwf	??_USBTransferOnePacket^(0+128),w
  8424  0CF6  00B4               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  8425  0CF7  3000               	movlw	0
  8426  0CF8  0633               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  8427  0CF9  00B5               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  8428  0CFA  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8429  0CFB  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8430  0CFC  0086               	movwf	6
  8431  0CFD  0187               	clrf	7
  8432  0CFE  0834               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  8433  0CFF  3FC0               	movwi [0]fsr1
  8434  0D00  0835               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  8435  0D01  3FC1               	movwi [1]fsr1
  8436                           
  8437                           ;usb_device.c: 1040: }
  8438  0D02  2D1B               	goto	l5699
  8439  0D03                     l5697:	
  8440                           
  8441                           ;usb_device.c: 1041: else
  8442                           ;usb_device.c: 1042: {
  8443                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8444  0D03  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8445  0D04  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8446  0D05  0086               	movwf	6
  8447  0D06  3001               	movlw	1	; select bank2/3
  8448  0D07  0087               	movwf	7
  8449  0D08  3F40               	moviw [0]fsr1
  8450  0D09  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8451  0D0A  3F41               	moviw [1]fsr1
  8452  0D0B  00B3               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  8453  0D0C  3004               	movlw	4
  8454  0D0D  0632               	xorwf	??_USBTransferOnePacket^(0+128),w
  8455  0D0E  00B4               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  8456  0D0F  3000               	movlw	0
  8457  0D10  0633               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  8458  0D11  00B5               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  8459  0D12  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8460  0D13  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8461  0D14  0086               	movwf	6
  8462  0D15  3001               	movlw	1	; select bank2/3
  8463  0D16  0087               	movwf	7
  8464  0D17  0834               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  8465  0D18  3FC0               	movwi [0]fsr1
  8466  0D19  0835               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  8467  0D1A  3FC1               	movwi [1]fsr1
  8468  0D1B                     l5699:	
  8469                           
  8470                           ;usb_device.c: 1045: }
  8471                           ;usb_device.c: 1046: return (void*)handle;
  8472  0D1B  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8473  0D1C  00AF               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  8474  0D1D  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8475  0D1E  00AE               	movwf	?_USBTransferOnePacket^(0+128)
  8476  0D1F  0008               	return
  8477  0D20                     __end_of_USBTransferOnePacket:	
  8478                           
  8479                           	psect	text33
  8480  1FEC                     __ptext33:	
  8481 ;; *************** function _gpio_init *****************
  8482 ;; Defined at:
  8483 ;;		line 92 in file "main.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;		None
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;		None
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  1    wreg      void 
  8490 ;; Registers used:
  8491 ;;		wreg
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;Total ram usage:        0 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:   10
  8504 ;; This function calls:
  8505 ;;		Nothing
  8506 ;; This function is called by:
  8507 ;;		_main
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           
  8512                           ;psect for function _gpio_init
  8513  1FEC                     _gpio_init:	
  8514                           
  8515                           ;main.c: 93: TRISC = 0b111111;
  8516                           
  8517                           ;incstack = 0
  8518                           ; Regs used in _gpio_init: [wreg]
  8519  1FEC  303F               	movlw	63
  8520  1FED  0021               	movlb	1	; select bank1
  8521  1FEE  008E               	movwf	14	;volatile
  8522  1FEF  0008               	return
  8523  1FF0                     __end_of_gpio_init:	
  8524                           
  8525                           	psect	text34
  8526  1043                     __ptext34:	
  8527 ;; *************** function _SYSTEM_Initialize *****************
  8528 ;; Defined at:
  8529 ;;		line 72 in file "mcc_generated_files/mcc.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;		None
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  1    wreg      void 
  8536 ;; Registers used:
  8537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;Total ram usage:        0 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; Hardware stack levels required when called:   11
  8550 ;; This function calls:
  8551 ;;		_OSCILLATOR_Initialize
  8552 ;;		_PIN_MANAGER_Initialize
  8553 ;;		_USBDeviceAttach
  8554 ;;		_USBDeviceInit
  8555 ;;		_WDT_Initialize
  8556 ;; This function is called by:
  8557 ;;		_main
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561                           
  8562                           ;psect for function _SYSTEM_Initialize
  8563  1043                     _SYSTEM_Initialize:	
  8564                           
  8565                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  8566                           
  8567                           ;incstack = 0
  8568                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8569  1043  3190  2062  3190   	fcall	_PIN_MANAGER_Initialize
  8570                           
  8571                           ;mcc.c: 76: OSCILLATOR_Initialize();
  8572  1046  319F  27F6  3190   	fcall	_OSCILLATOR_Initialize
  8573                           
  8574                           ;mcc.c: 77: WDT_Initialize();
  8575  1049  319F  27E8  3190   	fcall	_WDT_Initialize
  8576                           
  8577                           ;mcc.c: 78: USBDeviceInit();
  8578  104C  3185  258F  3190   	fcall	_USBDeviceInit
  8579                           
  8580                           ;mcc.c: 79: USBDeviceAttach();
  8581  104F  3190  20DA         	fcall	_USBDeviceAttach
  8582  1051  0008               	return
  8583  1052                     __end_of_SYSTEM_Initialize:	
  8584                           
  8585                           	psect	text35
  8586  1FE8                     __ptext35:	
  8587 ;; *************** function _WDT_Initialize *****************
  8588 ;; Defined at:
  8589 ;;		line 96 in file "mcc_generated_files/mcc.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;		None
  8592 ;; Auto vars:     Size  Location     Type
  8593 ;;		None
  8594 ;; Return value:  Size  Location     Type
  8595 ;;                  1    wreg      void 
  8596 ;; Registers used:
  8597 ;;		wreg
  8598 ;; Tracked objects:
  8599 ;;		On entry : 0/0
  8600 ;;		On exit  : 0/0
  8601 ;;		Unchanged: 0/0
  8602 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;Total ram usage:        0 bytes
  8608 ;; Hardware stack levels used:    1
  8609 ;; Hardware stack levels required when called:   10
  8610 ;; This function calls:
  8611 ;;		Nothing
  8612 ;; This function is called by:
  8613 ;;		_SYSTEM_Initialize
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           
  8618                           ;psect for function _WDT_Initialize
  8619  1FE8                     _WDT_Initialize:	
  8620                           
  8621                           ;mcc.c: 99: WDTCON = 0x16;
  8622                           
  8623                           ;incstack = 0
  8624                           ; Regs used in _WDT_Initialize: [wreg]
  8625  1FE8  3016               	movlw	22
  8626  1FE9  0021               	movlb	1	; select bank1
  8627  1FEA  0097               	movwf	23	;volatile
  8628  1FEB  0008               	return
  8629  1FEC                     __end_of_WDT_Initialize:	
  8630                           
  8631                           	psect	text36
  8632  058F                     __ptext36:	
  8633 ;; *************** function _USBDeviceInit *****************
  8634 ;; Defined at:
  8635 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;  p               2   15[BANK1 ] PTR unsigned char 
  8640 ;;		 -> UEP1(1), 
  8641 ;;  i               1   17[BANK1 ] unsigned char 
  8642 ;;  i               1   18[BANK1 ] unsigned char 
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  1    wreg      void 
  8645 ;; Registers used:
  8646 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;Total ram usage:        5 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; Hardware stack levels required when called:   10
  8659 ;; This function calls:
  8660 ;;		Nothing
  8661 ;; This function is called by:
  8662 ;;		_SYSTEM_Initialize
  8663 ;;		_main
  8664 ;;		_USBDeviceTasks
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           
  8669                           ;psect for function _USBDeviceInit
  8670  058F                     _USBDeviceInit:	
  8671                           
  8672                           ;usb_device.c: 279: uint8_t i;
  8673                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8677  058F  0021               	movlb	1	; select bank1
  8678  0590  1112               	bcf	18,2	;volatile
  8679                           
  8680                           ;usb_device.c: 285: ;
  8681                           ;usb_device.c: 288: {UEIR = 0;};
  8682  0591  003D               	movlb	29	; select bank29
  8683  0592  0193               	clrf	19	;volatile
  8684                           
  8685                           ;usb_device.c: 291: {UIR = 0;};
  8686  0593  0190               	clrf	16	;volatile
  8687                           
  8688                           ;usb_device.c: 294: UEP0 = 0;
  8689  0594  0198               	clrf	24	;volatile
  8690                           
  8691                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  8692  0595  300E               	movlw	14
  8693  0596  0021               	movlb	1	; select bank1
  8694  0597  00B0               	movwf	(USBDeviceInit@p+1)^(0+128)
  8695  0598  3099               	movlw	153
  8696  0599  00AF               	movwf	USBDeviceInit@p^(0+128)
  8697  059A  01B1               	clrf	USBDeviceInit@i_1509^(0+128)
  8698  059B  3002               	movlw	2
  8699  059C  0231               	subwf	USBDeviceInit@i_1509^(0+128),w
  8700  059D  1803               	btfsc	3,0
  8701  059E  2DB0               	goto	l6539
  8702  059F                     l6531:	
  8703  059F  082F               	movf	USBDeviceInit@p^(0+128),w
  8704  05A0  0086               	movwf	6
  8705  05A1  0830               	movf	(USBDeviceInit@p+1)^(0+128),w
  8706  05A2  0087               	movwf	7
  8707  05A3  0181               	clrf	1
  8708  05A4  3001               	movlw	1
  8709  05A5  07AF               	addwf	USBDeviceInit@p^(0+128),f
  8710  05A6  3000               	movlw	0
  8711  05A7  3DB0               	addwfc	(USBDeviceInit@p+1)^(0+128),f
  8712  05A8  3001               	movlw	1
  8713  05A9  00AE               	movwf	??_USBDeviceInit^(0+128)
  8714  05AA  082E               	movf	??_USBDeviceInit^(0+128),w
  8715  05AB  07B1               	addwf	USBDeviceInit@i_1509^(0+128),f
  8716  05AC  3002               	movlw	2
  8717  05AD  0231               	subwf	USBDeviceInit@i_1509^(0+128),w
  8718  05AE  1C03               	skipc
  8719  05AF  2D9F               	goto	l6531
  8720  05B0                     l6539:	
  8721                           
  8722                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8723  05B0  3016               	movlw	22
  8724  05B1  003D               	movlb	29	; select bank29
  8725  05B2  0091               	movwf	17	;volatile
  8726  05B3  309F               	movlw	159
  8727  05B4  0097               	movwf	23	;volatile
  8728  05B5  307B               	movlw	123
  8729  05B6  0092               	movwf	18	;volatile
  8730                           
  8731                           ;usb_device.c: 301: ;
  8732                           ;usb_device.c: 304: ;
  8733                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8734  05B7  0021               	movlb	1	; select bank1
  8735  05B8  01B2               	clrf	USBDeviceInit@i^(0+128)
  8736  05B9  300C               	movlw	12
  8737  05BA  0232               	subwf	USBDeviceInit@i^(0+128),w
  8738  05BB  1803               	btfsc	3,0
  8739  05BC  2DD6               	goto	l425
  8740  05BD                     l6547:	
  8741                           
  8742                           ;usb_device.c: 308: {
  8743                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  8744  05BD  0832               	movf	USBDeviceInit@i^(0+128),w
  8745  05BE  00AE               	movwf	??_USBDeviceInit^(0+128)
  8746  05BF  3001               	movlw	1
  8747  05C0                     u6765:	
  8748  05C0  35AE               	lslf	??_USBDeviceInit^(0+128),f
  8749  05C1  3EFF               	addlw	-1
  8750  05C2  1D03               	skipz
  8751  05C3  2DC0               	goto	u6765
  8752  05C4  352E               	lslf	??_USBDeviceInit^(0+128),w
  8753  05C5  3E20               	addlw	32
  8754  05C6  0086               	movwf	6
  8755  05C7  0187               	clrf	7
  8756  05C8  3000               	movlw	0
  8757  05C9  3FC0               	movwi [0]fsr1
  8758  05CA  3000               	movlw	0
  8759  05CB  3FC1               	movwi [1]fsr1
  8760  05CC  3FC2               	movwi [2]fsr1
  8761  05CD  3FC3               	movwi [3]fsr1
  8762  05CE  3001               	movlw	1
  8763  05CF  00AE               	movwf	??_USBDeviceInit^(0+128)
  8764  05D0  082E               	movf	??_USBDeviceInit^(0+128),w
  8765  05D1  07B2               	addwf	USBDeviceInit@i^(0+128),f
  8766  05D2  300C               	movlw	12
  8767  05D3  0232               	subwf	USBDeviceInit@i^(0+128),w
  8768  05D4  1C03               	skipc
  8769  05D5  2DBD               	goto	l6547
  8770  05D6                     l425:	
  8771                           
  8772                           ;usb_device.c: 310: }
  8773                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  8774  05D6  003D               	movlb	29	; select bank29
  8775  05D7  170E               	bsf	14,6	;volatile
  8776                           
  8777                           ;usb_device.c: 316: UADDR = 0x00;
  8778  05D8  0196               	clrf	22	;volatile
  8779                           
  8780                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  8781  05D9  120E               	bcf	14,4	;volatile
  8782                           
  8783                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  8784  05DA  130E               	bcf	14,6	;volatile
  8785  05DB                     l6559:	
  8786                           ;usb_device.c: 325: do
  8787                           
  8788                           
  8789                           ;usb_device.c: 326: {
  8790                           ;usb_device.c: 327: (UIR &= 0xF7);
  8791  05DB  30F7               	movlw	247
  8792  05DC  0021               	movlb	1	; select bank1
  8793  05DD  00AE               	movwf	??_USBDeviceInit^(0+128)
  8794  05DE  082E               	movf	??_USBDeviceInit^(0+128),w
  8795  05DF  003D               	movlb	29	; select bank29
  8796  05E0  0590               	andwf	16,f	;volatile
  8797                           
  8798                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  8799  05E1  0021               	movlb	1	; select bank1
  8800  05E2  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  8801                           
  8802                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  8803  05E3  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
  8804                           
  8805                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  8806  05E4  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
  8807  05E5  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  8808                           
  8809                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  8810  05E6  003D               	movlb	29	; select bank29
  8811  05E7  1990               	btfsc	16,3	;volatile
  8812  05E8  2DDB               	goto	l6559
  8813                           
  8814                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  8815  05E9  3001               	movlw	1
  8816  05EA  0021               	movlb	1	; select bank1
  8817  05EB  00AE               	movwf	??_USBDeviceInit^(0+128)
  8818  05EC  082E               	movf	??_USBDeviceInit^(0+128),w
  8819  05ED  0022               	movlb	2	; select bank2
  8820  05EE  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  8821                           
  8822                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  8823  05EF  3001               	movlw	1
  8824  05F0  0021               	movlb	1	; select bank1
  8825  05F1  00AE               	movwf	??_USBDeviceInit^(0+128)
  8826  05F2  082E               	movf	??_USBDeviceInit^(0+128),w
  8827  05F3  0022               	movlb	2	; select bank2
  8828  05F4  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  8829                           
  8830                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  8831  05F5  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  8832                           
  8833                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  8834  05F6  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  8835                           
  8836                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  8837  05F7  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
  8838                           
  8839                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  8840  05F8  0021               	movlb	1	; select bank1
  8841  05F9  01B2               	clrf	USBDeviceInit@i^(0+128)
  8842  05FA  3003               	movlw	3
  8843  05FB  0232               	subwf	USBDeviceInit@i^(0+128),w
  8844  05FC  1803               	btfsc	3,0
  8845  05FD  2E21               	goto	l6587
  8846  05FE                     l6581:	
  8847                           
  8848                           ;usb_device.c: 346: {
  8849                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  8850  05FE  3532               	lslf	USBDeviceInit@i^(0+128),w
  8851  05FF  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8852  0600  0086               	movwf	6
  8853  0601  0187               	clrf	7
  8854  0602  3000               	movlw	0
  8855  0603  3FC0               	movwi [0]fsr1
  8856  0604  3FC1               	movwi [1]fsr1
  8857                           
  8858                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  8859  0605  3532               	lslf	USBDeviceInit@i^(0+128),w
  8860  0606  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8861  0607  0086               	movwf	6
  8862  0608  3001               	movlw	1	; select bank2/3
  8863  0609  0087               	movwf	7
  8864  060A  3000               	movlw	0
  8865  060B  3FC0               	movwi [0]fsr1
  8866  060C  3FC1               	movwi [1]fsr1
  8867                           
  8868                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  8869  060D  0832               	movf	USBDeviceInit@i^(0+128),w
  8870  060E  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8871  060F  0086               	movwf	6
  8872  0610  3001               	movlw	1	; select bank2/3
  8873  0611  0087               	movwf	7
  8874  0612  0181               	clrf	1
  8875                           
  8876                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  8877  0613  0832               	movf	USBDeviceInit@i^(0+128),w
  8878  0614  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8879  0615  0086               	movwf	6
  8880  0616  3001               	movlw	1	; select bank2/3
  8881  0617  0087               	movwf	7
  8882  0618  0181               	clrf	1
  8883  0619  3001               	movlw	1
  8884  061A  00AE               	movwf	??_USBDeviceInit^(0+128)
  8885  061B  082E               	movf	??_USBDeviceInit^(0+128),w
  8886  061C  07B2               	addwf	USBDeviceInit@i^(0+128),f
  8887  061D  3003               	movlw	3
  8888  061E  0232               	subwf	USBDeviceInit@i^(0+128),w
  8889  061F  1C03               	skipc
  8890  0620  2DFE               	goto	l6581
  8891  0621                     l6587:	
  8892                           
  8893                           ;usb_device.c: 351: }
  8894                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8895  0621  3028               	movlw	40
  8896  0622  00CD               	movwf	_pBDTEntryIn^(0+128)
  8897  0623  3000               	movlw	0
  8898  0624  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  8899                           
  8900                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  8901  0625  3016               	movlw	22
  8902  0626  003D               	movlb	29	; select bank29
  8903  0627  0098               	movwf	24	;volatile
  8904                           
  8905                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8906  0628  3000               	movlw	0
  8907  0629  0020               	movlb	0	; select bank0
  8908  062A  00A3               	movwf	35	;volatile
  8909  062B  3050               	movlw	80
  8910  062C  00A2               	movwf	34	;volatile
  8911                           
  8912                           ;usb_device.c: 359: BDT[0].CNT = 16;
  8913  062D  3010               	movlw	16
  8914  062E  00A1               	movwf	33	;volatile
  8915                           
  8916                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  8917  062F  3004               	movlw	4
  8918  0630  0021               	movlb	1	; select bank1
  8919  0631  00AE               	movwf	??_USBDeviceInit^(0+128)
  8920  0632  082E               	movf	??_USBDeviceInit^(0+128),w
  8921  0633  0020               	movlb	0	; select bank0
  8922  0634  00A0               	movwf	32	;volatile
  8923                           
  8924                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  8925  0635  17A0               	bsf	32,7	;volatile
  8926                           
  8927                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  8928  0636  0021               	movlb	1	; select bank1
  8929  0637  01E1               	clrf	_USBActiveConfiguration^(0+128)	;volatile
  8930                           
  8931                           ;usb_device.c: 366: USB1msTickCount = 0;
  8932  0638  3000               	movlw	0
  8933  0639  0022               	movlb	2	; select bank2
  8934  063A  00B3               	movwf	(_USB1msTickCount+3)^(0+256)	;volatile
  8935  063B  3000               	movlw	0
  8936  063C  00B2               	movwf	(_USB1msTickCount+2)^(0+256)	;volatile
  8937  063D  3000               	movlw	0
  8938  063E  00B1               	movwf	(_USB1msTickCount+1)^(0+256)	;volatile
  8939  063F  3000               	movlw	0
  8940  0640  00B0               	movwf	_USB1msTickCount^(0+256)	;volatile
  8941                           
  8942                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  8943  0641  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  8944                           
  8945                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  8946  0642  0021               	movlb	1	; select bank1
  8947  0643  01DF               	clrf	_USBDeviceState^(0+128)	;volatile
  8948  0644  0008               	return
  8949  0645                     __end_of_USBDeviceInit:	
  8950                           
  8951                           	psect	text37
  8952  10DA                     __ptext37:	
  8953 ;; *************** function _USBDeviceAttach *****************
  8954 ;; Defined at:
  8955 ;;		line 1352 in file "mcc_generated_files/usb/usb_device.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;		None
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;		None
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  1    wreg      void 
  8962 ;; Registers used:
  8963 ;;		wreg, status,2, status,0
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;Total ram usage:        1 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:   10
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		_SYSTEM_Initialize
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           
  8984                           ;psect for function _USBDeviceAttach
  8985  10DA                     _USBDeviceAttach:	
  8986                           
  8987                           ;usb_device.c: 1356: {
  8988                           ;usb_device.c: 1357: if(1 == 1)
  8989                           
  8990                           ;incstack = 0
  8991                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  8992  10DA  0021               	movlb	1	; select bank1
  8993  10DB  085F               	movf	_USBDeviceState^(0+128),w	;volatile
  8994  10DC  1D03               	btfss	3,2
  8995  10DD  0008               	return
  8996                           
  8997                           ;usb_device.c: 1358: {
  8998                           ;usb_device.c: 1360: UCON = 0;
  8999  10DE  003D               	movlb	29	; select bank29
  9000  10DF  018E               	clrf	14	;volatile
  9001                           
  9002                           ;usb_device.c: 1363: UIE = 0;
  9003  10E0  0192               	clrf	18	;volatile
  9004                           
  9005                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  9006  10E1  3016               	movlw	22
  9007  10E2  0091               	movwf	17	;volatile
  9008  10E3  309F               	movlw	159
  9009  10E4  0097               	movwf	23	;volatile
  9010  10E5  307B               	movlw	123
  9011  10E6  0092               	movwf	18	;volatile
  9012                           
  9013                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  9014  10E7  0021               	movlb	1	; select bank1
  9015  10E8  1512               	bsf	18,2	;volatile
  9016  10E9  170B               	bsf	11,6	;volatile
  9017  10EA  178B               	bsf	11,7	;volatile
  9018  10EB                     l485:	
  9019                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  9020                           
  9021  10EB  003D               	movlb	29	; select bank29
  9022  10EC  198E               	btfsc	14,3	;volatile
  9023  10ED  28F0               	goto	l5071
  9024  10EE  158E               	bsf	14,3	;volatile
  9025  10EF  28EB               	goto	l485
  9026  10F0                     l5071:	
  9027                           
  9028                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  9029  10F0  3001               	movlw	1
  9030  10F1  0021               	movlb	1	; select bank1
  9031  10F2  00AE               	movwf	??_USBDeviceAttach^(0+128)
  9032  10F3  082E               	movf	??_USBDeviceAttach^(0+128),w
  9033  10F4  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  9034  10F5  0008               	return
  9035  10F6                     __end_of_USBDeviceAttach:	
  9036                           
  9037                           	psect	text38
  9038  1062                     __ptext38:	
  9039 ;; *************** function _PIN_MANAGER_Initialize *****************
  9040 ;; Defined at:
  9041 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;		None
  9044 ;; Auto vars:     Size  Location     Type
  9045 ;;		None
  9046 ;; Return value:  Size  Location     Type
  9047 ;;                  1    wreg      void 
  9048 ;; Registers used:
  9049 ;;		wreg, status,2
  9050 ;; Tracked objects:
  9051 ;;		On entry : 0/0
  9052 ;;		On exit  : 0/0
  9053 ;;		Unchanged: 0/0
  9054 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;Total ram usage:        0 bytes
  9060 ;; Hardware stack levels used:    1
  9061 ;; Hardware stack levels required when called:   10
  9062 ;; This function calls:
  9063 ;;		Nothing
  9064 ;; This function is called by:
  9065 ;;		_SYSTEM_Initialize
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           
  9070                           ;psect for function _PIN_MANAGER_Initialize
  9071  1062                     _PIN_MANAGER_Initialize:	
  9072                           
  9073                           ;pin_manager.c: 57: LATA = 0x00;
  9074                           
  9075                           ;incstack = 0
  9076                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9077  1062  0022               	movlb	2	; select bank2
  9078  1063  018C               	clrf	12	;volatile
  9079                           
  9080                           ;pin_manager.c: 58: LATC = 0x00;
  9081  1064  018E               	clrf	14	;volatile
  9082                           
  9083                           ;pin_manager.c: 63: TRISA = 0x30;
  9084  1065  3030               	movlw	48
  9085  1066  0021               	movlb	1	; select bank1
  9086  1067  008C               	movwf	12	;volatile
  9087                           
  9088                           ;pin_manager.c: 64: TRISC = 0x07;
  9089  1068  3007               	movlw	7
  9090  1069  008E               	movwf	14	;volatile
  9091                           
  9092                           ;pin_manager.c: 69: ANSELC = 0x08;
  9093  106A  3008               	movlw	8
  9094  106B  0023               	movlb	3	; select bank3
  9095  106C  008E               	movwf	14	;volatile
  9096                           
  9097                           ;pin_manager.c: 70: ANSELA = 0x10;
  9098  106D  3010               	movlw	16
  9099  106E  008C               	movwf	12	;volatile
  9100                           
  9101                           ;pin_manager.c: 75: WPUA = 0x38;
  9102  106F  3038               	movlw	56
  9103  1070  0024               	movlb	4	; select bank4
  9104  1071  008C               	movwf	12	;volatile
  9105                           
  9106                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 0;
  9107  1072  0021               	movlb	1	; select bank1
  9108  1073  1395               	bcf	21,7	;volatile
  9109                           
  9110                           ;pin_manager.c: 82: APFCON = 0x00;
  9111  1074  0022               	movlb	2	; select bank2
  9112  1075  019D               	clrf	29	;volatile
  9113  1076  0008               	return
  9114  1077                     __end_of_PIN_MANAGER_Initialize:	
  9115                           
  9116                           	psect	text39
  9117  1FF6                     __ptext39:	
  9118 ;; *************** function _OSCILLATOR_Initialize *****************
  9119 ;; Defined at:
  9120 ;;		line 82 in file "mcc_generated_files/mcc.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;		None
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;		None
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  1    wreg      void 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9138 ;;Total ram usage:        0 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:   10
  9141 ;; This function calls:
  9142 ;;		Nothing
  9143 ;; This function is called by:
  9144 ;;		_SYSTEM_Initialize
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           
  9149                           ;psect for function _OSCILLATOR_Initialize
  9150  1FF6                     _OSCILLATOR_Initialize:	
  9151                           
  9152                           ;mcc.c: 85: OSCCON = 0x3C;
  9153                           
  9154                           ;incstack = 0
  9155                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9156  1FF6  303C               	movlw	60
  9157  1FF7  0021               	movlb	1	; select bank1
  9158  1FF8  0099               	movwf	25	;volatile
  9159                           
  9160                           ;mcc.c: 87: OSCTUNE = 0x00;
  9161  1FF9  0198               	clrf	24	;volatile
  9162                           
  9163                           ;mcc.c: 89: ACTCON = 0x00;
  9164  1FFA  0027               	movlb	7	; select bank7
  9165  1FFB  019B               	clrf	27	;volatile
  9166  1FFC                     l183:	
  9167                           ;mcc.c: 92: {
  9168                           
  9169                           ;mcc.c: 91: while(PLLRDY == 0)
  9170                           
  9171  1FFC  0021               	movlb	1	; select bank1
  9172  1FFD  1B1A               	btfsc	26,6	;volatile
  9173  1FFE  0008               	return
  9174  1FFF  2FFC               	goto	l183
  9175  2000                     __end_of_OSCILLATOR_Initialize:	
  9176                           
  9177                           	psect	intentry
  9178  0004                     __pintentry:	
  9179 ;; *************** function _INTERRUPT_InterruptManager *****************
  9180 ;; Defined at:
  9181 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;		None
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;		None
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  1    wreg      void 
  9188 ;; Registers used:
  9189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9190 ;; Tracked objects:
  9191 ;;		On entry : 0/0
  9192 ;;		On exit  : 0/0
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9197 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;Total ram usage:        1 bytes
  9200 ;; Hardware stack levels used:    1
  9201 ;; Hardware stack levels required when called:    9
  9202 ;; This function calls:
  9203 ;;		i1_USBDeviceTasks
  9204 ;; This function is called by:
  9205 ;;		Interrupt level 1
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209  0004                     _INTERRUPT_InterruptManager:	
  9210                           
  9211                           ;incstack = 0
  9212 ;; hardware stack exceeded
  9213  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9214                           
  9215                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9216  0005  3180               	pagesel	$
  9217  0006  0020               	movlb	0	; select bank0
  9218  0007  087F               	movf	127,w
  9219  0008  0021               	movlb	1	; select bank1
  9220  0009  00AD               	movwf	??_INTERRUPT_InterruptManager^(0+128)
  9221                           
  9222                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE2bits.USBIE == 1 && PIR2bits.USB
      +                          IF == 1)
  9223  000A  1B0B               	btfsc	11,6	;volatile
  9224  000B  1D12               	btfss	18,2	;volatile
  9225  000C  2812               	goto	i1l133
  9226  000D  0020               	movlb	0	; select bank0
  9227  000E  1D12               	btfss	18,2	;volatile
  9228  000F  2812               	goto	i1l133
  9229                           
  9230                           ;interrupt_manager.c: 55: {
  9231                           ;interrupt_manager.c: 56: USBDeviceTasks();
  9232  0010  3183  23E0         	fcall	i1_USBDeviceTasks
  9233  0012                     i1l133:	
  9234                           ;interrupt_manager.c: 58: else
  9235                           ;interrupt_manager.c: 59: {
  9236                           
  9237                           ;interrupt_manager.c: 57: }
  9238                           
  9239  0012  0021               	movlb	1	; select bank1
  9240  0013  082D               	movf	??_INTERRUPT_InterruptManager^(0+128),w
  9241  0014  0020               	movlb	0	; select bank0
  9242  0015  00FF               	movwf	127
  9243  0016  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9244  0017  0009               	retfie
  9245  0018                     __end_of_INTERRUPT_InterruptManager:	
  9246                           
  9247                           	psect	text41
  9248  03E0                     __ptext41:	
  9249 ;; *************** function i1_USBDeviceTasks *****************
  9250 ;; Defined at:
  9251 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;		None
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;  USBDeviceTas    1   12[BANK1 ] unsigned char 
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9267 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9268 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9269 ;;Total ram usage:        3 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; Hardware stack levels required when called:    8
  9272 ;; This function calls:
  9273 ;;		i1_USBCtrlEPAllowStatusStage
  9274 ;;		i1_USBCtrlEPService
  9275 ;;		i1_USBDeviceInit
  9276 ;;		i1_USBIncrement1msInternalTimers
  9277 ;;		i1_USBStallHandler
  9278 ;;		i1_USBSuspend
  9279 ;;		i1_USBWakeFromSuspend
  9280 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9281 ;; This function is called by:
  9282 ;;		_INTERRUPT_InterruptManager
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           
  9287                           ;psect for function i1_USBDeviceTasks
  9288  03E0                     i1_USBDeviceTasks:	
  9289                           
  9290                           ;usb_device.c: 479: uint8_t i;
  9291                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  9292                           
  9293                           ;incstack = 0
  9294 ;; hardware stack exceeded
  9295                           ; Regs used in i1_USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9296  03E0  0021               	movlb	1	; select bank1
  9297  03E1  035F               	decf	_USBDeviceState^(0+128),w	;volatile
  9298  03E2  1D03               	btfss	3,2
  9299  03E3  2BEF               	goto	i1l6993
  9300                           
  9301                           ;usb_device.c: 591: {
  9302                           ;usb_device.c: 601: if(!UCONbits.SE0)
  9303  03E4  003D               	movlb	29	; select bank29
  9304  03E5  1A8E               	btfsc	14,5	;volatile
  9305  03E6  2BEF               	goto	i1l6993
  9306                           
  9307                           ;usb_device.c: 602: {
  9308                           ;usb_device.c: 608: {UIR = 0;};
  9309  03E7  0190               	clrf	16	;volatile
  9310                           
  9311                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  9312  03E8  1412               	bsf	18,0	;volatile
  9313                           
  9314                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  9315  03E9  1612               	bsf	18,4	;volatile
  9316                           
  9317                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  9318  03EA  3002               	movlw	2
  9319  03EB  0021               	movlb	1	; select bank1
  9320  03EC  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9321  03ED  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9322  03EE  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  9323  03EF                     i1l6993:	
  9324                           
  9325                           ;usb_device.c: 617: }
  9326                           ;usb_device.c: 618: }
  9327                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  9328  03EF  003D               	movlb	29	; select bank29
  9329  03F0  1910               	btfsc	16,2	;volatile
  9330  03F1  1D12               	btfss	18,2	;volatile
  9331  03F2  2BFC               	goto	i1l7001
  9332                           
  9333                           ;usb_device.c: 635: {
  9334                           ;usb_device.c: 636: (UIR &= 0xFB);
  9335  03F3  30FB               	movlw	251
  9336  03F4  0021               	movlb	1	; select bank1
  9337  03F5  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9338  03F6  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9339  03F7  003D               	movlb	29	; select bank29
  9340  03F8  0590               	andwf	16,f	;volatile
  9341                           
  9342                           ;usb_device.c: 640: USBWakeFromSuspend();
  9343  03F9  3191  2170  3183   	fcall	i1_USBWakeFromSuspend
  9344  03FC                     i1l7001:	
  9345                           
  9346                           ;usb_device.c: 642: }
  9347                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  9348  03FC  003D               	movlb	29	; select bank29
  9349  03FD  1C8E               	btfss	14,1	;volatile
  9350  03FE  2C02               	goto	i1l436
  9351                           
  9352                           ;usb_device.c: 648: {
  9353                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  9354  03FF  0020               	movlb	0	; select bank0
  9355  0400  1112               	bcf	18,2	;volatile
  9356                           
  9357                           ;usb_device.c: 650: return;
  9358  0401  0008               	return
  9359  0402                     i1l436:	
  9360                           
  9361                           ;usb_device.c: 651: }
  9362                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  9363  0402  1810               	btfsc	16,0	;volatile
  9364  0403  1C12               	btfss	18,0	;volatile
  9365  0404  2C13               	goto	i1l7015
  9366                           
  9367                           ;usb_device.c: 664: {
  9368                           ;usb_device.c: 665: USBDeviceInit();
  9369  0405  3186  2645  3183   	fcall	i1_USBDeviceInit
  9370                           
  9371                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  9372  0408  0021               	movlb	1	; select bank1
  9373  0409  1512               	bsf	18,2	;volatile
  9374                           
  9375                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  9376  040A  3004               	movlw	4
  9377  040B  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9378  040C  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9379  040D  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  9380                           
  9381                           ;usb_device.c: 681: (UIR &= 0xFE);
  9382  040E  30FE               	movlw	254
  9383  040F  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9384  0410  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9385  0411  003D               	movlb	29	; select bank29
  9386  0412  0590               	andwf	16,f	;volatile
  9387  0413                     i1l7015:	
  9388                           
  9389                           ;usb_device.c: 682: }
  9390                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  9391  0413  1A10               	btfsc	16,4	;volatile
  9392  0414  1E12               	btfss	18,4	;volatile
  9393  0415  2C19               	goto	i1l7021
  9394                           
  9395                           ;usb_device.c: 688: {
  9396                           ;usb_device.c: 694: USBSuspend();
  9397  0416  3191  2112  3183   	fcall	i1_USBSuspend
  9398  0419                     i1l7021:	
  9399                           
  9400                           ;usb_device.c: 696: }
  9401                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  9402  0419  003D               	movlb	29	; select bank29
  9403  041A  1F10               	btfss	16,6	;volatile
  9404  041B  2C43               	goto	i1l7037
  9405                           
  9406                           ;usb_device.c: 709: {
  9407                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  9408  041C  1F12               	btfss	18,6	;volatile
  9409  041D  2C2E               	goto	i1l7027
  9410                           
  9411                           ;usb_device.c: 712: {
  9412                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  9413  041E  3073               	movlw	115
  9414  041F  0020               	movlb	0	; select bank0
  9415  0420  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9416  0421  3000               	movlw	0
  9417  0422  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9418  0423  3000               	movlw	0
  9419  0424  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9420  0425  3000               	movlw	0
  9421  0426  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9422  0427  3001               	movlw	1
  9423  0428  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9424  0429  3000               	movlw	0
  9425  042A  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9426  042B  3192  221F  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9427  042E                     i1l7027:	
  9428                           
  9429                           ;usb_device.c: 714: }
  9430                           ;usb_device.c: 715: (UIR &= 0xBF);
  9431  042E  30BF               	movlw	191
  9432  042F  0021               	movlb	1	; select bank1
  9433  0430  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9434  0431  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9435  0432  003D               	movlb	29	; select bank29
  9436  0433  0590               	andwf	16,f	;volatile
  9437                           
  9438                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  9439  0434  3190  208F  3183   	fcall	i1_USBIncrement1msInternalTimers
  9440                           
  9441                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  9442  0437  0022               	movlb	2	; select bank2
  9443  0438  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  9444  0439  1903               	btfsc	3,2
  9445  043A  2C3D               	goto	i1l442
  9446                           
  9447                           ;usb_device.c: 736: {
  9448                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  9449  043B  3001               	movlw	1
  9450  043C  02CB               	subwf	_USBStatusStageTimeoutCounter^(0+256),f	;volatile
  9451  043D                     i1l442:	
  9452                           
  9453                           ;usb_device.c: 738: }
  9454                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  9455  043D  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  9456  043E  1D03               	btfss	3,2
  9457  043F  2C43               	goto	i1l7037
  9458                           
  9459                           ;usb_device.c: 745: {
  9460                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  9461  0440  3187  278F  3183   	fcall	i1_USBCtrlEPAllowStatusStage
  9462  0443                     i1l7037:	
  9463                           
  9464                           ;usb_device.c: 747: }
  9465                           ;usb_device.c: 749: }
  9466                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  9467  0443  003D               	movlb	29	; select bank29
  9468  0444  1A90               	btfsc	16,5	;volatile
  9469  0445  1E92               	btfss	18,5	;volatile
  9470  0446  2C4A               	goto	i1l7043
  9471                           
  9472                           ;usb_device.c: 752: {
  9473                           ;usb_device.c: 753: USBStallHandler();
  9474  0447  3191  21D3  3183   	fcall	i1_USBStallHandler
  9475  044A                     i1l7043:	
  9476                           
  9477                           ;usb_device.c: 754: }
  9478                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  9479  044A  003D               	movlb	29	; select bank29
  9480  044B  1890               	btfsc	16,1	;volatile
  9481  044C  1C92               	btfss	18,1	;volatile
  9482  044D  2C60               	goto	i1l7051
  9483                           
  9484                           ;usb_device.c: 757: {
  9485                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  9486  044E  30FF               	movlw	255
  9487  044F  0020               	movlb	0	; select bank0
  9488  0450  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9489  0451  307F               	movlw	127
  9490  0452  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9491  0453  3000               	movlw	0
  9492  0454  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9493  0455  3000               	movlw	0
  9494  0456  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9495  0457  3001               	movlw	1
  9496  0458  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9497  0459  3000               	movlw	0
  9498  045A  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9499  045B  3192  221F  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9500                           
  9501                           ;usb_device.c: 759: {UEIR = 0;};
  9502  045E  003D               	movlb	29	; select bank29
  9503  045F  0193               	clrf	19	;volatile
  9504  0460                     i1l7051:	
  9505                           
  9506                           ;usb_device.c: 767: }
  9507                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  9508  0460  3004               	movlw	4
  9509  0461  0021               	movlb	1	; select bank1
  9510  0462  025F               	subwf	_USBDeviceState^(0+128),w	;volatile
  9511  0463  1803               	skipnc
  9512  0464  2C68               	goto	i1l446
  9513                           
  9514                           ;usb_device.c: 775: {
  9515                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  9516  0465  0020               	movlb	0	; select bank0
  9517  0466  1112               	bcf	18,2	;volatile
  9518                           
  9519                           ;usb_device.c: 777: return;
  9520  0467  0008               	return
  9521  0468                     i1l446:	
  9522                           
  9523                           ;usb_device.c: 778: }
  9524                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  9525  0468  003D               	movlb	29	; select bank29
  9526  0469  1D92               	btfss	18,3	;volatile
  9527  046A  2CBA               	goto	i1l447
  9528                           
  9529                           ;usb_device.c: 784: {
  9530                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  9531  046B  0021               	movlb	1	; select bank1
  9532  046C  01AC               	clrf	i1USBDeviceTasks@i^(0+128)
  9533  046D  3004               	movlw	4
  9534  046E  022C               	subwf	i1USBDeviceTasks@i^(0+128),w
  9535  046F  1803               	btfsc	3,0
  9536  0470  2CBA               	goto	i1l447
  9537  0471                     i1l448:	
  9538                           
  9539                           ;usb_device.c: 786: {
  9540                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  9541  0471  003D               	movlb	29	; select bank29
  9542  0472  1D90               	btfss	16,3	;volatile
  9543  0473  2CBA               	goto	i1l447
  9544                           
  9545                           ;usb_device.c: 788: {
  9546                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  9547  0474  080F               	movf	15,w	;volatile
  9548  0475  0021               	movlb	1	; select bank1
  9549  0476  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9550  0477  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9551  0478  00E0               	movwf	_USTATcopy^(0+128)	;volatile
  9552                           
  9553                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  9554  0479  0C60               	rrf	_USTATcopy^(0+128),w	;volatile
  9555  047A  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9556  047B  0CAA               	rrf	??i1_USBDeviceTasks^(0+128),f
  9557  047C  0C2A               	rrf	??i1_USBDeviceTasks^(0+128),w
  9558  047D  390F               	andlw	15
  9559  047E  00AB               	movwf	(??i1_USBDeviceTasks+1)^(0+128)
  9560  047F  082B               	movf	(??i1_USBDeviceTasks+1)^(0+128),w
  9561  0480  00DB               	movwf	_endpoint_number^(0+128)	;volatile
  9562                           
  9563                           ;usb_device.c: 793: (UIR &= 0xF7);
  9564  0481  30F7               	movlw	247
  9565  0482  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9566  0483  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9567  0484  003D               	movlb	29	; select bank29
  9568  0485  0590               	andwf	16,f	;volatile
  9569                           
  9570                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  9571  0486  0021               	movlb	1	; select bank1
  9572  0487  1960               	btfsc	_USTATcopy^(0+128),2	;volatile
  9573  0488  2C8C               	goto	i1l7071
  9574                           
  9575                           ;usb_device.c: 799: {
  9576                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  9577  0489  085B               	movf	_endpoint_number^(0+128),w	;volatile
  9578  048A  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  9579  048B  2C8E               	goto	L12
  9580  048C                     i1l7071:	
  9581                           ;usb_device.c: 801: }
  9582                           
  9583                           
  9584                           ;usb_device.c: 802: else
  9585                           ;usb_device.c: 803: {
  9586                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  9587  048C  085B               	movf	_endpoint_number^(0+128),w	;volatile
  9588  048D  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  9589  048E                     L12:	
  9590  048E  0086               	movwf	6
  9591  048F  3001               	movlw	1	; select bank2/3
  9592  0490  0087               	movwf	7
  9593  0491  0801               	movf	1,w
  9594  0492  3901               	andlw	1
  9595  0493  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9596  0494  3001               	movlw	1
  9597  0495  06AA               	xorwf	??i1_USBDeviceTasks^(0+128),f
  9598  0496  0801               	movf	1,w
  9599  0497  062A               	xorwf	??i1_USBDeviceTasks^(0+128),w
  9600  0498  39FE               	andlw	-2
  9601  0499  062A               	xorwf	??i1_USBDeviceTasks^(0+128),w
  9602  049A  0081               	movwf	1
  9603                           
  9604                           ;usb_device.c: 805: }
  9605                           ;usb_device.c: 810: if(endpoint_number == 0)
  9606  049B  085B               	movf	_endpoint_number^(0+128),w	;volatile
  9607  049C  1D03               	btfss	3,2
  9608  049D  2CA2               	goto	i1l7077
  9609                           
  9610                           ;usb_device.c: 811: {
  9611                           ;usb_device.c: 812: USBCtrlEPService();
  9612  049E  3194  24CF  3183   	fcall	i1_USBCtrlEPService
  9613                           
  9614                           ;usb_device.c: 813: }
  9615  04A1  2CB1               	goto	i1l7079
  9616  04A2                     i1l7077:	
  9617                           
  9618                           ;usb_device.c: 814: else
  9619                           ;usb_device.c: 815: {
  9620                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  9621  04A2  3072               	movlw	114
  9622  04A3  0020               	movlb	0	; select bank0
  9623  04A4  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9624  04A5  3000               	movlw	0
  9625  04A6  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9626  04A7  30E0               	movlw	low _USTATcopy
  9627  04A8  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9628  04A9  3000               	movlw	high _USTATcopy
  9629  04AA  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9630  04AB  3000               	movlw	0
  9631  04AC  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9632  04AD  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9633  04AE  3192  221F  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9634  04B1                     i1l7079:	
  9635                           ;usb_device.c: 819: else
  9636                           ;usb_device.c: 820: {
  9637                           ;usb_device.c: 821: break;
  9638                           
  9639                           ;usb_device.c: 817: }
  9640                           ;usb_device.c: 818: }
  9641                           
  9642  04B1  3001               	movlw	1
  9643  04B2  0021               	movlb	1	; select bank1
  9644  04B3  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9645  04B4  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9646  04B5  07AC               	addwf	i1USBDeviceTasks@i^(0+128),f
  9647  04B6  3004               	movlw	4
  9648  04B7  022C               	subwf	i1USBDeviceTasks@i^(0+128),w
  9649  04B8  1C03               	skipc
  9650  04B9  2C71               	goto	i1l448
  9651  04BA                     i1l447:	
  9652                           
  9653                           ;usb_device.c: 822: }
  9654                           ;usb_device.c: 823: }
  9655                           ;usb_device.c: 824: }
  9656                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  9657  04BA  0020               	movlb	0	; select bank0
  9658  04BB  1112               	bcf	18,2	;volatile
  9659  04BC  0008               	return
  9660  04BD                     __end_ofi1_USBDeviceTasks:	
  9661                           
  9662                           	psect	text42
  9663  1170                     __ptext42:	
  9664 ;; *************** function i1_USBWakeFromSuspend *****************
  9665 ;; Defined at:
  9666 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;		None
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;		None
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      void 
  9673 ;; Registers used:
  9674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9682 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9683 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;Total ram usage:        1 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; Hardware stack levels required when called:    4
  9687 ;; This function calls:
  9688 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9689 ;; This function is called by:
  9690 ;;		i1_USBDeviceTasks
  9691 ;; This function uses a non-reentrant model
  9692 ;;
  9693                           
  9694                           
  9695                           ;psect for function i1_USBWakeFromSuspend
  9696  1170                     i1_USBWakeFromSuspend:	
  9697                           
  9698                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  9699                           
  9700                           ;incstack = 0
  9701 ;; hardware stack exceeded
  9702                           ; Regs used in i1_USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9703  1170  0022               	movlb	2	; select bank2
  9704  1171  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
  9705                           
  9706                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  9707  1172  3074               	movlw	116
  9708  1173  0020               	movlb	0	; select bank0
  9709  1174  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9710  1175  3000               	movlw	0
  9711  1176  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9712  1177  3000               	movlw	0
  9713  1178  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9714  1179  3000               	movlw	0
  9715  117A  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9716  117B  3000               	movlw	0
  9717  117C  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9718  117D  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9719  117E  3192  221F  3191   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9720                           
  9721                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  9722  1181  003D               	movlb	29	; select bank29
  9723  1182  108E               	bcf	14,1	;volatile
  9724                           
  9725                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  9726  1183  1112               	bcf	18,2	;volatile
  9727  1184                     i1l6921:	
  9728                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  9729                           
  9730  1184  1D10               	btfss	16,2	;volatile
  9731  1185  298D               	goto	i1l6923
  9732                           
  9733                           ;usb_device.c: 2343: {
  9734                           ;usb_device.c: 2344: (UIR &= 0xFB);
  9735  1186  30FB               	movlw	251
  9736  1187  0020               	movlb	0	; select bank0
  9737  1188  00DE               	movwf	??i1_USBWakeFromSuspend
  9738  1189  085E               	movf	??i1_USBWakeFromSuspend,w
  9739  118A  003D               	movlb	29	; select bank29
  9740  118B  0590               	andwf	16,f	;volatile
  9741  118C  2984               	goto	i1l6921
  9742  118D                     i1l6923:	
  9743                           
  9744                           ;usb_device.c: 2345: }
  9745                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  9746  118D  0022               	movlb	2	; select bank2
  9747  118E  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  9748  118F  0008               	return
  9749  1190                     __end_ofi1_USBWakeFromSuspend:	
  9750                           
  9751                           	psect	text43
  9752  1112                     __ptext43:	
  9753 ;; *************** function i1_USBSuspend *****************
  9754 ;; Defined at:
  9755 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;		None
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;		None
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  1    wreg      void 
  9762 ;; Registers used:
  9763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;Total ram usage:        1 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; Hardware stack levels required when called:    4
  9776 ;; This function calls:
  9777 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9778 ;; This function is called by:
  9779 ;;		i1_USBDeviceTasks
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           
  9784                           ;psect for function i1_USBSuspend
  9785  1112                     i1_USBSuspend:	
  9786                           
  9787                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  9788                           
  9789                           ;incstack = 0
  9790 ;; hardware stack exceeded
  9791                           ; Regs used in i1_USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9792  1112  003D               	movlb	29	; select bank29
  9793  1113  1512               	bsf	18,2	;volatile
  9794                           
  9795                           ;usb_device.c: 2271: (UIR &= 0xEF);
  9796  1114  30EF               	movlw	239
  9797  1115  0020               	movlb	0	; select bank0
  9798  1116  00DE               	movwf	??i1_USBSuspend
  9799  1117  085E               	movf	??i1_USBSuspend,w
  9800  1118  003D               	movlb	29	; select bank29
  9801  1119  0590               	andwf	16,f	;volatile
  9802                           
  9803                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  9804  111A  148E               	bsf	14,1	;volatile
  9805                           
  9806                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  9807  111B  3001               	movlw	1
  9808  111C  0020               	movlb	0	; select bank0
  9809  111D  00DE               	movwf	??i1_USBSuspend
  9810  111E  085E               	movf	??i1_USBSuspend,w
  9811  111F  0022               	movlb	2	; select bank2
  9812  1120  00CD               	movwf	_USBBusIsSuspended^(0+256)	;volatile
  9813                           
  9814                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  9815  1121  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  9816                           
  9817                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  9818  1122  3075               	movlw	117
  9819  1123  0020               	movlb	0	; select bank0
  9820  1124  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9821  1125  3000               	movlw	0
  9822  1126  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9823  1127  3000               	movlw	0
  9824  1128  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9825  1129  3000               	movlw	0
  9826  112A  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9827  112B  3000               	movlw	0
  9828  112C  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9829  112D  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9830  112E  3192  221F         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9831  1130  0008               	return
  9832  1131                     __end_ofi1_USBSuspend:	
  9833                           
  9834                           	psect	text44
  9835  11D3                     __ptext44:	
  9836 ;; *************** function i1_USBStallHandler *****************
  9837 ;; Defined at:
  9838 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;		None
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;		None
  9843 ;; Return value:  Size  Location     Type
  9844 ;;                  1    wreg      void 
  9845 ;; Registers used:
  9846 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9847 ;; Tracked objects:
  9848 ;;		On entry : 0/0
  9849 ;;		On exit  : 0/0
  9850 ;;		Unchanged: 0/0
  9851 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9855 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9856 ;;Total ram usage:        1 bytes
  9857 ;; Hardware stack levels used:    1
  9858 ;; This function calls:
  9859 ;;		Nothing
  9860 ;; This function is called by:
  9861 ;;		i1_USBDeviceTasks
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           
  9865                           
  9866                           ;psect for function i1_USBStallHandler
  9867  11D3                     i1_USBStallHandler:	
  9868                           
  9869                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  9870                           
  9871                           ;incstack = 0
  9872                           ; Regs used in i1_USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  9873  11D3  003D               	movlb	29	; select bank29
  9874  11D4  1C18               	btfss	24,0	;volatile
  9875  11D5  29F3               	goto	i1l5211
  9876                           
  9877                           ;usb_device.c: 2215: {
  9878                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  9879  11D6  0021               	movlb	1	; select bank1
  9880  11D7  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9881  11D8  0086               	movwf	6
  9882  11D9  0187               	clrf	7
  9883  11DA  3080               	movlw	128
  9884  11DB  0601               	xorwf	1,w
  9885  11DC  1D03               	btfss	3,2
  9886  11DD  29F1               	goto	i1l5209
  9887  11DE  084D               	movf	_pBDTEntryIn^(0+128),w
  9888  11DF  0086               	movwf	6
  9889  11E0  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  9890  11E1  0087               	movwf	7
  9891  11E2  3084               	movlw	132
  9892  11E3  0601               	xorwf	1,w
  9893  11E4  1D03               	btfss	3,2
  9894  11E5  29F1               	goto	i1l5209
  9895                           
  9896                           ;usb_device.c: 2218: {
  9897                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9898  11E6  300C               	movlw	12
  9899  11E7  00F0               	movwf	??i1_USBStallHandler
  9900  11E8  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9901  11E9  0086               	movwf	6
  9902  11EA  0187               	clrf	7
  9903  11EB  0870               	movf	??i1_USBStallHandler,w
  9904  11EC  0081               	movwf	1
  9905                           
  9906                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9907  11ED  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9908  11EE  0086               	movwf	6
  9909  11EF  0187               	clrf	7
  9910  11F0  1781               	bsf	1,7
  9911  11F1                     i1l5209:	
  9912                           
  9913                           ;usb_device.c: 2222: }
  9914                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  9915  11F1  003D               	movlb	29	; select bank29
  9916  11F2  1018               	bcf	24,0	;volatile
  9917  11F3                     i1l5211:	
  9918                           
  9919                           ;usb_device.c: 2224: }
  9920                           ;usb_device.c: 2226: (UIR &= 0xDF);
  9921  11F3  30DF               	movlw	223
  9922  11F4  00F0               	movwf	??i1_USBStallHandler
  9923  11F5  0870               	movf	??i1_USBStallHandler,w
  9924  11F6  0590               	andwf	16,f	;volatile
  9925  11F7  0008               	return
  9926  11F8                     __end_ofi1_USBStallHandler:	
  9927                           
  9928                           	psect	text45
  9929  108F                     __ptext45:	
  9930 ;; *************** function i1_USBIncrement1msInternalTimers *****************
  9931 ;; Defined at:
  9932 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;		None
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;		None
  9937 ;; Return value:  Size  Location     Type
  9938 ;;                  1    wreg      void 
  9939 ;; Registers used:
  9940 ;;		wreg, status,2, status,0
  9941 ;; Tracked objects:
  9942 ;;		On entry : 0/0
  9943 ;;		On exit  : 0/0
  9944 ;;		Unchanged: 0/0
  9945 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;Total ram usage:        1 bytes
  9951 ;; Hardware stack levels used:    1
  9952 ;; This function calls:
  9953 ;;		Nothing
  9954 ;; This function is called by:
  9955 ;;		i1_USBDeviceTasks
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           
  9960                           ;psect for function i1_USBIncrement1msInternalTimers
  9961  108F                     i1_USBIncrement1msInternalTimers:	
  9962                           
  9963                           ;usb_device.c: 3033: USB1msTickCount++;
  9964                           
  9965                           ;incstack = 0
  9966                           ; Regs used in i1_USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  9967  108F  3001               	movlw	1
  9968  1090  0022               	movlb	2	; select bank2
  9969  1091  07B0               	addwf	_USB1msTickCount^(0+256),f	;volatile
  9970  1092  3000               	movlw	0
  9971  1093  3DB1               	addwfc	(_USB1msTickCount+1)^(0+256),f	;volatile
  9972  1094  3000               	movlw	0
  9973  1095  3DB2               	addwfc	(_USB1msTickCount+2)^(0+256),f	;volatile
  9974  1096  3000               	movlw	0
  9975  1097  3DB3               	addwfc	(_USB1msTickCount+3)^(0+256),f	;volatile
  9976                           
  9977                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  9978  1098  084D               	movf	_USBBusIsSuspended^(0+256),w	;volatile
  9979  1099  1D03               	btfss	3,2
  9980  109A  0008               	return
  9981                           
  9982                           ;usb_device.c: 3035: {
  9983                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  9984  109B  3001               	movlw	1
  9985  109C  00F0               	movwf	??i1_USBIncrement1msInternalTimers
  9986  109D  0870               	movf	??i1_USBIncrement1msInternalTimers,w
  9987  109E  07C6               	addwf	_USBTicksSinceSuspendEnd^(0+256),f	;volatile
  9988                           
  9989                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  9990  109F  0846               	movf	_USBTicksSinceSuspendEnd^(0+256),w	;volatile
  9991  10A0  1D03               	btfss	3,2
  9992  10A1  0008               	return
  9993                           
  9994                           ;usb_device.c: 3039: {
  9995                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  9996  10A2  30FF               	movlw	255
  9997  10A3  00F0               	movwf	??i1_USBIncrement1msInternalTimers
  9998  10A4  0870               	movf	??i1_USBIncrement1msInternalTimers,w
  9999  10A5  00C6               	movwf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
 10000  10A6  0008               	return
 10001  10A7                     __end_ofi1_USBIncrement1msInternalTimers:	
 10002                           
 10003                           	psect	text46
 10004  0645                     __ptext46:	
 10005 ;; *************** function i1_USBDeviceInit *****************
 10006 ;; Defined at:
 10007 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;		None
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
 10012 ;;		 -> UEP1(1), 
 10013 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
 10014 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      void 
 10017 ;; Registers used:
 10018 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;Total ram usage:        5 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; This function calls:
 10031 ;;		Nothing
 10032 ;; This function is called by:
 10033 ;;		i1_USBDeviceTasks
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037                           
 10038                           ;psect for function i1_USBDeviceInit
 10039  0645                     i1_USBDeviceInit:	
 10040                           
 10041                           ;usb_device.c: 279: uint8_t i;
 10042                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 10043                           
 10044                           ;incstack = 0
 10045                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 10046  0645  0021               	movlb	1	; select bank1
 10047  0646  1112               	bcf	18,2	;volatile
 10048                           
 10049                           ;usb_device.c: 285: ;
 10050                           ;usb_device.c: 288: {UEIR = 0;};
 10051  0647  003D               	movlb	29	; select bank29
 10052  0648  0193               	clrf	19	;volatile
 10053                           
 10054                           ;usb_device.c: 291: {UIR = 0;};
 10055  0649  0190               	clrf	16	;volatile
 10056                           
 10057                           ;usb_device.c: 294: UEP0 = 0;
 10058  064A  0198               	clrf	24	;volatile
 10059                           
 10060                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
 10061  064B  300E               	movlw	14
 10062  064C  00F2               	movwf	i1USBDeviceInit@p+1
 10063  064D  3099               	movlw	153
 10064  064E  00F1               	movwf	i1USBDeviceInit@p
 10065  064F  01F3               	clrf	i1USBDeviceInit@i_1509
 10066  0650  3002               	movlw	2
 10067  0651  0273               	subwf	i1USBDeviceInit@i_1509,w
 10068  0652  1803               	btfsc	3,0
 10069  0653  2E65               	goto	i1l5133
 10070  0654                     i1l5125:	
 10071  0654  0871               	movf	i1USBDeviceInit@p,w
 10072  0655  0086               	movwf	6
 10073  0656  0872               	movf	i1USBDeviceInit@p+1,w
 10074  0657  0087               	movwf	7
 10075  0658  0181               	clrf	1
 10076  0659  3001               	movlw	1
 10077  065A  07F1               	addwf	i1USBDeviceInit@p,f
 10078  065B  3000               	movlw	0
 10079  065C  3DF2               	addwfc	i1USBDeviceInit@p+1,f
 10080  065D  3001               	movlw	1
 10081  065E  00F0               	movwf	??i1_USBDeviceInit
 10082  065F  0870               	movf	??i1_USBDeviceInit,w
 10083  0660  07F3               	addwf	i1USBDeviceInit@i_1509,f
 10084  0661  3002               	movlw	2
 10085  0662  0273               	subwf	i1USBDeviceInit@i_1509,w
 10086  0663  1C03               	skipc
 10087  0664  2E54               	goto	i1l5125
 10088  0665                     i1l5133:	
 10089                           
 10090                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10091  0665  3016               	movlw	22
 10092  0666  003D               	movlb	29	; select bank29
 10093  0667  0091               	movwf	17	;volatile
 10094  0668  309F               	movlw	159
 10095  0669  0097               	movwf	23	;volatile
 10096  066A  307B               	movlw	123
 10097  066B  0092               	movwf	18	;volatile
 10098                           
 10099                           ;usb_device.c: 301: ;
 10100                           ;usb_device.c: 304: ;
 10101                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 10102  066C  01F4               	clrf	i1USBDeviceInit@i
 10103  066D  300C               	movlw	12
 10104  066E  0274               	subwf	i1USBDeviceInit@i,w
 10105  066F  1803               	btfsc	3,0
 10106  0670  2E8A               	goto	i1l425
 10107  0671                     i1l5141:	
 10108                           
 10109                           ;usb_device.c: 308: {
 10110                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 10111  0671  0874               	movf	i1USBDeviceInit@i,w
 10112  0672  00F0               	movwf	??i1_USBDeviceInit
 10113  0673  3001               	movlw	1
 10114  0674                     u505_25:	
 10115  0674  35F0               	lslf	??i1_USBDeviceInit,f
 10116  0675  3EFF               	addlw	-1
 10117  0676  1D03               	skipz
 10118  0677  2E74               	goto	u505_25
 10119  0678  3570               	lslf	??i1_USBDeviceInit,w
 10120  0679  3E20               	addlw	32
 10121  067A  0086               	movwf	6
 10122  067B  0187               	clrf	7
 10123  067C  3000               	movlw	0
 10124  067D  3FC0               	movwi [0]fsr1
 10125  067E  3000               	movlw	0
 10126  067F  3FC1               	movwi [1]fsr1
 10127  0680  3FC2               	movwi [2]fsr1
 10128  0681  3FC3               	movwi [3]fsr1
 10129  0682  3001               	movlw	1
 10130  0683  00F0               	movwf	??i1_USBDeviceInit
 10131  0684  0870               	movf	??i1_USBDeviceInit,w
 10132  0685  07F4               	addwf	i1USBDeviceInit@i,f
 10133  0686  300C               	movlw	12
 10134  0687  0274               	subwf	i1USBDeviceInit@i,w
 10135  0688  1C03               	skipc
 10136  0689  2E71               	goto	i1l5141
 10137  068A                     i1l425:	
 10138                           
 10139                           ;usb_device.c: 310: }
 10140                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 10141  068A  003D               	movlb	29	; select bank29
 10142  068B  170E               	bsf	14,6	;volatile
 10143                           
 10144                           ;usb_device.c: 316: UADDR = 0x00;
 10145  068C  0196               	clrf	22	;volatile
 10146                           
 10147                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 10148  068D  120E               	bcf	14,4	;volatile
 10149                           
 10150                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 10151  068E  130E               	bcf	14,6	;volatile
 10152  068F                     i1l5153:	
 10153                           ;usb_device.c: 325: do
 10154                           
 10155                           
 10156                           ;usb_device.c: 326: {
 10157                           ;usb_device.c: 327: (UIR &= 0xF7);
 10158  068F  30F7               	movlw	247
 10159  0690  00F0               	movwf	??i1_USBDeviceInit
 10160  0691  0870               	movf	??i1_USBDeviceInit,w
 10161  0692  0590               	andwf	16,f	;volatile
 10162                           
 10163                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 10164  0693  0021               	movlb	1	; select bank1
 10165  0694  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 10166                           
 10167                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 10168  0695  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
 10169                           
 10170                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 10171  0696  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
 10172  0697  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
 10173                           
 10174                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 10175  0698  003D               	movlb	29	; select bank29
 10176  0699  1990               	btfsc	16,3	;volatile
 10177  069A  2E8F               	goto	i1l5153
 10178                           
 10179                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 10180  069B  3001               	movlw	1
 10181  069C  00F0               	movwf	??i1_USBDeviceInit
 10182  069D  0870               	movf	??i1_USBDeviceInit,w
 10183  069E  0022               	movlb	2	; select bank2
 10184  069F  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10185                           
 10186                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 10187  06A0  3001               	movlw	1
 10188  06A1  00F0               	movwf	??i1_USBDeviceInit
 10189  06A2  0870               	movf	??i1_USBDeviceInit,w
 10190  06A3  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10191                           
 10192                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 10193  06A4  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10194                           
 10195                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 10196  06A5  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10197                           
 10198                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 10199  06A6  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
 10200                           
 10201                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 10202  06A7  01F4               	clrf	i1USBDeviceInit@i
 10203  06A8  3003               	movlw	3
 10204  06A9  0274               	subwf	i1USBDeviceInit@i,w
 10205  06AA  1803               	btfsc	3,0
 10206  06AB  2ECF               	goto	i1l5181
 10207  06AC                     i1l5175:	
 10208                           
 10209                           ;usb_device.c: 346: {
 10210                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 10211  06AC  3574               	lslf	i1USBDeviceInit@i,w
 10212  06AD  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 10213  06AE  0086               	movwf	6
 10214  06AF  0187               	clrf	7
 10215  06B0  3000               	movlw	0
 10216  06B1  3FC0               	movwi [0]fsr1
 10217  06B2  3FC1               	movwi [1]fsr1
 10218                           
 10219                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 10220  06B3  3574               	lslf	i1USBDeviceInit@i,w
 10221  06B4  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10222  06B5  0086               	movwf	6
 10223  06B6  3001               	movlw	1	; select bank2/3
 10224  06B7  0087               	movwf	7
 10225  06B8  3000               	movlw	0
 10226  06B9  3FC0               	movwi [0]fsr1
 10227  06BA  3FC1               	movwi [1]fsr1
 10228                           
 10229                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 10230  06BB  0874               	movf	i1USBDeviceInit@i,w
 10231  06BC  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 10232  06BD  0086               	movwf	6
 10233  06BE  3001               	movlw	1	; select bank2/3
 10234  06BF  0087               	movwf	7
 10235  06C0  0181               	clrf	1
 10236                           
 10237                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 10238  06C1  0874               	movf	i1USBDeviceInit@i,w
 10239  06C2  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 10240  06C3  0086               	movwf	6
 10241  06C4  3001               	movlw	1	; select bank2/3
 10242  06C5  0087               	movwf	7
 10243  06C6  0181               	clrf	1
 10244  06C7  3001               	movlw	1
 10245  06C8  00F0               	movwf	??i1_USBDeviceInit
 10246  06C9  0870               	movf	??i1_USBDeviceInit,w
 10247  06CA  07F4               	addwf	i1USBDeviceInit@i,f
 10248  06CB  3003               	movlw	3
 10249  06CC  0274               	subwf	i1USBDeviceInit@i,w
 10250  06CD  1C03               	skipc
 10251  06CE  2EAC               	goto	i1l5175
 10252  06CF                     i1l5181:	
 10253                           
 10254                           ;usb_device.c: 351: }
 10255                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10256  06CF  3028               	movlw	40
 10257  06D0  0021               	movlb	1	; select bank1
 10258  06D1  00CD               	movwf	_pBDTEntryIn^(0+128)
 10259  06D2  3000               	movlw	0
 10260  06D3  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 10261                           
 10262                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 10263  06D4  3016               	movlw	22
 10264  06D5  003D               	movlb	29	; select bank29
 10265  06D6  0098               	movwf	24	;volatile
 10266                           
 10267                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10268  06D7  3000               	movlw	0
 10269  06D8  0020               	movlb	0	; select bank0
 10270  06D9  00A3               	movwf	35	;volatile
 10271  06DA  3050               	movlw	80
 10272  06DB  00A2               	movwf	34	;volatile
 10273                           
 10274                           ;usb_device.c: 359: BDT[0].CNT = 16;
 10275  06DC  3010               	movlw	16
 10276  06DD  00A1               	movwf	33	;volatile
 10277                           
 10278                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 10279  06DE  3004               	movlw	4
 10280  06DF  00F0               	movwf	??i1_USBDeviceInit
 10281  06E0  0870               	movf	??i1_USBDeviceInit,w
 10282  06E1  00A0               	movwf	32	;volatile
 10283                           
 10284                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 10285  06E2  17A0               	bsf	32,7	;volatile
 10286                           
 10287                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 10288  06E3  0021               	movlb	1	; select bank1
 10289  06E4  01E1               	clrf	_USBActiveConfiguration^(0+128)	;volatile
 10290                           
 10291                           ;usb_device.c: 366: USB1msTickCount = 0;
 10292  06E5  3000               	movlw	0
 10293  06E6  0022               	movlb	2	; select bank2
 10294  06E7  00B3               	movwf	(_USB1msTickCount+3)^(0+256)	;volatile
 10295  06E8  3000               	movlw	0
 10296  06E9  00B2               	movwf	(_USB1msTickCount+2)^(0+256)	;volatile
 10297  06EA  3000               	movlw	0
 10298  06EB  00B1               	movwf	(_USB1msTickCount+1)^(0+256)	;volatile
 10299  06EC  3000               	movlw	0
 10300  06ED  00B0               	movwf	_USB1msTickCount^(0+256)	;volatile
 10301                           
 10302                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 10303  06EE  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
 10304                           
 10305                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 10306  06EF  0021               	movlb	1	; select bank1
 10307  06F0  01DF               	clrf	_USBDeviceState^(0+128)	;volatile
 10308  06F1  0008               	return
 10309  06F2                     __end_ofi1_USBDeviceInit:	
 10310                           
 10311                           	psect	text47
 10312  14CF                     __ptext47:	
 10313 ;; *************** function i1_USBCtrlEPService *****************
 10314 ;; Defined at:
 10315 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
 10316 ;; Parameters:    Size  Location     Type
 10317 ;;		None
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;		None
 10320 ;; Return value:  Size  Location     Type
 10321 ;;                  1    wreg      void 
 10322 ;; Registers used:
 10323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10324 ;; Tracked objects:
 10325 ;;		On entry : 0/0
 10326 ;;		On exit  : 0/0
 10327 ;;		Unchanged: 0/0
 10328 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10331 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10332 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10333 ;;Total ram usage:        3 bytes
 10334 ;; Hardware stack levels used:    1
 10335 ;; Hardware stack levels required when called:    7
 10336 ;; This function calls:
 10337 ;;		i1_USBCtrlTrfInHandler
 10338 ;;		i1_USBCtrlTrfOutHandler
 10339 ;;		i1_USBCtrlTrfSetupHandler
 10340 ;; This function is called by:
 10341 ;;		i1_USBDeviceTasks
 10342 ;; This function uses a non-reentrant model
 10343 ;;
 10344                           
 10345                           
 10346                           ;psect for function i1_USBCtrlEPService
 10347  14CF                     i1_USBCtrlEPService:	
 10348                           
 10349                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 10350                           
 10351                           ;incstack = 0
 10352 ;; hardware stack exceeded
 10353                           ; Regs used in i1_USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10354  14CF  302D               	movlw	45
 10355  14D0  0021               	movlb	1	; select bank1
 10356  14D1  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10357  14D2  0827               	movf	??i1_USBCtrlEPService^(0+128),w
 10358  14D3  0022               	movlb	2	; select bank2
 10359  14D4  00CB               	movwf	_USBStatusStageTimeoutCounter^(0+256)	;volatile
 10360                           
 10361                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 10362  14D5  0021               	movlb	1	; select bank1
 10363  14D6  0860               	movf	_USTATcopy^(0+128),w	;volatile
 10364  14D7  39FD               	andlw	253
 10365  14D8  1D03               	btfss	3,2
 10366  14D9  2D1B               	goto	i1l6943
 10367                           
 10368                           ;usb_device.c: 2383: {
 10369                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 10370  14DA  3660               	lsrf	_USTATcopy^(0+128),w	;volatile
 10371  14DB  393F               	andlw	63
 10372  14DC  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10373  14DD  3001               	movlw	1
 10374  14DE                     u734_25:	
 10375  14DE  35A7               	lslf	??i1_USBCtrlEPService^(0+128),f
 10376  14DF  3EFF               	addlw	-1
 10377  14E0  1D03               	skipz
 10378  14E1  2CDE               	goto	u734_25
 10379  14E2  3527               	lslf	??i1_USBCtrlEPService^(0+128),w
 10380  14E3  3E20               	addlw	32
 10381  14E4  00A8               	movwf	(??i1_USBCtrlEPService+1)^(0+128)
 10382  14E5  0828               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 10383  14E6  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
 10384                           
 10385                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10386  14E7  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 10387  14E8  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 10388  14E9  39FF               	andlw	255
 10389  14EA  1D03               	skipz
 10390  14EB  3000               	movlw	0
 10391  14EC  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 10392                           
 10393                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 10394  14ED  3004               	movlw	4
 10395  14EE  0658               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
 10396  14EF  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 10397  14F0  3000               	movlw	0
 10398  14F1  0659               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10399  14F2  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 10400                           
 10401                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 10402  14F3  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 10403  14F4  0086               	movwf	6
 10404  14F5  0187               	clrf	7
 10405  14F6  0C01               	rrf	1,w
 10406  14F7  0C89               	rrf	9,f
 10407  14F8  390F               	andlw	15
 10408  14F9  3A0D               	xorlw	13
 10409  14FA  1D03               	skipz
 10410  14FB  2D18               	goto	i1l6941
 10411                           
 10412                           ;usb_device.c: 2400: {
 10413                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
 10414  14FC  3050               	movlw	80
 10415  14FD  0086               	movwf	6
 10416  14FE  0187               	clrf	7
 10417  14FF  0021               	movlb	1	; select bank1
 10418  1500  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 10419  1501  3E02               	addlw	2
 10420  1502  0084               	movwf	4
 10421  1503  0185               	clrf	5
 10422  1504  3F00               	moviw [0]fsr0
 10423  1505  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10424  1506  3F01               	moviw [1]fsr0
 10425  1507  00A8               	movwf	(??i1_USBCtrlEPService^(0+128)+1)
 10426  1508  0827               	movf	??i1_USBCtrlEPService^(0+128),w
 10427  1509  0084               	movwf	4
 10428  150A  0828               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 10429  150B  0085               	movwf	5
 10430  150C  3008               	movlw	8
 10431  150D  00A9               	movwf	(??i1_USBCtrlEPService+2)^(0+128)
 10432  150E  0829               	movf	(??i1_USBCtrlEPService+2)^(0+128),w
 10433  150F  1903               	skipnz
 10434  1510  2D15               	goto	i1l6939
 10435  1511                     u736_2m0:	
 10436  1511  0012               	moviw fsr0++
 10437  1512  001E               	movwi fsr1++
 10438  1513  0BA9               	decfsz	(??i1_USBCtrlEPService+2)^(0+128),f
 10439  1514  2D11               	goto	u736_2m0
 10440  1515                     i1l6939:	
 10441                           
 10442                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 10443  1515  3193  23EB         	fcall	i1_USBCtrlTrfSetupHandler
 10444                           
 10445                           ;usb_device.c: 2409: }
 10446  1517  0008               	return
 10447  1518                     i1l6941:	
 10448                           
 10449                           ;usb_device.c: 2410: else
 10450                           ;usb_device.c: 2411: {
 10451                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 10452  1518  3192  22B4         	fcall	i1_USBCtrlTrfOutHandler
 10453                           
 10454                           ;usb_device.c: 2414: }
 10455                           ;usb_device.c: 2415: }
 10456  151A  0008               	return
 10457  151B                     i1l6943:	
 10458                           
 10459                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 10460  151B  30FD               	movlw	253
 10461  151C  0021               	movlb	1	; select bank1
 10462  151D  0560               	andwf	_USTATcopy^(0+128),w	;volatile
 10463  151E  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10464  151F  3004               	movlw	4
 10465  1520  0627               	xorwf	??i1_USBCtrlEPService^(0+128),w
 10466  1521  1D03               	btfss	3,2
 10467  1522  0008               	return
 10468                           
 10469                           ;usb_device.c: 2417: {
 10470                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 10471  1523  3188  20F9         	fcall	i1_USBCtrlTrfInHandler
 10472  1525  0008               	return
 10473  1526                     __end_ofi1_USBCtrlEPService:	
 10474                           
 10475                           	psect	text48
 10476  13EB                     __ptext48:	
 10477 ;; *************** function i1_USBCtrlTrfSetupHandler *****************
 10478 ;; Defined at:
 10479 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;		None
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;		None
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  1    wreg      void 
 10486 ;; Registers used:
 10487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10497 ;;Total ram usage:        1 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; Hardware stack levels required when called:    6
 10500 ;; This function calls:
 10501 ;;		i1_USBCheckStdRequest
 10502 ;;		i1_USBCtrlEPServiceComplete
 10503 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10504 ;; This function is called by:
 10505 ;;		i1_USBCtrlEPService
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509                           
 10510                           ;psect for function i1_USBCtrlTrfSetupHandler
 10511  13EB                     i1_USBCtrlTrfSetupHandler:	
 10512                           
 10513                           ;usb_device.c: 2470: shortPacketStatus = 0;
 10514                           
 10515                           ;incstack = 0
 10516 ;; hardware stack exceeded
 10517                           ; Regs used in i1_USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10518  13EB  0021               	movlb	1	; select bank1
 10519  13EC  01DD               	clrf	_shortPacketStatus^(0+128)	;volatile
 10520                           
 10521                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 10522  13ED  01DA               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
 10523                           
 10524                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 10525  13EE  0022               	movlb	2	; select bank2
 10526  13EF  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10527                           
 10528                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 10529  13F0  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10530                           
 10531                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 10532  13F1  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 10533                           
 10534                           ;usb_device.c: 2475: controlTransferState = 0;
 10535  13F2  0021               	movlb	1	; select bank1
 10536  13F3  01DC               	clrf	_controlTransferState^(0+128)	;volatile
 10537                           
 10538                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10539  13F4  307F               	movlw	127
 10540  13F5  00A6               	movwf	??i1_USBCtrlTrfSetupHandler^(0+128)
 10541  13F6  084D               	movf	_pBDTEntryIn^(0+128),w
 10542  13F7  0086               	movwf	6
 10543  13F8  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10544  13F9  0087               	movwf	7
 10545  13FA  0826               	movf	??i1_USBCtrlTrfSetupHandler^(0+128),w
 10546  13FB  0581               	andwf	1,f
 10547                           
 10548                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10549  13FC  3004               	movlw	4
 10550  13FD  064D               	xorwf	_pBDTEntryIn^(0+128),w
 10551  13FE  00CD               	movwf	_pBDTEntryIn^(0+128)
 10552  13FF  3000               	movlw	0
 10553  1400  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
 10554  1401  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 10555                           
 10556                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10557  1402  307F               	movlw	127
 10558  1403  00A6               	movwf	??i1_USBCtrlTrfSetupHandler^(0+128)
 10559  1404  084D               	movf	_pBDTEntryIn^(0+128),w
 10560  1405  0086               	movwf	6
 10561  1406  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10562  1407  0087               	movwf	7
 10563  1408  0826               	movf	??i1_USBCtrlTrfSetupHandler^(0+128),w
 10564  1409  0581               	andwf	1,f
 10565                           
 10566                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10567  140A  3004               	movlw	4
 10568  140B  064D               	xorwf	_pBDTEntryIn^(0+128),w
 10569  140C  00CD               	movwf	_pBDTEntryIn^(0+128)
 10570  140D  3000               	movlw	0
 10571  140E  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
 10572  140F  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 10573                           
 10574                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 10575  1410  307F               	movlw	127
 10576  1411  00A6               	movwf	??i1_USBCtrlTrfSetupHandler^(0+128)
 10577  1412  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10578  1413  0086               	movwf	6
 10579  1414  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10580  1415  0087               	movwf	7
 10581  1416  0826               	movf	??i1_USBCtrlTrfSetupHandler^(0+128),w
 10582  1417  0581               	andwf	1,f
 10583                           
 10584                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 10585  1418  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 10586                           
 10587                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 10588  1419  01D6               	clrf	(_inPipes^(0+128)+3)	;volatile
 10589  141A  01D7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 10590                           
 10591                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 10592  141B  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
 10593                           
 10594                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 10595  141C  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
 10596  141D  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
 10597                           
 10598                           ;usb_device.c: 2500: USBCheckStdRequest();
 10599  141E  3197  27A0  3193   	fcall	i1_USBCheckStdRequest
 10600                           
 10601                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 10602  1421  3000               	movlw	0
 10603  1422  0020               	movlb	0	; select bank0
 10604  1423  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10605  1424  3003               	movlw	3
 10606  1425  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10607  1426  3000               	movlw	0
 10608  1427  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10609  1428  3000               	movlw	0
 10610  1429  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10611  142A  3000               	movlw	0
 10612  142B  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10613  142C  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10614  142D  3192  221F  3193   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10615                           
 10616                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 10617  1430  318E  263F         	fcall	i1_USBCtrlEPServiceComplete
 10618  1432  0008               	return
 10619  1433                     __end_ofi1_USBCtrlTrfSetupHandler:	
 10620                           
 10621                           	psect	text49
 10622  0E3F                     __ptext49:	
 10623 ;; *************** function i1_USBCtrlEPServiceComplete *****************
 10624 ;; Defined at:
 10625 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;		None
 10628 ;; Auto vars:     Size  Location     Type
 10629 ;;		None
 10630 ;; Return value:  Size  Location     Type
 10631 ;;                  1    wreg      void 
 10632 ;; Registers used:
 10633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10634 ;; Tracked objects:
 10635 ;;		On entry : 0/0
 10636 ;;		On exit  : 0/0
 10637 ;;		Unchanged: 0/0
 10638 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;Total ram usage:        2 bytes
 10644 ;; Hardware stack levels used:    1
 10645 ;; Hardware stack levels required when called:    2
 10646 ;; This function calls:
 10647 ;;		i1_USBCtrlEPAllowDataStage
 10648 ;;		i1_USBCtrlEPAllowStatusStage
 10649 ;; This function is called by:
 10650 ;;		i1_USBCtrlTrfSetupHandler
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           
 10655                           ;psect for function i1_USBCtrlEPServiceComplete
 10656  0E3F                     i1_USBCtrlEPServiceComplete:	
 10657                           
 10658                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 10659                           
 10660                           ;incstack = 0
 10661 ;; hardware stack exceeded
 10662                           ; Regs used in i1_USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10663  0E3F  003D               	movlb	29	; select bank29
 10664  0E40  120E               	bcf	14,4	;volatile
 10665                           
 10666                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 10667  0E41  0021               	movlb	1	; select bank1
 10668  0E42  1BD5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
 10669  0E43  2E85               	goto	i1l510
 10670                           
 10671                           ;usb_device.c: 1629: {
 10672                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 10673  0E44  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
 10674  0E45  2E54               	goto	i1l4463
 10675                           
 10676                           ;usb_device.c: 1631: {
 10677                           ;usb_device.c: 1632: controlTransferState = 2;
 10678  0E46  3002               	movlw	2
 10679  0E47  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10680  0E48  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10681  0E49  00DC               	movwf	_controlTransferState^(0+128)	;volatile
 10682                           
 10683                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 10684  0E4A  0022               	movlb	2	; select bank2
 10685  0E4B  0847               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
 10686  0E4C  1D03               	btfss	3,2
 10687  0E4D  2E50               	goto	i1l4459
 10688                           
 10689                           ;usb_device.c: 1644: {
 10690                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 10691  0E4E  3196  262F         	fcall	i1_USBCtrlEPAllowDataStage
 10692  0E50                     i1l4459:	
 10693                           
 10694                           ;usb_device.c: 1646: }
 10695                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 10696  0E50  0022               	movlb	2	; select bank2
 10697  0E51  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10698                           
 10699                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 10700  0E52  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10701                           
 10702                           ;usb_device.c: 1652: }
 10703  0E53  0008               	return
 10704  0E54                     i1l4463:	
 10705                           
 10706                           ;usb_device.c: 1653: else
 10707                           ;usb_device.c: 1654: {
 10708                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 16;
 10709  0E54  0021               	movlb	1	; select bank1
 10710  0E55  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10711  0E56  3E01               	addlw	1
 10712  0E57  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10713  0E58  3000               	movlw	0
 10714  0E59  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10715  0E5A  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10716  0E5B  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10717  0E5C  0086               	movwf	6
 10718  0E5D  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10719  0E5E  0087               	movwf	7
 10720  0E5F  3010               	movlw	16
 10721  0E60  0081               	movwf	1
 10722                           
 10723                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10724  0E61  3050               	movlw	80
 10725  0E62  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10726  0E63  3000               	movlw	0
 10727  0E64  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10728  0E65  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10729  0E66  0086               	movwf	6
 10730  0E67  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10731  0E68  0087               	movwf	7
 10732  0E69  3142               	addfsr 1,2
 10733  0E6A  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10734  0E6B  3FC0               	movwi [0]fsr1
 10735  0E6C  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10736  0E6D  3FC1               	movwi [1]fsr1
 10737                           
 10738                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10739  0E6E  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10740  0E6F  0086               	movwf	6
 10741  0E70  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10742  0E71  0087               	movwf	7
 10743  0E72  300C               	movlw	12
 10744  0E73  0081               	movwf	1
 10745                           
 10746                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10747  0E74  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10748  0E75  0086               	movwf	6
 10749  0E76  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10750  0E77  0087               	movwf	7
 10751  0E78  1781               	bsf	1,7
 10752                           
 10753                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 10754  0E79  084D               	movf	_pBDTEntryIn^(0+128),w
 10755  0E7A  0086               	movwf	6
 10756  0E7B  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10757  0E7C  0087               	movwf	7
 10758  0E7D  3004               	movlw	4
 10759  0E7E  0081               	movwf	1
 10760                           
 10761                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10762  0E7F  084D               	movf	_pBDTEntryIn^(0+128),w
 10763  0E80  0086               	movwf	6
 10764  0E81  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10765  0E82  0087               	movwf	7
 10766  0E83  1781               	bsf	1,7
 10767                           
 10768                           ;usb_device.c: 1665: }
 10769                           ;usb_device.c: 1666: }
 10770  0E84  0008               	return
 10771  0E85                     i1l510:	
 10772                           
 10773                           ;usb_device.c: 1667: else
 10774                           ;usb_device.c: 1668: {
 10775                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 10776  0E85  0020               	movlb	0	; select bank0
 10777  0E86  1FD0               	btfss	80,7	;volatile
 10778  0E87  2E9E               	goto	i1l4489
 10779                           
 10780                           ;usb_device.c: 1670: {
 10781                           ;usb_device.c: 1671: controlTransferState = 1;
 10782  0E88  3001               	movlw	1
 10783  0E89  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10784  0E8A  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10785  0E8B  0021               	movlb	1	; select bank1
 10786  0E8C  00DC               	movwf	_controlTransferState^(0+128)	;volatile
 10787                           
 10788                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 10789  0E8D  0022               	movlb	2	; select bank2
 10790  0E8E  0848               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
 10791  0E8F  1D03               	btfss	3,2
 10792  0E90  2E94               	goto	i1l4481
 10793                           
 10794                           ;usb_device.c: 1686: {
 10795                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 10796  0E91  3196  262F  318E   	fcall	i1_USBCtrlEPAllowDataStage
 10797  0E94                     i1l4481:	
 10798                           
 10799                           ;usb_device.c: 1688: }
 10800                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 10801  0E94  0022               	movlb	2	; select bank2
 10802  0E95  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10803                           
 10804                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 10805  0E96  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10806                           
 10807                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 10808  0E97  0021               	movlb	1	; select bank1
 10809  0E98  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
 10810  0E99  1D03               	btfss	3,2
 10811  0E9A  0008               	return
 10812                           
 10813                           ;usb_device.c: 1713: {
 10814                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 10815  0E9B  3187  278F         	fcall	i1_USBCtrlEPAllowStatusStage
 10816                           
 10817                           ;usb_device.c: 1715: }
 10818                           ;usb_device.c: 1716: }
 10819  0E9D  0008               	return
 10820  0E9E                     i1l4489:	
 10821                           
 10822                           ;usb_device.c: 1717: else
 10823                           ;usb_device.c: 1718: {
 10824                           ;usb_device.c: 1729: controlTransferState = 2;
 10825  0E9E  3002               	movlw	2
 10826  0E9F  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10827  0EA0  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10828  0EA1  0021               	movlb	1	; select bank1
 10829  0EA2  00DC               	movwf	_controlTransferState^(0+128)	;volatile
 10830                           
 10831                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 16;
 10832  0EA3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10833  0EA4  3E01               	addlw	1
 10834  0EA5  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10835  0EA6  3000               	movlw	0
 10836  0EA7  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10837  0EA8  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10838  0EA9  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10839  0EAA  0086               	movwf	6
 10840  0EAB  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10841  0EAC  0087               	movwf	7
 10842  0EAD  3010               	movlw	16
 10843  0EAE  0081               	movwf	1
 10844                           
 10845                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10846  0EAF  3050               	movlw	80
 10847  0EB0  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10848  0EB1  3000               	movlw	0
 10849  0EB2  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10850  0EB3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10851  0EB4  0086               	movwf	6
 10852  0EB5  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10853  0EB6  0087               	movwf	7
 10854  0EB7  3142               	addfsr 1,2
 10855  0EB8  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10856  0EB9  3FC0               	movwi [0]fsr1
 10857  0EBA  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10858  0EBB  3FC1               	movwi [1]fsr1
 10859                           
 10860                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 10861  0EBC  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10862  0EBD  0086               	movwf	6
 10863  0EBE  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10864  0EBF  0087               	movwf	7
 10865  0EC0  3004               	movlw	4
 10866  0EC1  0081               	movwf	1
 10867                           
 10868                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10869  0EC2  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10870  0EC3  0086               	movwf	6
 10871  0EC4  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10872  0EC5  0087               	movwf	7
 10873  0EC6  1781               	bsf	1,7
 10874                           
 10875                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 10876  0EC7  0022               	movlb	2	; select bank2
 10877  0EC8  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10878                           
 10879                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 10880  0EC9  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10881                           
 10882                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 10883  0ECA  0021               	movlb	1	; select bank1
 10884  0ECB  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
 10885  0ECC  1D03               	btfss	3,2
 10886  0ECD  0008               	return
 10887                           
 10888                           ;usb_device.c: 1741: {
 10889                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 10890  0ECE  3187  278F         	fcall	i1_USBCtrlEPAllowStatusStage
 10891  0ED0  0008               	return
 10892  0ED1                     __end_ofi1_USBCtrlEPServiceComplete:	
 10893                           
 10894                           	psect	text50
 10895  162F                     __ptext50:	
 10896 ;; *************** function i1_USBCtrlEPAllowDataStage *****************
 10897 ;; Defined at:
 10898 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;		None
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  1    wreg      void 
 10905 ;; Registers used:
 10906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10916 ;;Total ram usage:        2 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:    1
 10919 ;; This function calls:
 10920 ;;		i1_USBCtrlTrfTxService
 10921 ;; This function is called by:
 10922 ;;		i1_USBCtrlEPServiceComplete
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926                           
 10927                           ;psect for function i1_USBCtrlEPAllowDataStage
 10928  162F                     i1_USBCtrlEPAllowDataStage:	
 10929                           
 10930                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 10931                           
 10932                           ;incstack = 0
 10933 ;; hardware stack exceeded
 10934                           ; Regs used in i1_USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10935  162F  0022               	movlb	2	; select bank2
 10936  1630  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10937                           
 10938                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 10939  1631  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10940                           
 10941                           ;usb_device.c: 1493: if(controlTransferState == 2)
 10942  1632  3002               	movlw	2
 10943  1633  0021               	movlb	1	; select bank1
 10944  1634  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
 10945  1635  1D03               	btfss	3,2
 10946  1636  2E5C               	goto	i1l4163
 10947                           
 10948                           ;usb_device.c: 1494: {
 10949                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 16;
 10950  1637  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10951  1638  3E01               	addlw	1
 10952  1639  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 10953  163A  3000               	movlw	0
 10954  163B  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10955  163C  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 10956  163D  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 10957  163E  0086               	movwf	6
 10958  163F  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 10959  1640  0087               	movwf	7
 10960  1641  3010               	movlw	16
 10961  1642  0081               	movwf	1
 10962                           
 10963                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 10964  1643  3060               	movlw	96
 10965  1644  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 10966  1645  3000               	movlw	0
 10967  1646  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 10968  1647  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10969  1648  0086               	movwf	6
 10970  1649  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10971  164A  0087               	movwf	7
 10972  164B  3142               	addfsr 1,2
 10973  164C  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 10974  164D  3FC0               	movwi [0]fsr1
 10975  164E  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 10976  164F  3FC1               	movwi [1]fsr1
 10977                           
 10978                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10979  1650  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10980  1651  0086               	movwf	6
 10981  1652  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10982  1653  0087               	movwf	7
 10983  1654  3048               	movlw	72
 10984  1655  0081               	movwf	1
 10985                           
 10986                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10987  1656  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10988  1657  0086               	movwf	6
 10989  1658  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10990  1659  0087               	movwf	7
 10991  165A  1781               	bsf	1,7
 10992                           
 10993                           ;usb_device.c: 1500: }
 10994  165B  0008               	return
 10995  165C                     i1l4163:	
 10996                           
 10997                           ;usb_device.c: 1501: else
 10998                           ;usb_device.c: 1502: {
 10999                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 11000  165C  0857               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
 11001  165D  0020               	movlb	0	; select bank0
 11002  165E  0257               	subwf	87,w	;volatile
 11003  165F  1D03               	skipz
 11004  1660  2E65               	goto	u376_25
 11005  1661  0021               	movlb	1	; select bank1
 11006  1662  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
 11007  1663  0020               	movlb	0	; select bank0
 11008  1664  0256               	subwf	86,w	;volatile
 11009  1665                     u376_25:	
 11010  1665  1803               	skipnc
 11011  1666  2E6E               	goto	i1l4167
 11012                           
 11013                           ;usb_device.c: 1506: {
 11014                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 11015  1667  0857               	movf	87,w	;volatile
 11016  1668  0021               	movlb	1	; select bank1
 11017  1669  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 11018  166A  0020               	movlb	0	; select bank0
 11019  166B  0856               	movf	86,w	;volatile
 11020  166C  0021               	movlb	1	; select bank1
 11021  166D  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11022  166E                     i1l4167:	
 11023                           
 11024                           ;usb_device.c: 1508: }
 11025                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 11026  166E  3189  21C9         	fcall	i1_USBCtrlTrfTxService
 11027                           
 11028                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11029  1670  3060               	movlw	96
 11030  1671  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 11031  1672  3000               	movlw	0
 11032  1673  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 11033  1674  0021               	movlb	1	; select bank1
 11034  1675  084D               	movf	_pBDTEntryIn^(0+128),w
 11035  1676  0086               	movwf	6
 11036  1677  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 11037  1678  0087               	movwf	7
 11038  1679  3142               	addfsr 1,2
 11039  167A  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11040  167B  3FC0               	movwi [0]fsr1
 11041  167C  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11042  167D  3FC1               	movwi [1]fsr1
 11043                           
 11044                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11045  167E  084D               	movf	_pBDTEntryIn^(0+128),w
 11046  167F  0086               	movwf	6
 11047  1680  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 11048  1681  0087               	movwf	7
 11049  1682  3048               	movlw	72
 11050  1683  0081               	movwf	1
 11051                           
 11052                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11053  1684  084D               	movf	_pBDTEntryIn^(0+128),w
 11054  1685  0086               	movwf	6
 11055  1686  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 11056  1687  0087               	movwf	7
 11057  1688  1781               	bsf	1,7
 11058  1689  0008               	return
 11059  168A                     __end_ofi1_USBCtrlEPAllowDataStage:	
 11060                           
 11061                           	psect	text51
 11062  17A0                     __ptext51:	
 11063 ;; *************** function i1_USBCheckStdRequest *****************
 11064 ;; Defined at:
 11065 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;		None
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;		None
 11070 ;; Return value:  Size  Location     Type
 11071 ;;                  1    wreg      void 
 11072 ;; Registers used:
 11073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11074 ;; Tracked objects:
 11075 ;;		On entry : 0/0
 11076 ;;		On exit  : 0/0
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11082 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;Total ram usage:        1 bytes
 11084 ;; Hardware stack levels used:    1
 11085 ;; Hardware stack levels required when called:    5
 11086 ;; This function calls:
 11087 ;;		i1_USBStdFeatureReqHandler
 11088 ;;		i1_USBStdGetDscHandler
 11089 ;;		i1_USBStdGetStatusHandler
 11090 ;;		i1_USBStdSetCfgHandler
 11091 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11092 ;; This function is called by:
 11093 ;;		i1_USBCtrlTrfSetupHandler
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           
 11098                           ;psect for function i1_USBCheckStdRequest
 11099  17A0                     i1_USBCheckStdRequest:	
 11100                           
 11101                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 11102                           
 11103                           ;incstack = 0
 11104 ;; hardware stack exceeded
 11105                           ; Regs used in i1_USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11106  17A0  0020               	movlb	0	; select bank0
 11107  17A1  0E50               	swapf	80,w	;volatile
 11108  17A2  0C89               	rrf	9,f
 11109  17A3  3903               	andlw	3
 11110  17A4  3A00               	xorlw	0
 11111  17A5  1D03               	btfss	3,2
 11112  17A6  0008               	return
 11113  17A7  2FF4               	goto	i1l6515
 11114  17A8                     i1l637:	
 11115                           ;usb_device.c: 2691: {
 11116                           ;usb_device.c: 2692: case 5:
 11117                           
 11118                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
 11119                           
 11120                           
 11121                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 11122  17A8  0021               	movlb	1	; select bank1
 11123  17A9  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11124                           
 11125                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 11126  17AA  3008               	movlw	8
 11127  17AB  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11128  17AC  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11129  17AD  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 11130                           
 11131                           ;usb_device.c: 2696: break;
 11132  17AE  0008               	return
 11133  17AF                     i1l6485:	
 11134                           ;usb_device.c: 2697: case 6:
 11135                           
 11136                           
 11137                           ;usb_device.c: 2698: USBStdGetDscHandler();
 11138  17AF  318B  2321         	fcall	i1_USBStdGetDscHandler
 11139                           
 11140                           ;usb_device.c: 2699: break;
 11141  17B1  0008               	return
 11142  17B2                     i1l6487:	
 11143                           ;usb_device.c: 2700: case 9:
 11144                           
 11145                           
 11146                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 11147  17B2  318D  25AE         	fcall	i1_USBStdSetCfgHandler
 11148                           
 11149                           ;usb_device.c: 2702: break;
 11150  17B4  0008               	return
 11151  17B5                     i1l6489:	
 11152                           ;usb_device.c: 2703: case 8:
 11153                           
 11154                           
 11155                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 11156  17B5  30E1               	movlw	low _USBActiveConfiguration
 11157  17B6  0021               	movlb	1	; select bank1
 11158  17B7  00D3               	movwf	_inPipes^(0+128)	;volatile
 11159  17B8  3000               	movlw	high _USBActiveConfiguration
 11160  17B9  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11161                           
 11162                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11163  17BA  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11164                           
 11165                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 11166  17BB  3001               	movlw	1
 11167  17BC  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11168  17BD  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11169  17BE  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11170                           
 11171                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 11172  17BF  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11173                           
 11174                           ;usb_device.c: 2708: break;
 11175  17C0  0008               	return
 11176  17C1                     i1l6497:	
 11177                           ;usb_device.c: 2709: case 0:
 11178                           
 11179                           
 11180                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 11181  17C1  3194  247B         	fcall	i1_USBStdGetStatusHandler
 11182                           
 11183                           ;usb_device.c: 2711: break;
 11184  17C3  0008               	return
 11185  17C4                     i1l6499:	
 11186                           ;usb_device.c: 2712: case 1:
 11187                           
 11188                           
 11189                           ;usb_device.c: 2713: case 3:
 11190                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 11191  17C4  3181  21A4         	fcall	i1_USBStdFeatureReqHandler
 11192                           
 11193                           ;usb_device.c: 2715: break;
 11194  17C6  0008               	return
 11195  17C7                     i1l6501:	
 11196                           ;usb_device.c: 2716: case 10:
 11197                           
 11198                           
 11199                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 11200  17C7  0020               	movlb	0	; select bank0
 11201  17C8  0854               	movf	84,w	;volatile
 11202  17C9  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 11203  17CA  0021               	movlb	1	; select bank1
 11204  17CB  00D3               	movwf	_inPipes^(0+128)	;volatile
 11205  17CC  3001               	movlw	1
 11206  17CD  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11207                           
 11208                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11209  17CE  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11210                           
 11211                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 11212  17CF  3001               	movlw	1
 11213  17D0  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11214  17D1  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11215  17D2  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11216                           
 11217                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 11218  17D3  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11219                           
 11220                           ;usb_device.c: 2721: break;
 11221  17D4  0008               	return
 11222  17D5                     i1l646:	
 11223                           ;usb_device.c: 2722: case 11:
 11224                           
 11225                           
 11226                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 11227  17D5  0021               	movlb	1	; select bank1
 11228  17D6  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11229                           
 11230                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 11231  17D7  0020               	movlb	0	; select bank0
 11232  17D8  0852               	movf	82,w	;volatile
 11233  17D9  0021               	movlb	1	; select bank1
 11234  17DA  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11235  17DB  0020               	movlb	0	; select bank0
 11236  17DC  0854               	movf	84,w	;volatile
 11237  17DD  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 11238  17DE  0086               	movwf	6
 11239  17DF  3001               	movlw	1	; select bank2/3
 11240  17E0  0087               	movwf	7
 11241  17E1  0021               	movlb	1	; select bank1
 11242  17E2  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11243  17E3  0081               	movwf	1
 11244                           
 11245                           ;usb_device.c: 2725: break;
 11246  17E4  0008               	return
 11247  17E5                     i1l6511:	
 11248                           ;usb_device.c: 2726: case 7:
 11249                           
 11250                           
 11251                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 11252  17E5  3000               	movlw	0
 11253  17E6  0020               	movlb	0	; select bank0
 11254  17E7  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11255  17E8  3002               	movlw	2
 11256  17E9  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11257  17EA  3000               	movlw	0
 11258  17EB  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11259  17EC  3000               	movlw	0
 11260  17ED  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11261  17EE  3000               	movlw	0
 11262  17EF  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11263  17F0  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11264  17F1  3192  221F         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11265                           
 11266                           ;usb_device.c: 2732: }
 11267                           
 11268                           ;usb_device.c: 2731: break;
 11269                           
 11270                           ;usb_device.c: 2730: default:
 11271                           
 11272                           ;usb_device.c: 2729: case 12:
 11273                           
 11274                           ;usb_device.c: 2728: break;
 11275  17F3  0008               	return
 11276  17F4                     i1l6515:	
 11277  17F4  0020               	movlb	0	; select bank0
 11278  17F5  0851               	movf	81,w	;volatile
 11279                           
 11280                           ; Switch size 1, requested type "space"
 11281                           ; Number of cases is 11, Range of values is 0 to 12
 11282                           ; switch strategies available:
 11283                           ; Name         Instructions Cycles
 11284                           ; direct_byte           32     6 (fixed)
 11285                           ; simple_byte           34    18 (average)
 11286                           ; jumptable            260     6 (fixed)
 11287                           ;	Chosen strategy is direct_byte
 11288  17F6  0084               	movwf	4
 11289  17F7  300D               	movlw	13
 11290  17F8  0204               	subwf	4,w
 11291  17F9  1803               	skipnc
 11292  17FA  0008               	return
 11293  17FB  3190               	movlp	high i1S7243
 11294  17FC  3504               	lslf	4,w
 11295  17FD  3E1A               	addlw	low i1S7243
 11296  17FE  0082               	movwf	2
 11297  17FF                     i1l635:	
 11298  17FF  0008               	return
 11299  1800                     __end_ofi1_USBCheckStdRequest:	
 11300                           
 11301                           	psect	swtext2
 11302  101A                     __pswtext2:	
 11303  101A                     i1S7243:	
 11304  101A  3197  2FC1         	ljmp	i1l6497
 11305  101C  3197  2FC4         	ljmp	i1l6499
 11306  101E  3197  2FFF         	ljmp	i1l635
 11307  1020  3197  2FC4         	ljmp	i1l6499
 11308  1022  3197  2FFF         	ljmp	i1l635
 11309  1024  3197  2FA8         	ljmp	i1l637
 11310  1026  3197  2FAF         	ljmp	i1l6485
 11311  1028  3197  2FE5         	ljmp	i1l6511
 11312  102A  3197  2FB5         	ljmp	i1l6489
 11313  102C  3197  2FB2         	ljmp	i1l6487
 11314  102E  3197  2FC7         	ljmp	i1l6501
 11315  1030  3197  2FD5         	ljmp	i1l646
 11316  1032  3197  2FFF         	ljmp	i1l635
 11317                           
 11318                           	psect	text52
 11319  0DAE                     __ptext52:	
 11320 ;; *************** function i1_USBStdSetCfgHandler *****************
 11321 ;; Defined at:
 11322 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;		None
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  USBStdSetCfg    2    0[BANK1 ] PTR unsigned char 
 11327 ;;		 -> UEP1(1), 
 11328 ;;  USBStdSetCfg    1    3[BANK1 ] unsigned char 
 11329 ;;  USBStdSetCfg    1    2[BANK1 ] unsigned char 
 11330 ;; Return value:  Size  Location     Type
 11331 ;;                  1    wreg      void 
 11332 ;; Registers used:
 11333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11342 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;Total ram usage:        5 bytes
 11344 ;; Hardware stack levels used:    1
 11345 ;; Hardware stack levels required when called:    4
 11346 ;; This function calls:
 11347 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11348 ;;		i1_memset
 11349 ;; This function is called by:
 11350 ;;		i1_USBCheckStdRequest
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           
 11355                           ;psect for function i1_USBStdSetCfgHandler
 11356  0DAE                     i1_USBStdSetCfgHandler:	
 11357                           
 11358                           ;usb_device.c: 1970: uint8_t i;
 11359                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 11360                           
 11361                           ;incstack = 0
 11362 ;; hardware stack exceeded
 11363                           ; Regs used in i1_USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11364  0DAE  0021               	movlb	1	; select bank1
 11365  0DAF  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11366                           
 11367                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
 11368  0DB0  300E               	movlw	14
 11369  0DB1  00A1               	movwf	(i1USBStdSetCfgHandler@p+1)^(0+128)
 11370  0DB2  3099               	movlw	153
 11371  0DB3  00A0               	movwf	i1USBStdSetCfgHandler@p^(0+128)
 11372  0DB4  01A2               	clrf	i1USBStdSetCfgHandler@i_2174^(0+128)
 11373  0DB5  3002               	movlw	2
 11374  0DB6  0222               	subwf	i1USBStdSetCfgHandler@i_2174^(0+128),w
 11375  0DB7  1803               	btfsc	3,0
 11376  0DB8  2DCC               	goto	i1l6281
 11377  0DB9                     i1l6273:	
 11378  0DB9  0820               	movf	i1USBStdSetCfgHandler@p^(0+128),w
 11379  0DBA  0086               	movwf	6
 11380  0DBB  0821               	movf	(i1USBStdSetCfgHandler@p+1)^(0+128),w
 11381  0DBC  0087               	movwf	7
 11382  0DBD  0181               	clrf	1
 11383  0DBE  3001               	movlw	1
 11384  0DBF  07A0               	addwf	i1USBStdSetCfgHandler@p^(0+128),f
 11385  0DC0  3000               	movlw	0
 11386  0DC1  3DA1               	addwfc	(i1USBStdSetCfgHandler@p+1)^(0+128),f
 11387  0DC2  3001               	movlw	1
 11388  0DC3  0020               	movlb	0	; select bank0
 11389  0DC4  00DE               	movwf	??i1_USBStdSetCfgHandler
 11390  0DC5  085E               	movf	??i1_USBStdSetCfgHandler,w
 11391  0DC6  0021               	movlb	1	; select bank1
 11392  0DC7  07A2               	addwf	i1USBStdSetCfgHandler@i_2174^(0+128),f
 11393  0DC8  3002               	movlw	2
 11394  0DC9  0222               	subwf	i1USBStdSetCfgHandler@i_2174^(0+128),w
 11395  0DCA  1C03               	skipc
 11396  0DCB  2DB9               	goto	i1l6273
 11397  0DCC                     i1l6281:	
 11398                           
 11399                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 11400  0DCC  3020               	movlw	32
 11401  0DCD  00F0               	movwf	i1memset@p1
 11402  0DCE  3000               	movlw	0
 11403  0DCF  00F1               	movwf	i1memset@p1+1
 11404  0DD0  3000               	movlw	0
 11405  0DD1  00F2               	movwf	i1memset@c
 11406  0DD2  00F3               	movwf	i1memset@c+1
 11407  0DD3  3030               	movlw	48
 11408  0DD4  00F4               	movwf	i1memset@n
 11409  0DD5  3000               	movlw	0
 11410  0DD6  00F5               	movwf	i1memset@n+1
 11411  0DD7  3190  2077  318D   	fcall	i1_memset
 11412                           
 11413                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 11414  0DDA  003D               	movlb	29	; select bank29
 11415  0DDB  170E               	bsf	14,6	;volatile
 11416                           
 11417                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 11418  0DDC  0021               	movlb	1	; select bank1
 11419  0DDD  01A3               	clrf	i1USBStdSetCfgHandler@i^(0+128)
 11420  0DDE  3003               	movlw	3
 11421  0DDF  0223               	subwf	i1USBStdSetCfgHandler@i^(0+128),w
 11422  0DE0  1803               	btfsc	3,0
 11423  0DE1  2DF8               	goto	i1l6297
 11424  0DE2                     i1l6291:	
 11425                           
 11426                           ;usb_device.c: 1988: {
 11427                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 11428  0DE2  0823               	movf	i1USBStdSetCfgHandler@i^(0+128),w
 11429  0DE3  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 11430  0DE4  0086               	movwf	6
 11431  0DE5  3001               	movlw	1	; select bank2/3
 11432  0DE6  0087               	movwf	7
 11433  0DE7  0181               	clrf	1
 11434                           
 11435                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 11436  0DE8  0823               	movf	i1USBStdSetCfgHandler@i^(0+128),w
 11437  0DE9  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 11438  0DEA  0086               	movwf	6
 11439  0DEB  3001               	movlw	1	; select bank2/3
 11440  0DEC  0087               	movwf	7
 11441  0DED  0181               	clrf	1
 11442  0DEE  3001               	movlw	1
 11443  0DEF  0020               	movlb	0	; select bank0
 11444  0DF0  00DE               	movwf	??i1_USBStdSetCfgHandler
 11445  0DF1  085E               	movf	??i1_USBStdSetCfgHandler,w
 11446  0DF2  0021               	movlb	1	; select bank1
 11447  0DF3  07A3               	addwf	i1USBStdSetCfgHandler@i^(0+128),f
 11448  0DF4  3003               	movlw	3
 11449  0DF5  0223               	subwf	i1USBStdSetCfgHandler@i^(0+128),w
 11450  0DF6  1C03               	skipc
 11451  0DF7  2DE2               	goto	i1l6291
 11452  0DF8                     i1l6297:	
 11453                           
 11454                           ;usb_device.c: 1991: }
 11455                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 11456  0DF8  3065               	movlw	low _USBAlternateInterface
 11457  0DF9  00F0               	movwf	i1memset@p1
 11458  0DFA  3001               	movlw	high _USBAlternateInterface
 11459  0DFB  00F1               	movwf	i1memset@p1+1
 11460  0DFC  3000               	movlw	0
 11461  0DFD  00F2               	movwf	i1memset@c
 11462  0DFE  00F3               	movwf	i1memset@c+1
 11463  0DFF  3002               	movlw	2
 11464  0E00  00F4               	movwf	i1memset@n
 11465  0E01  3000               	movlw	0
 11466  0E02  00F5               	movwf	i1memset@n+1
 11467  0E03  3190  2077  318D   	fcall	i1_memset
 11468                           
 11469                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 11470  0E06  003D               	movlb	29	; select bank29
 11471  0E07  130E               	bcf	14,6	;volatile
 11472                           
 11473                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11474  0E08  3028               	movlw	40
 11475  0E09  0021               	movlb	1	; select bank1
 11476  0E0A  00CD               	movwf	_pBDTEntryIn^(0+128)
 11477  0E0B  3000               	movlw	0
 11478  0E0C  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 11479                           
 11480                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 11481  0E0D  3020               	movlw	32
 11482  0E0E  0020               	movlb	0	; select bank0
 11483  0E0F  00DE               	movwf	??i1_USBStdSetCfgHandler
 11484  0E10  085E               	movf	??i1_USBStdSetCfgHandler,w
 11485  0E11  0021               	movlb	1	; select bank1
 11486  0E12  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
 11487                           
 11488                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11489  0E13  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 11490  0E14  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 11491  0E15  39FF               	andlw	255
 11492  0E16  1D03               	skipz
 11493  0E17  3000               	movlw	0
 11494  0E18  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 11495                           
 11496                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 11497  0E19  0020               	movlb	0	; select bank0
 11498  0E1A  0852               	movf	82,w	;volatile
 11499  0E1B  00DE               	movwf	??i1_USBStdSetCfgHandler
 11500  0E1C  085E               	movf	??i1_USBStdSetCfgHandler,w
 11501  0E1D  0021               	movlb	1	; select bank1
 11502  0E1E  00E1               	movwf	_USBActiveConfiguration^(0+128)	;volatile
 11503                           
 11504                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 11505  0E1F  0861               	movf	_USBActiveConfiguration^(0+128),w	;volatile
 11506  0E20  1D03               	btfss	3,2
 11507  0E21  2E29               	goto	i1l6313
 11508                           
 11509                           ;usb_device.c: 2010: {
 11510                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 11511  0E22  3010               	movlw	16
 11512  0E23  0020               	movlb	0	; select bank0
 11513  0E24  00DE               	movwf	??i1_USBStdSetCfgHandler
 11514  0E25  085E               	movf	??i1_USBStdSetCfgHandler,w
 11515  0E26  0021               	movlb	1	; select bank1
 11516  0E27  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 11517                           
 11518                           ;usb_device.c: 2013: }
 11519  0E28  0008               	return
 11520  0E29                     i1l6313:	
 11521                           
 11522                           ;usb_device.c: 2014: else
 11523                           ;usb_device.c: 2015: {
 11524                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 11525  0E29  3000               	movlw	0
 11526  0E2A  0020               	movlb	0	; select bank0
 11527  0E2B  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11528  0E2C  3001               	movlw	1
 11529  0E2D  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11530  0E2E  30E1               	movlw	low _USBActiveConfiguration
 11531  0E2F  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11532  0E30  3000               	movlw	high _USBActiveConfiguration
 11533  0E31  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11534  0E32  3001               	movlw	1
 11535  0E33  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11536  0E34  3000               	movlw	0
 11537  0E35  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11538  0E36  3192  221F         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11539                           
 11540                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 11541  0E38  3020               	movlw	32
 11542  0E39  0020               	movlb	0	; select bank0
 11543  0E3A  00DE               	movwf	??i1_USBStdSetCfgHandler
 11544  0E3B  085E               	movf	??i1_USBStdSetCfgHandler,w
 11545  0E3C  0021               	movlb	1	; select bank1
 11546  0E3D  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 11547  0E3E  0008               	return
 11548  0E3F                     __end_ofi1_USBStdSetCfgHandler:	
 11549                           
 11550                           	psect	text53
 11551  1077                     __ptext53:	
 11552 ;; *************** function i1_memset *****************
 11553 ;; Defined at:
 11554 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 11555 ;; Parameters:    Size  Location     Type
 11556 ;;  p1              2    0[COMMON] PTR void 
 11557 ;;		 -> USBAlternateInterface(2), BDT(48), 
 11558 ;;  c               2    2[COMMON] int 
 11559 ;;  n               2    4[COMMON] unsigned int 
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;  memset          2    6[COMMON] PTR unsigned char 
 11562 ;;		 -> USBAlternateInterface(2), BDT(48), 
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1    wreg      PTR void 
 11565 ;; Registers used:
 11566 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11572 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;Total ram usage:        8 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		i1_USBStdSetCfgHandler
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           
 11586                           ;psect for function i1_memset
 11587  1077                     i1_memset:	
 11588                           
 11589                           ;incstack = 0
 11590 ;; hardware stack exceeded
 11591                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11592  1077  0871               	movf	i1memset@p1+1,w
 11593  1078  00F7               	movwf	i1memset@p+1
 11594  1079  0870               	movf	i1memset@p1,w
 11595  107A  00F6               	movwf	i1memset@p
 11596  107B                     i1l3973:	
 11597  107B  3001               	movlw	1
 11598  107C  02F4               	subwf	i1memset@n,f
 11599  107D  3000               	movlw	0
 11600  107E  3BF5               	subwfb	i1memset@n+1,f
 11601  107F  0A74               	incf	i1memset@n,w
 11602  1080  1903               	btfsc	3,2
 11603  1081  0A75               	incf	i1memset@n+1,w
 11604  1082  1903               	btfsc	3,2
 11605  1083  0008               	return
 11606  1084  0876               	movf	i1memset@p,w
 11607  1085  0086               	movwf	6
 11608  1086  0877               	movf	i1memset@p+1,w
 11609  1087  0087               	movwf	7
 11610  1088  0872               	movf	i1memset@c,w
 11611  1089  0081               	movwf	1
 11612  108A  3001               	movlw	1
 11613  108B  07F6               	addwf	i1memset@p,f
 11614  108C  3000               	movlw	0
 11615  108D  3DF7               	addwfc	i1memset@p+1,f
 11616  108E  287B               	goto	i1l3973
 11617  108F                     __end_ofi1_memset:	
 11618                           ;	Return value of i1_memset is never used
 11619                           
 11620                           
 11621                           	psect	text54
 11622  147B                     __ptext54:	
 11623 ;; *************** function i1_USBStdGetStatusHandler *****************
 11624 ;; Defined at:
 11625 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
 11626 ;; Parameters:    Size  Location     Type
 11627 ;;		None
 11628 ;; Auto vars:     Size  Location     Type
 11629 ;;  USBStdGetSta    2    1[COMMON] PTR struct __BDT
 11630 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  1    wreg      void 
 11633 ;; Registers used:
 11634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/0
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11643 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;Total ram usage:        3 bytes
 11645 ;; Hardware stack levels used:    1
 11646 ;; This function calls:
 11647 ;;		Nothing
 11648 ;; This function is called by:
 11649 ;;		i1_USBCheckStdRequest
 11650 ;; This function uses a non-reentrant model
 11651 ;;
 11652                           
 11653                           
 11654                           ;psect for function i1_USBStdGetStatusHandler
 11655  147B                     i1_USBStdGetStatusHandler:	
 11656                           
 11657                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 11658                           
 11659                           ;incstack = 0
 11660                           ; Regs used in i1_USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 11661  147B  0020               	movlb	0	; select bank0
 11662  147C  01E0               	clrf	96	;volatile
 11663                           
 11664                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 11665  147D  01E1               	clrf	97	;volatile
 11666                           
 11667                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 11668  147E  2CB6               	goto	i1l4279
 11669  147F                     i1l575:	
 11670                           ;usb_device.c: 2135: {
 11671                           ;usb_device.c: 2136: case (0x00):
 11672                           
 11673                           
 11674                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 11675  147F  0021               	movlb	1	; select bank1
 11676  1480  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11677                           
 11678                           ;usb_device.c: 2145: }
 11679                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 11680                           
 11681                           ;usb_device.c: 2143: {
 11682                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 11683                           
 11684                           ;usb_device.c: 2142: if(0 == 1)
 11685  1481  0022               	movlb	2	; select bank2
 11686  1482  034E               	decf	_RemoteWakeup^(0+256),w	;volatile
 11687  1483  1D03               	btfss	3,2
 11688  1484  2CC2               	goto	i1l578
 11689                           
 11690                           ;usb_device.c: 2148: {
 11691                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 11692  1485  0020               	movlb	0	; select bank0
 11693  1486  14E0               	bsf	96,1	;volatile
 11694                           
 11695                           ;usb_device.c: 2150: }
 11696                           ;usb_device.c: 2151: break;
 11697  1487  2CC2               	goto	i1l578
 11698  1488                     i1l579:	
 11699                           ;usb_device.c: 2152: case (0x01):
 11700                           
 11701                           
 11702                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 11703  1488  0021               	movlb	1	; select bank1
 11704  1489  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11705                           
 11706                           ;usb_device.c: 2154: break;
 11707  148A  2CC2               	goto	i1l578
 11708  148B                     i1l580:	
 11709                           ;usb_device.c: 2155: case (0x02):
 11710                           
 11711                           
 11712                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 11713  148B  0021               	movlb	1	; select bank1
 11714  148C  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11715                           
 11716                           ;usb_device.c: 2160: {
 11717                           ;usb_device.c: 2161: BDT_ENTRY *p;
 11718                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 11719  148D  0020               	movlb	0	; select bank0
 11720  148E  1BD4               	btfsc	84,7	;volatile
 11721  148F  2C9B               	goto	i1l4269
 11722                           
 11723                           ;usb_device.c: 2164: {
 11724                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11725  1490  0854               	movf	84,w	;volatile
 11726  1491  390F               	andlw	15
 11727  1492  0709               	addwf	9,w
 11728  1493  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11729  1494  0086               	movwf	6
 11730  1495  3001               	movlw	1	; select bank2/3
 11731  1496  0087               	movwf	7
 11732  1497  3F40               	moviw [0]fsr1
 11733  1498  00F1               	movwf	i1USBStdGetStatusHandler@p
 11734  1499  3F41               	moviw [1]fsr1
 11735  149A  2CA4               	goto	L13
 11736  149B                     i1l4269:	
 11737                           ;usb_device.c: 2166: }
 11738                           
 11739                           
 11740                           ;usb_device.c: 2167: else
 11741                           ;usb_device.c: 2168: {
 11742                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11743  149B  0854               	movf	84,w	;volatile
 11744  149C  390F               	andlw	15
 11745  149D  0709               	addwf	9,w
 11746  149E  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 11747  149F  0086               	movwf	6
 11748  14A0  0187               	clrf	7
 11749  14A1  3F40               	moviw [0]fsr1
 11750  14A2  00F1               	movwf	i1USBStdGetStatusHandler@p
 11751  14A3  3F41               	moviw [1]fsr1
 11752  14A4                     L13:	
 11753  14A4  00F2               	movwf	i1USBStdGetStatusHandler@p+1
 11754                           
 11755                           ;usb_device.c: 2170: }
 11756                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 11757  14A5  0871               	movf	i1USBStdGetStatusHandler@p,w
 11758  14A6  0086               	movwf	6
 11759  14A7  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 11760  14A8  0087               	movwf	7
 11761  14A9  1F81               	btfss	1,7
 11762  14AA  2CC2               	goto	i1l578
 11763  14AB  0871               	movf	i1USBStdGetStatusHandler@p,w
 11764  14AC  0086               	movwf	6
 11765  14AD  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 11766  14AE  0087               	movwf	7
 11767  14AF  1D01               	btfss	1,2
 11768  14B0  2CC2               	goto	i1l578
 11769                           
 11770                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 11771  14B1  3001               	movlw	1
 11772  14B2  00F0               	movwf	??i1_USBStdGetStatusHandler
 11773  14B3  0870               	movf	??i1_USBStdGetStatusHandler,w
 11774  14B4  00E0               	movwf	96	;volatile
 11775                           
 11776                           ;usb_device.c: 2175: }
 11777                           ;usb_device.c: 2176: }
 11778                           
 11779                           ;usb_device.c: 2174: break;
 11780  14B5  2CC2               	goto	i1l578
 11781  14B6                     i1l4279:	
 11782  14B6  0850               	movf	80,w	;volatile
 11783  14B7  391F               	andlw	31
 11784                           
 11785                           ; Switch size 1, requested type "space"
 11786                           ; Number of cases is 3, Range of values is 0 to 2
 11787                           ; switch strategies available:
 11788                           ; Name         Instructions Cycles
 11789                           ; simple_byte           10     6 (average)
 11790                           ; direct_byte           12     6 (fixed)
 11791                           ; jumptable            260     6 (fixed)
 11792                           ;	Chosen strategy is simple_byte
 11793  14B8  3A00               	xorlw	0	; case 0
 11794  14B9  1903               	skipnz
 11795  14BA  2C7F               	goto	i1l575
 11796  14BB  3A01               	xorlw	1	; case 1
 11797  14BC  1903               	skipnz
 11798  14BD  2C88               	goto	i1l579
 11799  14BE  3A03               	xorlw	3	; case 2
 11800  14BF  1903               	skipnz
 11801  14C0  2C8B               	goto	i1l580
 11802  14C1  2CC2               	goto	i1l578
 11803  14C2                     i1l578:	
 11804                           
 11805                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 11806  14C2  0021               	movlb	1	; select bank1
 11807  14C3  1FD5               	btfss	(_inPipes^(0+128)+2),7	;volatile
 11808  14C4  0008               	return
 11809                           
 11810                           ;usb_device.c: 2179: {
 11811                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 11812  14C5  3060               	movlw	96
 11813  14C6  00D3               	movwf	_inPipes^(0+128)	;volatile
 11814  14C7  3000               	movlw	0
 11815  14C8  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11816                           
 11817                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11818  14C9  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11819                           
 11820                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 11821  14CA  3002               	movlw	2
 11822  14CB  00F0               	movwf	??i1_USBStdGetStatusHandler
 11823  14CC  0870               	movf	??i1_USBStdGetStatusHandler,w
 11824  14CD  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11825  14CE  0008               	return
 11826  14CF                     __end_ofi1_USBStdGetStatusHandler:	
 11827                           
 11828                           	psect	text55
 11829  0B21                     __ptext55:	
 11830 ;; *************** function i1_USBStdGetDscHandler *****************
 11831 ;; Defined at:
 11832 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;		None
 11835 ;; Auto vars:     Size  Location     Type
 11836 ;;		None
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  1    wreg      void 
 11839 ;; Registers used:
 11840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11841 ;; Tracked objects:
 11842 ;;		On entry : 0/0
 11843 ;;		On exit  : 0/0
 11844 ;;		Unchanged: 0/0
 11845 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11850 ;;Total ram usage:        3 bytes
 11851 ;; Hardware stack levels used:    1
 11852 ;; This function calls:
 11853 ;;		Nothing
 11854 ;; This function is called by:
 11855 ;;		i1_USBCheckStdRequest
 11856 ;; This function uses a non-reentrant model
 11857 ;;
 11858                           
 11859                           
 11860                           ;psect for function i1_USBStdGetDscHandler
 11861  0B21                     i1_USBStdGetDscHandler:	
 11862                           
 11863                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 11864                           
 11865                           ;incstack = 0
 11866                           ; Regs used in i1_USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 11867  0B21  3080               	movlw	128
 11868  0B22  0020               	movlb	0	; select bank0
 11869  0B23  0650               	xorwf	80,w	;volatile
 11870  0B24  1D03               	btfss	3,2
 11871  0B25  0008               	return
 11872                           
 11873                           ;usb_device.c: 2046: {
 11874                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 11875  0B26  30C0               	movlw	192
 11876  0B27  00F0               	movwf	??i1_USBStdGetDscHandler
 11877  0B28  0870               	movf	??i1_USBStdGetDscHandler,w
 11878  0B29  0021               	movlb	1	; select bank1
 11879  0B2A  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
 11880                           
 11881                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 11882  0B2B  2B93               	goto	i1l4257
 11883  0B2C                     i1l4231:	
 11884                           ;usb_device.c: 2050: {
 11885                           ;usb_device.c: 2051: case 0x01:
 11886                           
 11887                           
 11888                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 11889  0B2C  307D               	movlw	low (_device_dsc| (0+32768))
 11890  0B2D  0021               	movlb	1	; select bank1
 11891  0B2E  00D3               	movwf	_inPipes^(0+128)	;volatile
 11892  0B2F  3098               	movlw	high (_device_dsc| (0+32768))
 11893  0B30  00D4               	movwf	(_inPipes^(0+128)+1)	;volatile
 11894                           
 11895                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 11896  0B31  3000               	movlw	0
 11897  0B32  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 11898  0B33  3012               	movlw	18
 11899  0B34  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11900                           
 11901                           ;usb_device.c: 2058: break;
 11902  0B35  0008               	return
 11903  0B36                     i1l4235:	
 11904                           ;usb_device.c: 2059: case 0x02:
 11905                           
 11906                           
 11907                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 11908  0B36  0020               	movlb	0	; select bank0
 11909  0B37  0852               	movf	82,w	;volatile
 11910  0B38  1D03               	btfss	3,2
 11911  0B39  2B69               	goto	i1l4243
 11912                           
 11913                           ;usb_device.c: 2064: {
 11914                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 11915  0B3A  0852               	movf	82,w	;volatile
 11916  0B3B  00F0               	movwf	??i1_USBStdGetDscHandler
 11917  0B3C  01F1               	clrf	??i1_USBStdGetDscHandler+1
 11918  0B3D  35F0               	lslf	??i1_USBStdGetDscHandler,f
 11919  0B3E  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 11920  0B3F  3099               	movlw	low (_USB_CD_Ptr| (0+32768))
 11921  0B40  0770               	addwf	??i1_USBStdGetDscHandler,w
 11922  0B41  0084               	movwf	4
 11923  0B42  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
 11924  0B43  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 11925  0B44  0085               	movwf	5
 11926  0B45  3F00               	moviw [0]fsr0
 11927  0B46  0021               	movlb	1	; select bank1
 11928  0B47  00D3               	movwf	_inPipes^(0+128)	;volatile
 11929  0B48  3F01               	moviw [1]fsr0
 11930  0B49  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11931                           
 11932                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 11933  0B4A  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 11934  0B4B  00F1               	movwf	??i1_USBStdGetDscHandler+1
 11935  0B4C  0853               	movf	_inPipes^(0+128),w	;volatile
 11936  0B4D  00F0               	movwf	??i1_USBStdGetDscHandler
 11937  0B4E  3002               	movlw	2
 11938  0B4F  0770               	addwf	??i1_USBStdGetDscHandler,w
 11939  0B50  0084               	movwf	4
 11940  0B51  0871               	movf	??i1_USBStdGetDscHandler+1,w
 11941  0B52  1803               	skipnc
 11942  0B53  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 11943  0B54  0085               	movwf	5
 11944  0B55  0800               	movf	0,w	;code access
 11945  0B56  00F2               	movwf	??i1_USBStdGetDscHandler+2
 11946  0B57  0872               	movf	??i1_USBStdGetDscHandler+2,w
 11947  0B58  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11948                           
 11949                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 11950  0B59  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 11951  0B5A  00F1               	movwf	??i1_USBStdGetDscHandler+1
 11952  0B5B  0853               	movf	_inPipes^(0+128),w	;volatile
 11953  0B5C  00F0               	movwf	??i1_USBStdGetDscHandler
 11954  0B5D  3003               	movlw	3
 11955  0B5E  0770               	addwf	??i1_USBStdGetDscHandler,w
 11956  0B5F  0084               	movwf	4
 11957  0B60  0871               	movf	??i1_USBStdGetDscHandler+1,w
 11958  0B61  1803               	skipnc
 11959  0B62  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 11960  0B63  0085               	movwf	5
 11961  0B64  0800               	movf	0,w	;code access
 11962  0B65  00F2               	movwf	??i1_USBStdGetDscHandler+2
 11963  0B66  0872               	movf	??i1_USBStdGetDscHandler+2,w
 11964  0B67  00D7               	movwf	(_inPipes^(0+128)+4)	;volatile
 11965                           
 11966                           ;usb_device.c: 2076: }
 11967  0B68  0008               	return
 11968  0B69                     i1l4243:	
 11969                           
 11970                           ;usb_device.c: 2077: else
 11971                           ;usb_device.c: 2078: {
 11972                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 11973  0B69  0021               	movlb	1	; select bank1
 11974  0B6A  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11975                           
 11976                           ;usb_device.c: 2080: }
 11977                           ;usb_device.c: 2081: break;
 11978  0B6B  0008               	return
 11979  0B6C                     i1l4245:	
 11980                           ;usb_device.c: 2082: case 0x03:
 11981                           
 11982                           
 11983                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 11984  0B6C  3003               	movlw	3
 11985  0B6D  0020               	movlb	0	; select bank0
 11986  0B6E  0252               	subwf	82,w	;volatile
 11987  0B6F  1803               	skipnc
 11988  0B70  2B8D               	goto	i1l4251
 11989                           
 11990                           ;usb_device.c: 2087: {
 11991                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11992  0B71  0852               	movf	82,w	;volatile
 11993  0B72  00F0               	movwf	??i1_USBStdGetDscHandler
 11994  0B73  01F1               	clrf	??i1_USBStdGetDscHandler+1
 11995  0B74  35F0               	lslf	??i1_USBStdGetDscHandler,f
 11996  0B75  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 11997  0B76  308F               	movlw	low (_USB_SD_Ptr| (0+32768))
 11998  0B77  0770               	addwf	??i1_USBStdGetDscHandler,w
 11999  0B78  0084               	movwf	4
 12000  0B79  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
 12001  0B7A  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 12002  0B7B  0085               	movwf	5
 12003  0B7C  3F00               	moviw [0]fsr0
 12004  0B7D  0021               	movlb	1	; select bank1
 12005  0B7E  00D3               	movwf	_inPipes^(0+128)	;volatile
 12006  0B7F  3F01               	moviw [1]fsr0
 12007  0B80  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12008                           
 12009                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 12010  0B81  0853               	movf	_inPipes^(0+128),w	;volatile
 12011  0B82  0084               	movwf	4
 12012  0B83  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 12013  0B84  0085               	movwf	5
 12014  0B85  0800               	movf	0,w	;code access
 12015  0B86  00F0               	movwf	??i1_USBStdGetDscHandler
 12016  0B87  01F1               	clrf	??i1_USBStdGetDscHandler+1
 12017  0B88  0870               	movf	??i1_USBStdGetDscHandler,w
 12018  0B89  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12019  0B8A  0871               	movf	??i1_USBStdGetDscHandler+1,w
 12020  0B8B  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12021                           
 12022                           ;usb_device.c: 2092: }
 12023  0B8C  0008               	return
 12024  0B8D                     i1l4251:	
 12025                           
 12026                           ;usb_device.c: 2102: else
 12027                           ;usb_device.c: 2103: {
 12028                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 12029  0B8D  0021               	movlb	1	; select bank1
 12030  0B8E  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 12031                           
 12032                           ;usb_device.c: 2105: }
 12033                           ;usb_device.c: 2106: break;
 12034  0B8F  0008               	return
 12035  0B90                     i1l4253:	
 12036                           ;usb_device.c: 2107: default:
 12037                           
 12038                           
 12039                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 12040  0B90  0021               	movlb	1	; select bank1
 12041  0B91  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 12042                           
 12043                           ;usb_device.c: 2110: }
 12044                           
 12045                           ;usb_device.c: 2109: break;
 12046  0B92  0008               	return
 12047  0B93                     i1l4257:	
 12048  0B93  0020               	movlb	0	; select bank0
 12049  0B94  0853               	movf	83,w	;volatile
 12050                           
 12051                           ; Switch size 1, requested type "space"
 12052                           ; Number of cases is 3, Range of values is 1 to 3
 12053                           ; switch strategies available:
 12054                           ; Name         Instructions Cycles
 12055                           ; simple_byte           10     6 (average)
 12056                           ; direct_byte           15     9 (fixed)
 12057                           ; jumptable            263     9 (fixed)
 12058                           ;	Chosen strategy is simple_byte
 12059  0B95  3A01               	xorlw	1	; case 1
 12060  0B96  1903               	skipnz
 12061  0B97  2B2C               	goto	i1l4231
 12062  0B98  3A03               	xorlw	3	; case 2
 12063  0B99  1903               	skipnz
 12064  0B9A  2B36               	goto	i1l4235
 12065  0B9B  3A01               	xorlw	1	; case 3
 12066  0B9C  1903               	skipnz
 12067  0B9D  2B6C               	goto	i1l4245
 12068  0B9E  2B90               	goto	i1l4253
 12069  0B9F  0008               	return
 12070  0BA0                     __end_ofi1_USBStdGetDscHandler:	
 12071                           
 12072                           	psect	text56
 12073  01A4                     __ptext56:	
 12074 ;; *************** function i1_USBStdFeatureReqHandler *****************
 12075 ;; Defined at:
 12076 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
 12077 ;; Parameters:    Size  Location     Type
 12078 ;;		None
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;  USBStdFeatur    2    3[BANK1 ] PTR struct __BDT
 12081 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 12082 ;;  USBStdFeatur    2    0[BANK1 ] PTR unsigned char 
 12083 ;;		 -> UEP0(1), 
 12084 ;;  USBStdFeatur    1    2[BANK1 ] struct .
 12085 ;; Return value:  Size  Location     Type
 12086 ;;                  1    wreg      void 
 12087 ;; Registers used:
 12088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12089 ;; Tracked objects:
 12090 ;;		On entry : 0/0
 12091 ;;		On exit  : 0/0
 12092 ;;		Unchanged: 0/0
 12093 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12095 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12096 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12097 ;;      Totals:         0       2       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12098 ;;Total ram usage:        7 bytes
 12099 ;; Hardware stack levels used:    1
 12100 ;; Hardware stack levels required when called:    4
 12101 ;; This function calls:
 12102 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12103 ;; This function is called by:
 12104 ;;		i1_USBCheckStdRequest
 12105 ;; This function uses a non-reentrant model
 12106 ;;
 12107                           
 12108                           
 12109                           ;psect for function i1_USBStdFeatureReqHandler
 12110  01A4                     i1_USBStdFeatureReqHandler:	
 12111                           
 12112                           ;usb_device.c: 2756: BDT_ENTRY *p;
 12113                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 12114                           ;usb_device.c: 2761: unsigned char* pUEP;
 12115                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 12116                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 12117                           
 12118                           ;incstack = 0
 12119 ;; hardware stack exceeded
 12120                           ; Regs used in i1_USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12121  01A4  0020               	movlb	0	; select bank0
 12122  01A5  0352               	decf	82,w	;volatile
 12123  01A6  1D03               	btfss	3,2
 12124  01A7  29BC               	goto	i1l6329
 12125  01A8  0850               	movf	80,w	;volatile
 12126  01A9  391F               	andlw	31
 12127  01AA  3A00               	xorlw	0
 12128  01AB  1D03               	skipz
 12129  01AC  29BC               	goto	i1l6329
 12130                           
 12131                           ;usb_device.c: 2801: {
 12132                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 12133  01AD  0021               	movlb	1	; select bank1
 12134  01AE  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12135                           
 12136                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 12137  01AF  3003               	movlw	3
 12138  01B0  0020               	movlb	0	; select bank0
 12139  01B1  0651               	xorwf	81,w	;volatile
 12140  01B2  1D03               	btfss	3,2
 12141  01B3  29BA               	goto	i1l6327
 12142                           
 12143                           ;usb_device.c: 2804: RemoteWakeup = 1;
 12144  01B4  3001               	movlw	1
 12145  01B5  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12146  01B6  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12147  01B7  0022               	movlb	2	; select bank2
 12148  01B8  00CE               	movwf	_RemoteWakeup^(0+256)	;volatile
 12149  01B9  29BC               	goto	i1l6329
 12150  01BA                     i1l6327:	
 12151                           
 12152                           ;usb_device.c: 2805: else
 12153                           ;usb_device.c: 2806: RemoteWakeup = 0;
 12154  01BA  0022               	movlb	2	; select bank2
 12155  01BB  01CE               	clrf	_RemoteWakeup^(0+256)	;volatile
 12156  01BC                     i1l6329:	
 12157                           
 12158                           ;usb_device.c: 2807: }
 12159                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 12160                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 12161                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 12162                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 12163  01BC  0020               	movlb	0	; select bank0
 12164  01BD  0852               	movf	82,w	;volatile
 12165  01BE  1D03               	btfss	3,2
 12166  01BF  0008               	return
 12167  01C0  0850               	movf	80,w	;volatile
 12168  01C1  391F               	andlw	31
 12169  01C2  3A02               	xorlw	2
 12170  01C3  1D03               	skipz
 12171  01C4  0008               	return
 12172  01C5  0854               	movf	84,w	;volatile
 12173  01C6  390F               	andlw	15
 12174  01C7  3A00               	xorlw	0
 12175  01C8  1903               	skipnz
 12176  01C9  0008               	return
 12177  01CA  0854               	movf	84,w	;volatile
 12178  01CB  390F               	andlw	15
 12179  01CC  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12180  01CD  3003               	movlw	3
 12181  01CE  025E               	subwf	??i1_USBStdFeatureReqHandler,w
 12182  01CF  1803               	skipnc
 12183  01D0  0008               	return
 12184  01D1  3020               	movlw	32
 12185  01D2  0021               	movlb	1	; select bank1
 12186  01D3  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
 12187  01D4  1D03               	btfss	3,2
 12188  01D5  0008               	return
 12189                           
 12190                           ;usb_device.c: 2814: {
 12191                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 12192  01D6  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12193                           
 12194                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 12195  01D7  0020               	movlb	0	; select bank0
 12196  01D8  1BD4               	btfsc	84,7	;volatile
 12197  01D9  29EB               	goto	i1l6343
 12198                           
 12199                           ;usb_device.c: 2821: {
 12200                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12201  01DA  0854               	movf	84,w	;volatile
 12202  01DB  390F               	andlw	15
 12203  01DC  0709               	addwf	9,w
 12204  01DD  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12205  01DE  0086               	movwf	6
 12206  01DF  3001               	movlw	1	; select bank2/3
 12207  01E0  0087               	movwf	7
 12208  01E1  3F40               	moviw [0]fsr1
 12209  01E2  0021               	movlb	1	; select bank1
 12210  01E3  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12211  01E4  3F41               	moviw [1]fsr1
 12212  01E5  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12213                           
 12214                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 12215  01E6  0020               	movlb	0	; select bank0
 12216  01E7  0854               	movf	84,w	;volatile
 12217  01E8  390F               	andlw	15
 12218  01E9  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12219  01EA  29FB               	goto	L14
 12220  01EB                     i1l6343:	
 12221                           ;usb_device.c: 2824: }
 12222                           
 12223                           
 12224                           ;usb_device.c: 2825: else
 12225                           ;usb_device.c: 2826: {
 12226                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12227  01EB  0020               	movlb	0	; select bank0
 12228  01EC  0854               	movf	84,w	;volatile
 12229  01ED  390F               	andlw	15
 12230  01EE  0709               	addwf	9,w
 12231  01EF  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 12232  01F0  0086               	movwf	6
 12233  01F1  0187               	clrf	7
 12234  01F2  3F40               	moviw [0]fsr1
 12235  01F3  0021               	movlb	1	; select bank1
 12236  01F4  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12237  01F5  3F41               	moviw [1]fsr1
 12238  01F6  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12239                           
 12240                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 12241  01F7  0020               	movlb	0	; select bank0
 12242  01F8  0854               	movf	84,w	;volatile
 12243  01F9  390F               	andlw	15
 12244  01FA  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12245  01FB                     L14:	
 12246  01FB  0086               	movwf	6
 12247  01FC  3001               	movlw	1	; select bank2/3
 12248  01FD  0087               	movwf	7
 12249  01FE  0801               	movf	1,w
 12250  01FF  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12251  0200  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12252  0201  0021               	movlb	1	; select bank1
 12253  0202  00A2               	movwf	i1USBStdFeatureReqHandler@current_ep_data^(0+128)
 12254                           
 12255                           ;usb_device.c: 2829: }
 12256                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 12257  0203  1822               	btfsc	i1USBStdFeatureReqHandler@current_ep_data^(0+128),0
 12258  0204  2A15               	goto	i1l6349
 12259                           
 12260                           ;usb_device.c: 2836: {
 12261                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 12262  0205  30FB               	movlw	251
 12263  0206  0020               	movlb	0	; select bank0
 12264  0207  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12265  0208  30FF               	movlw	255
 12266  0209  00DF               	movwf	??i1_USBStdFeatureReqHandler+1
 12267  020A  0021               	movlb	1	; select bank1
 12268  020B  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12269  020C  0020               	movlb	0	; select bank0
 12270  020D  055E               	andwf	??i1_USBStdFeatureReqHandler,w
 12271  020E  0021               	movlb	1	; select bank1
 12272  020F  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12273  0210  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12274  0211  0020               	movlb	0	; select bank0
 12275  0212  055F               	andwf	??i1_USBStdFeatureReqHandler+1,w
 12276  0213  0021               	movlb	1	; select bank1
 12277  0214  2A1A               	goto	L15
 12278  0215                     i1l6349:	
 12279                           ;usb_device.c: 2838: }
 12280                           
 12281                           
 12282                           ;usb_device.c: 2839: else
 12283                           ;usb_device.c: 2840: {
 12284                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 12285  0215  3004               	movlw	4
 12286  0216  0423               	iorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 12287  0217  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12288  0218  3000               	movlw	0
 12289  0219  0424               	iorwf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12290  021A                     L15:	
 12291  021A  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12292                           
 12293                           ;usb_device.c: 2842: }
 12294                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 12295  021B  0020               	movlb	0	; select bank0
 12296  021C  1BD4               	btfsc	84,7	;volatile
 12297  021D  2A2B               	goto	i1l6355
 12298                           
 12299                           ;usb_device.c: 2848: {
 12300                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12301  021E  0854               	movf	84,w	;volatile
 12302  021F  390F               	andlw	15
 12303  0220  0709               	addwf	9,w
 12304  0221  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12305  0222  0086               	movwf	6
 12306  0223  3001               	movlw	1	; select bank2/3
 12307  0224  0087               	movwf	7
 12308  0225  0021               	movlb	1	; select bank1
 12309  0226  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12310  0227  3FC0               	movwi [0]fsr1
 12311  0228  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12312  0229  3FC1               	movwi [1]fsr1
 12313                           
 12314                           ;usb_device.c: 2850: }
 12315  022A  2A37               	goto	i1l6357
 12316  022B                     i1l6355:	
 12317                           
 12318                           ;usb_device.c: 2851: else
 12319                           ;usb_device.c: 2852: {
 12320                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12321  022B  0020               	movlb	0	; select bank0
 12322  022C  0854               	movf	84,w	;volatile
 12323  022D  390F               	andlw	15
 12324  022E  0709               	addwf	9,w
 12325  022F  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 12326  0230  0086               	movwf	6
 12327  0231  0187               	clrf	7
 12328  0232  0021               	movlb	1	; select bank1
 12329  0233  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12330  0234  3FC0               	movwi [0]fsr1
 12331  0235  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12332  0236  3FC1               	movwi [1]fsr1
 12333  0237                     i1l6357:	
 12334                           
 12335                           ;usb_device.c: 2854: }
 12336                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 12337  0237  3003               	movlw	3
 12338  0238  0020               	movlb	0	; select bank0
 12339  0239  0651               	xorwf	81,w	;volatile
 12340  023A  1D03               	btfss	3,2
 12341  023B  2A5D               	goto	i1l6371
 12342                           
 12343                           ;usb_device.c: 2858: {
 12344                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 12345  023C  0021               	movlb	1	; select bank1
 12346  023D  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12347  023E  0086               	movwf	6
 12348  023F  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12349  0240  0087               	movwf	7
 12350  0241  1F81               	btfss	1,7
 12351  0242  2A51               	goto	i1l6367
 12352                           
 12353                           ;usb_device.c: 2860: {
 12354                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 12355  0243  0020               	movlb	0	; select bank0
 12356  0244  1BD4               	btfsc	84,7	;volatile
 12357  0245  2A4A               	goto	i1l6365
 12358                           
 12359                           ;usb_device.c: 2864: {
 12360                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 12361  0246  0854               	movf	84,w	;volatile
 12362  0247  390F               	andlw	15
 12363  0248  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12364  0249  2A4D               	goto	L16
 12365  024A                     i1l6365:	
 12366                           ;usb_device.c: 2866: }
 12367                           
 12368                           
 12369                           ;usb_device.c: 2867: else
 12370                           ;usb_device.c: 2868: {
 12371                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 12372  024A  0854               	movf	84,w	;volatile
 12373  024B  390F               	andlw	15
 12374  024C  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12375  024D                     L16:	
 12376  024D  0086               	movwf	6
 12377  024E  3001               	movlw	1	; select bank2/3
 12378  024F  0087               	movwf	7
 12379  0250  1481               	bsf	1,1
 12380  0251                     i1l6367:	
 12381                           
 12382                           ;usb_device.c: 2870: }
 12383                           ;usb_device.c: 2871: }
 12384                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 12385  0251  0021               	movlb	1	; select bank1
 12386  0252  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12387  0253  0086               	movwf	6
 12388  0254  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12389  0255  0087               	movwf	7
 12390  0256  1501               	bsf	1,2
 12391                           
 12392                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 12393  0257  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12394  0258  0086               	movwf	6
 12395  0259  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12396  025A  0087               	movwf	7
 12397  025B  1781               	bsf	1,7
 12398                           
 12399                           ;usb_device.c: 2876: }
 12400  025C  0008               	return
 12401  025D                     i1l6371:	
 12402                           
 12403                           ;usb_device.c: 2877: else
 12404                           ;usb_device.c: 2878: {
 12405                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 12406  025D  3004               	movlw	4
 12407  025E  0021               	movlb	1	; select bank1
 12408  025F  0623               	xorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 12409  0260  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12410  0261  3000               	movlw	0
 12411  0262  0624               	xorwf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12412  0263  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12413                           
 12414                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 12415  0264  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12416  0265  0086               	movwf	6
 12417  0266  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12418  0267  0087               	movwf	7
 12419  0268  1F81               	btfss	1,7
 12420  0269  2A90               	goto	i1l6381
 12421                           
 12422                           ;usb_device.c: 2885: {
 12423                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 12424  026A  307F               	movlw	127
 12425  026B  0020               	movlb	0	; select bank0
 12426  026C  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12427  026D  0021               	movlb	1	; select bank1
 12428  026E  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12429  026F  0086               	movwf	6
 12430  0270  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12431  0271  0087               	movwf	7
 12432  0272  0020               	movlb	0	; select bank0
 12433  0273  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12434  0274  0581               	andwf	1,f
 12435                           
 12436                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 12437  0275  0021               	movlb	1	; select bank1
 12438  0276  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12439  0277  0086               	movwf	6
 12440  0278  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12441  0279  0087               	movwf	7
 12442  027A  1701               	bsf	1,6
 12443                           
 12444                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 12445  027B  3000               	movlw	0
 12446  027C  0020               	movlb	0	; select bank0
 12447  027D  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12448  027E  3005               	movlw	5
 12449  027F  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12450  0280  0021               	movlb	1	; select bank1
 12451  0281  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12452  0282  0020               	movlb	0	; select bank0
 12453  0283  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12454  0284  0021               	movlb	1	; select bank1
 12455  0285  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12456  0286  0020               	movlb	0	; select bank0
 12457  0287  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12458  0288  3002               	movlw	2
 12459  0289  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12460  028A  3000               	movlw	0
 12461  028B  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12462  028C  3192  221F  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12463                           
 12464                           ;usb_device.c: 2891: }
 12465  028F  2A96               	goto	i1l6383
 12466  0290                     i1l6381:	
 12467                           
 12468                           ;usb_device.c: 2892: else
 12469                           ;usb_device.c: 2893: {
 12470                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 12471  0290  0021               	movlb	1	; select bank1
 12472  0291  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12473  0292  0086               	movwf	6
 12474  0293  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12475  0294  0087               	movwf	7
 12476  0295  1701               	bsf	1,6
 12477  0296                     i1l6383:	
 12478                           
 12479                           ;usb_device.c: 2896: }
 12480                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 12481  0296  3004               	movlw	4
 12482  0297  0021               	movlb	1	; select bank1
 12483  0298  0623               	xorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 12484  0299  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12485  029A  3000               	movlw	0
 12486  029B  0624               	xorwf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12487  029C  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12488                           
 12489                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 12490  029D  18A2               	btfsc	i1USBStdFeatureReqHandler@current_ep_data^(0+128),1
 12491  029E  2AA5               	goto	i1l671
 12492  029F  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12493  02A0  0086               	movwf	6
 12494  02A1  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12495  02A2  0087               	movwf	7
 12496  02A3  1F81               	btfss	1,7
 12497  02A4  2AD1               	goto	i1l6395
 12498  02A5                     i1l671:	
 12499                           
 12500                           ;usb_device.c: 2907: {
 12501                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 12502  02A5  0020               	movlb	0	; select bank0
 12503  02A6  1BD4               	btfsc	84,7	;volatile
 12504  02A7  2AAC               	goto	i1l6391
 12505                           
 12506                           ;usb_device.c: 2909: {
 12507                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 12508  02A8  0854               	movf	84,w	;volatile
 12509  02A9  390F               	andlw	15
 12510  02AA  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12511  02AB  2AAF               	goto	L17
 12512  02AC                     i1l6391:	
 12513                           ;usb_device.c: 2911: }
 12514                           
 12515                           
 12516                           ;usb_device.c: 2912: else
 12517                           ;usb_device.c: 2913: {
 12518                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 12519  02AC  0854               	movf	84,w	;volatile
 12520  02AD  390F               	andlw	15
 12521  02AE  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12522  02AF                     L17:	
 12523  02AF  0086               	movwf	6
 12524  02B0  3001               	movlw	1	; select bank2/3
 12525  02B1  0087               	movwf	7
 12526  02B2  1081               	bcf	1,1
 12527                           
 12528                           ;usb_device.c: 2915: }
 12529                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 12530  02B3  303B               	movlw	59
 12531  02B4  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12532  02B5  0021               	movlb	1	; select bank1
 12533  02B6  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12534  02B7  0086               	movwf	6
 12535  02B8  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12536  02B9  0087               	movwf	7
 12537  02BA  0020               	movlb	0	; select bank0
 12538  02BB  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12539  02BC  0581               	andwf	1,f
 12540                           
 12541                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 12542  02BD  3000               	movlw	0
 12543  02BE  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12544  02BF  3005               	movlw	5
 12545  02C0  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12546  02C1  0021               	movlb	1	; select bank1
 12547  02C2  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12548  02C3  0020               	movlb	0	; select bank0
 12549  02C4  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12550  02C5  0021               	movlb	1	; select bank1
 12551  02C6  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12552  02C7  0020               	movlb	0	; select bank0
 12553  02C8  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12554  02C9  3002               	movlw	2
 12555  02CA  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12556  02CB  3000               	movlw	0
 12557  02CC  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12558  02CD  3192  221F  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12559                           
 12560                           ;usb_device.c: 2921: }
 12561  02D0  2ADC               	goto	i1l6397
 12562  02D1                     i1l6395:	
 12563                           
 12564                           ;usb_device.c: 2922: else
 12565                           ;usb_device.c: 2923: {
 12566                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 12567  02D1  303B               	movlw	59
 12568  02D2  0020               	movlb	0	; select bank0
 12569  02D3  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12570  02D4  0021               	movlb	1	; select bank1
 12571  02D5  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12572  02D6  0086               	movwf	6
 12573  02D7  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12574  02D8  0087               	movwf	7
 12575  02D9  0020               	movlb	0	; select bank0
 12576  02DA  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12577  02DB  0581               	andwf	1,f
 12578  02DC                     i1l6397:	
 12579                           
 12580                           ;usb_device.c: 2926: }
 12581                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 12582  02DC  0020               	movlb	0	; select bank0
 12583  02DD  0854               	movf	84,w	;volatile
 12584  02DE  390F               	andlw	15
 12585  02DF  3E98               	addlw	152
 12586  02E0  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12587  02E1  01DF               	clrf	??i1_USBStdFeatureReqHandler+1
 12588  02E2  300E               	movlw	14
 12589  02E3  3DDF               	addwfc	??i1_USBStdFeatureReqHandler+1,f
 12590  02E4  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12591  02E5  0021               	movlb	1	; select bank1
 12592  02E6  00A0               	movwf	i1USBStdFeatureReqHandler@pUEP^(0+128)
 12593  02E7  0020               	movlb	0	; select bank0
 12594  02E8  085F               	movf	??i1_USBStdFeatureReqHandler+1,w
 12595  02E9  0021               	movlb	1	; select bank1
 12596  02EA  00A1               	movwf	(i1USBStdFeatureReqHandler@pUEP+1)^(0+128)
 12597                           
 12598                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 12599  02EB  30FE               	movlw	254
 12600  02EC  0020               	movlb	0	; select bank0
 12601  02ED  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12602  02EE  0021               	movlb	1	; select bank1
 12603  02EF  0820               	movf	i1USBStdFeatureReqHandler@pUEP^(0+128),w
 12604  02F0  0086               	movwf	6
 12605  02F1  0821               	movf	(i1USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 12606  02F2  0087               	movwf	7
 12607  02F3  0020               	movlb	0	; select bank0
 12608  02F4  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12609  02F5  0581               	andwf	1,f
 12610  02F6  0008               	return
 12611  02F7                     __end_ofi1_USBStdFeatureReqHandler:	
 12612                           
 12613                           	psect	text57
 12614  121F                     __ptext57:	
 12615 ;; *************** function i1_USER_USB_CALLBACK_EVENT_HANDLER *****************
 12616 ;; Defined at:
 12617 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;  event           2    0[BANK0h] enum E34
 12620 ;;  pdata           2    2[BANK0h] PTR void 
 12621 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 12622 ;;		 -> NULL(0), 
 12623 ;;  size            2    4[BANK0h] unsigned int 
 12624 ;; Auto vars:     Size  Location     Type
 12625 ;;		None
 12626 ;; Return value:  Size  Location     Type
 12627 ;;                  1    wreg      unsigned char 
 12628 ;; Registers used:
 12629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12630 ;; Tracked objects:
 12631 ;;		On entry : 0/0
 12632 ;;		On exit  : 0/0
 12633 ;;		Unchanged: 0/0
 12634 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12635 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12638 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12639 ;;Total ram usage:        6 bytes
 12640 ;; Hardware stack levels used:    1
 12641 ;; Hardware stack levels required when called:    3
 12642 ;; This function calls:
 12643 ;;		i1_CDCInitEP
 12644 ;;		i1_USBCheckCDCRequest
 12645 ;; This function is called by:
 12646 ;;		i1_USBDeviceTasks
 12647 ;;		i1_USBStdSetCfgHandler
 12648 ;;		i1_USBSuspend
 12649 ;;		i1_USBWakeFromSuspend
 12650 ;;		i1_USBCtrlTrfSetupHandler
 12651 ;;		i1_USBCheckStdRequest
 12652 ;;		i1_USBStdFeatureReqHandler
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           
 12656                           
 12657                           ;psect for function i1_USER_USB_CALLBACK_EVENT_HANDLER
 12658  121F                     i1_USER_USB_CALLBACK_EVENT_HANDLER:	
 12659                           
 12660                           ;usb_device_events.c: 51: switch( (int) event )
 12661                           
 12662                           ;incstack = 0
 12663                           ; Regs used in i1_USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12664  121F  2A26               	goto	i1l6115
 12665  1220                     i1l6109:	
 12666                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
 12667                           
 12668                           ;usb_device_events.c: 73: break;
 12669                           
 12670                           ;usb_device_events.c: 68: case EVENT_RESUME:
 12671                           
 12672                           ;usb_device_events.c: 66: break;
 12673                           
 12674                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
 12675                           
 12676                           ;usb_device_events.c: 57: break;
 12677                           
 12678                           ;usb_device_events.c: 56: case EVENT_SOF:
 12679                           
 12680                           ;usb_device_events.c: 54: break;
 12681                           
 12682                           ;usb_device_events.c: 52: {
 12683                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
 12684                           
 12685                           
 12686                           ;usb_device_events.c: 76: CDCInitEP();
 12687  1220  3192  227F         	fcall	i1_CDCInitEP
 12688                           
 12689                           ;usb_device_events.c: 80: break;
 12690                           
 12691                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
 12692                           
 12693                           ;usb_device_events.c: 77: break;
 12694  1222  0008               	return
 12695  1223                     i1l6111:	
 12696                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
 12697                           
 12698                           
 12699                           ;usb_device_events.c: 85: USBCheckCDCRequest();
 12700  1223  3197  2740         	fcall	i1_USBCheckCDCRequest
 12701                           
 12702                           ;usb_device_events.c: 96: }
 12703                           
 12704                           ;usb_device_events.c: 95: break;
 12705                           
 12706                           ;usb_device_events.c: 94: default:
 12707                           
 12708                           ;usb_device_events.c: 92: break;
 12709                           
 12710                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
 12711                           
 12712                           ;usb_device_events.c: 89: break;
 12713                           
 12714                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
 12715                           
 12716                           ;usb_device_events.c: 86: break;
 12717  1225  0008               	return
 12718  1226                     i1l6115:	
 12719                           
 12720                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12721                           ; Switch size 1, requested type "space"
 12722                           ; Number of cases is 2, Range of values is 0 to 127
 12723                           ; switch strategies available:
 12724                           ; Name         Instructions Cycles
 12725                           ; simple_byte            7     4 (average)
 12726                           ; direct_byte          262     6 (fixed)
 12727                           ; jumptable            260     6 (fixed)
 12728                           ;	Chosen strategy is simple_byte
 12729  1226  0020               	movlb	0	; select bank0
 12730  1227  0859               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
 12731  1228  3A00               	xorlw	0	; case 0
 12732  1229  1903               	skipnz
 12733  122A  2A2F               	goto	i1l7245
 12734  122B  3A7F               	xorlw	127	; case 127
 12735  122C  1903               	skipnz
 12736  122D  2A49               	goto	i1l7247
 12737  122E  2A4E               	goto	i1l287
 12738  122F                     i1l7245:	
 12739                           
 12740                           ; Switch size 1, requested type "space"
 12741                           ; Number of cases is 8, Range of values is 1 to 117
 12742                           ; switch strategies available:
 12743                           ; Name         Instructions Cycles
 12744                           ; simple_byte           25    13 (average)
 12745                           ; direct_byte          243     9 (fixed)
 12746                           ; jumptable            263     9 (fixed)
 12747                           ;	Chosen strategy is simple_byte
 12748  122F  0858               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 12749  1230  3A01               	xorlw	1	; case 1
 12750  1231  1903               	skipnz
 12751  1232  2A20               	goto	i1l6109
 12752  1233  3A03               	xorlw	3	; case 2
 12753  1234  1903               	skipnz
 12754  1235  2A4E               	goto	i1l287
 12755  1236  3A01               	xorlw	1	; case 3
 12756  1237  1903               	skipnz
 12757  1238  2A23               	goto	i1l6111
 12758  1239  3A06               	xorlw	6	; case 5
 12759  123A  1903               	skipnz
 12760  123B  2A4E               	goto	i1l287
 12761  123C  3A77               	xorlw	119	; case 114
 12762  123D  1903               	skipnz
 12763  123E  2A4E               	goto	i1l287
 12764  123F  3A01               	xorlw	1	; case 115
 12765  1240  1903               	skipnz
 12766  1241  2A4E               	goto	i1l287
 12767  1242  3A07               	xorlw	7	; case 116
 12768  1243  1903               	skipnz
 12769  1244  2A4E               	goto	i1l287
 12770  1245  3A01               	xorlw	1	; case 117
 12771  1246  1903               	skipnz
 12772  1247  2A4E               	goto	i1l287
 12773  1248  2A4E               	goto	i1l287
 12774  1249                     i1l7247:	
 12775                           
 12776                           ; Switch size 1, requested type "space"
 12777                           ; Number of cases is 1, Range of values is 255 to 255
 12778                           ; switch strategies available:
 12779                           ; Name         Instructions Cycles
 12780                           ; simple_byte            4     3 (average)
 12781                           ; direct_byte            7     5 (fixed)
 12782                           ; jumptable            263     9 (fixed)
 12783                           ;	Chosen strategy is simple_byte
 12784  1249  0858               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 12785  124A  3AFF               	xorlw	255	; case 255
 12786  124B  1903               	skipnz
 12787  124C  2A4E               	goto	i1l287
 12788  124D  2A4E               	goto	i1l287
 12789  124E                     i1l287:	
 12790                           ;usb_device_events.c: 97: return 1;
 12791                           ;	Return value of i1_USER_USB_CALLBACK_EVENT_HANDLER is never used
 12792                           
 12793  124E  0008               	return
 12794  124F                     __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER:	
 12795                           
 12796                           	psect	text58
 12797  1740                     __ptext58:	
 12798 ;; *************** function i1_USBCheckCDCRequest *****************
 12799 ;; Defined at:
 12800 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;		None
 12803 ;; Auto vars:     Size  Location     Type
 12804 ;;		None
 12805 ;; Return value:  Size  Location     Type
 12806 ;;                  1    wreg      void 
 12807 ;; Registers used:
 12808 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12809 ;; Tracked objects:
 12810 ;;		On entry : 0/0
 12811 ;;		On exit  : 0/0
 12812 ;;		Unchanged: 0/0
 12813 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12818 ;;Total ram usage:        1 bytes
 12819 ;; Hardware stack levels used:    1
 12820 ;; This function calls:
 12821 ;;		Nothing
 12822 ;; This function is called by:
 12823 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12824 ;; This function uses a non-reentrant model
 12825 ;;
 12826                           
 12827                           
 12828                           ;psect for function i1_USBCheckCDCRequest
 12829  1740                     i1_USBCheckCDCRequest:	
 12830                           
 12831                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
 12832                           
 12833                           ;incstack = 0
 12834                           ; Regs used in i1_USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 12835  1740  0020               	movlb	0	; select bank0
 12836  1741  0850               	movf	80,w	;volatile
 12837  1742  391F               	andlw	31
 12838  1743  3A01               	xorlw	1
 12839  1744  1D03               	btfss	3,2
 12840  1745  0008               	return
 12841                           
 12842                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
 12843  1746  0E50               	swapf	80,w	;volatile
 12844  1747  0C89               	rrf	9,f
 12845  1748  3903               	andlw	3
 12846  1749  3A01               	xorlw	1
 12847  174A  1D03               	btfss	3,2
 12848  174B  0008               	return
 12849                           
 12850                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
 12851                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
 12852  174C  0854               	movf	84,w	;volatile
 12853  174D  1903               	btfsc	3,2
 12854  174E  2F8D               	goto	i1l3633
 12855  174F  0354               	decf	84,w	;volatile
 12856  1750  1D03               	btfss	3,2
 12857  1751  0008               	return
 12858  1752  2F8D               	goto	i1l3633
 12859  1753                     i1l3603:	
 12860                           ;usb_device_cdc.c: 166: {
 12861                           ;usb_device_cdc.c: 168: case 0x00:
 12862                           
 12863                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
 12864                           
 12865                           
 12866                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12867  1753  3056               	movlw	low _dummy_encapsulated_cmd_response
 12868  1754  0021               	movlb	1	; select bank1
 12869  1755  00D3               	movwf	_inPipes^(0+128)	;volatile
 12870  1756  3001               	movlw	high _dummy_encapsulated_cmd_response
 12871  1757  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12872                           
 12873                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
 12874  1758  3000               	movlw	0
 12875  1759  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12876  175A  3008               	movlw	8
 12877  175B  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12878                           
 12879                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12880  175C  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12881                           
 12882                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
 12883  175D  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12884                           
 12885                           ;usb_device_cdc.c: 174: break;
 12886  175E  0008               	return
 12887  175F                     i1l3611:	
 12888                           ;usb_device_cdc.c: 175: case 0x01:
 12889                           
 12890                           
 12891                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12892  175F  3056               	movlw	low _dummy_encapsulated_cmd_response
 12893  1760  0021               	movlb	1	; select bank1
 12894  1761  00D3               	movwf	_inPipes^(0+128)	;volatile
 12895  1762  3001               	movlw	high _dummy_encapsulated_cmd_response
 12896  1763  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12897                           
 12898                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
 12899  1764  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12900                           
 12901                           ;usb_device_cdc.c: 179: break;
 12902  1765  0008               	return
 12903  1766                     i1l3615:	
 12904                           ;usb_device_cdc.c: 183: case 0x20:
 12905                           
 12906                           
 12907                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
 12908  1766  0020               	movlb	0	; select bank0
 12909  1767  0857               	movf	87,w	;volatile
 12910  1768  0021               	movlb	1	; select bank1
 12911  1769  00CA               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
 12912  176A  0020               	movlb	0	; select bank0
 12913  176B  0856               	movf	86,w	;volatile
 12914  176C  0021               	movlb	1	; select bank1
 12915  176D  00C9               	movwf	(_outPipes^(0+128)+3)	;volatile
 12916                           
 12917                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 12918  176E  305E               	movlw	(low (_line_coding| (0+256)))& (0+255)
 12919  176F  00F0               	movwf	??i1_USBCheckCDCRequest
 12920  1770  0870               	movf	??i1_USBCheckCDCRequest,w
 12921  1771  00C6               	movwf	_outPipes^(0+128)	;volatile
 12922                           
 12923                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
 12924  1772  01CB               	clrf	(low ((_outPipes| 0+5)))^(0+128)	;volatile
 12925  1773  01CC               	clrf	((low ((_outPipes| 0+5))+1))^(0+128)	;volatile
 12926                           
 12927                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
 12928  1774  17C8               	bsf	(_outPipes^(0+128)+2),7	;volatile
 12929                           
 12930                           ;usb_device_cdc.c: 188: break;
 12931  1775  0008               	return
 12932  1776                     i1l3621:	
 12933                           ;usb_device_cdc.c: 190: case 0x21:
 12934                           
 12935                           
 12936                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 12937  1776  305E               	movlw	low _line_coding
 12938  1777  0021               	movlb	1	; select bank1
 12939  1778  00D3               	movwf	_inPipes^(0+128)	;volatile
 12940  1779  3001               	movlw	high _line_coding
 12941  177A  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12942  177B  3000               	movlw	0
 12943  177C  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12944  177D  3007               	movlw	7
 12945  177E  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12946  177F  30C1               	movlw	193
 12947  1780  00F0               	movwf	??i1_USBCheckCDCRequest
 12948  1781  0870               	movf	??i1_USBCheckCDCRequest,w
 12949  1782  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
 12950                           
 12951                           ;usb_device_cdc.c: 195: break;
 12952  1783  0008               	return
 12953  1784                     i1l3627:	
 12954                           ;usb_device_cdc.c: 197: case 0x22:
 12955                           
 12956                           
 12957                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 12958  1784  0020               	movlb	0	; select bank0
 12959  1785  0852               	movf	82,w	;volatile
 12960  1786  00F0               	movwf	??i1_USBCheckCDCRequest
 12961  1787  0870               	movf	??i1_USBCheckCDCRequest,w
 12962  1788  0022               	movlb	2	; select bank2
 12963  1789  00D1               	movwf	_control_signal_bitmap^(0+256)
 12964                           
 12965                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
 12966  178A  0021               	movlb	1	; select bank1
 12967  178B  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12968                           
 12969                           ;usb_device_cdc.c: 257: }
 12970                           
 12971                           ;usb_device_cdc.c: 256: break;
 12972                           
 12973                           ;usb_device_cdc.c: 255: default:
 12974                           
 12975                           ;usb_device_cdc.c: 231: break;
 12976  178C  0008               	return
 12977  178D                     i1l3633:	
 12978  178D  0020               	movlb	0	; select bank0
 12979  178E  0851               	movf	81,w	;volatile
 12980                           
 12981                           ; Switch size 1, requested type "space"
 12982                           ; Number of cases is 5, Range of values is 0 to 34
 12983                           ; switch strategies available:
 12984                           ; Name         Instructions Cycles
 12985                           ; simple_byte           16     9 (average)
 12986                           ; direct_byte           76     6 (fixed)
 12987                           ; jumptable            260     6 (fixed)
 12988                           ;	Chosen strategy is simple_byte
 12989  178F  3A00               	xorlw	0	; case 0
 12990  1790  1903               	skipnz
 12991  1791  2F53               	goto	i1l3603
 12992  1792  3A01               	xorlw	1	; case 1
 12993  1793  1903               	skipnz
 12994  1794  2F5F               	goto	i1l3611
 12995  1795  3A21               	xorlw	33	; case 32
 12996  1796  1903               	skipnz
 12997  1797  2F66               	goto	i1l3615
 12998  1798  3A01               	xorlw	1	; case 33
 12999  1799  1903               	skipnz
 13000  179A  2F76               	goto	i1l3621
 13001  179B  3A03               	xorlw	3	; case 34
 13002  179C  1903               	skipnz
 13003  179D  2F84               	goto	i1l3627
 13004  179E  2F9F               	goto	i1l46
 13005  179F                     i1l46:	
 13006  179F  0008               	return
 13007  17A0                     __end_ofi1_USBCheckCDCRequest:	
 13008                           
 13009                           	psect	text59
 13010  127F                     __ptext59:	
 13011 ;; *************** function i1_CDCInitEP *****************
 13012 ;; Defined at:
 13013 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;		None
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;		None
 13018 ;; Return value:  Size  Location     Type
 13019 ;;                  1    wreg      void 
 13020 ;; Registers used:
 13021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13022 ;; Tracked objects:
 13023 ;;		On entry : 0/0
 13024 ;;		On exit  : 0/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13031 ;;Total ram usage:        1 bytes
 13032 ;; Hardware stack levels used:    1
 13033 ;; Hardware stack levels required when called:    2
 13034 ;; This function calls:
 13035 ;;		i1_USBEnableEndpoint
 13036 ;;		i1_USBTransferOnePacket
 13037 ;; This function is called by:
 13038 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13039 ;; This function uses a non-reentrant model
 13040 ;;
 13041                           
 13042                           
 13043                           ;psect for function i1_CDCInitEP
 13044  127F                     i1_CDCInitEP:	
 13045                           
 13046                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
 13047                           
 13048                           ;incstack = 0
 13049                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13050  127F  3000               	movlw	0
 13051  1280  0022               	movlb	2	; select bank2
 13052  1281  00E1               	movwf	(_line_coding+3)^(0+256)
 13053  1282  3000               	movlw	0
 13054  1283  00E0               	movwf	(_line_coding+2)^(0+256)
 13055  1284  304B               	movlw	75
 13056  1285  00DF               	movwf	(_line_coding+1)^(0+256)
 13057  1286  3000               	movlw	0
 13058  1287  00DE               	movwf	_line_coding^(0+256)
 13059                           
 13060                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
 13061  1288  01E2               	clrf	(_line_coding^(0+256)+4)
 13062                           
 13063                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
 13064  1289  01E3               	clrf	(_line_coding^(0+256)+5)
 13065                           
 13066                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
 13067  128A  3008               	movlw	8
 13068  128B  00FD               	movwf	??i1_CDCInitEP
 13069  128C  087D               	movf	??i1_CDCInitEP,w
 13070  128D  00E4               	movwf	(_line_coding^(0+256)+6)
 13071                           
 13072                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
 13073  128E  01D5               	clrf	_cdc_rx_len^(0+256)
 13074                           
 13075                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
 13076  128F  301A               	movlw	26
 13077  1290  00FD               	movwf	??i1_CDCInitEP
 13078  1291  087D               	movf	??i1_CDCInitEP,w
 13079  1292  00F7               	movwf	i1USBEnableEndpoint@options
 13080  1293  3001               	movlw	1
 13081  1294  3191  2150  3192   	fcall	i1_USBEnableEndpoint
 13082                           
 13083                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 13084  1297  301E               	movlw	30
 13085  1298  00FD               	movwf	??i1_CDCInitEP
 13086  1299  087D               	movf	??i1_CDCInitEP,w
 13087  129A  00F7               	movwf	i1USBEnableEndpoint@options
 13088  129B  3002               	movlw	2
 13089  129C  3191  2150  3192   	fcall	i1_USBEnableEndpoint
 13090                           
 13091                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 13092  129F  01F0               	clrf	i1USBTransferOnePacket@dir
 13093  12A0  30A0               	movlw	low _cdc_data_rx
 13094  12A1  00F1               	movwf	i1USBTransferOnePacket@data
 13095  12A2  3001               	movlw	high _cdc_data_rx
 13096  12A3  00F2               	movwf	i1USBTransferOnePacket@data+1
 13097  12A4  3040               	movlw	64
 13098  12A5  00FD               	movwf	??i1_CDCInitEP
 13099  12A6  087D               	movf	??i1_CDCInitEP,w
 13100  12A7  00F3               	movwf	i1USBTransferOnePacket@len
 13101  12A8  3002               	movlw	2
 13102  12A9  318C  241F         	fcall	i1_USBTransferOnePacket
 13103  12AB  0871               	movf	?i1_USBTransferOnePacket+1,w
 13104  12AC  0022               	movlb	2	; select bank2
 13105  12AD  00C1               	movwf	(_CDCDataOutHandle+1)^(0+256)
 13106  12AE  0870               	movf	?i1_USBTransferOnePacket,w
 13107  12AF  00C0               	movwf	_CDCDataOutHandle^(0+256)
 13108                           
 13109                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
 13110  12B0  01BE               	clrf	_CDCDataInHandle^(0+256)
 13111  12B1  01BF               	clrf	(_CDCDataInHandle+1)^(0+256)
 13112                           
 13113                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
 13114  12B2  01D4               	clrf	_cdc_trf_state^(0+256)
 13115  12B3  0008               	return
 13116  12B4                     __end_ofi1_CDCInitEP:	
 13117                           
 13118                           	psect	text60
 13119  0C1F                     __ptext60:	
 13120 ;; *************** function i1_USBTransferOnePacket *****************
 13121 ;; Defined at:
 13122 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
 13123 ;; Parameters:    Size  Location     Type
 13124 ;;  ep              1    wreg     unsigned char 
 13125 ;;  dir             1    0[COMMON] unsigned char 
 13126 ;;  data            2    1[COMMON] PTR unsigned char 
 13127 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
 13128 ;;  len             1    3[COMMON] unsigned char 
 13129 ;; Auto vars:     Size  Location     Type
 13130 ;;  ep              1    8[COMMON] unsigned char 
 13131 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
 13132 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 13133 ;; Return value:  Size  Location     Type
 13134 ;;                  2    0[COMMON] PTR void 
 13135 ;; Registers used:
 13136 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13137 ;; Tracked objects:
 13138 ;;		On entry : 0/0
 13139 ;;		On exit  : 0/0
 13140 ;;		Unchanged: 0/0
 13141 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13143 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13144 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13146 ;;Total ram usage:       11 bytes
 13147 ;; Hardware stack levels used:    1
 13148 ;; This function calls:
 13149 ;;		Nothing
 13150 ;; This function is called by:
 13151 ;;		i1_CDCInitEP
 13152 ;; This function uses a non-reentrant model
 13153 ;;
 13154                           
 13155                           
 13156                           ;psect for function i1_USBTransferOnePacket
 13157  0C1F                     i1_USBTransferOnePacket:	
 13158                           
 13159                           ;incstack = 0
 13160                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 13161                           ;i1USBTransferOnePacket@ep stored from wreg
 13162  0C1F  00F8               	movwf	i1USBTransferOnePacket@ep
 13163                           
 13164                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 13165                           ;usb_device.c: 1000: if(dir != 0)
 13166  0C20  0870               	movf	i1USBTransferOnePacket@dir,w
 13167  0C21  1903               	btfsc	3,2
 13168  0C22  2C2B               	goto	i1l3499
 13169                           
 13170                           ;usb_device.c: 1001: {
 13171                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 13172  0C23  3578               	lslf	i1USBTransferOnePacket@ep,w
 13173  0C24  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13174  0C25  0086               	movwf	6
 13175  0C26  0187               	clrf	7
 13176  0C27  3F40               	moviw [0]fsr1
 13177  0C28  00F9               	movwf	i1USBTransferOnePacket@handle
 13178  0C29  3F41               	moviw [1]fsr1
 13179  0C2A  2C33               	goto	L18
 13180  0C2B                     i1l3499:	
 13181                           ;usb_device.c: 1004: }
 13182                           
 13183                           
 13184                           ;usb_device.c: 1005: else
 13185                           ;usb_device.c: 1006: {
 13186                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 13187  0C2B  3578               	lslf	i1USBTransferOnePacket@ep,w
 13188  0C2C  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13189  0C2D  0086               	movwf	6
 13190  0C2E  3001               	movlw	1	; select bank2/3
 13191  0C2F  0087               	movwf	7
 13192  0C30  3F40               	moviw [0]fsr1
 13193  0C31  00F9               	movwf	i1USBTransferOnePacket@handle
 13194  0C32  3F41               	moviw [1]fsr1
 13195  0C33                     L18:	
 13196  0C33  00FA               	movwf	i1USBTransferOnePacket@handle+1
 13197                           
 13198                           ;usb_device.c: 1009: }
 13199                           ;usb_device.c: 1013: if(handle == 0)
 13200  0C34  0879               	movf	i1USBTransferOnePacket@handle,w
 13201  0C35  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
 13202  0C36  1D03               	btfss	3,2
 13203  0C37  2C3B               	goto	i1l3507
 13204                           
 13205                           ;usb_device.c: 1014: {
 13206                           ;usb_device.c: 1015: return 0;
 13207  0C38  01F0               	clrf	?i1_USBTransferOnePacket
 13208  0C39  01F1               	clrf	?i1_USBTransferOnePacket+1
 13209  0C3A  0008               	return
 13210  0C3B                     i1l3507:	
 13211                           
 13212                           ;usb_device.c: 1016: }
 13213                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 13214  0C3B  30FF               	movlw	255
 13215  0C3C  0571               	andwf	i1USBTransferOnePacket@data,w
 13216  0C3D  00F4               	movwf	??i1_USBTransferOnePacket
 13217  0C3E  307F               	movlw	127
 13218  0C3F  0572               	andwf	i1USBTransferOnePacket@data+1,w
 13219  0C40  00F5               	movwf	??i1_USBTransferOnePacket+1
 13220  0C41  0879               	movf	i1USBTransferOnePacket@handle,w
 13221  0C42  0086               	movwf	6
 13222  0C43  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13223  0C44  0087               	movwf	7
 13224  0C45  3142               	addfsr 1,2
 13225  0C46  0874               	movf	??i1_USBTransferOnePacket,w
 13226  0C47  3FC0               	movwi [0]fsr1
 13227  0C48  0875               	movf	??i1_USBTransferOnePacket+1,w
 13228  0C49  3FC1               	movwi [1]fsr1
 13229                           
 13230                           ;usb_device.c: 1030: handle->CNT = len;
 13231  0C4A  0879               	movf	i1USBTransferOnePacket@handle,w
 13232  0C4B  3E01               	addlw	1
 13233  0C4C  00F4               	movwf	??i1_USBTransferOnePacket
 13234  0C4D  3000               	movlw	0
 13235  0C4E  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
 13236  0C4F  00F5               	movwf	??i1_USBTransferOnePacket+1
 13237  0C50  0874               	movf	??i1_USBTransferOnePacket,w
 13238  0C51  0086               	movwf	6
 13239  0C52  0875               	movf	??i1_USBTransferOnePacket+1,w
 13240  0C53  0087               	movwf	7
 13241  0C54  0873               	movf	i1USBTransferOnePacket@len,w
 13242  0C55  0081               	movwf	1
 13243                           
 13244                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 13245  0C56  3040               	movlw	64
 13246  0C57  00F4               	movwf	??i1_USBTransferOnePacket
 13247  0C58  0879               	movf	i1USBTransferOnePacket@handle,w
 13248  0C59  0086               	movwf	6
 13249  0C5A  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13250  0C5B  0087               	movwf	7
 13251  0C5C  0874               	movf	??i1_USBTransferOnePacket,w
 13252  0C5D  0581               	andwf	1,f
 13253                           
 13254                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 13255  0C5E  0879               	movf	i1USBTransferOnePacket@handle,w
 13256  0C5F  0086               	movwf	6
 13257  0C60  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13258  0C61  0087               	movwf	7
 13259  0C62  1581               	bsf	1,3
 13260                           
 13261                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 13262  0C63  0879               	movf	i1USBTransferOnePacket@handle,w
 13263  0C64  0086               	movwf	6
 13264  0C65  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13265  0C66  0087               	movwf	7
 13266  0C67  1781               	bsf	1,7
 13267                           
 13268                           ;usb_device.c: 1036: if(dir != 0)
 13269  0C68  0870               	movf	i1USBTransferOnePacket@dir,w
 13270  0C69  1903               	btfsc	3,2
 13271  0C6A  2C82               	goto	i1l3517
 13272                           
 13273                           ;usb_device.c: 1037: {
 13274                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 13275  0C6B  3578               	lslf	i1USBTransferOnePacket@ep,w
 13276  0C6C  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13277  0C6D  0086               	movwf	6
 13278  0C6E  0187               	clrf	7
 13279  0C6F  3F40               	moviw [0]fsr1
 13280  0C70  00F4               	movwf	??i1_USBTransferOnePacket
 13281  0C71  3F41               	moviw [1]fsr1
 13282  0C72  00F5               	movwf	??i1_USBTransferOnePacket+1
 13283  0C73  3004               	movlw	4
 13284  0C74  0674               	xorwf	??i1_USBTransferOnePacket,w
 13285  0C75  00F6               	movwf	??i1_USBTransferOnePacket+2
 13286  0C76  3000               	movlw	0
 13287  0C77  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 13288  0C78  00F7               	movwf	??i1_USBTransferOnePacket+3
 13289  0C79  3578               	lslf	i1USBTransferOnePacket@ep,w
 13290  0C7A  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13291  0C7B  0086               	movwf	6
 13292  0C7C  0187               	clrf	7
 13293  0C7D  0876               	movf	??i1_USBTransferOnePacket+2,w
 13294  0C7E  3FC0               	movwi [0]fsr1
 13295  0C7F  0877               	movf	??i1_USBTransferOnePacket+3,w
 13296  0C80  3FC1               	movwi [1]fsr1
 13297                           
 13298                           ;usb_device.c: 1040: }
 13299  0C81  2C9A               	goto	i1l3519
 13300  0C82                     i1l3517:	
 13301                           
 13302                           ;usb_device.c: 1041: else
 13303                           ;usb_device.c: 1042: {
 13304                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 13305  0C82  3578               	lslf	i1USBTransferOnePacket@ep,w
 13306  0C83  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13307  0C84  0086               	movwf	6
 13308  0C85  3001               	movlw	1	; select bank2/3
 13309  0C86  0087               	movwf	7
 13310  0C87  3F40               	moviw [0]fsr1
 13311  0C88  00F4               	movwf	??i1_USBTransferOnePacket
 13312  0C89  3F41               	moviw [1]fsr1
 13313  0C8A  00F5               	movwf	??i1_USBTransferOnePacket+1
 13314  0C8B  3004               	movlw	4
 13315  0C8C  0674               	xorwf	??i1_USBTransferOnePacket,w
 13316  0C8D  00F6               	movwf	??i1_USBTransferOnePacket+2
 13317  0C8E  3000               	movlw	0
 13318  0C8F  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 13319  0C90  00F7               	movwf	??i1_USBTransferOnePacket+3
 13320  0C91  3578               	lslf	i1USBTransferOnePacket@ep,w
 13321  0C92  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13322  0C93  0086               	movwf	6
 13323  0C94  3001               	movlw	1	; select bank2/3
 13324  0C95  0087               	movwf	7
 13325  0C96  0876               	movf	??i1_USBTransferOnePacket+2,w
 13326  0C97  3FC0               	movwi [0]fsr1
 13327  0C98  0877               	movf	??i1_USBTransferOnePacket+3,w
 13328  0C99  3FC1               	movwi [1]fsr1
 13329  0C9A                     i1l3519:	
 13330                           
 13331                           ;usb_device.c: 1045: }
 13332                           ;usb_device.c: 1046: return (void*)handle;
 13333  0C9A  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13334  0C9B  00F1               	movwf	?i1_USBTransferOnePacket+1
 13335  0C9C  0879               	movf	i1USBTransferOnePacket@handle,w
 13336  0C9D  00F0               	movwf	?i1_USBTransferOnePacket
 13337  0C9E  0008               	return
 13338  0C9F                     __end_ofi1_USBTransferOnePacket:	
 13339                           
 13340                           	psect	text61
 13341  1150                     __ptext61:	
 13342 ;; *************** function i1_USBEnableEndpoint *****************
 13343 ;; Defined at:
 13344 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
 13345 ;; Parameters:    Size  Location     Type
 13346 ;;  ep              1    wreg     unsigned char 
 13347 ;;  options         1    7[COMMON] unsigned char 
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;  ep              1   12[COMMON] unsigned char 
 13350 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
 13351 ;;		 -> UEP0(1), 
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  1    wreg      void 
 13354 ;; Registers used:
 13355 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13356 ;; Tracked objects:
 13357 ;;		On entry : 0/0
 13358 ;;		On exit  : 0/0
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13361 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13362 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13364 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13365 ;;Total ram usage:        6 bytes
 13366 ;; Hardware stack levels used:    1
 13367 ;; Hardware stack levels required when called:    1
 13368 ;; This function calls:
 13369 ;;		i1_USBConfigureEndpoint
 13370 ;; This function is called by:
 13371 ;;		i1_CDCInitEP
 13372 ;; This function uses a non-reentrant model
 13373 ;;
 13374                           
 13375                           
 13376                           ;psect for function i1_USBEnableEndpoint
 13377  1150                     i1_USBEnableEndpoint:	
 13378                           
 13379                           ;incstack = 0
 13380                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13381                           ;i1USBEnableEndpoint@ep stored from wreg
 13382  1150  00FC               	movwf	i1USBEnableEndpoint@ep
 13383                           
 13384                           ;usb_device.c: 880: unsigned char* p;
 13385                           ;usb_device.c: 884: if(options & 0x04)
 13386  1151  1D77               	btfss	i1USBEnableEndpoint@options,2
 13387  1152  2958               	goto	i1l3487
 13388                           
 13389                           ;usb_device.c: 885: {
 13390                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 13391  1153  01F0               	clrf	i1USBConfigureEndpoint@direction
 13392  1154  087C               	movf	i1USBEnableEndpoint@ep,w
 13393  1155  3193  2368  3191   	fcall	i1_USBConfigureEndpoint
 13394  1158                     i1l3487:	
 13395                           
 13396                           ;usb_device.c: 887: }
 13397                           ;usb_device.c: 888: if(options & 0x02)
 13398  1158  1CF7               	btfss	i1USBEnableEndpoint@options,1
 13399  1159  295F               	goto	i1l3491
 13400                           
 13401                           ;usb_device.c: 889: {
 13402                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 13403  115A  01F0               	clrf	i1USBConfigureEndpoint@direction
 13404  115B  0AF0               	incf	i1USBConfigureEndpoint@direction,f
 13405  115C  087C               	movf	i1USBEnableEndpoint@ep,w
 13406  115D  3193  2368         	fcall	i1_USBConfigureEndpoint
 13407  115F                     i1l3491:	
 13408                           
 13409                           ;usb_device.c: 891: }
 13410                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 13411  115F  087C               	movf	i1USBEnableEndpoint@ep,w
 13412  1160  3E98               	addlw	152
 13413  1161  00F8               	movwf	??i1_USBEnableEndpoint
 13414  1162  01F9               	clrf	??i1_USBEnableEndpoint+1
 13415  1163  300E               	movlw	14
 13416  1164  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
 13417  1165  0878               	movf	??i1_USBEnableEndpoint,w
 13418  1166  00FA               	movwf	i1USBEnableEndpoint@p
 13419  1167  0879               	movf	??i1_USBEnableEndpoint+1,w
 13420  1168  00FB               	movwf	i1USBEnableEndpoint@p+1
 13421                           
 13422                           ;usb_device.c: 901: *p = options;
 13423  1169  087A               	movf	i1USBEnableEndpoint@p,w
 13424  116A  0086               	movwf	6
 13425  116B  087B               	movf	i1USBEnableEndpoint@p+1,w
 13426  116C  0087               	movwf	7
 13427  116D  0877               	movf	i1USBEnableEndpoint@options,w
 13428  116E  0081               	movwf	1
 13429  116F  0008               	return
 13430  1170                     __end_ofi1_USBEnableEndpoint:	
 13431                           
 13432                           	psect	text62
 13433  1368                     __ptext62:	
 13434 ;; *************** function i1_USBConfigureEndpoint *****************
 13435 ;; Defined at:
 13436 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
 13437 ;; Parameters:    Size  Location     Type
 13438 ;;  EPNum           1    wreg     unsigned char 
 13439 ;;  direction       1    0[COMMON] unsigned char 
 13440 ;; Auto vars:     Size  Location     Type
 13441 ;;  EPNum           1    5[COMMON] unsigned char 
 13442 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
 13443 ;;		 -> BDT(48), 
 13444 ;; Return value:  Size  Location     Type
 13445 ;;                  1    wreg      void 
 13446 ;; Registers used:
 13447 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13448 ;; Tracked objects:
 13449 ;;		On entry : 0/0
 13450 ;;		On exit  : 0/0
 13451 ;;		Unchanged: 0/0
 13452 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13453 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13455 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13456 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13457 ;;Total ram usage:        7 bytes
 13458 ;; Hardware stack levels used:    1
 13459 ;; This function calls:
 13460 ;;		Nothing
 13461 ;; This function is called by:
 13462 ;;		i1_USBEnableEndpoint
 13463 ;; This function uses a non-reentrant model
 13464 ;;
 13465                           
 13466                           
 13467                           ;psect for function i1_USBConfigureEndpoint
 13468  1368                     i1_USBConfigureEndpoint:	
 13469                           
 13470                           ;incstack = 0
 13471                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 13472                           ;i1USBConfigureEndpoint@EPNum stored from wreg
 13473  1368  00F5               	movwf	i1USBConfigureEndpoint@EPNum
 13474                           
 13475                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 13476                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 13477  1369  3020               	movlw	32
 13478  136A  00F1               	movwf	??i1_USBConfigureEndpoint
 13479  136B  0871               	movf	??i1_USBConfigureEndpoint,w
 13480  136C  00F6               	movwf	i1USBConfigureEndpoint@handle
 13481                           
 13482                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 13483  136D  0870               	movf	i1USBConfigureEndpoint@direction,w
 13484  136E  00F1               	movwf	??i1_USBConfigureEndpoint
 13485  136F  3001               	movlw	1
 13486  1370                     u290_25:	
 13487  1370  35F1               	lslf	??i1_USBConfigureEndpoint,f
 13488  1371  0B89               	decfsz	9,f
 13489  1372  2B70               	goto	u290_25
 13490  1373  0875               	movf	i1USBConfigureEndpoint@EPNum,w
 13491  1374  00F2               	movwf	??i1_USBConfigureEndpoint+1
 13492  1375  3001               	movlw	1
 13493  1376                     u291_25:	
 13494  1376  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
 13495  1377  3EFF               	addlw	-1
 13496  1378  1D03               	skipz
 13497  1379  2B76               	goto	u291_25
 13498  137A  3572               	lslf	??i1_USBConfigureEndpoint+1,w
 13499  137B  0771               	addwf	??i1_USBConfigureEndpoint,w
 13500  137C  00F3               	movwf	??i1_USBConfigureEndpoint+2
 13501  137D  3001               	movlw	1
 13502  137E                     u292_25:	
 13503  137E  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
 13504  137F  3EFF               	addlw	-1
 13505  1380  1D03               	skipz
 13506  1381  2B7E               	goto	u292_25
 13507  1382  3573               	lslf	??i1_USBConfigureEndpoint+2,w
 13508  1383  00F4               	movwf	??i1_USBConfigureEndpoint+3
 13509  1384  0874               	movf	??i1_USBConfigureEndpoint+3,w
 13510  1385  07F6               	addwf	i1USBConfigureEndpoint@handle,f
 13511                           
 13512                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 13513  1386  0876               	movf	i1USBConfigureEndpoint@handle,w
 13514  1387  0086               	movwf	6
 13515  1388  0187               	clrf	7
 13516  1389  1381               	bcf	1,7
 13517                           
 13518                           ;usb_device.c: 1557: if(direction == 0)
 13519  138A  0870               	movf	i1USBConfigureEndpoint@direction,w
 13520  138B  1D03               	btfss	3,2
 13521  138C  2B97               	goto	i1l3413
 13522                           
 13523                           ;usb_device.c: 1558: {
 13524                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 13525  138D  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 13526  138E  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13527  138F  0086               	movwf	6
 13528  1390  3001               	movlw	1	; select bank2/3
 13529  1391  0087               	movwf	7
 13530  1392  0876               	movf	i1USBConfigureEndpoint@handle,w
 13531  1393  3FC0               	movwi [0]fsr1
 13532  1394  3000               	movlw	0
 13533  1395  3FC1               	movwi [1]fsr1
 13534                           
 13535                           ;usb_device.c: 1560: }
 13536  1396  2B9F               	goto	i1l3415
 13537  1397                     i1l3413:	
 13538                           
 13539                           ;usb_device.c: 1561: else
 13540                           ;usb_device.c: 1562: {
 13541                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 13542  1397  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 13543  1398  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13544  1399  0086               	movwf	6
 13545  139A  0187               	clrf	7
 13546  139B  0876               	movf	i1USBConfigureEndpoint@handle,w
 13547  139C  3FC0               	movwi [0]fsr1
 13548  139D  3000               	movlw	0
 13549  139E  3FC1               	movwi [1]fsr1
 13550  139F                     i1l3415:	
 13551                           
 13552                           ;usb_device.c: 1564: }
 13553                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 13554  139F  0876               	movf	i1USBConfigureEndpoint@handle,w
 13555  13A0  0086               	movwf	6
 13556  13A1  0187               	clrf	7
 13557  13A2  1301               	bcf	1,6
 13558                           
 13559                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 13560  13A3  0876               	movf	i1USBConfigureEndpoint@handle,w
 13561  13A4  3E04               	addlw	4
 13562  13A5  0086               	movwf	6
 13563  13A6  0187               	clrf	7
 13564  13A7  1701               	bsf	1,6
 13565  13A8  0008               	return
 13566  13A9                     __end_ofi1_USBConfigureEndpoint:	
 13567                           
 13568                           	psect	text63
 13569  12B4                     __ptext63:	
 13570 ;; *************** function i1_USBCtrlTrfOutHandler *****************
 13571 ;; Defined at:
 13572 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
 13573 ;; Parameters:    Size  Location     Type
 13574 ;;		None
 13575 ;; Auto vars:     Size  Location     Type
 13576 ;;		None
 13577 ;; Return value:  Size  Location     Type
 13578 ;;                  1    wreg      void 
 13579 ;; Registers used:
 13580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13581 ;; Tracked objects:
 13582 ;;		On entry : 0/0
 13583 ;;		On exit  : 0/0
 13584 ;;		Unchanged: 0/0
 13585 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13588 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13590 ;;Total ram usage:        2 bytes
 13591 ;; Hardware stack levels used:    1
 13592 ;; Hardware stack levels required when called:    2
 13593 ;; This function calls:
 13594 ;;		i1_USBCtrlTrfRxService
 13595 ;; This function is called by:
 13596 ;;		i1_USBCtrlEPService
 13597 ;; This function uses a non-reentrant model
 13598 ;;
 13599                           
 13600                           
 13601                           ;psect for function i1_USBCtrlTrfOutHandler
 13602  12B4                     i1_USBCtrlTrfOutHandler:	
 13603                           
 13604                           ;usb_device.c: 2540: if(controlTransferState == 2)
 13605                           
 13606                           ;incstack = 0
 13607                           ; Regs used in i1_USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13608  12B4  3002               	movlw	2
 13609  12B5  0021               	movlb	1	; select bank1
 13610  12B6  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
 13611  12B7  1D03               	btfss	3,2
 13612  12B8  2ABC               	goto	i1l4773
 13613                           
 13614                           ;usb_device.c: 2541: {
 13615                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 13616  12B9  318F  2763         	fcall	i1_USBCtrlTrfRxService
 13617                           
 13618                           ;usb_device.c: 2543: }
 13619  12BB  0008               	return
 13620  12BC                     i1l4773:	
 13621                           
 13622                           ;usb_device.c: 2544: else
 13623                           ;usb_device.c: 2545: {
 13624                           ;usb_device.c: 2548: controlTransferState = 0;
 13625  12BC  0021               	movlb	1	; select bank1
 13626  12BD  01DC               	clrf	_controlTransferState^(0+128)	;volatile
 13627                           
 13628                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 13629  12BE  0022               	movlb	2	; select bank2
 13630  12BF  084C               	movf	_BothEP0OutUOWNsSet^(0+256),w	;volatile
 13631  12C0  1D03               	btfss	3,2
 13632  12C1  2AE8               	goto	i1l4785
 13633                           
 13634                           ;usb_device.c: 2556: {
 13635                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 16;
 13636  12C2  0021               	movlb	1	; select bank1
 13637  12C3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13638  12C4  3E01               	addlw	1
 13639  12C5  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 13640  12C6  3000               	movlw	0
 13641  12C7  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13642  12C8  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 13643  12C9  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 13644  12CA  0086               	movwf	6
 13645  12CB  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 13646  12CC  0087               	movwf	7
 13647  12CD  3010               	movlw	16
 13648  12CE  0081               	movwf	1
 13649                           
 13650                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13651  12CF  3050               	movlw	80
 13652  12D0  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 13653  12D1  3000               	movlw	0
 13654  12D2  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 13655  12D3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13656  12D4  0086               	movwf	6
 13657  12D5  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13658  12D6  0087               	movwf	7
 13659  12D7  3142               	addfsr 1,2
 13660  12D8  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 13661  12D9  3FC0               	movwi [0]fsr1
 13662  12DA  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 13663  12DB  3FC1               	movwi [1]fsr1
 13664                           
 13665                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13666  12DC  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13667  12DD  0086               	movwf	6
 13668  12DE  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13669  12DF  0087               	movwf	7
 13670  12E0  300C               	movlw	12
 13671  12E1  0081               	movwf	1
 13672                           
 13673                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13674  12E2  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13675  12E3  0086               	movwf	6
 13676  12E4  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13677  12E5  0087               	movwf	7
 13678  12E6  1781               	bsf	1,7
 13679                           
 13680                           ;usb_device.c: 2561: }
 13681  12E7  0008               	return
 13682  12E8                     i1l4785:	
 13683                           
 13684                           ;usb_device.c: 2562: else
 13685                           ;usb_device.c: 2563: {
 13686                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 13687  12E8  0022               	movlb	2	; select bank2
 13688  12E9  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 13689  12EA  0008               	return
 13690  12EB                     __end_ofi1_USBCtrlTrfOutHandler:	
 13691                           
 13692                           	psect	text64
 13693  0F63                     __ptext64:	
 13694 ;; *************** function i1_USBCtrlTrfRxService *****************
 13695 ;; Defined at:
 13696 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
 13697 ;; Parameters:    Size  Location     Type
 13698 ;;		None
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;  USBCtrlTrfRx    1    5[COMMON] unsigned char 
 13701 ;;  USBCtrlTrfRx    1    4[COMMON] unsigned char 
 13702 ;; Return value:  Size  Location     Type
 13703 ;;                  1    wreg      void 
 13704 ;; Registers used:
 13705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13706 ;; Tracked objects:
 13707 ;;		On entry : 0/0
 13708 ;;		On exit  : 0/0
 13709 ;;		Unchanged: 0/0
 13710 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13714 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13715 ;;Total ram usage:        4 bytes
 13716 ;; Hardware stack levels used:    1
 13717 ;; Hardware stack levels required when called:    1
 13718 ;; This function calls:
 13719 ;;		i1_USBCtrlEPAllowStatusStage
 13720 ;; This function is called by:
 13721 ;;		i1_USBCtrlTrfOutHandler
 13722 ;; This function uses a non-reentrant model
 13723 ;;
 13724                           
 13725                           
 13726                           ;psect for function i1_USBCtrlTrfRxService
 13727  0F63                     i1_USBCtrlTrfRxService:	
 13728                           
 13729                           ;usb_device.c: 1854: uint8_t byteToRead;
 13730                           ;usb_device.c: 1855: uint8_t i;
 13731                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 13732                           
 13733                           ;incstack = 0
 13734                           ; Regs used in i1_USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13735  0F63  0021               	movlb	1	; select bank1
 13736  0F64  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 13737  0F65  0086               	movwf	6
 13738  0F66  0187               	clrf	7
 13739  0F67  3F41               	moviw [1]fsr1
 13740  0F68  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 13741                           
 13742                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 13743  0F69  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13744  0F6A  00F2               	movwf	??i1_USBCtrlTrfRxService
 13745  0F6B  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 13746  0F6C  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13747  0F6D  024A               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
 13748  0F6E  1D03               	skipz
 13749  0F6F  2F72               	goto	u423_25
 13750  0F70  0872               	movf	??i1_USBCtrlTrfRxService,w
 13751  0F71  0249               	subwf	(_outPipes^(0+128)+3),w	;volatile
 13752  0F72                     u423_25:	
 13753  0F72  1803               	skipnc
 13754  0F73  2F78               	goto	i1l538
 13755                           
 13756                           ;usb_device.c: 1866: {
 13757                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 13758  0F74  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
 13759  0F75  00F2               	movwf	??i1_USBCtrlTrfRxService
 13760  0F76  0872               	movf	??i1_USBCtrlTrfRxService,w
 13761  0F77  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 13762  0F78                     i1l538:	
 13763                           
 13764                           ;usb_device.c: 1868: }
 13765                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 13766  0F78  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13767  0F79  00F2               	movwf	??i1_USBCtrlTrfRxService
 13768  0F7A  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 13769  0F7B  0872               	movf	??i1_USBCtrlTrfRxService,w
 13770  0F7C  02C9               	subwf	(_outPipes^(0+128)+3),f	;volatile
 13771  0F7D  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13772  0F7E  3BCA               	subwfb	((_outPipes+1)^(0+128)+3),f	;volatile
 13773                           
 13774                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 13775  0F7F  01F4               	clrf	i1USBCtrlTrfRxService@i
 13776  0F80                     i1l4519:	
 13777  0F80  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13778  0F81  0274               	subwf	i1USBCtrlTrfRxService@i,w
 13779  0F82  1803               	btfsc	3,0
 13780  0F83  2F99               	goto	i1l4521
 13781                           
 13782                           ;usb_device.c: 1875: {
 13783                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 13784  0F84  0874               	movf	i1USBCtrlTrfRxService@i,w
 13785  0F85  3E60               	addlw	96
 13786  0F86  0086               	movwf	6
 13787  0F87  0187               	clrf	7
 13788  0F88  0801               	movf	1,w
 13789  0F89  00F2               	movwf	??i1_USBCtrlTrfRxService
 13790  0F8A  0846               	movf	_outPipes^(0+128),w	;volatile
 13791  0F8B  0086               	movwf	6
 13792  0F8C  3001               	movlw	1	; select bank2/3
 13793  0F8D  0087               	movwf	7
 13794  0F8E  0872               	movf	??i1_USBCtrlTrfRxService,w
 13795  0F8F  0081               	movwf	1
 13796  0F90  3001               	movlw	1
 13797  0F91  00F2               	movwf	??i1_USBCtrlTrfRxService
 13798  0F92  0872               	movf	??i1_USBCtrlTrfRxService,w
 13799  0F93  07C6               	addwf	_outPipes^(0+128),f	;volatile
 13800  0F94  3001               	movlw	1
 13801  0F95  00F2               	movwf	??i1_USBCtrlTrfRxService
 13802  0F96  0872               	movf	??i1_USBCtrlTrfRxService,w
 13803  0F97  07F4               	addwf	i1USBCtrlTrfRxService@i,f
 13804  0F98  2F80               	goto	i1l4519
 13805  0F99                     i1l4521:	
 13806                           
 13807                           ;usb_device.c: 1877: }
 13808                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 13809  0F99  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
 13810  0F9A  044A               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
 13811  0F9B  1903               	btfsc	3,2
 13812  0F9C  2FD3               	goto	i1l4533
 13813                           
 13814                           ;usb_device.c: 1882: {
 13815                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 16;
 13816  0F9D  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13817  0F9E  3E01               	addlw	1
 13818  0F9F  00F2               	movwf	??i1_USBCtrlTrfRxService
 13819  0FA0  3000               	movlw	0
 13820  0FA1  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13821  0FA2  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13822  0FA3  0872               	movf	??i1_USBCtrlTrfRxService,w
 13823  0FA4  0086               	movwf	6
 13824  0FA5  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13825  0FA6  0087               	movwf	7
 13826  0FA7  3010               	movlw	16
 13827  0FA8  0081               	movwf	1
 13828                           
 13829                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 13830  0FA9  3060               	movlw	96
 13831  0FAA  00F2               	movwf	??i1_USBCtrlTrfRxService
 13832  0FAB  3000               	movlw	0
 13833  0FAC  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13834  0FAD  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13835  0FAE  0086               	movwf	6
 13836  0FAF  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13837  0FB0  0087               	movwf	7
 13838  0FB1  3142               	addfsr 1,2
 13839  0FB2  0872               	movf	??i1_USBCtrlTrfRxService,w
 13840  0FB3  3FC0               	movwi [0]fsr1
 13841  0FB4  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13842  0FB5  3FC1               	movwi [1]fsr1
 13843                           
 13844                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 13845  0FB6  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 13846  0FB7  0086               	movwf	6
 13847  0FB8  0187               	clrf	7
 13848  0FB9  1B01               	btfsc	1,6
 13849  0FBA  2FC7               	goto	i1l4531
 13850                           
 13851                           ;usb_device.c: 1886: {
 13852                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13853  0FBB  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13854  0FBC  0086               	movwf	6
 13855  0FBD  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13856  0FBE  0087               	movwf	7
 13857  0FBF  3048               	movlw	72
 13858  0FC0  0081               	movwf	1
 13859                           
 13860                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13861  0FC1  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13862  0FC2  0086               	movwf	6
 13863  0FC3  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13864  0FC4  0087               	movwf	7
 13865  0FC5  1781               	bsf	1,7
 13866                           
 13867                           ;usb_device.c: 1889: }
 13868  0FC6  0008               	return
 13869  0FC7                     i1l4531:	
 13870                           
 13871                           ;usb_device.c: 1890: else
 13872                           ;usb_device.c: 1891: {
 13873                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 13874  0FC7  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13875  0FC8  0086               	movwf	6
 13876  0FC9  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13877  0FCA  0087               	movwf	7
 13878  0FCB  3008               	movlw	8
 13879  0FCC  0081               	movwf	1
 13880                           
 13881                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13882  0FCD  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13883  0FCE  0086               	movwf	6
 13884  0FCF  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13885  0FD0  0087               	movwf	7
 13886  0FD1  1781               	bsf	1,7
 13887                           
 13888                           ;usb_device.c: 1894: }
 13889                           ;usb_device.c: 1895: }
 13890  0FD2  0008               	return
 13891  0FD3                     i1l4533:	
 13892                           
 13893                           ;usb_device.c: 1896: else
 13894                           ;usb_device.c: 1897: {
 13895                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 16;
 13896  0FD3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13897  0FD4  3E01               	addlw	1
 13898  0FD5  00F2               	movwf	??i1_USBCtrlTrfRxService
 13899  0FD6  3000               	movlw	0
 13900  0FD7  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13901  0FD8  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13902  0FD9  0872               	movf	??i1_USBCtrlTrfRxService,w
 13903  0FDA  0086               	movwf	6
 13904  0FDB  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13905  0FDC  0087               	movwf	7
 13906  0FDD  3010               	movlw	16
 13907  0FDE  0081               	movwf	1
 13908                           
 13909                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13910  0FDF  3050               	movlw	80
 13911  0FE0  00F2               	movwf	??i1_USBCtrlTrfRxService
 13912  0FE1  3000               	movlw	0
 13913  0FE2  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13914  0FE3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13915  0FE4  0086               	movwf	6
 13916  0FE5  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13917  0FE6  0087               	movwf	7
 13918  0FE7  3142               	addfsr 1,2
 13919  0FE8  0872               	movf	??i1_USBCtrlTrfRxService,w
 13920  0FE9  3FC0               	movwi [0]fsr1
 13921  0FEA  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13922  0FEB  3FC1               	movwi [1]fsr1
 13923                           
 13924                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13925  0FEC  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13926  0FED  0086               	movwf	6
 13927  0FEE  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13928  0FEF  0087               	movwf	7
 13929  0FF0  3004               	movlw	4
 13930  0FF1  0081               	movwf	1
 13931                           
 13932                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13933  0FF2  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13934  0FF3  0086               	movwf	6
 13935  0FF4  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13936  0FF5  0087               	movwf	7
 13937  0FF6  1781               	bsf	1,7
 13938                           
 13939                           ;usb_device.c: 1915: {
 13940                           ;usb_device.c: 1921: outPipes[0].pFunc();
 13941  0FF7  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
 13942  0FF8  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
 13943                           
 13944                           ;usb_device.c: 1926: }
 13945                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 13946  0FF9  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
 13947                           
 13948                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 13949  0FFA  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
 13950  0FFB  1D03               	btfss	3,2
 13951  0FFC  0008               	return
 13952                           
 13953                           ;usb_device.c: 1942: {
 13954                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 13955  0FFD  3187  278F         	fcall	i1_USBCtrlEPAllowStatusStage
 13956  0FFF  0008               	return
 13957  1000                     __end_ofi1_USBCtrlTrfRxService:	
 13958                           
 13959                           	psect	text65
 13960  078F                     __ptext65:	
 13961 ;; *************** function i1_USBCtrlEPAllowStatusStage *****************
 13962 ;; Defined at:
 13963 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
 13964 ;; Parameters:    Size  Location     Type
 13965 ;;		None
 13966 ;; Auto vars:     Size  Location     Type
 13967 ;;		None
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  1    wreg      void 
 13970 ;; Registers used:
 13971 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13972 ;; Tracked objects:
 13973 ;;		On entry : 0/0
 13974 ;;		On exit  : 0/0
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;Total ram usage:        2 bytes
 13982 ;; Hardware stack levels used:    1
 13983 ;; This function calls:
 13984 ;;		Nothing
 13985 ;; This function is called by:
 13986 ;;		i1_USBDeviceTasks
 13987 ;;		i1_USBCtrlEPServiceComplete
 13988 ;;		i1_USBCtrlTrfRxService
 13989 ;; This function uses a non-reentrant model
 13990 ;;
 13991                           
 13992                           
 13993                           ;psect for function i1_USBCtrlEPAllowStatusStage
 13994  078F                     i1_USBCtrlEPAllowStatusStage:	
 13995                           
 13996                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 13997                           
 13998                           ;incstack = 0
 13999                           ; Regs used in i1_USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 14000  078F  0022               	movlb	2	; select bank2
 14001  0790  084A               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
 14002  0791  1D03               	btfss	3,2
 14003  0792  0008               	return
 14004                           
 14005                           ;usb_device.c: 1424: {
 14006                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 14007  0793  3001               	movlw	1
 14008  0794  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14009  0795  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14010  0796  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 14011                           
 14012                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 14013  0797  0849               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
 14014  0798  1D03               	btfss	3,2
 14015  0799  0008               	return
 14016                           
 14017                           ;usb_device.c: 1427: {
 14018                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 14019  079A  3001               	movlw	1
 14020  079B  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14021  079C  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14022  079D  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 14023                           
 14024                           ;usb_device.c: 1432: if(controlTransferState == 2)
 14025  079E  3002               	movlw	2
 14026  079F  0021               	movlb	1	; select bank1
 14027  07A0  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
 14028  07A1  1D03               	btfss	3,2
 14029  07A2  2FB5               	goto	i1l4131
 14030                           
 14031                           ;usb_device.c: 1433: {
 14032                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 14033  07A3  084D               	movf	_pBDTEntryIn^(0+128),w
 14034  07A4  0086               	movwf	6
 14035  07A5  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14036  07A6  0087               	movwf	7
 14037  07A7  3141               	addfsr 1,1
 14038  07A8  0181               	clrf	1
 14039                           
 14040                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14041  07A9  084D               	movf	_pBDTEntryIn^(0+128),w
 14042  07AA  0086               	movwf	6
 14043  07AB  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14044  07AC  0087               	movwf	7
 14045  07AD  3048               	movlw	72
 14046  07AE  0081               	movwf	1
 14047                           
 14048                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14049  07AF  084D               	movf	_pBDTEntryIn^(0+128),w
 14050  07B0  0086               	movwf	6
 14051  07B1  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14052  07B2  0087               	movwf	7
 14053  07B3  1781               	bsf	1,7
 14054                           
 14055                           ;usb_device.c: 1437: }
 14056  07B4  0008               	return
 14057  07B5                     i1l4131:	
 14058                           
 14059                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 14060  07B5  035C               	decf	_controlTransferState^(0+128),w	;volatile
 14061  07B6  1D03               	btfss	3,2
 14062  07B7  0008               	return
 14063                           
 14064                           ;usb_device.c: 1439: {
 14065                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 14066  07B8  0022               	movlb	2	; select bank2
 14067  07B9  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 14068                           
 14069                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 16;
 14070  07BA  3010               	movlw	16
 14071  07BB  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14072  07BC  0021               	movlb	1	; select bank1
 14073  07BD  0A5E               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
 14074  07BE  0086               	movwf	6
 14075  07BF  0187               	clrf	7
 14076  07C0  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14077  07C1  0081               	movwf	1
 14078                           
 14079                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14080  07C2  3050               	movlw	80
 14081  07C3  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14082  07C4  3000               	movlw	0
 14083  07C5  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14084  07C6  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 14085  07C7  3E02               	addlw	2
 14086  07C8  0086               	movwf	6
 14087  07C9  0187               	clrf	7
 14088  07CA  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14089  07CB  3FC0               	movwi [0]fsr1
 14090  07CC  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14091  07CD  3FC1               	movwi [1]fsr1
 14092                           
 14093                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 14094  07CE  3004               	movlw	4
 14095  07CF  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14096  07D0  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 14097  07D1  0086               	movwf	6
 14098  07D2  0187               	clrf	7
 14099  07D3  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14100  07D4  0081               	movwf	1
 14101                           
 14102                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14103  07D5  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 14104  07D6  0086               	movwf	6
 14105  07D7  0187               	clrf	7
 14106  07D8  1781               	bsf	1,7
 14107                           
 14108                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 14109  07D9  3001               	movlw	1
 14110  07DA  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14111  07DB  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14112  07DC  0022               	movlb	2	; select bank2
 14113  07DD  00CC               	movwf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 14114                           
 14115                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 16;
 14116  07DE  0021               	movlb	1	; select bank1
 14117  07DF  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14118  07E0  3E01               	addlw	1
 14119  07E1  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14120  07E2  3000               	movlw	0
 14121  07E3  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14122  07E4  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14123  07E5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14124  07E6  0086               	movwf	6
 14125  07E7  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14126  07E8  0087               	movwf	7
 14127  07E9  3010               	movlw	16
 14128  07EA  0081               	movwf	1
 14129                           
 14130                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14131  07EB  3050               	movlw	80
 14132  07EC  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14133  07ED  3000               	movlw	0
 14134  07EE  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14135  07EF  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14136  07F0  0086               	movwf	6
 14137  07F1  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14138  07F2  0087               	movwf	7
 14139  07F3  3142               	addfsr 1,2
 14140  07F4  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14141  07F5  3FC0               	movwi [0]fsr1
 14142  07F6  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14143  07F7  3FC1               	movwi [1]fsr1
 14144                           
 14145                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 14146  07F8  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14147  07F9  0086               	movwf	6
 14148  07FA  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14149  07FB  0087               	movwf	7
 14150  07FC  3080               	movlw	128
 14151  07FD  0081               	movwf	1
 14152  07FE  0008               	return
 14153  07FF                     __end_ofi1_USBCtrlEPAllowStatusStage:	
 14154                           
 14155                           	psect	text66
 14156  08F9                     __ptext66:	
 14157 ;; *************** function i1_USBCtrlTrfInHandler *****************
 14158 ;; Defined at:
 14159 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;		None
 14162 ;; Auto vars:     Size  Location     Type
 14163 ;;  USBCtrlTrfIn    1    5[COMMON] unsigned char 
 14164 ;; Return value:  Size  Location     Type
 14165 ;;                  1    wreg      void 
 14166 ;; Registers used:
 14167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14168 ;; Tracked objects:
 14169 ;;		On entry : 0/0
 14170 ;;		On exit  : 0/0
 14171 ;;		Unchanged: 0/0
 14172 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14175 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14176 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14177 ;;Total ram usage:        3 bytes
 14178 ;; Hardware stack levels used:    1
 14179 ;; Hardware stack levels required when called:    1
 14180 ;; This function calls:
 14181 ;;		i1_USBCtrlTrfTxService
 14182 ;; This function is called by:
 14183 ;;		i1_USBCtrlEPService
 14184 ;; This function uses a non-reentrant model
 14185 ;;
 14186                           
 14187                           
 14188                           ;psect for function i1_USBCtrlTrfInHandler
 14189  08F9                     i1_USBCtrlTrfInHandler:	
 14190                           
 14191                           ;usb_device.c: 2594: uint8_t lastDTS;
 14192                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 14193                           
 14194                           ;incstack = 0
 14195                           ; Regs used in i1_USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14196  08F9  0021               	movlb	1	; select bank1
 14197  08FA  084D               	movf	_pBDTEntryIn^(0+128),w
 14198  08FB  0086               	movwf	6
 14199  08FC  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14200  08FD  0087               	movwf	7
 14201  08FE  3000               	movlw	0
 14202  08FF  1B01               	btfsc	1,6
 14203  0900  3001               	movlw	1
 14204  0901  00F5               	movwf	i1USBCtrlTrfInHandler@lastDTS
 14205                           
 14206                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 14207  0902  3004               	movlw	4
 14208  0903  064D               	xorwf	_pBDTEntryIn^(0+128),w
 14209  0904  00CD               	movwf	_pBDTEntryIn^(0+128)
 14210  0905  3000               	movlw	0
 14211  0906  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
 14212  0907  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 14213                           
 14214                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 14215  0908  3008               	movlw	8
 14216  0909  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
 14217  090A  1D03               	btfss	3,2
 14218  090B  291B               	goto	i1l4801
 14219                           
 14220                           ;usb_device.c: 2605: {
 14221                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 14222  090C  0020               	movlb	0	; select bank0
 14223  090D  0852               	movf	82,w	;volatile
 14224  090E  397F               	andlw	127
 14225  090F  003D               	movlb	29	; select bank29
 14226  0910  0096               	movwf	22	;volatile
 14227                           
 14228                           ;usb_device.c: 2607: if(UADDR != 0u)
 14229  0911  0816               	movf	22,w	;volatile
 14230  0912  1903               	btfsc	3,2
 14231  0913  2916               	goto	i1l4799
 14232                           
 14233                           ;usb_device.c: 2608: {
 14234                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 14235  0914  3010               	movlw	16
 14236  0915  2917               	goto	L19
 14237  0916                     i1l4799:	
 14238                           ;usb_device.c: 2610: }
 14239                           
 14240                           
 14241                           ;usb_device.c: 2611: else
 14242                           ;usb_device.c: 2612: {
 14243                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 14244  0916  3004               	movlw	4
 14245  0917                     L19:	
 14246  0917  00F3               	movwf	??i1_USBCtrlTrfInHandler
 14247  0918  0873               	movf	??i1_USBCtrlTrfInHandler,w
 14248  0919  0021               	movlb	1	; select bank1
 14249  091A  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 14250  091B                     i1l4801:	
 14251                           
 14252                           ;usb_device.c: 2614: }
 14253                           ;usb_device.c: 2615: }
 14254                           ;usb_device.c: 2618: if(controlTransferState == 1)
 14255  091B  035C               	decf	_controlTransferState^(0+128),w	;volatile
 14256  091C  1D03               	btfss	3,2
 14257  091D  295A               	goto	i1l623
 14258                           
 14259                           ;usb_device.c: 2619: {
 14260                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 14261  091E  3060               	movlw	96
 14262  091F  00F3               	movwf	??i1_USBCtrlTrfInHandler
 14263  0920  3000               	movlw	0
 14264  0921  00F4               	movwf	??i1_USBCtrlTrfInHandler+1
 14265  0922  084D               	movf	_pBDTEntryIn^(0+128),w
 14266  0923  0086               	movwf	6
 14267  0924  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14268  0925  0087               	movwf	7
 14269  0926  3142               	addfsr 1,2
 14270  0927  0873               	movf	??i1_USBCtrlTrfInHandler,w
 14271  0928  3FC0               	movwi [0]fsr1
 14272  0929  0874               	movf	??i1_USBCtrlTrfInHandler+1,w
 14273  092A  3FC1               	movwi [1]fsr1
 14274                           
 14275                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 14276  092B  3189  21C9  3188   	fcall	i1_USBCtrlTrfTxService
 14277                           
 14278                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 14279  092E  3002               	movlw	2
 14280  092F  0021               	movlb	1	; select bank1
 14281  0930  065D               	xorwf	_shortPacketStatus^(0+128),w	;volatile
 14282  0931  1D03               	btfss	3,2
 14283  0932  293F               	goto	i1l4811
 14284                           
 14285                           ;usb_device.c: 2628: {
 14286                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 14287  0933  084D               	movf	_pBDTEntryIn^(0+128),w
 14288  0934  0086               	movwf	6
 14289  0935  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14290  0936  0087               	movwf	7
 14291  0937  3004               	movlw	4
 14292  0938  0081               	movwf	1
 14293                           
 14294                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14295  0939  084D               	movf	_pBDTEntryIn^(0+128),w
 14296  093A  0086               	movwf	6
 14297  093B  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14298  093C  0087               	movwf	7
 14299  093D  1781               	bsf	1,7
 14300                           
 14301                           ;usb_device.c: 2633: }
 14302  093E  0008               	return
 14303  093F                     i1l4811:	
 14304                           
 14305                           ;usb_device.c: 2634: else
 14306                           ;usb_device.c: 2635: {
 14307                           ;usb_device.c: 2636: if(lastDTS == 0)
 14308  093F  0875               	movf	i1USBCtrlTrfInHandler@lastDTS,w
 14309  0940  1D03               	btfss	3,2
 14310  0941  294E               	goto	i1l4815
 14311                           
 14312                           ;usb_device.c: 2637: {
 14313                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14314  0942  084D               	movf	_pBDTEntryIn^(0+128),w
 14315  0943  0086               	movwf	6
 14316  0944  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14317  0945  0087               	movwf	7
 14318  0946  3048               	movlw	72
 14319  0947  0081               	movwf	1
 14320                           
 14321                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14322  0948  084D               	movf	_pBDTEntryIn^(0+128),w
 14323  0949  0086               	movwf	6
 14324  094A  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14325  094B  0087               	movwf	7
 14326  094C  1781               	bsf	1,7
 14327                           
 14328                           ;usb_device.c: 2640: }
 14329  094D  0008               	return
 14330  094E                     i1l4815:	
 14331                           
 14332                           ;usb_device.c: 2641: else
 14333                           ;usb_device.c: 2642: {
 14334                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 14335  094E  084D               	movf	_pBDTEntryIn^(0+128),w
 14336  094F  0086               	movwf	6
 14337  0950  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14338  0951  0087               	movwf	7
 14339  0952  3008               	movlw	8
 14340  0953  0081               	movwf	1
 14341                           
 14342                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14343  0954  084D               	movf	_pBDTEntryIn^(0+128),w
 14344  0955  0086               	movwf	6
 14345  0956  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14346  0957  0087               	movwf	7
 14347  0958  1781               	bsf	1,7
 14348                           
 14349                           ;usb_device.c: 2645: }
 14350                           ;usb_device.c: 2646: }
 14351                           ;usb_device.c: 2647: }
 14352  0959  0008               	return
 14353  095A                     i1l623:	
 14354                           
 14355                           ;usb_device.c: 2648: else
 14356                           ;usb_device.c: 2649: {
 14357                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 14358  095A  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
 14359  095B  295F               	goto	i1l4819
 14360                           
 14361                           ;usb_device.c: 2656: {
 14362                           ;usb_device.c: 2657: outPipes[0].pFunc();
 14363  095C  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
 14364  095D  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
 14365                           
 14366                           ;usb_device.c: 2658: }
 14367                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 14368  095E  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
 14369  095F                     i1l4819:	
 14370                           
 14371                           ;usb_device.c: 2660: }
 14372                           ;usb_device.c: 2662: controlTransferState = 0;
 14373  095F  01DC               	clrf	_controlTransferState^(0+128)	;volatile
 14374  0960  0008               	return
 14375  0961                     __end_ofi1_USBCtrlTrfInHandler:	
 14376                           
 14377                           	psect	text67
 14378  09C9                     __ptext67:	
 14379 ;; *************** function i1_USBCtrlTrfTxService *****************
 14380 ;; Defined at:
 14381 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
 14382 ;; Parameters:    Size  Location     Type
 14383 ;;		None
 14384 ;; Auto vars:     Size  Location     Type
 14385 ;;  USBCtrlTrfTx    1    2[COMMON] unsigned char 
 14386 ;; Return value:  Size  Location     Type
 14387 ;;                  1    wreg      void 
 14388 ;; Registers used:
 14389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14390 ;; Tracked objects:
 14391 ;;		On entry : 0/0
 14392 ;;		On exit  : 0/0
 14393 ;;		Unchanged: 0/0
 14394 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14397 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14398 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14399 ;;Total ram usage:        3 bytes
 14400 ;; Hardware stack levels used:    1
 14401 ;; This function calls:
 14402 ;;		Nothing
 14403 ;; This function is called by:
 14404 ;;		i1_USBCtrlEPAllowDataStage
 14405 ;;		i1_USBCtrlTrfInHandler
 14406 ;; This function uses a non-reentrant model
 14407 ;;
 14408                           
 14409                           
 14410                           ;psect for function i1_USBCtrlTrfTxService
 14411  09C9                     i1_USBCtrlTrfTxService:	
 14412                           
 14413                           ;usb_device.c: 1773: uint8_t byteToSend;
 14414                           ;usb_device.c: 1777: byteToSend = 16;
 14415                           
 14416                           ;incstack = 0
 14417 ;; hardware stack exceeded
 14418                           ; Regs used in i1_USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 14419  09C9  3010               	movlw	16
 14420  09CA  00F0               	movwf	??i1_USBCtrlTrfTxService
 14421  09CB  0870               	movf	??i1_USBCtrlTrfTxService,w
 14422  09CC  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 14423                           
 14424                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)16)
 14425  09CD  3000               	movlw	0
 14426  09CE  0021               	movlb	1	; select bank1
 14427  09CF  0257               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
 14428  09D0  3010               	movlw	16
 14429  09D1  1903               	skipnz
 14430  09D2  0256               	subwf	(_inPipes^(0+128)+3),w	;volatile
 14431  09D3  1803               	skipnc
 14432  09D4  29E5               	goto	i1l523
 14433                           
 14434                           ;usb_device.c: 1779: {
 14435                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 14436  09D5  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
 14437  09D6  00F0               	movwf	??i1_USBCtrlTrfTxService
 14438  09D7  0870               	movf	??i1_USBCtrlTrfTxService,w
 14439  09D8  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 14440                           
 14441                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 14442  09D9  085D               	movf	_shortPacketStatus^(0+128),w	;volatile
 14443  09DA  1D03               	btfss	3,2
 14444  09DB  29DE               	goto	i1l3935
 14445                           
 14446                           ;usb_device.c: 1788: {
 14447                           ;usb_device.c: 1789: shortPacketStatus = 1;
 14448  09DC  3001               	movlw	1
 14449  09DD  29E2               	goto	L20
 14450  09DE                     i1l3935:	
 14451                           ;usb_device.c: 1790: }
 14452                           
 14453                           
 14454                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 14455  09DE  035D               	decf	_shortPacketStatus^(0+128),w	;volatile
 14456  09DF  1D03               	btfss	3,2
 14457  09E0  29E5               	goto	i1l523
 14458                           
 14459                           ;usb_device.c: 1792: {
 14460                           ;usb_device.c: 1793: shortPacketStatus = 2;
 14461  09E1  3002               	movlw	2
 14462  09E2                     L20:	
 14463  09E2  00F0               	movwf	??i1_USBCtrlTrfTxService
 14464  09E3  0870               	movf	??i1_USBCtrlTrfTxService,w
 14465  09E4  00DD               	movwf	_shortPacketStatus^(0+128)	;volatile
 14466  09E5                     i1l523:	
 14467                           
 14468                           ;usb_device.c: 1794: }
 14469                           ;usb_device.c: 1795: }
 14470                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 14471  09E5  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14472  09E6  00F0               	movwf	??i1_USBCtrlTrfTxService
 14473  09E7  01F1               	clrf	??i1_USBCtrlTrfTxService+1
 14474  09E8  0870               	movf	??i1_USBCtrlTrfTxService,w
 14475  09E9  02D6               	subwf	(_inPipes^(0+128)+3),f	;volatile
 14476  09EA  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 14477  09EB  3BD7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
 14478                           
 14479                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 14480  09EC  084D               	movf	_pBDTEntryIn^(0+128),w
 14481  09ED  3E01               	addlw	1
 14482  09EE  00F0               	movwf	??i1_USBCtrlTrfTxService
 14483  09EF  3000               	movlw	0
 14484  09F0  3D4E               	addwfc	(_pBDTEntryIn+1)^(0+128),w
 14485  09F1  00F1               	movwf	??i1_USBCtrlTrfTxService+1
 14486  09F2  0870               	movf	??i1_USBCtrlTrfTxService,w
 14487  09F3  0086               	movwf	6
 14488  09F4  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 14489  09F5  0087               	movwf	7
 14490  09F6  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14491  09F7  0081               	movwf	1
 14492                           
 14493                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 14494  09F8  3060               	movlw	96
 14495  09F9  00F0               	movwf	??i1_USBCtrlTrfTxService
 14496  09FA  0870               	movf	??i1_USBCtrlTrfTxService,w
 14497  09FB  0022               	movlb	2	; select bank2
 14498  09FC  00CF               	movwf	_pDst^(0+256)
 14499                           
 14500                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 14501  09FD  0021               	movlb	1	; select bank1
 14502  09FE  1C55               	btfss	(_inPipes^(0+128)+2),0	;volatile
 14503  09FF  2A1A               	goto	i1l3955
 14504  0A00  2A37               	goto	i1l3965
 14505  0A01                     i1l3947:	
 14506                           ;usb_device.c: 1810: {
 14507                           ;usb_device.c: 1811: while(byteToSend)
 14508                           
 14509                           
 14510                           ;usb_device.c: 1812: {
 14511                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 14512  0A01  0021               	movlb	1	; select bank1
 14513  0A02  0853               	movf	_inPipes^(0+128),w	;volatile
 14514  0A03  0084               	movwf	4
 14515  0A04  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 14516  0A05  0085               	movwf	5
 14517  0A06  0800               	movf	0,w	;code access
 14518  0A07  00F0               	movwf	??i1_USBCtrlTrfTxService
 14519  0A08  0022               	movlb	2	; select bank2
 14520  0A09  084F               	movf	_pDst^(0+256),w
 14521  0A0A  0086               	movwf	6
 14522  0A0B  0187               	clrf	7
 14523  0A0C  0870               	movf	??i1_USBCtrlTrfTxService,w
 14524  0A0D  0081               	movwf	1
 14525  0A0E  3001               	movlw	1
 14526  0A0F  0021               	movlb	1	; select bank1
 14527  0A10  07D3               	addwf	_inPipes^(0+128),f	;volatile
 14528  0A11  3000               	movlw	0
 14529  0A12  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 14530  0A13  3001               	movlw	1
 14531  0A14  00F0               	movwf	??i1_USBCtrlTrfTxService
 14532  0A15  0870               	movf	??i1_USBCtrlTrfTxService,w
 14533  0A16  0022               	movlb	2	; select bank2
 14534  0A17  07CF               	addwf	_pDst^(0+256),f
 14535                           
 14536                           ;usb_device.c: 1814: byteToSend--;
 14537  0A18  3001               	movlw	1
 14538  0A19  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 14539  0A1A                     i1l3955:	
 14540  0A1A  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14541  0A1B  1903               	btfsc	3,2
 14542  0A1C  0008               	return
 14543  0A1D  2A01               	goto	i1l3947
 14544  0A1E                     i1l3957:	
 14545                           ;usb_device.c: 1817: else
 14546                           ;usb_device.c: 1818: {
 14547                           ;usb_device.c: 1819: while(byteToSend)
 14548                           
 14549                           ;usb_device.c: 1815: }
 14550                           ;usb_device.c: 1816: }
 14551                           
 14552                           
 14553                           ;usb_device.c: 1820: {
 14554                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 14555  0A1E  0021               	movlb	1	; select bank1
 14556  0A1F  0853               	movf	_inPipes^(0+128),w	;volatile
 14557  0A20  0084               	movwf	4
 14558  0A21  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 14559  0A22  0085               	movwf	5
 14560  0A23  0800               	movf	0,w	;code access
 14561  0A24  00F0               	movwf	??i1_USBCtrlTrfTxService
 14562  0A25  0022               	movlb	2	; select bank2
 14563  0A26  084F               	movf	_pDst^(0+256),w
 14564  0A27  0086               	movwf	6
 14565  0A28  0187               	clrf	7
 14566  0A29  0870               	movf	??i1_USBCtrlTrfTxService,w
 14567  0A2A  0081               	movwf	1
 14568  0A2B  3001               	movlw	1
 14569  0A2C  0021               	movlb	1	; select bank1
 14570  0A2D  07D3               	addwf	_inPipes^(0+128),f	;volatile
 14571  0A2E  3000               	movlw	0
 14572  0A2F  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 14573  0A30  3001               	movlw	1
 14574  0A31  00F0               	movwf	??i1_USBCtrlTrfTxService
 14575  0A32  0870               	movf	??i1_USBCtrlTrfTxService,w
 14576  0A33  0022               	movlb	2	; select bank2
 14577  0A34  07CF               	addwf	_pDst^(0+256),f
 14578                           
 14579                           ;usb_device.c: 1822: byteToSend--;
 14580  0A35  3001               	movlw	1
 14581  0A36  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 14582  0A37                     i1l3965:	
 14583  0A37  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14584  0A38  1903               	btfsc	3,2
 14585  0A39  0008               	return
 14586  0A3A  2A1E               	goto	i1l3957
 14587  0A3B                     __end_ofi1_USBCtrlTrfTxService:	
 14588  007E                     btemp	set	126	;btemp
 14589  007E                     int$flags	set	126
 14590  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    155
    Data        0
    BSS         355
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0h            8      8       8
    BANK1            80     38      66
    BANK2            80      9      80
    BANK3            80      2      66
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0h[16]), RAM(DATA[4096]), SetupPkt(ABS[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(ABS[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), BDT(ABS[48]), 
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 16
		 -> CtrlTrfData(BANK0h[16]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK4[64]), NULL(NULL[0]), cdc_data_rx(BANK3[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 40
		 -> sd002(CODE[40]), sd001(CODE[18]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    process_gpio_cmd@rsp	PTR unsigned char  size(1) Largest target is 64
		 -> gpio_task@usb_tx_buf(BANK6[64]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> gpio_task@usb_tx_buf(BANK6[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> gpio_task@usb_rx_buf(BANK5[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    S304$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S294$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S294$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S269$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S269$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S269$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S269$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S36_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S36_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S36_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S36_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_USBCtrlEPServiceComplete->i1_USBCtrlEPAllowDataStage
    i1_USBCtrlEPAllowDataStage->i1_USBCtrlTrfTxService
    i1_USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    i1_USBCtrlTrfOutHandler->i1_USBCtrlTrfRxService
    i1_USBCtrlTrfRxService->i1_USBCtrlEPAllowStatusStage
    i1_USBCtrlTrfInHandler->i1_USBCtrlTrfTxService

Critical Paths under _main in BANK0h

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0h

    i1_USBWakeFromSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler
    i1_USBStdSetCfgHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBStdFeatureReqHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_CDCInitEP
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _gpio_task->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _SYSTEM_Initialize->_USBDeviceInit

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBDeviceTasks->i1_USBCtrlEPService
    i1_USBCtrlEPService->i1_USBCtrlTrfSetupHandler
    i1_USBCtrlTrfSetupHandler->i1_USBCheckStdRequest
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler

Critical Paths under _main in BANK2

    _usb_task->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBCheckStdRequest->_USBStdFeatureReqHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _usb_task->_USBDeviceTasks

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   52019
                  _SYSTEM_Initialize
                      _USBDeviceInit
                          _gpio_init
                          _gpio_task
                           _usb_task
 ---------------------------------------------------------------------------------
 (1) _usb_task                                             0     0      0   48223
                       _CDCTxService
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (2) _USBDeviceTasks                                       3     3      0   45929
                                              8 BANK2      1     1      0
                                              0 BANK3      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   1     1      0    6196
                                             34 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           1     1      0    6196
                                             34 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBStallHandler                                      1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBIncrement1msInternalTimers                        1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlEPService                                     3     3      0   26877
                                              5 BANK2      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfSetupHandler                               1     1      0   26540
                                             37 BANK1      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPServiceComplete                             2     2      0     136
                                             19 BANK1      2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowDataStage                              2     2      0     136
                                             17 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCheckStdRequest                                   1     1      0   20208
                                             36 BANK1      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStdSetCfgHandler                                  5     5      0    7070
                                             34 BANK1      1     1      0
                                              0 BANK2      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (7) _memset                                               8     2      6     639
                                             14 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (6) _USBStdGetStatusHandler                               3     3      0      68
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (6) _USBStdGetDscHandler                                  3     3      0       0
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (6) _USBStdFeatureReqHandler                              7     7      0    6874
                                             34 BANK1      2     2      0
                                              0 BANK2      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    6196
                                             28 BANK1      6     0      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckCDCRequest                                   1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCInitEP                                            1     1      0    3045
                                             27 BANK1      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBEnableEndpoint                                    6     5      1     952
                                             21 BANK1      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (6) _USBConfigureEndpoint                                 7     6      1     524
                                             14 BANK1      7     6      1
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfOutHandler                                 2     2      0     167
                                             20 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfRxService                                  4     4      0     167
                                             16 BANK1      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                             14 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfInHandler                                  3     3      0     170
                                             17 BANK1      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfTxService                                  3     3      0     136
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         3     3      0    2294
                                             25 BANK1      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _gpio_task                                            6     6      0    3004
                                             29 BANK1      6     6      0
                       _getsUSBUSART
                   _process_gpio_cmd
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     2      1     169
                                             14 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (2) _process_gpio_cmd                                     5     4      1     268
                                             14 BANK1      5     4      1
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     3      1    2332
                                             25 BANK1      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBTransferOnePacket                                11     7      4    2093
                                             14 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     396
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        5     5      0     396
                                             14 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          1     1      0   15934
                                             13 BANK1      1     1      0
                   i1_USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) i1_USBDeviceTasks                                    3     3      0   15934
                                             10 BANK1      3     3      0
        i1_USBCtrlEPAllowStatusStage
                 i1_USBCtrlEPService
                    i1_USBDeviceInit
    i1_USBIncrement1msInternalTimers
                  i1_USBStallHandler
                       i1_USBSuspend
               i1_USBWakeFromSuspend
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBWakeFromSuspend                                1     1      0    2016
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBSuspend                                        1     1      0    2016
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBStallHandler                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_USBIncrement1msInternalTimers                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_USBDeviceInit                                     5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlEPService                                  3     3      0    9546
                                              7 BANK1      3     3      0
              i1_USBCtrlTrfInHandler
             i1_USBCtrlTrfOutHandler
           i1_USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfSetupHandler                            1     1      0    9317
                                              6 BANK1      1     1      0
               i1_USBCheckStdRequest
         i1_USBCtrlEPServiceComplete
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPServiceComplete                          2     2      0      92
                                              5 COMMON     2     2      0
          i1_USBCtrlEPAllowDataStage
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlEPAllowDataStage                           2     2      0      92
                                              3 COMMON     2     2      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) i1_USBCheckStdRequest                                1     1      0    7209
                                              5 BANK1      1     1      0
          i1_USBStdFeatureReqHandler
              i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
              i1_USBStdSetCfgHandler
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) i1_USBStdSetCfgHandler                               5     5      0    2453
                                              6 BANK0h     1     1      0
                                              0 BANK1      4     4      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (17) i1_memset                                            8     2      6     202
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (16) i1_USBStdGetStatusHandler                            3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (16) i1_USBStdGetDscHandler                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (16) i1_USBStdFeatureReqHandler                           7     7      0    2694
                                              6 BANK0h     2     2      0
                                              0 BANK1      5     5      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USER_USB_CALLBACK_EVENT_HANDLER                   6     0      6    2016
                                              0 BANK0h     6     0      6
                        i1_CDCInitEP
               i1_USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) i1_USBCheckCDCRequest                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_CDCInitEP                                         1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i1_USBTransferOnePacket                             11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (15) i1_USBEnableEndpoint                                 6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) i1_USBConfigureEndpoint                              7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfOutHandler                              2     2      0     114
                                              6 COMMON     2     2      0
              i1_USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlTrfRxService                               4     4      0     114
                                              2 COMMON     4     4      0
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlEPAllowStatusStage                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfInHandler                               3     3      0     115
                                              3 COMMON     3     3      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) i1_USBCtrlTrfTxService                               3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _USBDeviceAttach
     _USBDeviceInit
     _WDT_Initialize
   _USBDeviceInit
   _gpio_init
   _gpio_task
     _getsUSBUSART
       _USBTransferOnePacket
     _process_gpio_cmd
     _putUSBUSART
   _usb_task
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
               _memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _USBDeviceInit
       _USBIncrement1msInternalTimers
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest

 _INTERRUPT_InterruptManager (ROOT)
   i1_USBDeviceTasks
     i1_USBCtrlEPAllowStatusStage
     i1_USBCtrlEPService
       i1_USBCtrlTrfInHandler
         i1_USBCtrlTrfTxService
       i1_USBCtrlTrfOutHandler
         i1_USBCtrlTrfRxService
           i1_USBCtrlEPAllowStatusStage
       i1_USBCtrlTrfSetupHandler
         i1_USBCheckStdRequest
           i1_USBStdFeatureReqHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
           i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
           i1_USBStdSetCfgHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
             i1_memset
           i1_USER_USB_CALLBACK_EVENT_HANDLER
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_USBCheckCDCRequest
         i1_USBCtrlEPServiceComplete
           i1_USBCtrlEPAllowDataStage
             i1_USBCtrlTrfTxService
           i1_USBCtrlEPAllowStatusStage
         i1_USER_USB_CALLBACK_EVENT_HANDLER
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_USBCheckCDCRequest
     i1_USBDeviceInit
     i1_USBIncrement1msInternalTimers
     i1_USBStallHandler
     i1_USBSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USBWakeFromSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USER_USB_CALLBACK_EVENT_HANDLER
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_USBCheckCDCRequest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0h            8      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0h               8      8       8       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     26      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      9      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      42      11       82.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1AA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1AA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Aug 31 22:54:51 2017

                                _USB_SD_Ptr 188F                                           pc 0002  
                               __CFG_CP$OFF 0000                                          l46 08F8  
                             _USBDeviceInit 058F                          __size_of_CDCInitEP 003D  
                               __CFG_LVP$ON 0000      i1USER_USB_CALLBACK_EVENT_HANDLER@event 0058  
      USER_USB_CALLBACK_EVENT_HANDLER@event 00BC      i1USER_USB_CALLBACK_EVENT_HANDLER@pdata 005A  
      USER_USB_CALLBACK_EVENT_HANDLER@pdata 00BE                                         l224 157C  
                                       l226 153E                                         l243 1358  
               __end_of_USBStdGetDscHandler 0C1F                                         l510 0F17  
                                       l183 1FFC                                         l425 05D6  
                                       l442 0358                                         l523 0A57  
                                       l436 031A                                         l446 0383  
                                       l623 09C2                                         l287 127E  
                                       l447 03DD                                         l448 038C  
                                       l538 0707                                         l635 0897  
                                       l580 158D                                         l485 10EB  
                                       l637 0840                                         l646 086D  
                                       l671 0150                                         l575 1581  
                                       l578 15C8                                         l579 158A  
                                       _BDT 0020                                         _UIE 0E92  
                                       _UIR 0E90                    i1_USBStdGetStatusHandler 147B  
                                _USBSuspend 1131                        USBStdSetCfgHandler@i 016A  
                      USBStdSetCfgHandler@p 0167                                __CFG_BORV$LO 0000  
                                       wreg 0009                              _USBDeviceTasks 02F7  
                              __CFG_IESO$ON 0000                              _USBDeviceState 00DF  
                                      S7237 1000                       ??_USBCtrlTrfRxService 00B0  
                            ??_getsUSBUSART 00BA                    USBEnableEndpoint@options 00B5  
                USBConfigureEndpoint@handle 00B4                                        l5103 1559  
                                      l5113 156D                                        l6101 017D  
                                      l6005 159E                                        l5071 10F0  
                                      l6103 0188                                        l6015 15BC  
                                      l6033 0064                                        l5083 1539  
                                      l5075 152E                                        l6035 0066  
                                      l5093 154F                                        l6061 00D6  
                                      l6207 0756                                        l6071 00F5  
                                      l6063 00E2                                        l6055 00C0  
                                      l6231 084A                                        l6135 0EE2  
                                      l5097 1551                                        l6209 0762  
                                      l6073 00FC                                        l6049 0095  
                                      l6241 0859                                        l6233 084D  
                                      l7113 105B                                        l6243 085C  
                                      l6139 0EE6                                        l6077 0108  
                                      l6245 085F                                        l6229 0847  
                                      l6157 0F26                                        l6165 0F30  
                                      l6431 0809                                        l6087 013B  
                                      l6255 087D                                        l7241 1279  
                                      l6097 0157                                        l6089 0141  
                                      l6531 059F                                        l6195 070F  
                                      l6443 0835                                        l6259 088C  
                                      l5805 0A73                                        l5813 0A8C  
                                      l6197 0728                                        l5741 08DC  
                                      l5725 08B7                                        l5717 08AB  
                                      l6711 16AD                                        l4855 10D7  
                                      l5815 0A90                                        l5823 0AA9  
                                      l5671 11C1                                        l5735 08CE  
                                      l7239 125F                                        l5831 10AC  
                                      l5903 1724                                        l6721 16E3  
                                      l6473 09B6                                        l6457 097E  
                                      l5657 13D9                                        l5729 08BE  
                                      l6617 11A4                                        l6547 05BD  
                                      l6539 05B0                                        l6707 1698  
                                      l6459 0983                                        l5659 13E1  
                                      l5667 11B9                                        l5747 08E6  
                                      l5771 1253                                        l6651 1218  
                                      l6619 11AD                                        l6581 05FE  
                                      l6717 16AF                                        l6741 04D8  
                                      l6733 04CD                                        l6477 09C7  
                                      l6469 09A7                                        l6559 05DB  
                                      l5687 0CBC                                        l5679 0CAC  
                                      l6719 16CE                                        l5775 1256  
                                      l5943 0D6C                                        l5927 0D3F  
                                      l5919 0D2C                                        l6671 1623  
                                      l6831 032E                                        l5697 0D03  
                                      l6753 0501                                        l5793 0A50  
                                      l5769 1250                                        l5937 0D56  
                                      l6649 1216                                        l6817 0314  
                                      l6809 0307                                        l6587 0621  
                                      l5699 0D1B                                        l6747 04F8  
                                      l5867 0AD7                                        l5971 0BB5  
                                      l6667 161D                                        l6843 0349  
                                      l6765 0520                                        l6773 053E  
                                      l5981 0BEB                                        l6669 1620  
                                      l6853 035E                                        l6837 0334  
                                      l6791 0570                                        l6775 0543  
                                      l6783 0561                                        l5967 0BAB  
                                      l5959 0D9A                                        l6793 0576  
                                      l6785 0565                                        l5993 0C12  
                                      l6795 058C                                        l5987 0C0C  
                                      l5979 0BE8                                        l5899 1712  
                                      l6867 037B                                        l6859 0365  
                                      l5989 0C0F                                        l6893 03C4  
                                      l6975 133B                                        l6895 03D3  
                                      l6887 03AB                                        l6977 135D  
                                      _LATA 010C                                        _LATC 010E  
                                      i1l46 179F                                        u6355 0701  
                                      u5715 13B2                                        u5725 13B8  
                                      u5735 13C0                       ??_USBCtrlTrfTxService 00AE  
                                      _UCFG 0E91                                        _UEP0 0E98  
                                      u6765 05C0                                        u5965 171B  
                                      _UEP1 0E99                                        _UEIE 0E97  
                                      u6885 15E4                                        _UEIR 0E93  
                                      _UCON 0E8E                                ?i1_CDCInitEP 0070  
                                      _WPUA 020C             i1USBCtrlTrfTxService@byteToSend 0072  
                              __CFG_WRT$OFF 0000                               __CFG_FCMEN$ON 0000  
                           _CDCDataInHandle 013E    i1USBStdFeatureReqHandler@current_ep_data 00A2  
    USBStdFeatureReqHandler@current_ep_data 0169                                        _pDst 014F  
                                      _main 1052                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                               _BaudRateGen 0134                                        fsr1l 0006  
                           _USBDeviceAttach 10DA                                        btemp 007E  
                             __CFG_BOREN$ON 0000                     ?i1_USBCtrlTrfOutHandler 0070  
                                      start 0018                         gpio_task@has_output 00C0  
            __size_ofi1_USBCtrlTrfRxService 009D               __end_ofi1_USBCtrlTrfRxService 1000  
                __end_of_USBCheckStdRequest 0898                      ??_USBCtrlTrfOutHandler 00B4  
                             __CFG_MCLRE$ON 0000                         USBDeviceInit@i_1509 00B1  
                 ??_USBStdFeatureReqHandler 00C2              __size_ofi1_USBCtrlTrfTxService 0072  
                     i1_USBStdGetDscHandler 0B21               __end_ofi1_USBCtrlTrfTxService 0A3B  
                  ??_USBStdGetStatusHandler 00AE                              ?_USBDeviceInit 0070  
            __size_of_OSCILLATOR_Initialize 000A               __end_of_OSCILLATOR_Initialize 2000  
                                     ?_main 0070                  i1USBEnableEndpoint@options 0077  
                             __CFG_WDTE$OFF 0000           __size_of_USBCtrlEPServiceComplete 0092  
                    __end_of_USBDeviceTasks 03E0                   ?_USBCtrlEPServiceComplete 0070  
                      i1_USBCheckStdRequest 17A0                                       i1l133 0012  
                                     i1l510 0E85                                       i1l425 068A  
                                     i1l442 043D                                       i1l523 09E5  
                                     i1l436 0402                                       i1l446 0468  
                                     i1l623 095A                                       i1l287 124E  
                                     i1l447 04BA                                       i1l448 0471  
                                     i1l538 0F78                                       i1l635 17FF  
                                     i1l580 148B                                       i1l637 17A8  
                                     i1l646 17D5                                       i1l671 02A5  
                                     i1l575 147F                                       i1l578 14C2  
                                     i1l579 1488                                       _UADDR 0E96  
                                     _PORTC 000E                                       u690m0 1619  
                                     _TRISA 008C                                       _TRISC 008E  
                                     _USTAT 0E8F                                  i1memset@p1 0070  
        __size_of_USBCtrlEPAllowStatusStage 0074             __end_of_USBCtrlEPAllowDataStage 1740  
                                     _sd000 1895                                       _sd001 186B  
                                     _sd002 1843     __end_ofi1_USBIncrement1msInternalTimers 10A7  
  __size_ofi1_USBIncrement1msInternalTimers 0018           ??i1_USBIncrement1msInternalTimers 0070  
          ?i1_USBIncrement1msInternalTimers 0070              ?_USBIncrement1msInternalTimers 0070  
           i1_USBIncrement1msInternalTimers 108F                              _WDT_Initialize 1FE8  
          __end_ofi1_USBCtrlTrfSetupHandler 1433                         gpio_task@bytes_rcvd 00BF  
                         __end_of_CDCInitEP 1328              __end_ofi1_USBCtrlTrfOutHandler 12EB  
                                     status 0003                                       wtemp0 007E  
                          __end_ofi1_memset 108F          __size_ofi1_USBCtrlEPAllowDataStage 005B  
                 __size_ofi1_USBDeviceTasks 00DD                  ?i1_USBCtrlEPAllowDataStage 0070  
                           putUSBUSART@data 00B0                __size_of_USBStdSetCfgHandler 008E  
                           __initialization 001A                                __end_of_main 1062  
                     _control_signal_bitmap 0151                              __CFG_LPBOR$OFF 0000  
               ?_INTERRUPT_InterruptManager 0070                   __size_of_USBCtrlEPService 005A  
                                    ??_main 00C6                       ?i1_USBCheckStdRequest 0070  
                           ?_USBDeviceTasks 0070                                 ?_USBSuspend 0070  
                       __CFG_USBLSCLK$48MHz 0000                             i1_USBDeviceInit 0645  
                    __end_of_WDT_Initialize 1FEC                                _cdc_mem_type 0152  
                   __end_of_USBDeviceAttach 10F6                            _CDCDataOutHandle 0140  
                                    _ACTCON 039B                                      i1S7243 101A  
                                    _APFCON 011D                                      _ANSELA 018C  
                                    _ANSELC 018E                             getsUSBUSART@len 00B9  
                     __size_of_CDCTxService 00D2                                      i1l4131 07B5  
                                    i1l3413 1397                                      i1l3415 139F  
                                    i1l4231 0B2C                                      i1l3507 0C3B  
                                    i1l3611 175F                                      i1l3603 1753  
                                    i1l4251 0B8D                                      i1l4243 0B69  
                                    i1l4235 0B36                                      i1l4163 165C  
                                    i1l5211 11F3                                      i1l3517 0C82  
                                    i1l3621 1776                                      i1l4253 0B90  
                                    i1l4245 0B6C                                      i1l5141 0671  
                                    i1l5133 0665                                      i1l5125 0654  
                                    i1l3519 0C9A                                      i1l3615 1766  
                                    i1l6111 1223                                      i1l4167 166E  
                                    i1l4521 0F99                                      i1l3633 178D  
                                    i1l4257 0B93                                      i1l5153 068F  
                                    i1l5209 11F1                                      i1l7001 03FC  
                                    i1l4531 0FC7                                      i1l3491 115F  
                                    i1l3627 1784                                      i1l6115 1226  
                                    i1l4533 0FD3                                      i1l6109 1220  
                                    i1l4269 149B                                      i1l5181 06CF  
                                    i1l7021 0419                                      i1l4519 0F80  
                                    i1l3487 1158                                      i1l4279 14B6  
                                    i1l4463 0E54                                      i1l5175 06AC  
                                    i1l7015 0413                                      i1l4801 091B  
                                    i1l6313 0E29                                      i1l4481 0E94  
                                    i1l4811 093F                                      i1l3499 0C2B  
                                    i1l4459 0E50                                      i1l7051 0460  
                                    i1l7043 044A                                      i1l7027 042E  
                                    i1l6501 17C7                                      i1l7037 0443  
                                    i1l3935 09DE                                      i1l4815 094E  
                                    i1l6343 01EB                                      i1l6327 01BA  
                                    i1l6511 17E5                                      i1l7071 048C  
                                    i1l6329 01BC                                      i1l6281 0DCC  
                                    i1l6273 0DB9                                      i1l4489 0E9E  
                                    i1l3947 0A01                                      i1l3955 0A1A  
                                    i1l4819 095F                                      i1l6371 025D  
                                    i1l6355 022B                                      i1l6291 0DE2  
                                    i1l6515 17F4                                      i1l3957 0A1E  
                                    i1l3965 0A37                                      i1l4773 12BC  
                                    i1l7245 122F                                      i1l6381 0290  
                                    i1l6365 024A                                      i1l6357 0237  
                                    i1l6349 0215                                      i1l3973 107B  
                                    i1l7077 04A2                                      i1l7247 1249  
                                    i1l6391 02AC                                      i1l6383 0296  
                                    i1l6367 0251                                      i1l7079 04B1  
                                    i1l4785 12E8                                      i1l6297 0DF8  
                                    i1l6395 02D1                                      i1l6397 02DC  
                                    i1l6485 17AF                                      i1l4799 0916  
                                    i1l6487 17B2                                      i1l6497 17C1  
                                    i1l6489 17B5                                      i1l6921 1184  
                                    i1l6499 17C4                                      i1l6923 118D  
                                    i1l6941 1518                                      i1l6943 151B  
                                    i1l6939 1515                                      i1l6993 03EF  
                                    u423_25 0F72                                      u505_25 0674  
                                    u290_25 1370                                      u291_25 1376  
                                    u292_25 137E                                      u376_25 1665  
                                    _OSCCON 0099                                      u734_25 14DE  
                                    _PLLRDY 04D6                               CDCTxService@i 00BA  
                                    _WDTCON 0097                i1USBTransferOnePacket@handle 0079  
                 __size_of_process_gpio_cmd 0057                              __CFG_PWRTE$OFF 0000  
                         _shortPacketStatus 00DD           __end_ofi1_USBCtrlEPAllowDataStage 168A  
                    ?i1_USBStdGetDscHandler 0070                             USBDeviceTasks@i 016F  
               USBStdFeatureReqHandler@pUEP 0167                    USBTransferOnePacket@data 00AF  
                USBCtrlTrfInHandler@lastDTS 00B3                             ??_USBDeviceInit 00AE  
                              ?_putUSBUSART 00AE                              __CFG_STVREN$ON 0000  
                      __end_of_getsUSBUSART 16E5               __size_ofi1_USBWakeFromSuspend 0020  
                       gpio_task@usb_rx_buf 02A0                         gpio_task@usb_tx_buf 0320  
                         _USBEnableEndpoint 11B0             __size_of_USBStdGetStatusHandler 0058  
                   ??i1_USBStdSetCfgHandler 005E                                      _memset 10A7  
             __size_ofi1_USBCheckCDCRequest 0060                        i1USBEnableEndpoint@p 007A  
                        ?_USBEnableEndpoint 00B5               __size_of_USBTransferOnePacket 0081  
                              _CDCTxService 04BD                             ?_WDT_Initialize 0070  
                       ??_USBEnableEndpoint 00B6                            __end_of_usb_task 1043  
              i1USBConfigureEndpoint@handle 0076                  __end_ofi1_USBCtrlEPService 1526  
                               _CtrlTrfData 0060                           i1_USBStallHandler 11D3  
                      _controlTransferState 00DC                           _SYSTEM_Initialize 1043  
                   __end_of__initialization 0049                  i1USBTransferOnePacket@data 0071  
                        ?i1_USBStallHandler 0070                    i1_USBCtrlTrfSetupHandler 13EB  
                      __size_ofi1_CDCInitEP 0035                          ?_SYSTEM_Initialize 0070  
                  __size_of_USBStallHandler 0027                              __pcstackBANK0h 0058  
                    i1USBCtrlTrfRxService@i 0074                         __size_of_USBSuspend 001F  
                            __pcstackCOMMON 0070                   __end_of_USBEnableEndpoint 11D3  
                       ??i1_USBStallHandler 0070                               __end_of_sd000 1899  
                             __end_of_sd001 187D                               __end_of_sd002 186B  
                ??i1_USBStdGetStatusHandler 0070                         ??_SYSTEM_Initialize 00B3  
          __size_of_USBCtrlEPAllowDataStage 005B               __size_of_USBConfigureEndpoint 0042  
                   __end_ofi1_USBDeviceInit 06F2                 __end_of_USBCtrlTrfInHandler 09C9  
                    ??i1_USBCheckStdRequest 00A5                              _OPTION_REGbits 0095  
                                 ?i1_memset 0070                                  _cdc_notice 0120  
                                _cdc_rx_len 0155                                  _cdc_tx_len 0153  
                 __end_ofi1_USBStallHandler 11F8                    ??_USBCtrlTrfSetupHandler 00C5  
                   _USBTicksSinceSuspendEnd 0146                            ?_USBDeviceAttach 0070  
                 __end_of_SYSTEM_Initialize 1052                      _USBStdGetStatusHandler 157D  
                                __pbssBANK1 00C6                                  __pbssBANK2 0120  
                                __pbssBANK3 01A0                                  __pbssBANK4 0220  
                                __pbssBANK5 02A0                                  __pbssBANK6 0320  
                        __size_of_gpio_init 0004                          __size_of_gpio_task 0040  
                          i1_USBDeviceTasks 03E0                 __size_of_USBWakeFromSuspend 0020  
                             ?i1_USBSuspend 0070                                 _pBDTEntryIn 00CD  
          __end_of_USBCtrlEPServiceComplete 0F63                       i1_USBCtrlTrfInHandler 08F9  
              ??i1_USBCtrlEPServiceComplete 0075                 __size_of_USBCheckCDCRequest 0061  
                                __pmaintext 1052                        USBCtrlTrfRxService@i 00B2  
                           __CFG_PLLMULT$3x 0000                                  __pintentry 0004  
              __size_ofi1_USBEnableEndpoint 0020                                     ?_memset 00AE  
                                _device_dsc 187D                            _USBCtrlEPService 15D5  
                                _ep_data_in 013B                 __end_of_USBCtrlTrfRxService 078F  
                        _USBCheckStdRequest 0838                           _configDescriptor1 1800  
                                ??i1_memset 0076                 __end_of_USBCtrlTrfTxService 0AAD  
                       _USBStdSetCfgHandler 0D20                                     _OSCTUNE 0098  
                                   u736_2m0 1511                         ?_USBCheckStdRequest 0070  
              __size_of_USBStdGetDscHandler 007F                                     _UIEbits 0E92  
       __size_ofi1_USBCtrlEPServiceComplete 0092                                     _UIRbits 0E90  
                             _cdc_trf_state 0154                    ??i1_USBTransferOnePacket 0074  
                          _process_gpio_cmd 1526                              ??i1_USBSuspend 005E  
                                   _pCDCDst 0142                                     _pCDCSrc 0144  
                     __size_of_getsUSBUSART 005B                 ??i1_USBCtrlEPAllowDataStage 0073  
           ??_USBIncrement1msInternalTimers 00AE                        ?_USBStdSetCfgHandler 0070  
                                 _CDCInitEP 12EB                i1USBCtrlTrfInHandler@lastDTS 0075  
                __size_of_USBEnableEndpoint 0023                        ??_USBCheckStdRequest 00C4  
                     i1_USBCtrlTrfRxService 0F63               __size_of_USBCtrlTrfOutHandler 0037  
                          ??_USBDeviceTasks 01E0                           ??_USBStallHandler 00AE  
                                 ?_usb_task 0070                            ?i1_USBDeviceInit 0070  
                     i1_USBCtrlTrfTxService 09C9                        __size_of_putUSBUSART 001A  
                        getsUSBUSART@buffer 00BC                             __size_of_memset 0019  
                 __end_of_configDescriptor1 1843                                     __ptext1 1035  
                                   __ptext2 02F7                                     __ptext3 1190  
                                   __ptext4 1131                                     __ptext5 11F8  
                                   __ptext6 10F6                                     __ptext7 15D5  
                                   __ptext8 1433                                     __ptext9 0ED1  
                                   _inPipes 00D3                           __end_of_gpio_init 1FF0  
               _USBDeferOUTDataStagePackets 0147                           __end_of_gpio_task 1368  
                     _OSCILLATOR_Initialize 1FF6                                ??_USBSuspend 00C2  
                  ??_PIN_MANAGER_Initialize 00AE                       i1USBEnableEndpoint@ep 007C  
                __size_ofi1_USBStallHandler 0025                          __end_of_USB_CD_Ptr 189B  
                __size_of_SYSTEM_Initialize 000F             __size_of_USBCtrlTrfSetupHandler 0048  
                                   clrloop0 1FF1                    ??i1_USBConfigureEndpoint 0071  
                      end_of_initialization 0049                                _getsUSBUSART 168A  
                        __end_of_USB_SD_Ptr 1895                         _pBDTEntryEP0OutNext 00D8  
                                   memset@c 00B0                                     memset@n 00B2  
                                   memset@p 00B4                             _USB1msTickCount 0130  
           _dummy_encapsulated_cmd_response 0156                     ??i1_USBStdGetDscHandler 0070  
                  ?_USBStdFeatureReqHandler 0070                      ?i1_USBCtrlTrfInHandler 0070  
                     ??_USBStdSetCfgHandler 00C2                                  ?_CDCInitEP 0070  
                        __end_of_USBSuspend 1150                     _USBCtrlEPAllowDataStage 16E5  
                                ??_usb_task 00C6                    _USBCtrlEPServiceComplete 0ED1  
                _USBStatusStageEnabledFlag1 014A                  _USBStatusStageEnabledFlag2 0149  
                          ??_WDT_Initialize 00AE                          USBEnableEndpoint@p 00B8  
                       process_gpio_cmd@cmd 00B2              __size_ofi1_USBStdSetCfgHandler 0091  
                       process_gpio_cmd@rsp 00AE               __end_ofi1_USBStdSetCfgHandler 0E3F  
                 i1_USBCtrlEPAllowDataStage 162F                            __CFG_FOSC$INTOSC 0000  
                        _BothEP0OutUOWNsSet 014C                  ??i1_USBCtrlTrfSetupHandler 00A6  
                 USBStdSetCfgHandler@i_2174 0169                __end_ofi1_USBWakeFromSuspend 1190  
                 USBConfigureEndpoint@EPNum 00B3                ?i1_USBCtrlEPAllowStatusStage 0070  
                ?_USBCtrlEPAllowStatusStage 0070                __end_ofi1_USBCheckCDCRequest 17A0  
     i1USER_USB_CALLBACK_EVENT_HANDLER@size 005C         USER_USB_CALLBACK_EVENT_HANDLER@size 00C0  
                                 _USTATcopy 00E0                    i1USBTransferOnePacket@ep 0078  
              __end_of_USBTransferOnePacket 0D20             __size_ofi1_USBTransferOnePacket 0080  
        __end_ofi1_USBCtrlEPServiceComplete 0ED1                  i1_USBCtrlEPServiceComplete 0E3F  
                         putUSBUSART@length 00AE                          i1_USBCtrlEPService 14CF  
                        __CFG_PLLEN$ENABLED 0000                       i1USBDeviceInit@i_1509 0073  
                    ?i1_USBCtrlTrfRxService 0070                    process_gpio_cmd@cmd_type 00B0  
                    _USBCtrlTrfSetupHandler 1433                      ?i1_USBCtrlTrfTxService 0070  
                     __end_of_USBDeviceInit 0645       __end_of_USBIncrement1msInternalTimers 1112  
    __size_of_USBIncrement1msInternalTimers 001C               _USBIncrement1msInternalTimers 10F6  
                                 i1memset@c 0072                                   i1memset@n 0074  
                                 i1memset@p 0076                         ?i1_USBCtrlEPService 0070  
                  process_gpio_cmd@gpio_dir 0150                      ?_OSCILLATOR_Initialize 0070  
                            __end_of_memset 10C0                           _USBBusIsSuspended 014D  
                      __end_ofi1_USBSuspend 1131                    __end_ofi1_USBDeviceTasks 04BD  
                       start_initialization 001A                     ?_USBStdGetStatusHandler 0070  
             USBCtrlTrfRxService@byteToRead 00B3             __size_of_PIN_MANAGER_Initialize 0015  
                  ??i1_USBCtrlTrfOutHandler 0076                           __size_ofi1_memset 0018  
                               _cdc_data_rx 01A0                                 _cdc_data_tx 0220  
              __end_of_USBConfigureEndpoint 13EB             __end_of_USBStdFeatureReqHandler 01A4  
                       i1_USBEnableEndpoint 1150             __size_ofi1_USBConfigureEndpoint 0041  
                             ??i1_CDCInitEP 007D           __end_of_USBCtrlEPAllowStatusStage 0B21  
                      ??i1_USBCtrlEPService 00A7               ??i1_USBCtrlEPAllowStatusStage 0070  
                  __end_of_USBCtrlEPService 162F               i1USBStdFeatureReqHandler@pUEP 00A0  
                 ??_USBCtrlEPAllowDataStage 00B1                                 ??_CDCInitEP 00BB  
                            USBDeviceInit@i 00B2                              USBDeviceInit@p 00AF  
               i1USBStdSetCfgHandler@i_2174 00A2                      _pBDTEntryEP0OutCurrent 00DE  
        __size_ofi1_USBStdFeatureReqHandler 0153                     USBTransferOnePacket@dir 00AE  
                   USBTransferOnePacket@len 00B1                  ?i1_USBStdFeatureReqHandler 0070  
               i1USBConfigureEndpoint@EPNum 0075                         _USBStdGetDscHandler 0BA0  
                      ?i1_USBEnableEndpoint 0077                                    ??_memset 00B4  
                    i1_USBTransferOnePacket 0C1F                    __end_of_process_gpio_cmd 157D  
             __size_ofi1_USBCheckStdRequest 0060                      _USBActiveConfiguration 00E1  
            __end_of_USBStdGetStatusHandler 15D5                   i1USBTransferOnePacket@dir 0070  
                 i1USBTransferOnePacket@len 0073                                   ___latbits 0002  
                             __pcstackBANK1 00A0                               __pcstackBANK2 0167  
                             __pcstackBANK3 01E0                __size_of_USBCtrlTrfInHandler 0068  
         __size_ofi1_USBStdGetStatusHandler 0054                   ?i1_USBStdGetStatusHandler 0070  
                      ?_USBStdGetDscHandler 0070                  __end_of_USBWakeFromSuspend 11B0  
                           _USBStallHandler 11F8                                _pBDTEntryOut 012A  
                __end_of_USBCheckCDCRequest 08F9                    __size_of_USBDeviceAttach 001C  
                       __end_ofi1_CDCInitEP 12B4                      _PIN_MANAGER_Initialize 1062  
                     ??i1_USBEnableEndpoint 0078                      i1_USBConfigureEndpoint 1368  
         __end_ofi1_USBStdFeatureReqHandler 02F7                        i1_USBWakeFromSuspend 1170  
      __size_ofi1_USBCtrlEPAllowStatusStage 0070                        i1_USBCheckCDCRequest 1740  
              ??_INTERRUPT_InterruptManager 00AD                                   __pswtext1 1000  
                                 __pswtext2 101A                           __size_of_usb_task 000E  
                      _USBTransferOnePacket 0C9F                                   _gpio_init 1FEC  
                                 _gpio_task 1328                __end_of_USBCtrlTrfOutHandler 0838  
                     ??_USBStdGetDscHandler 00AE                                 _ep_data_out 0138  
           __size_ofi1_USBCtrlTrfOutHandler 0037                __size_of_USBCtrlTrfRxService 009D  
             USBConfigureEndpoint@direction 00AE             i1USBCtrlTrfRxService@byteToRead 0075  
                   ??i1_USBCtrlTrfInHandler 0073                __size_of_USBCtrlTrfTxService 0072  
                ??_USBCtrlEPServiceComplete 00B3                                   clear_ram0 1FF0  
                                  _PIE2bits 0092              __size_ofi1_USBStdGetDscHandler 007F  
             __end_ofi1_USBStdGetDscHandler 0BA0         __size_of_INTERRUPT_InterruptManager 0014  
                                  _PIR2bits 0012                               ??_putUSBUSART 00AF  
                                  _UEP0bits 0E98                  _USBDeferINDataStagePackets 0148  
                     ?i1_USBWakeFromSuspend 0070                 __size_of_USBCheckStdRequest 0060  
                                  _UCONbits 0E8E                       ?i1_USBCheckCDCRequest 0070  
                      _USBConfigureEndpoint 13A9                       __size_ofi1_USBSuspend 001F  
          __size_of_USBStdFeatureReqHandler 0157                       ?_USBTransferOnePacket 00AE  
                             ?_CDCTxService 0070                                    i1_memset 1077  
                              _RemoteWakeup 014E                             gpio_task@rx_ptr 00C1  
                           gpio_task@tx_ptr 00C2                                  ?_gpio_init 0070  
                                ?_gpio_task 0070                    __size_ofi1_USBDeviceInit 00AD  
                   __end_of_USBStallHandler 121F                 ??_USBCtrlEPAllowStatusStage 00AE  
               __end_of_USBStdSetCfgHandler 0DAE                                 i1_CDCInitEP 127F  
                        __end_of_device_dsc 188F                     ??i1_USBCtrlTrfRxService 0072  
                         i1USBDeviceTasks@i 00AC                     ?_USBCtrlTrfSetupHandler 0070  
               ?i1_USBCtrlEPServiceComplete 0070                                i1_USBSuspend 1112  
                   USBStdGetStatusHandler@p 00AF                     ??i1_USBCtrlTrfTxService 0070  
                    USBTransferOnePacket@ep 00B6                      i1_USBCtrlTrfOutHandler 12B4  
                                  _SetupPkt 0050                     ??_OSCILLATOR_Initialize 00AE  
                     ?_USBConfigureEndpoint 00AE                           ??_USBDeviceAttach 00AE  
                 i1USBStdGetStatusHandler@p 0071                         __end_of_putUSBUSART 10DA  
                               _line_coding 015E                              ??_CDCTxService 00B9  
                     i1_USBStdSetCfgHandler 0DAE                           ?i1_USBDeviceTasks 0070  
                   __size_of_USBDeviceTasks 00E9                                    __ptext10 16E5  
                                  __ptext11 0838                                    __ptext20 11B0  
                                  __ptext12 0D20                                    __ptext21 13A9  
                                  __ptext13 10A7                                    __ptext30 1526  
                                  __ptext22 0801                                    __ptext14 157D  
                                  __ptext31 168A                                    __ptext23 06F2  
                                  __ptext15 0BA0                                    __ptext32 0C9F  
                                  __ptext24 0AAD                                    __ptext16 004D  
                                  __ptext41 03E0                                    __ptext33 1FEC  
                                  __ptext25 0961                                    __ptext17 124F  
                                  __ptext50 162F                                    __ptext42 1170  
                                  __ptext34 1043                                    __ptext26 0A3B  
                                  __ptext18 0898                                    __ptext51 17A0  
                                  __ptext43 1112                                    __ptext35 1FE8  
                                  __ptext27 04BD                                    __ptext19 12EB  
                                  __ptext60 0C1F                                    __ptext52 0DAE  
                                  __ptext44 11D3                                    __ptext36 058F  
                                  __ptext28 1328                                    __ptext61 1150  
                                  __ptext53 1077                                    __ptext45 108F  
                                  __ptext37 10DA                                    __ptext29 10C0  
                                  __ptext62 1368                                    __ptext54 147B  
                                  __ptext46 0645                                    __ptext38 1062  
                                  __ptext63 12B4                                    __ptext55 0B21  
                                  __ptext47 14CF                                    __ptext39 1FF6  
                                  __ptext64 0F63                                    __ptext56 01A4  
                                  __ptext48 13EB                                    __ptext65 078F  
                                  __ptext57 121F                                    __ptext49 0E3F  
                                  __ptext66 08F9                                    __ptext58 1740  
                                  __ptext67 09C9                                    __ptext59 127F  
                        ??i1_USBDeviceTasks 00AA              __end_of_USBCtrlTrfSetupHandler 147B  
                             __size_of_main 0010                           ?_USBCtrlEPService 0070  
           i1USBConfigureEndpoint@direction 0070                          ??_USBCtrlEPService 016C  
                       _USBCtrlTrfInHandler 0961           __size_ofi1_USBCtrlTrfSetupHandler 0048  
                    ??i1_USBWakeFromSuspend 005E                   ?i1_USBCtrlTrfSetupHandler 0070  
                         process_gpio_cmd@i 00B1                                    _outPipes 00C6  
               ??i1_USBStdFeatureReqHandler 005E                      ??i1_USBCheckCDCRequest 0070  
                      _USBCtrlTrfOutHandler 0801                                    int$flags 007E  
                   ?i1_USBTransferOnePacket 0070                   _USBCtrlEPAllowStatusStage 0AAD  
                                  _usb_task 1035            __end_ofi1_USBStdGetStatusHandler 14CF  
        __end_of_INTERRUPT_InterruptManager 0018                  _INTERRUPT_InterruptManager 0004  
                    ??_USBTransferOnePacket 00B2                   _USBDeferStatusStagePacket 00DA  
                  CDCTxService@byte_to_send 00BB                           ?_process_gpio_cmd 00AE  
                          i1USBDeviceInit@i 0074                            i1USBDeviceInit@p 0071  
                                _INTCONbits 000B                        ?_USBCtrlTrfInHandler 0070  
                               ??_gpio_init 00AE                          ??_process_gpio_cmd 00AF  
                               ??_gpio_task 00BD               USBCtrlTrfTxService@byteToSend 00B0  
                                  memset@p1 00AE                            ?_USBStallHandler 0070  
                  USBStdFeatureReqHandler@p 016A                     __size_of_WDT_Initialize 0004  
                                  intlevel1 0000                      __size_of_USBDeviceInit 00B6  
               __size_ofi1_USBCtrlEPService 0057   __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 124F  
__size_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 0030     __end_of_USER_USB_CALLBACK_EVENT_HANDLER 127F  
  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0030          ?i1_USER_USB_CALLBACK_EVENT_HANDLER 0058  
       ??i1_USER_USB_CALLBACK_EVENT_HANDLER 007E           ??_USER_USB_CALLBACK_EVENT_HANDLER 00C2  
          ?_USER_USB_CALLBACK_EVENT_HANDLER 00BC           i1_USER_USB_CALLBACK_EVENT_HANDLER 121F  
           _USER_USB_CALLBACK_EVENT_HANDLER 124F                           ??i1_USBDeviceInit 0070  
              __end_ofi1_USBCheckStdRequest 1800                     ?_PIN_MANAGER_Initialize 0070  
                         __CFG_CLKOUTEN$OFF 0000                     ?i1_USBConfigureEndpoint 0070  
            __end_ofi1_USBTransferOnePacket 0C9F                      ??_USBConfigureEndpoint 00AF  
                     ?_USBCtrlTrfOutHandler 0070                                 _putUSBUSART 10C0  
                      __CFG_CPUDIV$NOCLKDIV 0000                         _USBCtrlTrfRxService 06F2  
                        _USBWakeFromSuspend 1190                     _USBStdFeatureReqHandler 004D  
                        _USBCheckCDCRequest 0898                         _USBCtrlTrfTxService 0A3B  
                             __pstringtext1 188F                               __pstringtext2 1899  
                             __pstringtext3 1800                               __pstringtext4 1843  
                             __pstringtext5 186B                               __pstringtext6 187D  
                             __pstringtext7 1895                  i1USBStdFeatureReqHandler@p 00A3  
                    ?i1_USBStdSetCfgHandler 0070                      i1USBStdSetCfgHandler@i 00A3  
                    i1USBStdSetCfgHandler@p 00A0                         ?_USBWakeFromSuspend 0070  
                     ??_USBCtrlTrfInHandler 00B1                       _USBAlternateInterface 0165  
                       ?_USBCheckCDCRequest 0070                         USBEnableEndpoint@ep 00BA  
                 i1_USBStdFeatureReqHandler 01A4                             _endpoint_number 00DB  
       __end_ofi1_USBCtrlEPAllowStatusStage 07FF                 i1_USBCtrlEPAllowStatusStage 078F  
                      ?_USBCtrlTrfRxService 0070                               ?_getsUSBUSART 00B9  
            __end_of_PIN_MANAGER_Initialize 1077                    ?_USBCtrlEPAllowDataStage 0070  
                      ?_USBCtrlTrfTxService 0070              __size_ofi1_USBCtrlTrfInHandler 0068  
              _USBStatusStageTimeoutCounter 014B               __end_ofi1_USBCtrlTrfInHandler 0961  
            __end_ofi1_USBConfigureEndpoint 13A9                        ??_USBWakeFromSuspend 00C2  
               __end_ofi1_USBEnableEndpoint 1170                  USBTransferOnePacket@handle 00B7  
                      __end_of_CDCTxService 058F                        ??_USBCheckCDCRequest 00AE  
                                _USB_CD_Ptr 1899  
