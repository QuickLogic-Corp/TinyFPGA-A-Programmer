

Microchip Technology PIC PRO Macro Assembler V1.42 build -159332390 
                                                                                               Mon Sep 04 12:02:35 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    22                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    23                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    24                           	psect	inittext,global,class=CODE,delta=2
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    29                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    30                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext1,local,class=CONST,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	swtext2,local,class=CONST,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	swtext3,local,class=CONST,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	swtext4,local,class=CONST,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text49,local,class=CODE,merge=1,delta=2
    46                           	psect	text50,local,class=CODE,merge=1,delta=2
    47                           	psect	swtext5,local,class=CONST,delta=2
    48                           	psect	text53,local,class=CODE,merge=1,delta=2
    49                           	psect	text55,local,class=CODE,merge=1,delta=2
    50                           	psect	text56,local,class=CODE,merge=1,delta=2
    51                           	psect	swtext6,local,class=CONST,delta=2
    52                           	psect	text59,local,class=CODE,merge=1,delta=2
    53                           	psect	swtext7,local,class=CONST,delta=2
    54                           	psect	text60,local,class=CODE,merge=1,delta=2
    55                           	psect	text64,local,class=CODE,merge=1,delta=2
    56                           	psect	pa_nodes0,global,class=CODE,delta=2
    57                           	dabs	1,0x20,48,_BDT
    58                           	dabs	1,0x50,8,_SetupPkt
    59                           	dabs	1,0x60,16,_CtrlTrfData
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 1.42
    63                           ; Generated 13/04/2017 GMT
    64                           ; 
    65                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F1455 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000E                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  008C                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010E                     	;# 
   139  0111                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0115                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0118                     	;# 
   147  0119                     	;# 
   148  011D                     	;# 
   149  018C                     	;# 
   150  018E                     	;# 
   151  0191                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  020C                     	;# 
   169  0211                     	;# 
   170  0211                     	;# 
   171  0212                     	;# 
   172  0212                     	;# 
   173  0213                     	;# 
   174  0213                     	;# 
   175  0214                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0216                     	;# 
   181  0216                     	;# 
   182  0217                     	;# 
   183  0217                     	;# 
   184  0391                     	;# 
   185  0392                     	;# 
   186  0393                     	;# 
   187  039A                     	;# 
   188  039B                     	;# 
   189  0611                     	;# 
   190  0612                     	;# 
   191  0613                     	;# 
   192  0613                     	;# 
   193  0614                     	;# 
   194  0615                     	;# 
   195  0616                     	;# 
   196  0616                     	;# 
   197  0691                     	;# 
   198  0692                     	;# 
   199  0693                     	;# 
   200  0694                     	;# 
   201  0695                     	;# 
   202  0E8E                     	;# 
   203  0E8F                     	;# 
   204  0E90                     	;# 
   205  0E91                     	;# 
   206  0E92                     	;# 
   207  0E93                     	;# 
   208  0E94                     	;# 
   209  0E94                     	;# 
   210  0E95                     	;# 
   211  0E96                     	;# 
   212  0E97                     	;# 
   213  0E98                     	;# 
   214  0E99                     	;# 
   215  0E9A                     	;# 
   216  0E9B                     	;# 
   217  0E9C                     	;# 
   218  0E9D                     	;# 
   219  0E9E                     	;# 
   220  0E9F                     	;# 
   221  0FE4                     	;# 
   222  0FE5                     	;# 
   223  0FE6                     	;# 
   224  0FE7                     	;# 
   225  0FE8                     	;# 
   226  0FE9                     	;# 
   227  0FEA                     	;# 
   228  0FEB                     	;# 
   229  0FED                     	;# 
   230  0FEE                     	;# 
   231  0FEF                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000E                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  008C                     	;# 
   258  008E                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  010C                     	;# 
   274  010E                     	;# 
   275  0111                     	;# 
   276  0112                     	;# 
   277  0113                     	;# 
   278  0114                     	;# 
   279  0115                     	;# 
   280  0116                     	;# 
   281  0117                     	;# 
   282  0118                     	;# 
   283  0119                     	;# 
   284  011D                     	;# 
   285  018C                     	;# 
   286  018E                     	;# 
   287  0191                     	;# 
   288  0191                     	;# 
   289  0192                     	;# 
   290  0193                     	;# 
   291  0193                     	;# 
   292  0194                     	;# 
   293  0195                     	;# 
   294  0196                     	;# 
   295  0197                     	;# 
   296  0199                     	;# 
   297  019A                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019C                     	;# 
   301  019D                     	;# 
   302  019E                     	;# 
   303  019F                     	;# 
   304  020C                     	;# 
   305  0211                     	;# 
   306  0211                     	;# 
   307  0212                     	;# 
   308  0212                     	;# 
   309  0213                     	;# 
   310  0213                     	;# 
   311  0214                     	;# 
   312  0214                     	;# 
   313  0215                     	;# 
   314  0215                     	;# 
   315  0215                     	;# 
   316  0216                     	;# 
   317  0216                     	;# 
   318  0217                     	;# 
   319  0217                     	;# 
   320  0391                     	;# 
   321  0392                     	;# 
   322  0393                     	;# 
   323  039A                     	;# 
   324  039B                     	;# 
   325  0611                     	;# 
   326  0612                     	;# 
   327  0613                     	;# 
   328  0613                     	;# 
   329  0614                     	;# 
   330  0615                     	;# 
   331  0616                     	;# 
   332  0616                     	;# 
   333  0691                     	;# 
   334  0692                     	;# 
   335  0693                     	;# 
   336  0694                     	;# 
   337  0695                     	;# 
   338  0E8E                     	;# 
   339  0E8F                     	;# 
   340  0E90                     	;# 
   341  0E91                     	;# 
   342  0E92                     	;# 
   343  0E93                     	;# 
   344  0E94                     	;# 
   345  0E94                     	;# 
   346  0E95                     	;# 
   347  0E96                     	;# 
   348  0E97                     	;# 
   349  0E98                     	;# 
   350  0E99                     	;# 
   351  0E9A                     	;# 
   352  0E9B                     	;# 
   353  0E9C                     	;# 
   354  0E9D                     	;# 
   355  0E9E                     	;# 
   356  0E9F                     	;# 
   357  0FE4                     	;# 
   358  0FE5                     	;# 
   359  0FE6                     	;# 
   360  0FE7                     	;# 
   361  0FE8                     	;# 
   362  0FE9                     	;# 
   363  0FEA                     	;# 
   364  0FEB                     	;# 
   365  0FED                     	;# 
   366  0FEE                     	;# 
   367  0FEF                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000E                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0016                     	;# 
   387  0017                     	;# 
   388  0018                     	;# 
   389  0019                     	;# 
   390  001A                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  008C                     	;# 
   394  008E                     	;# 
   395  0091                     	;# 
   396  0092                     	;# 
   397  0095                     	;# 
   398  0096                     	;# 
   399  0097                     	;# 
   400  0098                     	;# 
   401  0099                     	;# 
   402  009A                     	;# 
   403  009B                     	;# 
   404  009B                     	;# 
   405  009C                     	;# 
   406  009D                     	;# 
   407  009E                     	;# 
   408  009F                     	;# 
   409  010C                     	;# 
   410  010E                     	;# 
   411  0111                     	;# 
   412  0112                     	;# 
   413  0113                     	;# 
   414  0114                     	;# 
   415  0115                     	;# 
   416  0116                     	;# 
   417  0117                     	;# 
   418  0118                     	;# 
   419  0119                     	;# 
   420  011D                     	;# 
   421  018C                     	;# 
   422  018E                     	;# 
   423  0191                     	;# 
   424  0191                     	;# 
   425  0192                     	;# 
   426  0193                     	;# 
   427  0193                     	;# 
   428  0194                     	;# 
   429  0195                     	;# 
   430  0196                     	;# 
   431  0197                     	;# 
   432  0199                     	;# 
   433  019A                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019C                     	;# 
   437  019D                     	;# 
   438  019E                     	;# 
   439  019F                     	;# 
   440  020C                     	;# 
   441  0211                     	;# 
   442  0211                     	;# 
   443  0212                     	;# 
   444  0212                     	;# 
   445  0213                     	;# 
   446  0213                     	;# 
   447  0214                     	;# 
   448  0214                     	;# 
   449  0215                     	;# 
   450  0215                     	;# 
   451  0215                     	;# 
   452  0216                     	;# 
   453  0216                     	;# 
   454  0217                     	;# 
   455  0217                     	;# 
   456  0391                     	;# 
   457  0392                     	;# 
   458  0393                     	;# 
   459  039A                     	;# 
   460  039B                     	;# 
   461  0611                     	;# 
   462  0612                     	;# 
   463  0613                     	;# 
   464  0613                     	;# 
   465  0614                     	;# 
   466  0615                     	;# 
   467  0616                     	;# 
   468  0616                     	;# 
   469  0691                     	;# 
   470  0692                     	;# 
   471  0693                     	;# 
   472  0694                     	;# 
   473  0695                     	;# 
   474  0E8E                     	;# 
   475  0E8F                     	;# 
   476  0E90                     	;# 
   477  0E91                     	;# 
   478  0E92                     	;# 
   479  0E93                     	;# 
   480  0E94                     	;# 
   481  0E94                     	;# 
   482  0E95                     	;# 
   483  0E96                     	;# 
   484  0E97                     	;# 
   485  0E98                     	;# 
   486  0E99                     	;# 
   487  0E9A                     	;# 
   488  0E9B                     	;# 
   489  0E9C                     	;# 
   490  0E9D                     	;# 
   491  0E9E                     	;# 
   492  0E9F                     	;# 
   493  0FE4                     	;# 
   494  0FE5                     	;# 
   495  0FE6                     	;# 
   496  0FE7                     	;# 
   497  0FE8                     	;# 
   498  0FE9                     	;# 
   499  0FEA                     	;# 
   500  0FEB                     	;# 
   501  0FED                     	;# 
   502  0FEE                     	;# 
   503  0FEF                     	;# 
   504  0000                     	;# 
   505  0001                     	;# 
   506  0002                     	;# 
   507  0003                     	;# 
   508  0004                     	;# 
   509  0005                     	;# 
   510  0006                     	;# 
   511  0007                     	;# 
   512  0008                     	;# 
   513  0009                     	;# 
   514  000A                     	;# 
   515  000B                     	;# 
   516  000C                     	;# 
   517  000E                     	;# 
   518  0011                     	;# 
   519  0012                     	;# 
   520  0015                     	;# 
   521  0016                     	;# 
   522  0016                     	;# 
   523  0017                     	;# 
   524  0018                     	;# 
   525  0019                     	;# 
   526  001A                     	;# 
   527  001B                     	;# 
   528  001C                     	;# 
   529  008C                     	;# 
   530  008E                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009A                     	;# 
   539  009B                     	;# 
   540  009B                     	;# 
   541  009C                     	;# 
   542  009D                     	;# 
   543  009E                     	;# 
   544  009F                     	;# 
   545  010C                     	;# 
   546  010E                     	;# 
   547  0111                     	;# 
   548  0112                     	;# 
   549  0113                     	;# 
   550  0114                     	;# 
   551  0115                     	;# 
   552  0116                     	;# 
   553  0117                     	;# 
   554  0118                     	;# 
   555  0119                     	;# 
   556  011D                     	;# 
   557  018C                     	;# 
   558  018E                     	;# 
   559  0191                     	;# 
   560  0191                     	;# 
   561  0192                     	;# 
   562  0193                     	;# 
   563  0193                     	;# 
   564  0194                     	;# 
   565  0195                     	;# 
   566  0196                     	;# 
   567  0197                     	;# 
   568  0199                     	;# 
   569  019A                     	;# 
   570  019B                     	;# 
   571  019B                     	;# 
   572  019C                     	;# 
   573  019D                     	;# 
   574  019E                     	;# 
   575  019F                     	;# 
   576  020C                     	;# 
   577  0211                     	;# 
   578  0211                     	;# 
   579  0212                     	;# 
   580  0212                     	;# 
   581  0213                     	;# 
   582  0213                     	;# 
   583  0214                     	;# 
   584  0214                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0215                     	;# 
   588  0216                     	;# 
   589  0216                     	;# 
   590  0217                     	;# 
   591  0217                     	;# 
   592  0391                     	;# 
   593  0392                     	;# 
   594  0393                     	;# 
   595  039A                     	;# 
   596  039B                     	;# 
   597  0611                     	;# 
   598  0612                     	;# 
   599  0613                     	;# 
   600  0613                     	;# 
   601  0614                     	;# 
   602  0615                     	;# 
   603  0616                     	;# 
   604  0616                     	;# 
   605  0691                     	;# 
   606  0692                     	;# 
   607  0693                     	;# 
   608  0694                     	;# 
   609  0695                     	;# 
   610  0E8E                     	;# 
   611  0E8F                     	;# 
   612  0E90                     	;# 
   613  0E91                     	;# 
   614  0E92                     	;# 
   615  0E93                     	;# 
   616  0E94                     	;# 
   617  0E94                     	;# 
   618  0E95                     	;# 
   619  0E96                     	;# 
   620  0E97                     	;# 
   621  0E98                     	;# 
   622  0E99                     	;# 
   623  0E9A                     	;# 
   624  0E9B                     	;# 
   625  0E9C                     	;# 
   626  0E9D                     	;# 
   627  0E9E                     	;# 
   628  0E9F                     	;# 
   629  0FE4                     	;# 
   630  0FE5                     	;# 
   631  0FE6                     	;# 
   632  0FE7                     	;# 
   633  0FE8                     	;# 
   634  0FE9                     	;# 
   635  0FEA                     	;# 
   636  0FEB                     	;# 
   637  0FED                     	;# 
   638  0FEE                     	;# 
   639  0FEF                     	;# 
   640  0000                     	;# 
   641  0001                     	;# 
   642  0002                     	;# 
   643  0003                     	;# 
   644  0004                     	;# 
   645  0005                     	;# 
   646  0006                     	;# 
   647  0007                     	;# 
   648  0008                     	;# 
   649  0009                     	;# 
   650  000A                     	;# 
   651  000B                     	;# 
   652  000C                     	;# 
   653  000E                     	;# 
   654  0011                     	;# 
   655  0012                     	;# 
   656  0015                     	;# 
   657  0016                     	;# 
   658  0016                     	;# 
   659  0017                     	;# 
   660  0018                     	;# 
   661  0019                     	;# 
   662  001A                     	;# 
   663  001B                     	;# 
   664  001C                     	;# 
   665  008C                     	;# 
   666  008E                     	;# 
   667  0091                     	;# 
   668  0092                     	;# 
   669  0095                     	;# 
   670  0096                     	;# 
   671  0097                     	;# 
   672  0098                     	;# 
   673  0099                     	;# 
   674  009A                     	;# 
   675  009B                     	;# 
   676  009B                     	;# 
   677  009C                     	;# 
   678  009D                     	;# 
   679  009E                     	;# 
   680  009F                     	;# 
   681  010C                     	;# 
   682  010E                     	;# 
   683  0111                     	;# 
   684  0112                     	;# 
   685  0113                     	;# 
   686  0114                     	;# 
   687  0115                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0118                     	;# 
   691  0119                     	;# 
   692  011D                     	;# 
   693  018C                     	;# 
   694  018E                     	;# 
   695  0191                     	;# 
   696  0191                     	;# 
   697  0192                     	;# 
   698  0193                     	;# 
   699  0193                     	;# 
   700  0194                     	;# 
   701  0195                     	;# 
   702  0196                     	;# 
   703  0197                     	;# 
   704  0199                     	;# 
   705  019A                     	;# 
   706  019B                     	;# 
   707  019B                     	;# 
   708  019C                     	;# 
   709  019D                     	;# 
   710  019E                     	;# 
   711  019F                     	;# 
   712  020C                     	;# 
   713  0211                     	;# 
   714  0211                     	;# 
   715  0212                     	;# 
   716  0212                     	;# 
   717  0213                     	;# 
   718  0213                     	;# 
   719  0214                     	;# 
   720  0214                     	;# 
   721  0215                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0216                     	;# 
   725  0216                     	;# 
   726  0217                     	;# 
   727  0217                     	;# 
   728  0391                     	;# 
   729  0392                     	;# 
   730  0393                     	;# 
   731  039A                     	;# 
   732  039B                     	;# 
   733  0611                     	;# 
   734  0612                     	;# 
   735  0613                     	;# 
   736  0613                     	;# 
   737  0614                     	;# 
   738  0615                     	;# 
   739  0616                     	;# 
   740  0616                     	;# 
   741  0691                     	;# 
   742  0692                     	;# 
   743  0693                     	;# 
   744  0694                     	;# 
   745  0695                     	;# 
   746  0E8E                     	;# 
   747  0E8F                     	;# 
   748  0E90                     	;# 
   749  0E91                     	;# 
   750  0E92                     	;# 
   751  0E93                     	;# 
   752  0E94                     	;# 
   753  0E94                     	;# 
   754  0E95                     	;# 
   755  0E96                     	;# 
   756  0E97                     	;# 
   757  0E98                     	;# 
   758  0E99                     	;# 
   759  0E9A                     	;# 
   760  0E9B                     	;# 
   761  0E9C                     	;# 
   762  0E9D                     	;# 
   763  0E9E                     	;# 
   764  0E9F                     	;# 
   765  0FE4                     	;# 
   766  0FE5                     	;# 
   767  0FE6                     	;# 
   768  0FE7                     	;# 
   769  0FE8                     	;# 
   770  0FE9                     	;# 
   771  0FEA                     	;# 
   772  0FEB                     	;# 
   773  0FED                     	;# 
   774  0FEE                     	;# 
   775  0FEF                     	;# 
   776  0000                     	;# 
   777  0001                     	;# 
   778  0002                     	;# 
   779  0003                     	;# 
   780  0004                     	;# 
   781  0005                     	;# 
   782  0006                     	;# 
   783  0007                     	;# 
   784  0008                     	;# 
   785  0009                     	;# 
   786  000A                     	;# 
   787  000B                     	;# 
   788  000C                     	;# 
   789  000E                     	;# 
   790  0011                     	;# 
   791  0012                     	;# 
   792  0015                     	;# 
   793  0016                     	;# 
   794  0016                     	;# 
   795  0017                     	;# 
   796  0018                     	;# 
   797  0019                     	;# 
   798  001A                     	;# 
   799  001B                     	;# 
   800  001C                     	;# 
   801  008C                     	;# 
   802  008E                     	;# 
   803  0091                     	;# 
   804  0092                     	;# 
   805  0095                     	;# 
   806  0096                     	;# 
   807  0097                     	;# 
   808  0098                     	;# 
   809  0099                     	;# 
   810  009A                     	;# 
   811  009B                     	;# 
   812  009B                     	;# 
   813  009C                     	;# 
   814  009D                     	;# 
   815  009E                     	;# 
   816  009F                     	;# 
   817  010C                     	;# 
   818  010E                     	;# 
   819  0111                     	;# 
   820  0112                     	;# 
   821  0113                     	;# 
   822  0114                     	;# 
   823  0115                     	;# 
   824  0116                     	;# 
   825  0117                     	;# 
   826  0118                     	;# 
   827  0119                     	;# 
   828  011D                     	;# 
   829  018C                     	;# 
   830  018E                     	;# 
   831  0191                     	;# 
   832  0191                     	;# 
   833  0192                     	;# 
   834  0193                     	;# 
   835  0193                     	;# 
   836  0194                     	;# 
   837  0195                     	;# 
   838  0196                     	;# 
   839  0197                     	;# 
   840  0199                     	;# 
   841  019A                     	;# 
   842  019B                     	;# 
   843  019B                     	;# 
   844  019C                     	;# 
   845  019D                     	;# 
   846  019E                     	;# 
   847  019F                     	;# 
   848  020C                     	;# 
   849  0211                     	;# 
   850  0211                     	;# 
   851  0212                     	;# 
   852  0212                     	;# 
   853  0213                     	;# 
   854  0213                     	;# 
   855  0214                     	;# 
   856  0214                     	;# 
   857  0215                     	;# 
   858  0215                     	;# 
   859  0215                     	;# 
   860  0216                     	;# 
   861  0216                     	;# 
   862  0217                     	;# 
   863  0217                     	;# 
   864  0391                     	;# 
   865  0392                     	;# 
   866  0393                     	;# 
   867  039A                     	;# 
   868  039B                     	;# 
   869  0611                     	;# 
   870  0612                     	;# 
   871  0613                     	;# 
   872  0613                     	;# 
   873  0614                     	;# 
   874  0615                     	;# 
   875  0616                     	;# 
   876  0616                     	;# 
   877  0691                     	;# 
   878  0692                     	;# 
   879  0693                     	;# 
   880  0694                     	;# 
   881  0695                     	;# 
   882  0E8E                     	;# 
   883  0E8F                     	;# 
   884  0E90                     	;# 
   885  0E91                     	;# 
   886  0E92                     	;# 
   887  0E93                     	;# 
   888  0E94                     	;# 
   889  0E94                     	;# 
   890  0E95                     	;# 
   891  0E96                     	;# 
   892  0E97                     	;# 
   893  0E98                     	;# 
   894  0E99                     	;# 
   895  0E9A                     	;# 
   896  0E9B                     	;# 
   897  0E9C                     	;# 
   898  0E9D                     	;# 
   899  0E9E                     	;# 
   900  0E9F                     	;# 
   901  0FE4                     	;# 
   902  0FE5                     	;# 
   903  0FE6                     	;# 
   904  0FE7                     	;# 
   905  0FE8                     	;# 
   906  0FE9                     	;# 
   907  0FEA                     	;# 
   908  0FEB                     	;# 
   909  0FED                     	;# 
   910  0FEE                     	;# 
   911  0FEF                     	;# 
   912  0000                     	;# 
   913  0001                     	;# 
   914  0002                     	;# 
   915  0003                     	;# 
   916  0004                     	;# 
   917  0005                     	;# 
   918  0006                     	;# 
   919  0007                     	;# 
   920  0008                     	;# 
   921  0009                     	;# 
   922  000A                     	;# 
   923  000B                     	;# 
   924  000C                     	;# 
   925  000E                     	;# 
   926  0011                     	;# 
   927  0012                     	;# 
   928  0015                     	;# 
   929  0016                     	;# 
   930  0016                     	;# 
   931  0017                     	;# 
   932  0018                     	;# 
   933  0019                     	;# 
   934  001A                     	;# 
   935  001B                     	;# 
   936  001C                     	;# 
   937  008C                     	;# 
   938  008E                     	;# 
   939  0091                     	;# 
   940  0092                     	;# 
   941  0095                     	;# 
   942  0096                     	;# 
   943  0097                     	;# 
   944  0098                     	;# 
   945  0099                     	;# 
   946  009A                     	;# 
   947  009B                     	;# 
   948  009B                     	;# 
   949  009C                     	;# 
   950  009D                     	;# 
   951  009E                     	;# 
   952  009F                     	;# 
   953  010C                     	;# 
   954  010E                     	;# 
   955  0111                     	;# 
   956  0112                     	;# 
   957  0113                     	;# 
   958  0114                     	;# 
   959  0115                     	;# 
   960  0116                     	;# 
   961  0117                     	;# 
   962  0118                     	;# 
   963  0119                     	;# 
   964  011D                     	;# 
   965  018C                     	;# 
   966  018E                     	;# 
   967  0191                     	;# 
   968  0191                     	;# 
   969  0192                     	;# 
   970  0193                     	;# 
   971  0193                     	;# 
   972  0194                     	;# 
   973  0195                     	;# 
   974  0196                     	;# 
   975  0197                     	;# 
   976  0199                     	;# 
   977  019A                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019C                     	;# 
   981  019D                     	;# 
   982  019E                     	;# 
   983  019F                     	;# 
   984  020C                     	;# 
   985  0211                     	;# 
   986  0211                     	;# 
   987  0212                     	;# 
   988  0212                     	;# 
   989  0213                     	;# 
   990  0213                     	;# 
   991  0214                     	;# 
   992  0214                     	;# 
   993  0215                     	;# 
   994  0215                     	;# 
   995  0215                     	;# 
   996  0216                     	;# 
   997  0216                     	;# 
   998  0217                     	;# 
   999  0217                     	;# 
  1000  0391                     	;# 
  1001  0392                     	;# 
  1002  0393                     	;# 
  1003  039A                     	;# 
  1004  039B                     	;# 
  1005  0611                     	;# 
  1006  0612                     	;# 
  1007  0613                     	;# 
  1008  0613                     	;# 
  1009  0614                     	;# 
  1010  0615                     	;# 
  1011  0616                     	;# 
  1012  0616                     	;# 
  1013  0691                     	;# 
  1014  0692                     	;# 
  1015  0693                     	;# 
  1016  0694                     	;# 
  1017  0695                     	;# 
  1018  0E8E                     	;# 
  1019  0E8F                     	;# 
  1020  0E90                     	;# 
  1021  0E91                     	;# 
  1022  0E92                     	;# 
  1023  0E93                     	;# 
  1024  0E94                     	;# 
  1025  0E94                     	;# 
  1026  0E95                     	;# 
  1027  0E96                     	;# 
  1028  0E97                     	;# 
  1029  0E98                     	;# 
  1030  0E99                     	;# 
  1031  0E9A                     	;# 
  1032  0E9B                     	;# 
  1033  0E9C                     	;# 
  1034  0E9D                     	;# 
  1035  0E9E                     	;# 
  1036  0E9F                     	;# 
  1037  0FE4                     	;# 
  1038  0FE5                     	;# 
  1039  0FE6                     	;# 
  1040  0FE7                     	;# 
  1041  0FE8                     	;# 
  1042  0FE9                     	;# 
  1043  0FEA                     	;# 
  1044  0FEB                     	;# 
  1045  0FED                     	;# 
  1046  0FEE                     	;# 
  1047  0FEF                     	;# 
  1048  0000                     	;# 
  1049  0001                     	;# 
  1050  0002                     	;# 
  1051  0003                     	;# 
  1052  0004                     	;# 
  1053  0005                     	;# 
  1054  0006                     	;# 
  1055  0007                     	;# 
  1056  0008                     	;# 
  1057  0009                     	;# 
  1058  000A                     	;# 
  1059  000B                     	;# 
  1060  000C                     	;# 
  1061  000E                     	;# 
  1062  0011                     	;# 
  1063  0012                     	;# 
  1064  0015                     	;# 
  1065  0016                     	;# 
  1066  0016                     	;# 
  1067  0017                     	;# 
  1068  0018                     	;# 
  1069  0019                     	;# 
  1070  001A                     	;# 
  1071  001B                     	;# 
  1072  001C                     	;# 
  1073  008C                     	;# 
  1074  008E                     	;# 
  1075  0091                     	;# 
  1076  0092                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0098                     	;# 
  1081  0099                     	;# 
  1082  009A                     	;# 
  1083  009B                     	;# 
  1084  009B                     	;# 
  1085  009C                     	;# 
  1086  009D                     	;# 
  1087  009E                     	;# 
  1088  009F                     	;# 
  1089  010C                     	;# 
  1090  010E                     	;# 
  1091  0111                     	;# 
  1092  0112                     	;# 
  1093  0113                     	;# 
  1094  0114                     	;# 
  1095  0115                     	;# 
  1096  0116                     	;# 
  1097  0117                     	;# 
  1098  0118                     	;# 
  1099  0119                     	;# 
  1100  011D                     	;# 
  1101  018C                     	;# 
  1102  018E                     	;# 
  1103  0191                     	;# 
  1104  0191                     	;# 
  1105  0192                     	;# 
  1106  0193                     	;# 
  1107  0193                     	;# 
  1108  0194                     	;# 
  1109  0195                     	;# 
  1110  0196                     	;# 
  1111  0197                     	;# 
  1112  0199                     	;# 
  1113  019A                     	;# 
  1114  019B                     	;# 
  1115  019B                     	;# 
  1116  019C                     	;# 
  1117  019D                     	;# 
  1118  019E                     	;# 
  1119  019F                     	;# 
  1120  020C                     	;# 
  1121  0211                     	;# 
  1122  0211                     	;# 
  1123  0212                     	;# 
  1124  0212                     	;# 
  1125  0213                     	;# 
  1126  0213                     	;# 
  1127  0214                     	;# 
  1128  0214                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0215                     	;# 
  1132  0216                     	;# 
  1133  0216                     	;# 
  1134  0217                     	;# 
  1135  0217                     	;# 
  1136  0391                     	;# 
  1137  0392                     	;# 
  1138  0393                     	;# 
  1139  039A                     	;# 
  1140  039B                     	;# 
  1141  0611                     	;# 
  1142  0612                     	;# 
  1143  0613                     	;# 
  1144  0613                     	;# 
  1145  0614                     	;# 
  1146  0615                     	;# 
  1147  0616                     	;# 
  1148  0616                     	;# 
  1149  0691                     	;# 
  1150  0692                     	;# 
  1151  0693                     	;# 
  1152  0694                     	;# 
  1153  0695                     	;# 
  1154  0E8E                     	;# 
  1155  0E8F                     	;# 
  1156  0E90                     	;# 
  1157  0E91                     	;# 
  1158  0E92                     	;# 
  1159  0E93                     	;# 
  1160  0E94                     	;# 
  1161  0E94                     	;# 
  1162  0E95                     	;# 
  1163  0E96                     	;# 
  1164  0E97                     	;# 
  1165  0E98                     	;# 
  1166  0E99                     	;# 
  1167  0E9A                     	;# 
  1168  0E9B                     	;# 
  1169  0E9C                     	;# 
  1170  0E9D                     	;# 
  1171  0E9E                     	;# 
  1172  0E9F                     	;# 
  1173  0FE4                     	;# 
  1174  0FE5                     	;# 
  1175  0FE6                     	;# 
  1176  0FE7                     	;# 
  1177  0FE8                     	;# 
  1178  0FE9                     	;# 
  1179  0FEA                     	;# 
  1180  0FEB                     	;# 
  1181  0FED                     	;# 
  1182  0FEE                     	;# 
  1183  0FEF                     	;# 
  1184                           
  1185                           	psect	idataBANK1
  1186  0000                     __pidataBANK1:	
  1187                           
  1188                           	psect	idataBANK2
  1189  0000                     __pidataBANK2:	
  1190                           
  1191                           	psect	idataBANK3
  1192  1C14                     __pidataBANK3:	
  1193                           
  1194                           ;initializer for _usb_rx_buf
  1195  1C14  3400               	retlw	0
  1196  1C15  3407               	retlw	7
  1197  1C16  3408               	retlw	8
  1198  1C17  3400               	retlw	0
  1199  1C18  3400               	retlw	0
  1200  1C19  3400               	retlw	0
  1201  1C1A  3410               	retlw	16
  1202  1C1B  3400               	retlw	0
  1203  1C1C  3410               	retlw	16
  1204  1C1D  3400               	retlw	0
  1205  1C1E  3409               	retlw	9
  1206  1C1F  3401               	retlw	1
  1207  1C20  3400               	retlw	0
  1208  1C21  3400               	retlw	0
  1209  1C22  3410               	retlw	16
  1210  1C23  3420               	retlw	32
  1211  1C24  3430               	retlw	48
  1212  1C25  3400               	retlw	0
  1213  1C26  340A               	retlw	10
  1214  1C27  3401               	retlw	1
  1215  1C28  3400               	retlw	0
  1216  1C29  3400               	retlw	0
  1217  1C2A  3410               	retlw	16
  1218  1C2B  3408               	retlw	8
  1219  1C2C  3418               	retlw	24
  1220  1C2D  3420               	retlw	32
  1221  1C2E  340B               	retlw	11
  1222  1C2F  3404               	retlw	4
  1223  1C30  3404               	retlw	4
  1224  1C31  3400               	retlw	0
  1225  1C32  3410               	retlw	16
  1226  1C33  3400               	retlw	0
  1227  1C34  3410               	retlw	16
  1228  1C35  3420               	retlw	32
  1229  1C36  340C               	retlw	12
  1230  1C37  340C               	retlw	12
  1231  1C38  3404               	retlw	4
  1232  1C39  3400               	retlw	0
  1233  1C3A  3410               	retlw	16
  1234  1C3B  3400               	retlw	0
  1235  1C3C  3410               	retlw	16
  1236  1C3D  3420               	retlw	32
  1237  1C3E  3400               	retlw	0
  1238  1C3F  340F               	retlw	15
  1239  1C40  341C               	retlw	28
  1240  1C41  3408               	retlw	8
  1241  1C42  3403               	retlw	3
  1242  1C43  3443               	retlw	67
  1243  1C44  34FF               	retlw	255
  1244  1C45  34A0               	retlw	160
  1245  1C46  34FF               	retlw	255
  1246  1C47  342B               	retlw	43
  1247  1C48  34FF               	retlw	255
  1248  1C49  3401               	retlw	1
  1249  1C4A  34FF               	retlw	255
  1250  1C4B  3400               	retlw	0
  1251  1C4C  3400               	retlw	0
  1252  1C4D  3400               	retlw	0
  1253  1C4E  3400               	retlw	0
  1254  1C4F  3400               	retlw	0
  1255  1C50  3400               	retlw	0
  1256  1C51  3400               	retlw	0
  1257  1C52  3400               	retlw	0
  1258  1C53  3400               	retlw	0
  1259                           
  1260                           	psect	stringtext1
  1261  1954                     __pstringtext1:	
  1262  1954                     _USB_SD_Ptr:	
  1263  1954  345A               	retlw	low (_sd000| (0+32768))
  1264  1955  3499               	retlw	high (_sd000| (0+32768))
  1265  1956  3430               	retlw	low (_sd001| (0+32768))
  1266  1957  3499               	retlw	high (_sd001| (0+32768))
  1267  1958  341A               	retlw	low (_sd002| (0+32768))
  1268  1959  3499               	retlw	high (_sd002| (0+32768))
  1269  195A                     __end_of_USB_SD_Ptr:	
  1270                           
  1271                           	psect	stringtext2
  1272  195E                     __pstringtext2:	
  1273  195E                     _USB_CD_Ptr:	
  1274  195E  348C               	retlw	low (_configDescriptor1| (0+32768))
  1275  195F  3498               	retlw	high (_configDescriptor1| (0+32768))
  1276  1960                     __end_of_USB_CD_Ptr:	
  1277                           
  1278                           	psect	stringtext3
  1279  188C                     __pstringtext3:	
  1280  188C                     _configDescriptor1:	
  1281  188C  3409               	retlw	9
  1282  188D  3402               	retlw	2
  1283  188E  3443               	retlw	67
  1284  188F  3400               	retlw	0
  1285  1890  3402               	retlw	2
  1286  1891  3401               	retlw	1
  1287  1892  3400               	retlw	0
  1288  1893  34C0               	retlw	192
  1289  1894  3432               	retlw	50
  1290  1895  3409               	retlw	9
  1291  1896  3404               	retlw	4
  1292  1897  3400               	retlw	0
  1293  1898  3400               	retlw	0
  1294  1899  3401               	retlw	1
  1295  189A  3402               	retlw	2
  1296  189B  3402               	retlw	2
  1297  189C  3401               	retlw	1
  1298  189D  3400               	retlw	0
  1299  189E  3405               	retlw	5
  1300  189F  3424               	retlw	36
  1301  18A0  3400               	retlw	0
  1302  18A1  3410               	retlw	16
  1303  18A2  3401               	retlw	1
  1304  18A3  3404               	retlw	4
  1305  18A4  3424               	retlw	36
  1306  18A5  3402               	retlw	2
  1307  18A6  3402               	retlw	2
  1308  18A7  3405               	retlw	5
  1309  18A8  3424               	retlw	36
  1310  18A9  3406               	retlw	6
  1311  18AA  3400               	retlw	0
  1312  18AB  3401               	retlw	1
  1313  18AC  3405               	retlw	5
  1314  18AD  3424               	retlw	36
  1315  18AE  3401               	retlw	1
  1316  18AF  3400               	retlw	0
  1317  18B0  3401               	retlw	1
  1318  18B1  3407               	retlw	7
  1319  18B2  3405               	retlw	5
  1320  18B3  3481               	retlw	129
  1321  18B4  3403               	retlw	3
  1322  18B5  3408               	retlw	8
  1323  18B6  3400               	retlw	0
  1324  18B7  3402               	retlw	2
  1325  18B8  3409               	retlw	9
  1326  18B9  3404               	retlw	4
  1327  18BA  3401               	retlw	1
  1328  18BB  3400               	retlw	0
  1329  18BC  3402               	retlw	2
  1330  18BD  340A               	retlw	10
  1331  18BE  3400               	retlw	0
  1332  18BF  3400               	retlw	0
  1333  18C0  3400               	retlw	0
  1334  18C1  3407               	retlw	7
  1335  18C2  3405               	retlw	5
  1336  18C3  3402               	retlw	2
  1337  18C4  3402               	retlw	2
  1338  18C5  3440               	retlw	64
  1339  18C6  3400               	retlw	0
  1340  18C7  3400               	retlw	0
  1341  18C8  3407               	retlw	7
  1342  18C9  3405               	retlw	5
  1343  18CA  3482               	retlw	130
  1344  18CB  3402               	retlw	2
  1345  18CC  3440               	retlw	64
  1346  18CD  3400               	retlw	0
  1347  18CE  3400               	retlw	0
  1348  18CF                     __end_of_configDescriptor1:	
  1349                           
  1350                           	psect	stringtext4
  1351  191A                     __pstringtext4:	
  1352  191A                     _sd002:	
  1353  191A  3416               	retlw	22
  1354  191B  3403               	retlw	3
  1355  191C  3450               	retlw	80
  1356  191D  3400               	retlw	0
  1357  191E  3472               	retlw	114
  1358  191F  3400               	retlw	0
  1359  1920  346F               	retlw	111
  1360  1921  3400               	retlw	0
  1361  1922  3467               	retlw	103
  1362  1923  3400               	retlw	0
  1363  1924  3472               	retlw	114
  1364  1925  3400               	retlw	0
  1365  1926  3461               	retlw	97
  1366  1927  3400               	retlw	0
  1367  1928  346D               	retlw	109
  1368  1929  3400               	retlw	0
  1369  192A  346D               	retlw	109
  1370  192B  3400               	retlw	0
  1371  192C  3465               	retlw	101
  1372  192D  3400               	retlw	0
  1373  192E  3472               	retlw	114
  1374  192F  3400               	retlw	0
  1375  1930                     __end_of_sd002:	
  1376                           
  1377                           	psect	stringtext5
  1378  1930                     __pstringtext5:	
  1379  1930                     _sd001:	
  1380  1930  3412               	retlw	18
  1381  1931  3403               	retlw	3
  1382  1932  3454               	retlw	84
  1383  1933  3400               	retlw	0
  1384  1934  3469               	retlw	105
  1385  1935  3400               	retlw	0
  1386  1936  346E               	retlw	110
  1387  1937  3400               	retlw	0
  1388  1938  3479               	retlw	121
  1389  1939  3400               	retlw	0
  1390  193A  3446               	retlw	70
  1391  193B  3400               	retlw	0
  1392  193C  3450               	retlw	80
  1393  193D  3400               	retlw	0
  1394  193E  3447               	retlw	71
  1395  193F  3400               	retlw	0
  1396  1940  3441               	retlw	65
  1397  1941  3400               	retlw	0
  1398  1942                     __end_of_sd001:	
  1399                           
  1400                           	psect	stringtext6
  1401  1942                     __pstringtext6:	
  1402  1942                     _device_dsc:	
  1403  1942  3412               	retlw	18
  1404  1943  3401               	retlw	1
  1405  1944  3400               	retlw	0
  1406  1945  3402               	retlw	2
  1407  1946  3402               	retlw	2
  1408  1947  3400               	retlw	0
  1409  1948  3400               	retlw	0
  1410  1949  3410               	retlw	16
  1411  194A  3409               	retlw	9
  1412  194B  3412               	retlw	18
  1413  194C  3401               	retlw	1
  1414  194D  3421               	retlw	33
  1415  194E  3400               	retlw	0
  1416  194F  3401               	retlw	1
  1417  1950  3401               	retlw	1
  1418  1951  3402               	retlw	2
  1419  1952  3400               	retlw	0
  1420  1953  3401               	retlw	1
  1421  1954                     __end_of_device_dsc:	
  1422                           
  1423                           	psect	stringtext7
  1424  195A                     __pstringtext7:	
  1425  195A                     _sd000:	
  1426  195A  3404               	retlw	4
  1427  195B  3403               	retlw	3
  1428  195C  3409               	retlw	9
  1429  195D  3404               	retlw	4
  1430  195E                     __end_of_sd000:	
  1431  000E                     _PORTC	set	14
  1432  0012                     _PIR2bits	set	18
  1433  000B                     _INTCONbits	set	11
  1434  0097                     _WDTCON	set	151
  1435  0098                     _OSCTUNE	set	152
  1436  0099                     _OSCCON	set	153
  1437  0095                     _OPTION_REGbits	set	149
  1438  008E                     _TRISC	set	142
  1439  008C                     _TRISA	set	140
  1440  0092                     _PIE2bits	set	146
  1441  04D6                     _PLLRDY	set	1238
  1442  011D                     _APFCON	set	285
  1443  010E                     _LATC	set	270
  1444  010C                     _LATA	set	268
  1445  018C                     _ANSELA	set	396
  1446  018E                     _ANSELC	set	398
  1447  020C                     _WPUA	set	524
  1448  039B                     _ACTCON	set	923
  1449  0E98                     _UEP0bits	set	3736
  1450  0E8E                     _UCON	set	3726
  1451  0E8F                     _USTAT	set	3727
  1452  0E92                     _UIEbits	set	3730
  1453  0E90                     _UIRbits	set	3728
  1454  0E96                     _UADDR	set	3734
  1455  0E92                     _UIE	set	3730
  1456  0E97                     _UEIE	set	3735
  1457  0E91                     _UCFG	set	3729
  1458  0E90                     _UIR	set	3728
  1459  0E93                     _UEIR	set	3731
  1460  0E8E                     _UCONbits	set	3726
  1461  0E99                     _UEP1	set	3737
  1462  0E98                     _UEP0	set	3736
  1463                           
  1464                           ; #config settings
  1465  0000                     
  1466                           	psect	cinit
  1467  0014                     start_initialization:	
  1468  0014                     __initialization:	
  1469                           
  1470                           ; Initialize objects allocated to BANK1
  1471  0014  0021               	movlb	1	; select bank1
  1472                           
  1473                           ;initializer for _usb_rx_bytes_avail
  1474  0015  3037               	movlw	55
  1475  0016  00E7               	movwf	__pdataBANK1& (0+127)
  1476                           
  1477                           ; Initialize objects allocated to BANK2
  1478  0017  0022               	movlb	2	; select bank2
  1479                           
  1480                           ;initializer for cmd_task@compare_data_matches
  1481  0018  3001               	movlw	1
  1482  0019  00ED               	movwf	__pdataBANK2& (0+127)
  1483                           
  1484                           ;initializer for cmd_task@gpio_dir
  1485  001A  303F               	movlw	63
  1486  001B  00EE               	movwf	(__pdataBANK2+1)& (0+127)
  1487                           
  1488                           ; Initialize objects allocated to BANK3
  1489  001C  3014               	movlw	low __pidataBANK3
  1490  001D  0084               	movwf	4
  1491  001E  309C               	movlw	(high __pidataBANK3)| (0+128)
  1492  001F  0085               	movwf	5
  1493  0020  30A0               	movlw	low __pdataBANK3
  1494  0021  0086               	movwf	6
  1495  0022  3001               	movlw	high __pdataBANK3
  1496  0023  0087               	movwf	7
  1497  0024  3040               	movlw	64
  1498  0025  3187  27F1  3180   	fcall	init_ram
  1499                           
  1500                           ; Clear objects allocated to BANK1
  1501  0028  30A0               	movlw	low __pbssBANK1
  1502  0029  0084               	movwf	4
  1503  002A  3000               	movlw	high __pbssBANK1
  1504  002B  0085               	movwf	5
  1505  002C  3029               	movlw	41
  1506  002D  3187  27F7  3180   	fcall	clear_ram0
  1507                           
  1508                           ; Clear objects allocated to BANK2
  1509  0030  3020               	movlw	low __pbssBANK2
  1510  0031  0084               	movwf	4
  1511  0032  3001               	movlw	high __pbssBANK2
  1512  0033  0085               	movwf	5
  1513  0034  3042               	movlw	66
  1514  0035  3187  27F7  3180   	fcall	clear_ram0
  1515                           
  1516                           ; Clear objects allocated to BANK4
  1517  0038  3020               	movlw	low __pbssBANK4
  1518  0039  0084               	movwf	4
  1519  003A  3002               	movlw	high __pbssBANK4
  1520  003B  0085               	movwf	5
  1521  003C  3040               	movlw	64
  1522  003D  3187  27F7  3180   	fcall	clear_ram0
  1523                           
  1524                           ; Clear objects allocated to BANK5
  1525  0040  30A0               	movlw	low __pbssBANK5
  1526  0041  0084               	movwf	4
  1527  0042  3002               	movlw	high __pbssBANK5
  1528  0043  0085               	movwf	5
  1529  0044  3040               	movlw	64
  1530  0045  3187  27F7  3180   	fcall	clear_ram0
  1531                           
  1532                           ; Clear objects allocated to BANK6
  1533  0048  3020               	movlw	low __pbssBANK6
  1534  0049  0084               	movwf	4
  1535  004A  3003               	movlw	high __pbssBANK6
  1536  004B  0085               	movwf	5
  1537  004C  3040               	movlw	64
  1538  004D  3187  27F7  3180   	fcall	clear_ram0
  1539                           
  1540                           ; Clear objects allocated to BANK7
  1541  0050  30A0               	movlw	low __pbssBANK7
  1542  0051  0084               	movwf	4
  1543  0052  3003               	movlw	high __pbssBANK7
  1544  0053  0085               	movwf	5
  1545  0054  3040               	movlw	64
  1546  0055  3187  27F7  3180   	fcall	clear_ram0
  1547  0058                     end_of_initialization:	
  1548                           ;End of C runtime variable initialization code
  1549                           
  1550  0058                     __end_of__initialization:	
  1551  0058  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1552  0059  0020               	movlb	0
  1553  005A  285B               	ljmp	_main	;jump to C main() function
  1554  005B                     __pmaintext:	
  1555 ;;
  1556 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1557 ;;
  1558 ;; *************** function _main *****************
  1559 ;; Defined at:
  1560 ;;		line 569 in file "main.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  cmd_pt          2    9[BANK2 ] struct pt
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : B1F/0
  1571 ;;		On exit  : 1F/1
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1575 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1577 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  1578 ;;Total ram usage:        2 bytes
  1579 ;; Hardware stack levels required when called:   20
  1580 ;; This function calls:
  1581 ;;		_SYSTEM_Initialize
  1582 ;;		_USBDeviceInit
  1583 ;;		_cmd_rx_buffer_task
  1584 ;;		_cmd_task
  1585 ;;		_cmd_tx_buffer_task
  1586 ;;		_gpio_init
  1587 ;;		_usb_task
  1588 ;; This function is called by:
  1589 ;;		Startup code after reset
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           
  1594                           ;psect for function _main
  1595  005B                     _main:	
  1596                           
  1597                           ;main.c: 570: struct pt cmd_pt;
  1598                           ;main.c: 571: (&cmd_pt)->lc = 0;;
  1599                           
  1600                           ;incstack = 0
  1601 ;; hardware stack exceeded
  1602                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1603  005B  0022               	movlb	2	; select bank2
  1604  005C  3037               	movlw	55
  1605  005D  01EB               	clrf	main@cmd_pt^(0+256)
  1606  005E  01EC               	clrf	(main@cmd_pt+1)^(0+256)
  1607                           
  1608                           ;main.c: 573: usb_rx_bytes_avail = 55;
  1609  005F  0021               	movlb	1	; select bank1
  1610  0060  00E7               	movwf	_usb_rx_bytes_avail^(0+128)
  1611                           
  1612                           ;main.c: 574: usb_rx_ptr = 0;
  1613  0061  01C3               	clrf	_usb_rx_ptr^(0+128)
  1614                           
  1615                           ;main.c: 575: usb_tx_ptr = 0;
  1616  0062  01C2               	clrf	_usb_tx_ptr^(0+128)
  1617                           
  1618                           ;main.c: 577: SYSTEM_Initialize();
  1619  0063  211A  3180         	fcall	_SYSTEM_Initialize
  1620                           
  1621                           ;main.c: 578: USBDeviceInit();
  1622  0065  209B  3180         	fcall	_USBDeviceInit
  1623  0067                     i1L__ptext28:	
  1624                           ;main.c: 579: gpio_init();
  1625                           
  1626                           
  1627                           ;psect for function _gpio_init
  1628  0067                     i1L_gpio_init:	
  1629  0067                     i1Ll8839:	
  1630                           
  1631                           ;main.c: 121: TRISC = 0b111111;
  1632  0067  303F               	movlw	63
  1633  0068  008E               	movwf	14	;volatile
  1634  0069                     i1Ll235:	
  1635  0069                     i2L__ptext1:	
  1636                           ;main.c: 582: usb_task();
  1637                           
  1638                           
  1639                           ;psect for function _usb_task
  1640  0069                     i2L_usb_task:	
  1641  0069                     i2Ll8831:	
  1642                           
  1643                           ;main.c: 83: USBDeviceTasks();
  1644  0069  22A8  3180         	fcall	_USBDeviceTasks
  1645  006B                     i2Ll8833:	
  1646                           
  1647                           ;main.c: 85: if (
  1648                           ;main.c: 86: (USBDeviceState >= CONFIGURED_STATE) &&
  1649                           ;main.c: 87: (UCONbits.SUSPND == 0)
  1650                           ;main.c: 88: ) {
  1651  006B  3020               	movlw	32
  1652  006C  0021               	movlb	1	; select bank1
  1653  006D  0244               	subwf	_USBDeviceState^(0+128),w	;volatile
  1654  006E  1C03               	btfss	3,0
  1655  006F  2879               	ljmp	i3L__ptext32
  1656  0070  2872               	ljmp	i2Ll8835
  1657  0071                     i2Lu8371:	
  1658  0071  2879               	ljmp	i3L__ptext32
  1659  0072                     i2Lu8370:	
  1660  0072                     i2Ll8835:	
  1661  0072  003D               	movlb	29	; select bank29
  1662  0073  188E               	btfsc	14,1	;volatile
  1663  0074  2879               	ljmp	i3L__ptext32
  1664  0075  2877               	ljmp	i2Ll8837
  1665  0076                     i2Lu8381:	
  1666  0076  2879               	ljmp	i3L__ptext32
  1667  0077                     i2Lu8380:	
  1668  0077                     i2Ll8837:	
  1669                           
  1670                           ;main.c: 89: CDCTxService();
  1671  0077  219F  3180         	fcall	_CDCTxService
  1672  0079                     i2Ll232:	
  1673  0079                     i3L__ptext32:	
  1674                           ;main.c: 583: cmd_rx_buffer_task();
  1675                           
  1676                           
  1677                           ;psect for function _cmd_rx_buffer_task
  1678  0079                     i3L_cmd_rx_buffer_task:	
  1679  0079                     i3Ll9503:	
  1680                           
  1681                           ;main.c: 549: if (usb_rx_ptr >= usb_rx_bytes_avail) {
  1682  0079  0021               	movlb	1	; select bank1
  1683  007A  0867               	movf	_usb_rx_bytes_avail^(0+128),w
  1684  007B  0243               	subwf	_usb_rx_ptr^(0+128),w
  1685  007C  1C03               	btfss	3,0
  1686  007D  2887               	ljmp	i4L__ptext29
  1687  007E  2880               	ljmp	i3Ll9505
  1688  007F                     i3Lu9301:	
  1689  007F  2887               	ljmp	i4L__ptext29
  1690  0080                     i3Lu9300:	
  1691  0080                     i3Ll9505:	
  1692                           
  1693                           ;main.c: 550: usb_rx_bytes_avail = getsUSBUSART(usb_rx_buf, 64);
  1694  0080  3040               	movlw	64
  1695  0081  00DC               	movwf	getsUSBUSART@len^(0+128)
  1696  0082  30A0               	movlw	(low (_usb_rx_buf| (0+256)))& (0+255)
  1697  0083  2145  3180         	fcall	_getsUSBUSART
  1698  0085  00E7               	movwf	_usb_rx_bytes_avail^(0+128)
  1699  0086                     i3Ll9507:	
  1700                           
  1701                           ;main.c: 551: usb_rx_ptr = 0;
  1702  0086  01C3               	clrf	_usb_rx_ptr^(0+128)
  1703  0087                     i3Ll515:	
  1704  0087                     i4L__ptext29:	
  1705                           ;main.c: 584: cmd_tx_buffer_task();
  1706                           
  1707                           
  1708                           ;psect for function _cmd_tx_buffer_task
  1709  0087                     i4L_cmd_tx_buffer_task:	
  1710  0087                     i4Ll9509:	
  1711                           
  1712                           ;main.c: 559: if ((cdc_trf_state == 0) && usb_tx_ptr > 0) {
  1713  0087  0845               	movf	_cdc_trf_state^(0+128),w
  1714  0088  1D03               	btfss	3,2
  1715  0089  2896               	ljmp	iL31
  1716  008A  288C               	ljmp	i4Ll9511
  1717  008B                     i4Lu9311:	
  1718  008B  2896               	ljmp	iL31
  1719  008C                     i4Lu9310:	
  1720  008C                     i4Ll9511:	
  1721  008C  0842               	movf	_usb_tx_ptr^(0+128),w
  1722  008D  1903               	btfsc	3,2
  1723  008E  2896               	ljmp	iL31
  1724  008F  2891               	ljmp	i4Ll9513
  1725  0090                     i4Lu9321:	
  1726  0090  2896               	ljmp	iL31
  1727  0091                     i4Lu9320:	
  1728  0091                     i4Ll9513:	
  1729                           
  1730                           ;main.c: 560: putUSBUSART(usb_tx_buf, usb_tx_ptr);
  1731  0091  0842               	movf	_usb_tx_ptr^(0+128),w
  1732  0092  00D1               	movwf	putUSBUSART@length^(0+128)
  1733  0093  3020               	movlw	(low (_usb_tx_buf| (0+768)))& (0+255)
  1734  0094  218C               	fcall	_putUSBUSART
  1735  0095                     i4Ll9515:	
  1736                           
  1737                           ;main.c: 561: usb_tx_ptr = 0;
  1738  0095  01C2               	clrf	_usb_tx_ptr^(0+128)
  1739  0096                     i4Ll519:	
  1740  0096                     iL31:	
  1741                           
  1742                           ;main.c: 585: cmd_task(&cmd_pt);
  1743  0096  306B               	movlw	(low (main@cmd_pt| (0+256)))& (0+255)
  1744  0097  3189  2174  3180   	fcall	_cmd_task
  1745  009A  2869               	goto	i2L__ptext1
  1746  009B                     __end_of_main:	
  1747  009B                     __ptext37:	
  1748 ;; *************** function _USBDeviceInit *****************
  1749 ;; Defined at:
  1750 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  p               2    8[BANK1 ] PTR unsigned char 
  1755 ;;		 -> UEP1(1), 
  1756 ;;  i               1   10[BANK1 ] unsigned char 
  1757 ;;  i               1   11[BANK1 ] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 3/1
  1764 ;;		On exit  : 1F/1
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;Total ram usage:        4 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:   10
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_SYSTEM_Initialize
  1778 ;;		_main
  1779 ;;		_USBDeviceTasks
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _USBDeviceInit
  1785  009B                     _USBDeviceInit:	
  1786                           
  1787                           ;usb_device.c: 279: uint8_t i;
  1788                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  1792  009B  0021               	movlb	1	; select bank1
  1793  009C  1112               	bcf	18,2	;volatile
  1794                           
  1795                           ;usb_device.c: 285: ;
  1796                           ;usb_device.c: 288: {UEIR = 0;};
  1797  009D  003D               	movlb	29	; select bank29
  1798  009E  0193               	clrf	19	;volatile
  1799                           
  1800                           ;usb_device.c: 291: {UIR = 0;};
  1801  009F  0190               	clrf	16	;volatile
  1802                           
  1803                           ;usb_device.c: 294: UEP0 = 0;
  1804  00A0  0198               	clrf	24	;volatile
  1805                           
  1806                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  1807  00A1  300E               	movlw	14
  1808  00A2  0021               	movlb	1	; select bank1
  1809  00A3  00D2               	movwf	(USBDeviceInit@p+1)^(0+128)
  1810  00A4  3099               	movlw	153
  1811  00A5  00D1               	movwf	USBDeviceInit@p^(0+128)
  1812  00A6  01D3               	clrf	USBDeviceInit@i_1567^(0+128)
  1813  00A7                     l8375:	
  1814  00A7  0851               	movf	USBDeviceInit@p^(0+128),w
  1815  00A8  0086               	movwf	6
  1816  00A9  0852               	movf	(USBDeviceInit@p+1)^(0+128),w
  1817  00AA  0087               	movwf	7
  1818  00AB  0181               	clrf	1
  1819  00AC  0AD1               	incf	USBDeviceInit@p^(0+128),f
  1820  00AD  1903               	skipnz
  1821  00AE  0AD2               	incf	(USBDeviceInit@p+1)^(0+128),f
  1822  00AF  3002               	movlw	2
  1823  00B0  0AD3               	incf	USBDeviceInit@i_1567^(0+128),f
  1824  00B1  0253               	subwf	USBDeviceInit@i_1567^(0+128),w
  1825  00B2  1C03               	skipc
  1826  00B3  28A7               	goto	l8375
  1827                           
  1828                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  1829  00B4  3016               	movlw	22
  1830  00B5  003D               	movlb	29	; select bank29
  1831  00B6  0091               	movwf	17	;volatile
  1832  00B7  309F               	movlw	159
  1833  00B8  0097               	movwf	23	;volatile
  1834  00B9  307B               	movlw	123
  1835  00BA  0092               	movwf	18	;volatile
  1836                           
  1837                           ;usb_device.c: 301: ;
  1838                           ;usb_device.c: 304: ;
  1839                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  1840  00BB  0021               	movlb	1	; select bank1
  1841  00BC  01D4               	clrf	USBDeviceInit@i^(0+128)
  1842  00BD                     l8391:	
  1843                           
  1844                           ;usb_device.c: 308: {
  1845                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  1846  00BD  0854               	movf	USBDeviceInit@i^(0+128),w
  1847  00BE  0709               	addwf	9,w
  1848  00BF  0709               	addwf	9,w
  1849  00C0  3E20               	addlw	32
  1850  00C1  0086               	movwf	6
  1851  00C2  3000               	movlw	0
  1852  00C3  0187               	clrf	7
  1853  00C4  3FC0               	movwi [0]fsr1
  1854  00C5  3FC1               	movwi [1]fsr1
  1855  00C6  3FC2               	movwi [2]fsr1
  1856  00C7  3FC3               	movwi [3]fsr1
  1857  00C8  300C               	movlw	12
  1858  00C9  0AD4               	incf	USBDeviceInit@i^(0+128),f
  1859  00CA  0254               	subwf	USBDeviceInit@i^(0+128),w
  1860  00CB  1C03               	skipc
  1861  00CC  28BD               	goto	l8391
  1862                           
  1863                           ;usb_device.c: 310: }
  1864                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  1865  00CD  003D               	movlb	29	; select bank29
  1866  00CE  170E               	bsf	14,6	;volatile
  1867                           
  1868                           ;usb_device.c: 316: UADDR = 0x00;
  1869  00CF  0196               	clrf	22	;volatile
  1870                           
  1871                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  1872  00D0  120E               	bcf	14,4	;volatile
  1873                           
  1874                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  1875  00D1  130E               	bcf	14,6	;volatile
  1876  00D2                     l8403:	
  1877                           
  1878                           ;usb_device.c: 326: {
  1879                           ;usb_device.c: 327: (UIR &= 0xF7);
  1880  00D2  1190               	bcf	16,3	;volatile
  1881                           
  1882                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  1883  00D3  0021               	movlb	1	; select bank1
  1884  00D4  01AF               	clrf	(_inPipes^(0+128)+2)	;volatile
  1885                           
  1886                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  1887  00D5  01A2               	clrf	(_outPipes^(0+128)+2)	;volatile
  1888                           
  1889                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  1890  00D6  01A3               	clrf	(_outPipes^(0+128)+3)	;volatile
  1891  00D7  01A4               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  1892                           
  1893                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  1894  00D8  003D               	movlb	29	; select bank29
  1895  00D9  1990               	btfsc	16,3	;volatile
  1896  00DA  28D2               	goto	l8403
  1897                           
  1898                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  1899  00DB  3001               	movlw	1
  1900  00DC  0022               	movlb	2	; select bank2
  1901  00DD  00BE               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  1902                           
  1903                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  1904  00DE  00BD               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  1905                           
  1906                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  1907  00DF  01BC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  1908                           
  1909                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  1910  00E0  01BB               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  1911                           
  1912                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  1913  00E1  01C0               	clrf	_USBBusIsSuspended^(0+256)	;volatile
  1914                           
  1915                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  1916  00E2  0021               	movlb	1	; select bank1
  1917  00E3  01D4               	clrf	USBDeviceInit@i^(0+128)
  1918  00E4                     l8419:	
  1919                           
  1920                           ;usb_device.c: 346: {
  1921                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  1922  00E4  3554               	lslf	USBDeviceInit@i^(0+128),w
  1923  00E5  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  1924  00E6  0086               	movwf	6
  1925  00E7  3000               	movlw	0
  1926  00E8  0187               	clrf	7
  1927  00E9  3FC0               	movwi [0]fsr1
  1928  00EA  3FC1               	movwi [1]fsr1
  1929                           
  1930                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  1931  00EB  3554               	lslf	USBDeviceInit@i^(0+128),w
  1932  00EC  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  1933  00ED  0086               	movwf	6
  1934  00EE  3001               	movlw	1	; select bank2/3
  1935  00EF  0087               	movwf	7
  1936  00F0  3000               	movlw	0
  1937  00F1  3FC0               	movwi [0]fsr1
  1938  00F2  3FC1               	movwi [1]fsr1
  1939                           
  1940                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  1941  00F3  0854               	movf	USBDeviceInit@i^(0+128),w
  1942  00F4  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  1943  00F5  0086               	movwf	6
  1944  00F6  0181               	clrf	1
  1945                           
  1946                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  1947  00F7  0854               	movf	USBDeviceInit@i^(0+128),w
  1948  00F8  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  1949  00F9  0086               	movwf	6
  1950  00FA  3003               	movlw	3
  1951  00FB  0181               	clrf	1
  1952  00FC  0AD4               	incf	USBDeviceInit@i^(0+128),f
  1953  00FD  0254               	subwf	USBDeviceInit@i^(0+128),w
  1954  00FE  1C03               	skipc
  1955  00FF  28E4               	goto	l8419
  1956                           
  1957                           ;usb_device.c: 351: }
  1958                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  1959  0100  3028               	movlw	40
  1960  0101  00A7               	movwf	_pBDTEntryIn^(0+128)
  1961  0102  3016               	movlw	22
  1962  0103  01A8               	clrf	(_pBDTEntryIn+1)^(0+128)
  1963                           
  1964                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  1965  0104  003D               	movlb	29	; select bank29
  1966  0105  0098               	movwf	24	;volatile
  1967                           
  1968                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  1969  0106  0020               	movlb	0	; select bank0
  1970  0107  01A3               	clrf	35	;volatile
  1971  0108  3050               	movlw	80
  1972  0109  00A2               	movwf	34	;volatile
  1973                           
  1974                           ;usb_device.c: 359: BDT[0].CNT = 16;
  1975  010A  3010               	movlw	16
  1976  010B  00A1               	movwf	33	;volatile
  1977                           
  1978                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  1979  010C  3004               	movlw	4
  1980  010D  00A0               	movwf	32	;volatile
  1981                           
  1982                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  1983  010E  17A0               	bsf	32,7	;volatile
  1984                           
  1985                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  1986  010F  0021               	movlb	1	; select bank1
  1987  0110  01C8               	clrf	_USBActiveConfiguration^(0+128)	;volatile
  1988                           
  1989                           ;usb_device.c: 366: USB1msTickCount = 0;
  1990  0111  0022               	movlb	2	; select bank2
  1991  0112  01A6               	clrf	_USB1msTickCount^(0+256)	;volatile
  1992  0113  01A7               	clrf	(_USB1msTickCount+1)^(0+256)	;volatile
  1993  0114  01A8               	clrf	(_USB1msTickCount+2)^(0+256)	;volatile
  1994  0115  01A9               	clrf	(_USB1msTickCount+3)^(0+256)	;volatile
  1995                           
  1996                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  1997  0116  01BA               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  1998                           
  1999                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  2000  0117  0021               	movlb	1	; select bank1
  2001  0118  01C4               	clrf	_USBDeviceState^(0+128)	;volatile
  2002  0119  0008               	return
  2003  011A                     __end_of_USBDeviceInit:	
  2004  011A                     __ptext35:	
  2005 ;; *************** function _SYSTEM_Initialize *****************
  2006 ;; Defined at:
  2007 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : B1F/1
  2018 ;;		On exit  : 1F/1
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:   11
  2028 ;; This function calls:
  2029 ;;		_OSCILLATOR_Initialize
  2030 ;;		_PIN_MANAGER_Initialize
  2031 ;;		_USBDeviceAttach
  2032 ;;		_USBDeviceInit
  2033 ;;		_WDT_Initialize
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function _SYSTEM_Initialize
  2041  011A                     _SYSTEM_Initialize:	
  2042                           
  2043                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  2044                           
  2045                           ;incstack = 0
  2046                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2047  011A  212D  3180         	fcall	_PIN_MANAGER_Initialize
  2048                           
  2049                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2050  011C  2123  3180         	fcall	_OSCILLATOR_Initialize
  2051                           
  2052                           ;mcc.c: 77: WDT_Initialize();
  2053  011E  2142  3180         	fcall	_WDT_Initialize
  2054                           
  2055                           ;mcc.c: 78: USBDeviceInit();
  2056  0120  209B  3180         	fcall	_USBDeviceInit
  2057                           
  2058                           ;mcc.c: 79: USBDeviceAttach();
  2059  0122  2E67               	ljmp	l8767
  2060  0123                     __end_of_SYSTEM_Initialize:	
  2061  0123                     __ptext40:	
  2062 ;; *************** function _OSCILLATOR_Initialize *****************
  2063 ;; Defined at:
  2064 ;;		line 82 in file "mcc_generated_files/mcc.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2
  2073 ;; Tracked objects:
  2074 ;;		On entry : B1F/2
  2075 ;;		On exit  : B1F/1
  2076 ;;		Unchanged: B00/0
  2077 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:   10
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_SYSTEM_Initialize
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           
  2093                           ;psect for function _OSCILLATOR_Initialize
  2094  0123                     _OSCILLATOR_Initialize:	
  2095                           
  2096                           ;mcc.c: 85: OSCCON = 0x3C;
  2097                           
  2098                           ;incstack = 0
  2099                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2100  0123  303C               	movlw	60
  2101  0124  0021               	movlb	1	; select bank1
  2102  0125  0099               	movwf	25	;volatile
  2103                           
  2104                           ;mcc.c: 87: OSCTUNE = 0x00;
  2105  0126  0198               	clrf	24	;volatile
  2106                           
  2107                           ;mcc.c: 89: ACTCON = 0x00;
  2108  0127  0027               	movlb	7	; select bank7
  2109  0128  019B               	clrf	27	;volatile
  2110  0129                     l183:	
  2111                           ;mcc.c: 92: {
  2112                           
  2113  0129  0021               	movlb	1	; select bank1
  2114  012A  1B1A               	btfsc	26,6	;volatile
  2115  012B  0008               	return
  2116  012C  2929               	goto	l183
  2117  012D                     __end_of_OSCILLATOR_Initialize:	
  2118  012D                     __ptext39:	
  2119 ;; *************** function _PIN_MANAGER_Initialize *****************
  2120 ;; Defined at:
  2121 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2
  2130 ;; Tracked objects:
  2131 ;;		On entry : B1F/1
  2132 ;;		On exit  : B1F/2
  2133 ;;		Unchanged: B00/0
  2134 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:   10
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_SYSTEM_Initialize
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _PIN_MANAGER_Initialize
  2151  012D                     _PIN_MANAGER_Initialize:	
  2152                           
  2153                           ;pin_manager.c: 57: LATA = 0x00;
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2157  012D  0022               	movlb	2	; select bank2
  2158  012E  018C               	clrf	12	;volatile
  2159                           
  2160                           ;pin_manager.c: 58: LATC = 0x00;
  2161  012F  018E               	clrf	14	;volatile
  2162                           
  2163                           ;pin_manager.c: 63: TRISA = 0x30;
  2164  0130  3030               	movlw	48
  2165  0131  0021               	movlb	1	; select bank1
  2166  0132  008C               	movwf	12	;volatile
  2167                           
  2168                           ;pin_manager.c: 64: TRISC = 0x07;
  2169  0133  3007               	movlw	7
  2170  0134  008E               	movwf	14	;volatile
  2171                           
  2172                           ;pin_manager.c: 69: ANSELC = 0x08;
  2173  0135  3008               	movlw	8
  2174  0136  0023               	movlb	3	; select bank3
  2175  0137  008E               	movwf	14	;volatile
  2176                           
  2177                           ;pin_manager.c: 70: ANSELA = 0x10;
  2178  0138  3010               	movlw	16
  2179  0139  008C               	movwf	12	;volatile
  2180                           
  2181                           ;pin_manager.c: 75: WPUA = 0x38;
  2182  013A  3038               	movlw	56
  2183  013B  0024               	movlb	4	; select bank4
  2184  013C  008C               	movwf	12	;volatile
  2185                           
  2186                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 0;
  2187  013D  0021               	movlb	1	; select bank1
  2188  013E  1395               	bcf	21,7	;volatile
  2189                           
  2190                           ;pin_manager.c: 82: APFCON = 0x00;
  2191  013F  0022               	movlb	2	; select bank2
  2192  0140  019D               	clrf	29	;volatile
  2193  0141  0008               	return
  2194  0142                     __end_of_PIN_MANAGER_Initialize:	
  2195  0142                     __ptext36:	
  2196 ;; *************** function _WDT_Initialize *****************
  2197 ;; Defined at:
  2198 ;;		line 96 in file "mcc_generated_files/mcc.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;		None
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg
  2207 ;; Tracked objects:
  2208 ;;		On entry : B1F/1
  2209 ;;		On exit  : B1F/1
  2210 ;;		Unchanged: B00/0
  2211 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;Total ram usage:        0 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:   10
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_SYSTEM_Initialize
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _WDT_Initialize
  2228  0142                     _WDT_Initialize:	
  2229                           
  2230                           ;mcc.c: 99: WDTCON = 0x16;
  2231                           
  2232                           ;incstack = 0
  2233                           ; Regs used in _WDT_Initialize: [wreg]
  2234  0142  3016               	movlw	22
  2235  0143  0097               	movwf	23	;volatile
  2236  0144  0008               	return
  2237  0145                     __end_of_WDT_Initialize:	
  2238  0145                     __ptext33:	
  2239 ;; *************** function _getsUSBUSART *****************
  2240 ;; Defined at:
  2241 ;;		line 484 in file "mcc_generated_files/usb/usb_device_cdc.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  buffer          1    wreg     PTR unsigned char 
  2244 ;;		 -> usb_rx_buf(64), 
  2245 ;;  len             1   19[BANK1 ] unsigned char 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  buffer          1   21[BANK1 ] PTR unsigned char 
  2248 ;;		 -> usb_rx_buf(64), 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      unsigned char 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 1F/1
  2255 ;;		On exit  : 1F/1
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2258 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2259 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2261 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2262 ;;Total ram usage:        3 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:   11
  2265 ;; This function calls:
  2266 ;;		_USBTransferOnePacket
  2267 ;; This function is called by:
  2268 ;;		_cmd_rx_buffer_task
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           
  2273                           ;psect for function _getsUSBUSART
  2274  0145                     _getsUSBUSART:	
  2275                           
  2276                           ;incstack = 0
  2277                           ; Regs used in _getsUSBUSART: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2278                           ;getsUSBUSART@buffer stored from wreg
  2279  0145  00DE               	movwf	getsUSBUSART@buffer^(0+128)
  2280                           
  2281                           ;usb_device_cdc.c: 486: cdc_rx_len = 0;
  2282  0146  01C6               	clrf	_cdc_rx_len^(0+128)
  2283                           
  2284                           ;usb_device_cdc.c: 488: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2285  0147  0022               	movlb	2	; select bank2
  2286  0148  0834               	movf	_CDCDataOutHandle^(0+256),w
  2287  0149  0435               	iorwf	(_CDCDataOutHandle+1)^(0+256),w
  2288  014A  1903               	btfsc	3,2
  2289  014B  2952               	goto	l8537
  2290  014C  0834               	movf	_CDCDataOutHandle^(0+256),w
  2291  014D  0086               	movwf	6
  2292  014E  0835               	movf	(_CDCDataOutHandle+1)^(0+256),w
  2293  014F  0087               	movwf	7
  2294  0150  1B81               	btfsc	1,7
  2295  0151  2989               	goto	l8551
  2296  0152                     l8537:	
  2297                           
  2298                           ;usb_device_cdc.c: 489: {
  2299                           ;usb_device_cdc.c: 494: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2300  0152  0834               	movf	_CDCDataOutHandle^(0+256),w
  2301  0153  0086               	movwf	6
  2302  0154  0835               	movf	(_CDCDataOutHandle+1)^(0+256),w
  2303  0155  0087               	movwf	7
  2304  0156  3141               	addfsr 1,1
  2305  0157  0021               	movlb	1	; select bank1
  2306  0158  085C               	movf	getsUSBUSART@len^(0+128),w
  2307  0159  0201               	subwf	1,w
  2308  015A  1803               	skipnc
  2309  015B  2965               	goto	l8541
  2310                           
  2311                           ;usb_device_cdc.c: 495: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2312  015C  0022               	movlb	2	; select bank2
  2313  015D  0834               	movf	_CDCDataOutHandle^(0+256),w
  2314  015E  0086               	movwf	6
  2315  015F  0835               	movf	(_CDCDataOutHandle+1)^(0+256),w
  2316  0160  0087               	movwf	7
  2317  0161  3141               	addfsr 1,1
  2318  0162  0801               	movf	1,w
  2319  0163  0021               	movlb	1	; select bank1
  2320  0164  00DC               	movwf	getsUSBUSART@len^(0+128)
  2321  0165                     l8541:	
  2322                           
  2323                           ;usb_device_cdc.c: 500: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2324  0165  01C6               	clrf	_cdc_rx_len^(0+128)
  2325  0166                     l8547:	
  2326  0166  085C               	movf	getsUSBUSART@len^(0+128),w
  2327  0167  0246               	subwf	_cdc_rx_len^(0+128),w
  2328  0168  1803               	btfsc	3,0
  2329  0169  2979               	goto	l8549
  2330                           
  2331                           ;usb_device_cdc.c: 501: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2332  016A  0846               	movf	_cdc_rx_len^(0+128),w
  2333  016B  075E               	addwf	getsUSBUSART@buffer^(0+128),w
  2334  016C  00DD               	movwf	??_getsUSBUSART^(0+128)
  2335  016D  0086               	movwf	6
  2336  016E  3001               	movlw	1	; select bank2/3
  2337  016F  0087               	movwf	7
  2338  0170  0846               	movf	_cdc_rx_len^(0+128),w
  2339  0171  3EA0               	addlw	(low (_cdc_data_rx| (0+512)))& (0+255)
  2340  0172  0084               	movwf	4
  2341  0173  3002               	movlw	2	; select bank5/6
  2342  0174  0085               	movwf	5
  2343  0175  0800               	movf	0,w
  2344  0176  0081               	movwf	1
  2345  0177  0AC6               	incf	_cdc_rx_len^(0+128),f
  2346  0178  2966               	goto	l8547
  2347  0179                     l8549:	
  2348  0179  30A0               	movlw	low _cdc_data_rx
  2349                           
  2350                           ;usb_device_cdc.c: 507: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2351  017A  01D1               	clrf	USBTransferOnePacket@dir^(0+128)
  2352  017B  00D2               	movwf	USBTransferOnePacket@data^(0+128)
  2353  017C  3002               	movlw	high _cdc_data_rx
  2354  017D  00D3               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  2355  017E  3040               	movlw	64
  2356  017F  00D4               	movwf	USBTransferOnePacket@len^(0+128)
  2357  0180  3002               	movlw	2
  2358  0181  2231               	fcall	_USBTransferOnePacket
  2359  0182  0852               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  2360  0183  0022               	movlb	2	; select bank2
  2361  0184  00B5               	movwf	(_CDCDataOutHandle+1)^(0+256)
  2362  0185  0021               	movlb	1	; select bank1
  2363  0186  0851               	movf	?_USBTransferOnePacket^(0+128),w
  2364  0187  0022               	movlb	2	; select bank2
  2365  0188  00B4               	movwf	_CDCDataOutHandle^(0+256)
  2366  0189                     l8551:	
  2367                           
  2368                           ;usb_device_cdc.c: 509: }
  2369                           ;usb_device_cdc.c: 511: return cdc_rx_len;
  2370  0189  0021               	movlb	1	; select bank1
  2371  018A  0846               	movf	_cdc_rx_len^(0+128),w
  2372  018B  0008               	return
  2373  018C                     __end_of_getsUSBUSART:	
  2374  018C                     __ptext30:	
  2375 ;; *************** function _putUSBUSART *****************
  2376 ;; Defined at:
  2377 ;;		line 555 in file "mcc_generated_files/usb/usb_device_cdc.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  data            1    wreg     PTR unsigned char 
  2380 ;;		 -> usb_tx_buf(64), 
  2381 ;;  length          1    8[BANK1 ] unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  data            1    9[BANK1 ] PTR unsigned char 
  2384 ;;		 -> usb_tx_buf(64), 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0
  2389 ;; Tracked objects:
  2390 ;;		On entry : 1F/1
  2391 ;;		On exit  : 1F/1
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2394 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2395 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2397 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2398 ;;Total ram usage:        2 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:   10
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_cmd_tx_buffer_task
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _putUSBUSART
  2410  018C                     _putUSBUSART:	
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  2414                           ;putUSBUSART@data stored from wreg
  2415  018C  00D2               	movwf	putUSBUSART@data^(0+128)
  2416                           
  2417                           ;usb_device_cdc.c: 580: {PIE2bits.USBIE = 0;};
  2418  018D  1112               	bcf	18,2	;volatile
  2419                           
  2420                           ;usb_device_cdc.c: 581: if(cdc_trf_state == 0)
  2421  018E  0845               	movf	_cdc_trf_state^(0+128),w
  2422  018F  1D03               	btfss	3,2
  2423  0190  299D               	goto	l8565
  2424                           
  2425                           ;usb_device_cdc.c: 582: {
  2426                           ;usb_device_cdc.c: 583: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2427  0191  0852               	movf	putUSBUSART@data^(0+128),w
  2428  0192  0022               	movlb	2	; select bank2
  2429  0193  00B8               	movwf	_pCDCSrc^(0+256)
  2430  0194  0021               	movlb	1	; select bank1
  2431  0195  0851               	movf	putUSBUSART@length^(0+128),w
  2432  0196  0022               	movlb	2	; select bank2
  2433  0197  00D0               	movwf	_cdc_tx_len^(0+256)
  2434  0198  01CF               	clrf	_cdc_mem_type^(0+256)
  2435  0199  0ACF               	incf	_cdc_mem_type^(0+256),f
  2436  019A  0021               	movlb	1	; select bank1
  2437  019B  01C5               	clrf	_cdc_trf_state^(0+128)
  2438  019C  0AC5               	incf	_cdc_trf_state^(0+128),f
  2439  019D                     l8565:	
  2440                           
  2441                           ;usb_device_cdc.c: 584: }
  2442                           ;usb_device_cdc.c: 585: {PIE2bits.USBIE = 1;};
  2443  019D  1512               	bsf	18,2	;volatile
  2444  019E  0008               	return
  2445  019F                     __end_of_putUSBUSART:	
  2446  019F                     __ptext27:	
  2447 ;; *************** function _CDCTxService *****************
  2448 ;; Defined at:
  2449 ;;		line 835 in file "mcc_generated_files/usb/usb_device_cdc.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  byte_to_send    1   20[BANK1 ] unsigned char 
  2454 ;;  i               1   19[BANK1 ] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 1F/1D
  2461 ;;		On exit  : 1F/1
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:   11
  2471 ;; This function calls:
  2472 ;;		_USBTransferOnePacket
  2473 ;; This function is called by:
  2474 ;;		_usb_task
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _CDCTxService
  2480  019F                     _CDCTxService:	
  2481                           
  2482                           ;usb_device_cdc.c: 837: uint8_t byte_to_send;
  2483                           ;usb_device_cdc.c: 838: uint8_t i;
  2484                           ;usb_device_cdc.c: 840: {PIE2bits.USBIE = 0;};
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _CDCTxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2488  019F  0021               	movlb	1	; select bank1
  2489  01A0  1112               	bcf	18,2	;volatile
  2490                           
  2491                           ;usb_device_cdc.c: 842: {};
  2492                           ;usb_device_cdc.c: 844: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  2493  01A1  0022               	movlb	2	; select bank2
  2494  01A2  0832               	movf	_CDCDataInHandle^(0+256),w
  2495  01A3  0433               	iorwf	(_CDCDataInHandle+1)^(0+256),w
  2496  01A4  1903               	btfsc	3,2
  2497  01A5  29AF               	goto	l8575
  2498  01A6  0832               	movf	_CDCDataInHandle^(0+256),w
  2499  01A7  0086               	movwf	6
  2500  01A8  0833               	movf	(_CDCDataInHandle+1)^(0+256),w
  2501  01A9  0087               	movwf	7
  2502  01AA  1F81               	btfss	1,7
  2503  01AB  29AF               	goto	l8575
  2504                           
  2505                           ;usb_device_cdc.c: 845: {
  2506                           ;usb_device_cdc.c: 846: {PIE2bits.USBIE = 1;};
  2507  01AC  0021               	movlb	1	; select bank1
  2508  01AD  1512               	bsf	18,2	;volatile
  2509                           
  2510                           ;usb_device_cdc.c: 847: return;
  2511  01AE  0008               	return
  2512  01AF                     l8575:	
  2513                           
  2514                           ;usb_device_cdc.c: 848: }
  2515                           ;usb_device_cdc.c: 855: if(cdc_trf_state == 3)
  2516  01AF  3003               	movlw	3
  2517  01B0  0021               	movlb	1	; select bank1
  2518  01B1  0645               	xorwf	_cdc_trf_state^(0+128),w
  2519  01B2  1903               	btfsc	3,2
  2520                           
  2521                           ;usb_device_cdc.c: 856: cdc_trf_state = 0;
  2522  01B3  01C5               	clrf	_cdc_trf_state^(0+128)
  2523                           
  2524                           ;usb_device_cdc.c: 861: if(cdc_trf_state == 0)
  2525  01B4  0845               	movf	_cdc_trf_state^(0+128),w
  2526  01B5  1D03               	btfss	3,2
  2527  01B6  29B9               	goto	l8583
  2528                           
  2529                           ;usb_device_cdc.c: 862: {
  2530                           ;usb_device_cdc.c: 863: {PIE2bits.USBIE = 1;};
  2531  01B7  1512               	bsf	18,2	;volatile
  2532                           
  2533                           ;usb_device_cdc.c: 864: return;
  2534  01B8  0008               	return
  2535  01B9                     l8583:	
  2536                           
  2537                           ;usb_device_cdc.c: 865: }
  2538                           ;usb_device_cdc.c: 870: if(cdc_trf_state == 2)
  2539  01B9  3002               	movlw	2
  2540  01BA  0645               	xorwf	_cdc_trf_state^(0+128),w
  2541  01BB  1D03               	btfss	3,2
  2542  01BC  29D0               	goto	l8589
  2543  01BD  3002               	movlw	2
  2544                           
  2545                           ;usb_device_cdc.c: 871: {
  2546                           ;usb_device_cdc.c: 872: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  2547  01BE  01D1               	clrf	USBTransferOnePacket@dir^(0+128)
  2548  01BF  0AD1               	incf	USBTransferOnePacket@dir^(0+128),f
  2549  01C0  01D2               	clrf	USBTransferOnePacket@data^(0+128)
  2550  01C1  01D3               	clrf	(USBTransferOnePacket@data+1)^(0+128)
  2551  01C2  01D4               	clrf	USBTransferOnePacket@len^(0+128)
  2552  01C3  2231  3180         	fcall	_USBTransferOnePacket
  2553  01C5  0852               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  2554  01C6  0022               	movlb	2	; select bank2
  2555  01C7  00B3               	movwf	(_CDCDataInHandle+1)^(0+256)
  2556  01C8  0021               	movlb	1	; select bank1
  2557  01C9  0851               	movf	?_USBTransferOnePacket^(0+128),w
  2558  01CA  0022               	movlb	2	; select bank2
  2559  01CB  00B2               	movwf	_CDCDataInHandle^(0+256)
  2560                           
  2561                           ;usb_device_cdc.c: 874: cdc_trf_state = 3;
  2562  01CC  3003               	movlw	3
  2563  01CD  0021               	movlb	1	; select bank1
  2564  01CE  00C5               	movwf	_cdc_trf_state^(0+128)
  2565                           
  2566                           ;usb_device_cdc.c: 875: }
  2567  01CF  2A2E               	goto	l8637
  2568  01D0                     l8589:	
  2569                           
  2570                           ;usb_device_cdc.c: 876: else if(cdc_trf_state == 1)
  2571  01D0  0B45               	decfsz	_cdc_trf_state^(0+128),w
  2572  01D1  2A2E               	goto	l8637
  2573                           
  2574                           ;usb_device_cdc.c: 877: {
  2575                           ;usb_device_cdc.c: 881: if(cdc_tx_len > sizeof(cdc_data_tx))
  2576  01D2  3041               	movlw	65
  2577  01D3  0022               	movlb	2	; select bank2
  2578  01D4  0250               	subwf	_cdc_tx_len^(0+256),w
  2579  01D5  1C03               	skipc
  2580  01D6  29D9               	goto	l8595
  2581                           
  2582                           ;usb_device_cdc.c: 882: byte_to_send = sizeof(cdc_data_tx);
  2583  01D7  3040               	movlw	64
  2584  01D8  29DA               	goto	L10
  2585  01D9                     l8595:	
  2586                           
  2587                           ;usb_device_cdc.c: 883: else
  2588                           ;usb_device_cdc.c: 884: byte_to_send = cdc_tx_len;
  2589  01D9  0850               	movf	_cdc_tx_len^(0+256),w
  2590  01DA                     L10:	
  2591  01DA  0021               	movlb	1	; select bank1
  2592  01DB  00DD               	movwf	CDCTxService@byte_to_send^(0+128)
  2593                           
  2594                           ;usb_device_cdc.c: 889: cdc_tx_len = cdc_tx_len - byte_to_send;
  2595  01DC  0022               	movlb	2	; select bank2
  2596  01DD  02D0               	subwf	_cdc_tx_len^(0+256),f
  2597                           
  2598                           ;usb_device_cdc.c: 891: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  2599  01DE  30A0               	movlw	(low (_cdc_data_tx| (0+768)))& (0+255)
  2600  01DF  00B6               	movwf	_pCDCDst^(0+256)
  2601                           
  2602                           ;usb_device_cdc.c: 893: i = byte_to_send;
  2603  01E0  0021               	movlb	1	; select bank1
  2604  01E1  085D               	movf	CDCTxService@byte_to_send^(0+128),w
  2605  01E2  00DC               	movwf	CDCTxService@i^(0+128)
  2606                           
  2607                           ;usb_device_cdc.c: 894: if(cdc_mem_type == 0x00)
  2608  01E3  0022               	movlb	2	; select bank2
  2609  01E4  084F               	movf	_cdc_mem_type^(0+256),w
  2610  01E5  1903               	btfsc	3,2
  2611  01E6  29F7               	goto	l8615
  2612  01E7  2A0B               	goto	l8625
  2613  01E8                     l8607:	
  2614                           
  2615                           ;usb_device_cdc.c: 897: {
  2616                           ;usb_device_cdc.c: 898: *pCDCDst.bRam = *pCDCSrc.bRom;
  2617  01E8  0022               	movlb	2	; select bank2
  2618  01E9  0836               	movf	_pCDCDst^(0+256),w
  2619  01EA  0086               	movwf	6
  2620  01EB  3003               	movlw	3	; select bank6/7
  2621  01EC  0087               	movwf	7
  2622  01ED  0838               	movf	_pCDCSrc^(0+256),w
  2623  01EE  0084               	movwf	4
  2624  01EF  3003               	movlw	3	; select bank6/7
  2625  01F0  0085               	movwf	5
  2626  01F1  0800               	movf	0,w
  2627  01F2  0081               	movwf	1
  2628                           
  2629                           ;usb_device_cdc.c: 899: pCDCDst.bRam++;
  2630  01F3  0AB6               	incf	_pCDCDst^(0+256),f
  2631                           
  2632                           ;usb_device_cdc.c: 900: pCDCSrc.bRom++;
  2633  01F4  0AB8               	incf	_pCDCSrc^(0+256),f
  2634                           
  2635                           ;usb_device_cdc.c: 901: i--;
  2636  01F5  0021               	movlb	1	; select bank1
  2637  01F6  03DC               	decf	CDCTxService@i^(0+128),f
  2638  01F7                     l8615:	
  2639  01F7  0021               	movlb	1	; select bank1
  2640  01F8  085C               	movf	CDCTxService@i^(0+128),w
  2641  01F9  1903               	btfsc	3,2
  2642  01FA  2A0F               	goto	l8627
  2643  01FB  29E8               	goto	l8607
  2644  01FC                     l8617:	
  2645                           
  2646                           ;usb_device_cdc.c: 907: {
  2647                           ;usb_device_cdc.c: 908: *pCDCDst.bRam = *pCDCSrc.bRam;
  2648  01FC  0022               	movlb	2	; select bank2
  2649  01FD  0836               	movf	_pCDCDst^(0+256),w
  2650  01FE  0086               	movwf	6
  2651  01FF  3003               	movlw	3	; select bank6/7
  2652  0200  0087               	movwf	7
  2653  0201  0838               	movf	_pCDCSrc^(0+256),w
  2654  0202  0084               	movwf	4
  2655  0203  3003               	movlw	3	; select bank6/7
  2656  0204  0085               	movwf	5
  2657  0205  0800               	movf	0,w
  2658  0206  0081               	movwf	1
  2659                           
  2660                           ;usb_device_cdc.c: 909: pCDCDst.bRam++;
  2661  0207  0AB6               	incf	_pCDCDst^(0+256),f
  2662                           
  2663                           ;usb_device_cdc.c: 910: pCDCSrc.bRam++;
  2664  0208  0AB8               	incf	_pCDCSrc^(0+256),f
  2665                           
  2666                           ;usb_device_cdc.c: 911: i--;
  2667  0209  0021               	movlb	1	; select bank1
  2668  020A  03DC               	decf	CDCTxService@i^(0+128),f
  2669  020B                     l8625:	
  2670  020B  0021               	movlb	1	; select bank1
  2671  020C  085C               	movf	CDCTxService@i^(0+128),w
  2672  020D  1D03               	btfss	3,2
  2673  020E  29FC               	goto	l8617
  2674  020F                     l8627:	
  2675                           
  2676                           ;usb_device_cdc.c: 912: }
  2677                           ;usb_device_cdc.c: 913: }
  2678                           ;usb_device_cdc.c: 919: if(cdc_tx_len == 0)
  2679  020F  0022               	movlb	2	; select bank2
  2680  0210  0850               	movf	_cdc_tx_len^(0+256),w
  2681  0211  1D03               	btfss	3,2
  2682  0212  2A1C               	goto	l8635
  2683                           
  2684                           ;usb_device_cdc.c: 920: {
  2685                           ;usb_device_cdc.c: 921: if(byte_to_send == 64)
  2686  0213  3040               	movlw	64
  2687  0214  0021               	movlb	1	; select bank1
  2688  0215  065D               	xorwf	CDCTxService@byte_to_send^(0+128),w
  2689  0216  1D03               	btfss	3,2
  2690  0217  2A1A               	goto	l8633
  2691                           
  2692                           ;usb_device_cdc.c: 922: cdc_trf_state = 2;
  2693  0218  3002               	movlw	2
  2694  0219  2A1B               	goto	L11
  2695  021A                     l8633:	
  2696                           
  2697                           ;usb_device_cdc.c: 923: else
  2698                           ;usb_device_cdc.c: 924: cdc_trf_state = 3;
  2699  021A  3003               	movlw	3
  2700  021B                     L11:	
  2701  021B  00C5               	movwf	_cdc_trf_state^(0+128)
  2702  021C                     l8635:	
  2703                           
  2704                           ;usb_device_cdc.c: 925: }
  2705                           ;usb_device_cdc.c: 926: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  2706  021C  0021               	movlb	1	; select bank1
  2707  021D  30A0               	movlw	low _cdc_data_tx
  2708  021E  01D1               	clrf	USBTransferOnePacket@dir^(0+128)
  2709  021F  0AD1               	incf	USBTransferOnePacket@dir^(0+128),f
  2710  0220  00D2               	movwf	USBTransferOnePacket@data^(0+128)
  2711  0221  3003               	movlw	high _cdc_data_tx
  2712  0222  00D3               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  2713  0223  085D               	movf	CDCTxService@byte_to_send^(0+128),w
  2714  0224  00D4               	movwf	USBTransferOnePacket@len^(0+128)
  2715  0225  3002               	movlw	2
  2716  0226  2231               	fcall	_USBTransferOnePacket
  2717  0227  0852               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  2718  0228  0022               	movlb	2	; select bank2
  2719  0229  00B3               	movwf	(_CDCDataInHandle+1)^(0+256)
  2720  022A  0021               	movlb	1	; select bank1
  2721  022B  0851               	movf	?_USBTransferOnePacket^(0+128),w
  2722  022C  0022               	movlb	2	; select bank2
  2723  022D  00B2               	movwf	_CDCDataInHandle^(0+256)
  2724  022E                     l8637:	
  2725                           
  2726                           ;usb_device_cdc.c: 928: }
  2727                           ;usb_device_cdc.c: 930: {PIE2bits.USBIE = 1;};
  2728  022E  0021               	movlb	1	; select bank1
  2729  022F  1512               	bsf	18,2	;volatile
  2730  0230  0008               	return
  2731  0231                     __end_of_CDCTxService:	
  2732  0231                     __ptext34:	
  2733 ;; *************** function _USBTransferOnePacket *****************
  2734 ;; Defined at:
  2735 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  ep              1    wreg     unsigned char 
  2738 ;;  dir             1    8[BANK1 ] unsigned char 
  2739 ;;  data            2    9[BANK1 ] PTR unsigned char 
  2740 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
  2741 ;;  len             1   11[BANK1 ] unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  ep              1   16[BANK1 ] unsigned char 
  2744 ;;  handle          2   17[BANK1 ] PTR volatile struct __BD
  2745 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  2    8[BANK1 ] PTR void 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2750 ;; Tracked objects:
  2751 ;;		On entry : 1F/1
  2752 ;;		On exit  : 1F/1
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2755 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2757 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2758 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  2759 ;;Total ram usage:       11 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:   10
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_CDCInitEP
  2766 ;;		_getsUSBUSART
  2767 ;;		_CDCTxService
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           
  2772                           ;psect for function _USBTransferOnePacket
  2773  0231                     _USBTransferOnePacket:	
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  2777                           ;USBTransferOnePacket@ep stored from wreg
  2778  0231  00D9               	movwf	USBTransferOnePacket@ep^(0+128)
  2779                           
  2780                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  2781                           ;usb_device.c: 1000: if(dir != 0)
  2782  0232  0851               	movf	USBTransferOnePacket@dir^(0+128),w
  2783  0233  1903               	btfsc	3,2
  2784  0234  2A3D               	goto	l7399
  2785                           
  2786                           ;usb_device.c: 1001: {
  2787                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  2788  0235  3559               	lslf	USBTransferOnePacket@ep^(0+128),w
  2789  0236  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2790  0237  0086               	movwf	6
  2791  0238  0187               	clrf	7
  2792  0239  3F40               	moviw [0]fsr1
  2793  023A  00DA               	movwf	USBTransferOnePacket@handle^(0+128)
  2794  023B  3F41               	moviw [1]fsr1
  2795  023C  2A45               	goto	L27
  2796  023D                     l7399:	
  2797                           ;usb_device.c: 1004: }
  2798                           
  2799                           
  2800                           ;usb_device.c: 1005: else
  2801                           ;usb_device.c: 1006: {
  2802                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  2803  023D  3559               	lslf	USBTransferOnePacket@ep^(0+128),w
  2804  023E  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2805  023F  0086               	movwf	6
  2806  0240  3001               	movlw	1	; select bank2/3
  2807  0241  0087               	movwf	7
  2808  0242  3F40               	moviw [0]fsr1
  2809  0243  00DA               	movwf	USBTransferOnePacket@handle^(0+128)
  2810  0244  3F41               	moviw [1]fsr1
  2811  0245                     L27:	
  2812  0245  00DB               	movwf	(USBTransferOnePacket@handle+1)^(0+128)
  2813                           
  2814                           ;usb_device.c: 1009: }
  2815                           ;usb_device.c: 1013: if(handle == 0)
  2816  0246  045A               	iorwf	USBTransferOnePacket@handle^(0+128),w
  2817  0247  1D03               	btfss	3,2
  2818  0248  2A4C               	goto	l7407
  2819                           
  2820                           ;usb_device.c: 1014: {
  2821                           ;usb_device.c: 1015: return 0;
  2822  0249  01D1               	clrf	?_USBTransferOnePacket^(0+128)
  2823  024A  01D2               	clrf	(?_USBTransferOnePacket+1)^(0+128)
  2824  024B  0008               	return
  2825  024C                     l7407:	
  2826                           
  2827                           ;usb_device.c: 1016: }
  2828                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  2829  024C  0852               	movf	USBTransferOnePacket@data^(0+128),w
  2830  024D  00D5               	movwf	??_USBTransferOnePacket^(0+128)
  2831  024E  307F               	movlw	127
  2832  024F  0553               	andwf	(USBTransferOnePacket@data+1)^(0+128),w
  2833  0250  00D6               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  2834  0251  085A               	movf	USBTransferOnePacket@handle^(0+128),w
  2835  0252  0086               	movwf	6
  2836  0253  085B               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  2837  0254  0087               	movwf	7
  2838  0255  3142               	addfsr 1,2
  2839  0256  0855               	movf	??_USBTransferOnePacket^(0+128),w
  2840  0257  3FC0               	movwi [0]fsr1
  2841  0258  0856               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  2842  0259  3FC1               	movwi [1]fsr1
  2843                           
  2844                           ;usb_device.c: 1030: handle->CNT = len;
  2845  025A  085A               	movf	USBTransferOnePacket@handle^(0+128),w
  2846  025B  3E01               	addlw	1
  2847  025C  00D5               	movwf	??_USBTransferOnePacket^(0+128)
  2848  025D  3000               	movlw	0
  2849  025E  3D5B               	addwfc	(USBTransferOnePacket@handle+1)^(0+128),w
  2850  025F  00D6               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  2851  0260  0855               	movf	??_USBTransferOnePacket^(0+128),w
  2852  0261  0086               	movwf	6
  2853  0262  0856               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  2854  0263  0087               	movwf	7
  2855  0264  0854               	movf	USBTransferOnePacket@len^(0+128),w
  2856  0265  0081               	movwf	1
  2857                           
  2858                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  2859  0266  085A               	movf	USBTransferOnePacket@handle^(0+128),w
  2860  0267  0086               	movwf	6
  2861  0268  085B               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  2862  0269  0087               	movwf	7
  2863  026A  3040               	movlw	64
  2864  026B  0581               	andwf	1,f
  2865                           
  2866                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  2867  026C  085A               	movf	USBTransferOnePacket@handle^(0+128),w
  2868  026D  0086               	movwf	6
  2869  026E  085B               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  2870  026F  0087               	movwf	7
  2871  0270  1581               	bsf	1,3
  2872                           
  2873                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  2874  0271  085A               	movf	USBTransferOnePacket@handle^(0+128),w
  2875  0272  0086               	movwf	6
  2876  0273  085B               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  2877  0274  0087               	movwf	7
  2878  0275  1781               	bsf	1,7
  2879                           
  2880                           ;usb_device.c: 1036: if(dir != 0)
  2881  0276  0851               	movf	USBTransferOnePacket@dir^(0+128),w
  2882  0277  1903               	btfsc	3,2
  2883  0278  2A8E               	goto	l7417
  2884                           
  2885                           ;usb_device.c: 1037: {
  2886                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  2887  0279  3559               	lslf	USBTransferOnePacket@ep^(0+128),w
  2888  027A  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2889  027B  0086               	movwf	6
  2890  027C  0187               	clrf	7
  2891  027D  3F40               	moviw [0]fsr1
  2892  027E  00D5               	movwf	??_USBTransferOnePacket^(0+128)
  2893  027F  3F41               	moviw [1]fsr1
  2894  0280  00D6               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  2895  0281  3004               	movlw	4
  2896  0282  0655               	xorwf	??_USBTransferOnePacket^(0+128),w
  2897  0283  00D7               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  2898  0284  0856               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  2899  0285  00D8               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  2900  0286  3559               	lslf	USBTransferOnePacket@ep^(0+128),w
  2901  0287  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2902  0288  0086               	movwf	6
  2903  0289  0857               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  2904  028A  3FC0               	movwi [0]fsr1
  2905  028B  0858               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  2906  028C  3FC1               	movwi [1]fsr1
  2907                           
  2908                           ;usb_device.c: 1040: }
  2909  028D  2AA3               	goto	l7419
  2910  028E                     l7417:	
  2911                           
  2912                           ;usb_device.c: 1041: else
  2913                           ;usb_device.c: 1042: {
  2914                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  2915  028E  3559               	lslf	USBTransferOnePacket@ep^(0+128),w
  2916  028F  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2917  0290  0086               	movwf	6
  2918  0291  3001               	movlw	1	; select bank2/3
  2919  0292  0087               	movwf	7
  2920  0293  3F40               	moviw [0]fsr1
  2921  0294  00D5               	movwf	??_USBTransferOnePacket^(0+128)
  2922  0295  3F41               	moviw [1]fsr1
  2923  0296  00D6               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  2924  0297  3004               	movlw	4
  2925  0298  0655               	xorwf	??_USBTransferOnePacket^(0+128),w
  2926  0299  00D7               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  2927  029A  0856               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  2928  029B  00D8               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  2929  029C  3559               	lslf	USBTransferOnePacket@ep^(0+128),w
  2930  029D  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2931  029E  0086               	movwf	6
  2932  029F  0857               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  2933  02A0  3FC0               	movwi [0]fsr1
  2934  02A1  0858               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  2935  02A2  3FC1               	movwi [1]fsr1
  2936  02A3                     l7419:	
  2937                           
  2938                           ;usb_device.c: 1045: }
  2939                           ;usb_device.c: 1046: return (void*)handle;
  2940  02A3  085B               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  2941  02A4  00D2               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  2942  02A5  085A               	movf	USBTransferOnePacket@handle^(0+128),w
  2943  02A6  00D1               	movwf	?_USBTransferOnePacket^(0+128)
  2944  02A7  0008               	return
  2945  02A8                     __end_of_USBTransferOnePacket:	
  2946  02A8                     __ptext2:	
  2947 ;; *************** function _USBDeviceTasks *****************
  2948 ;; Defined at:
  2949 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  i               1    8[BANK2 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 1E/1
  2960 ;;		On exit  : 1F/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;      Totals:         0       0       1       1       0       0       0       0       0       0       0       0       
      +0       0
  2967 ;;Total ram usage:        2 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:   18
  2970 ;; This function calls:
  2971 ;;		_USBCtrlEPAllowStatusStage
  2972 ;;		_USBCtrlEPService
  2973 ;;		_USBDeviceInit
  2974 ;;		_USBIncrement1msInternalTimers
  2975 ;;		_USBStallHandler
  2976 ;;		_USBSuspend
  2977 ;;		_USBWakeFromSuspend
  2978 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2979 ;; This function is called by:
  2980 ;;		_usb_task
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _USBDeviceTasks
  2986  02A8                     _USBDeviceTasks:	
  2987                           
  2988                           ;usb_device.c: 479: uint8_t i;
  2989                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  2990                           
  2991                           ;incstack = 0
  2992 ;; hardware stack exceeded
  2993                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2994  02A8  0021               	movlb	1	; select bank1
  2995  02A9  0344               	decf	_USBDeviceState^(0+128),w	;volatile
  2996  02AA  1D03               	btfss	3,2
  2997  02AB  2AB5               	goto	l8651
  2998                           
  2999                           ;usb_device.c: 591: {
  3000                           ;usb_device.c: 601: if(!UCONbits.SE0)
  3001  02AC  003D               	movlb	29	; select bank29
  3002  02AD  1A8E               	btfsc	14,5	;volatile
  3003  02AE  2AB5               	goto	l8651
  3004                           
  3005                           ;usb_device.c: 602: {
  3006                           ;usb_device.c: 608: {UIR = 0;};
  3007  02AF  0190               	clrf	16	;volatile
  3008                           
  3009                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  3010  02B0  1412               	bsf	18,0	;volatile
  3011                           
  3012                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  3013  02B1  1612               	bsf	18,4	;volatile
  3014                           
  3015                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  3016  02B2  3002               	movlw	2
  3017  02B3  0021               	movlb	1	; select bank1
  3018  02B4  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
  3019  02B5                     l8651:	
  3020                           
  3021                           ;usb_device.c: 617: }
  3022                           ;usb_device.c: 618: }
  3023                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3024  02B5  003D               	movlb	29	; select bank29
  3025  02B6  1910               	btfsc	16,2	;volatile
  3026  02B7  1D12               	btfss	18,2	;volatile
  3027  02B8  2ABC               	goto	l8659
  3028                           
  3029                           ;usb_device.c: 635: {
  3030                           ;usb_device.c: 636: (UIR &= 0xFB);
  3031  02B9  1110               	bcf	16,2	;volatile
  3032                           
  3033                           ;usb_device.c: 640: USBWakeFromSuspend();
  3034  02BA  2650  3180         	fcall	_USBWakeFromSuspend
  3035  02BC                     l8659:	
  3036                           
  3037                           ;usb_device.c: 642: }
  3038                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  3039  02BC  003D               	movlb	29	; select bank29
  3040  02BD  1C8E               	btfss	14,1	;volatile
  3041  02BE  2AC2               	goto	l709
  3042                           
  3043                           ;usb_device.c: 648: {
  3044                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  3045  02BF  0020               	movlb	0	; select bank0
  3046  02C0  1112               	bcf	18,2	;volatile
  3047                           
  3048                           ;usb_device.c: 650: return;
  3049  02C1  0008               	return
  3050  02C2                     l709:	
  3051                           
  3052                           ;usb_device.c: 651: }
  3053                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3054  02C2  1810               	btfsc	16,0	;volatile
  3055  02C3  1C12               	btfss	18,0	;volatile
  3056  02C4  2ACC               	goto	l8673
  3057                           
  3058                           ;usb_device.c: 664: {
  3059                           ;usb_device.c: 665: USBDeviceInit();
  3060  02C5  209B  3180         	fcall	_USBDeviceInit
  3061                           
  3062                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  3063  02C7  1512               	bsf	18,2	;volatile
  3064                           
  3065                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  3066  02C8  3004               	movlw	4
  3067  02C9  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
  3068                           
  3069                           ;usb_device.c: 681: (UIR &= 0xFE);
  3070  02CA  003D               	movlb	29	; select bank29
  3071  02CB  1010               	bcf	16,0	;volatile
  3072  02CC                     l8673:	
  3073                           
  3074                           ;usb_device.c: 682: }
  3075                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  3076  02CC  1A10               	btfsc	16,4	;volatile
  3077  02CD  1E12               	btfss	18,4	;volatile
  3078  02CE  2AD1               	goto	l8679
  3079                           
  3080                           ;usb_device.c: 688: {
  3081                           ;usb_device.c: 694: USBSuspend();
  3082  02CF  2640  3180         	fcall	_USBSuspend
  3083  02D1                     l8679:	
  3084                           
  3085                           ;usb_device.c: 696: }
  3086                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  3087  02D1  003D               	movlb	29	; select bank29
  3088  02D2  1F10               	btfss	16,6	;volatile
  3089  02D3  2AEE               	goto	l8697
  3090                           
  3091                           ;usb_device.c: 709: {
  3092                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  3093  02D4  1F12               	btfss	18,6	;volatile
  3094  02D5  2AE1               	goto	l8685
  3095                           
  3096                           ;usb_device.c: 712: {
  3097                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  3098  02D6  3073               	movlw	115
  3099  02D7  0021               	movlb	1	; select bank1
  3100  02D8  00DC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3101  02D9  01DD               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  3102  02DA  01DE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3103  02DB  01DF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3104  02DC  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3105  02DD  0AE0               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128),f
  3106  02DE  01E1               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3107  02DF  2347  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3108  02E1                     l8685:	
  3109                           
  3110                           ;usb_device.c: 714: }
  3111                           ;usb_device.c: 715: (UIR &= 0xBF);
  3112  02E1  003D               	movlb	29	; select bank29
  3113  02E2  1310               	bcf	16,6	;volatile
  3114                           
  3115                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  3116  02E3  2611  3180         	fcall	_USBIncrement1msInternalTimers
  3117                           
  3118                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  3119  02E5  0021               	movlb	1	; select bank1
  3120  02E6  0835               	movf	_USBStatusStageTimeoutCounter^(0+128),w
  3121  02E7  1D03               	btfss	3,2
  3122                           
  3123                           ;usb_device.c: 736: {
  3124                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  3125  02E8  03B5               	decf	_USBStatusStageTimeoutCounter^(0+128),f	;volatile
  3126                           
  3127                           ;usb_device.c: 738: }
  3128                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  3129  02E9  0835               	movf	_USBStatusStageTimeoutCounter^(0+128),w	;volatile
  3130  02EA  1D03               	btfss	3,2
  3131  02EB  2AEE               	goto	l8697
  3132                           
  3133                           ;usb_device.c: 745: {
  3134                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  3135  02EC  2366  3180         	fcall	_USBCtrlEPAllowStatusStage
  3136  02EE                     l8697:	
  3137                           
  3138                           ;usb_device.c: 747: }
  3139                           ;usb_device.c: 749: }
  3140                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3141  02EE  003D               	movlb	29	; select bank29
  3142  02EF  1A90               	btfsc	16,5	;volatile
  3143  02F0  1E92               	btfss	18,5	;volatile
  3144  02F1  2AF4               	goto	l8703
  3145                           
  3146                           ;usb_device.c: 752: {
  3147                           ;usb_device.c: 753: USBStallHandler();
  3148  02F2  2622  3180         	fcall	_USBStallHandler
  3149  02F4                     l8703:	
  3150                           
  3151                           ;usb_device.c: 754: }
  3152                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  3153  02F4  1890               	btfsc	16,1	;volatile
  3154  02F5  1C92               	btfss	18,1	;volatile
  3155  02F6  2B05               	goto	l8711
  3156                           
  3157                           ;usb_device.c: 757: {
  3158                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  3159  02F7  30FF               	movlw	255
  3160  02F8  0021               	movlb	1	; select bank1
  3161  02F9  00DC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3162  02FA  307F               	movlw	127
  3163  02FB  00DD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  3164  02FC  01DE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3165  02FD  01DF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3166  02FE  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3167  02FF  0AE0               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128),f
  3168  0300  01E1               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3169  0301  2347  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3170                           
  3171                           ;usb_device.c: 759: {UEIR = 0;};
  3172  0303  003D               	movlb	29	; select bank29
  3173  0304  0193               	clrf	19	;volatile
  3174  0305                     l8711:	
  3175                           
  3176                           ;usb_device.c: 767: }
  3177                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  3178  0305  3004               	movlw	4
  3179  0306  0021               	movlb	1	; select bank1
  3180  0307  0244               	subwf	_USBDeviceState^(0+128),w	;volatile
  3181  0308  1803               	skipnc
  3182  0309  2B0D               	goto	l719
  3183                           
  3184                           ;usb_device.c: 775: {
  3185                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  3186  030A  0020               	movlb	0	; select bank0
  3187  030B  1112               	bcf	18,2	;volatile
  3188                           
  3189                           ;usb_device.c: 777: return;
  3190  030C  0008               	return
  3191  030D                     l719:	
  3192                           
  3193                           ;usb_device.c: 778: }
  3194                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  3195  030D  003D               	movlb	29	; select bank29
  3196  030E  1D92               	btfss	18,3	;volatile
  3197  030F  2B44               	goto	l720
  3198                           
  3199                           ;usb_device.c: 784: {
  3200                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  3201  0310  0022               	movlb	2	; select bank2
  3202  0311  01EA               	clrf	USBDeviceTasks@i^(0+256)
  3203  0312  2B41               	goto	l721
  3204  0313                     l8721:	
  3205                           
  3206                           ;usb_device.c: 788: {
  3207                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  3208  0313  080F               	movf	15,w	;volatile
  3209  0314  0021               	movlb	1	; select bank1
  3210  0315  00C7               	movwf	_USTATcopy^(0+128)	;volatile
  3211                           
  3212                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  3213  0316  0C47               	rrf	_USTATcopy^(0+128),w	;volatile
  3214  0317  00E6               	movwf	??_USBDeviceTasks^(0+128)
  3215  0318  0CE6               	rrf	??_USBDeviceTasks^(0+128),f
  3216  0319  0C66               	rrf	??_USBDeviceTasks^(0+128),w
  3217  031A  390F               	andlw	15
  3218  031B  00B6               	movwf	_endpoint_number^(0+128)	;volatile
  3219                           
  3220                           ;usb_device.c: 793: (UIR &= 0xF7);
  3221  031C  003D               	movlb	29	; select bank29
  3222  031D  1190               	bcf	16,3	;volatile
  3223                           
  3224                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  3225  031E  0021               	movlb	1	; select bank1
  3226  031F  1947               	btfsc	_USTATcopy^(0+128),2	;volatile
  3227  0320  2B24               	goto	l8731
  3228                           
  3229                           ;usb_device.c: 799: {
  3230                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  3231  0321  0836               	movf	_endpoint_number^(0+128),w	;volatile
  3232  0322  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3233  0323  2B26               	goto	L1
  3234  0324                     l8731:	
  3235                           ;usb_device.c: 801: }
  3236                           
  3237                           
  3238                           ;usb_device.c: 802: else
  3239                           ;usb_device.c: 803: {
  3240                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  3241  0324  0836               	movf	_endpoint_number^(0+128),w	;volatile
  3242  0325  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3243  0326                     L1:	
  3244  0326  0086               	movwf	6
  3245  0327  3001               	movlw	1	; select bank2/3
  3246  0328  0087               	movwf	7
  3247  0329  0681               	xorwf	1,f
  3248                           
  3249                           ;usb_device.c: 805: }
  3250                           ;usb_device.c: 810: if(endpoint_number == 0)
  3251  032A  0836               	movf	_endpoint_number^(0+128),w	;volatile
  3252  032B  1D03               	btfss	3,2
  3253  032C  2B30               	goto	l8737
  3254                           
  3255                           ;usb_device.c: 811: {
  3256                           ;usb_device.c: 812: USBCtrlEPService();
  3257  032D  23C6  3180         	fcall	_USBCtrlEPService
  3258                           
  3259                           ;usb_device.c: 813: }
  3260  032F  2B3B               	goto	l8739
  3261  0330                     l8737:	
  3262                           
  3263                           ;usb_device.c: 814: else
  3264                           ;usb_device.c: 815: {
  3265                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  3266  0330  3072               	movlw	114
  3267  0331  00DC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3268  0332  30C7               	movlw	low _USTATcopy
  3269  0333  01DD               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  3270  0334  00DE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3271  0335  3000               	movlw	high _USTATcopy
  3272  0336  00DF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3273  0337  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3274  0338  01E1               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3275  0339  2347  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3276  033B                     l8739:	
  3277  033B  0022               	movlb	2	; select bank2
  3278  033C  3004               	movlw	4
  3279  033D  0AEA               	incf	USBDeviceTasks@i^(0+256),f
  3280  033E  026A               	subwf	USBDeviceTasks@i^(0+256),w
  3281  033F  1803               	btfsc	3,0
  3282  0340  2B44               	goto	l720
  3283  0341                     l721:	
  3284                           
  3285                           ;usb_device.c: 786: {
  3286                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  3287  0341  003D               	movlb	29	; select bank29
  3288  0342  1990               	btfsc	16,3	;volatile
  3289  0343  2B13               	goto	l8721
  3290  0344                     l720:	
  3291                           
  3292                           ;usb_device.c: 822: }
  3293                           ;usb_device.c: 823: }
  3294                           ;usb_device.c: 824: }
  3295                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  3296  0344  0020               	movlb	0	; select bank0
  3297  0345  1112               	bcf	18,2	;volatile
  3298  0346  0008               	return
  3299  0347                     __end_of_USBDeviceTasks:	
  3300  0347                     __ptext17:	
  3301 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  3302 ;; Defined at:
  3303 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  event           2   19[BANK1 ] enum E34
  3306 ;;  pdata           2   21[BANK1 ] PTR void 
  3307 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
  3308 ;;		 -> NULL(0), 
  3309 ;;  size            2   23[BANK1 ] unsigned int 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      unsigned char 
  3314 ;; Registers used:
  3315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 1F/1
  3318 ;;		On exit  : 1E/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3321 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;Total ram usage:        6 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:   13
  3328 ;; This function calls:
  3329 ;;		_CDCInitEP
  3330 ;;		_USBCheckCDCRequest
  3331 ;; This function is called by:
  3332 ;;		_USBDeviceTasks
  3333 ;;		_USBStdSetCfgHandler
  3334 ;;		_USBSuspend
  3335 ;;		_USBWakeFromSuspend
  3336 ;;		_USBCtrlTrfSetupHandler
  3337 ;;		_USBCheckStdRequest
  3338 ;;		_USBStdFeatureReqHandler
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  3344  0347                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  3345  0347                     l7547:	
  3346                           ;incstack = 0
  3347                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  3348                           
  3349                           
  3350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3351                           ; Switch size 1, requested type "speed"
  3352                           ; Number of cases is 2, Range of values is 0 to 127
  3353                           ; switch strategies available:
  3354                           ; Name         Instructions Cycles
  3355                           ; simple_byte            7     4 (average)
  3356                           ; direct_byte          262     6 (fixed)
  3357                           ; jumptable            260     6 (fixed)
  3358                           ;	Chosen strategy is simple_byte
  3359                           
  3360                           ;usb_device_events.c: 86: break;
  3361                           
  3362                           ;usb_device_events.c: 51: switch( (int) event )
  3363  0347  085D               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
  3364  0348  3A00               	xorlw	0	; case 0
  3365  0349  1903               	skipnz
  3366  034A  2B53               	goto	l9993
  3367  034B  3A7F               	xorlw	127	; case 127
  3368  034C  1903               	skipnz
  3369  034D  2B60               	goto	l9995
  3370  034E  2B65               	goto	l560
  3371  034F                     l7549:	
  3372                           
  3373                           ;usb_device_events.c: 76: CDCInitEP();
  3374  034F  319D  2DF8         	ljmp	l7489
  3375  0351                     l7551:	
  3376                           ;usb_device_events.c: 77: break;
  3377                           
  3378                           
  3379                           ;usb_device_events.c: 85: USBCheckCDCRequest();
  3380  0351  319C  2C9F         	ljmp	l7439
  3381  0353                     l9993:	
  3382                           
  3383                           ; Switch size 1, requested type "speed"
  3384                           ; Number of cases is 8, Range of values is 1 to 117
  3385                           ; switch strategies available:
  3386                           ; Name         Instructions Cycles
  3387                           ; direct_byte          243     9 (fixed)
  3388                           ; simple_byte           25    13 (average)
  3389                           ; jumptable            263     9 (fixed)
  3390                           ;	Chosen strategy is direct_byte
  3391  0353  085C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  3392  0354  3EFF               	addlw	-1
  3393  0355  1C03               	skipc
  3394  0356  0008               	return
  3395  0357  0084               	movwf	4
  3396  0358  3075               	movlw	117
  3397  0359  0204               	subwf	4,w
  3398  035A  1803               	skipnc
  3399  035B  0008               	return
  3400  035C  3190               	movlp	high S9997
  3401  035D  3504               	lslf	4,w
  3402  035E  3E00               	addlw	low S9997
  3403  035F  0082               	movwf	2
  3404  0360                     l9995:	
  3405                           
  3406                           ; Switch size 1, requested type "speed"
  3407                           ; Number of cases is 1, Range of values is 255 to 255
  3408                           ; switch strategies available:
  3409                           ; Name         Instructions Cycles
  3410                           ; simple_byte            4     3 (average)
  3411                           ; direct_byte            7     5 (fixed)
  3412                           ; jumptable            263     9 (fixed)
  3413                           ;	Chosen strategy is simple_byte
  3414  0360  085C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  3415  0361  3AFF               	xorlw	255	; case 255
  3416  0362  1903               	skipnz
  3417  0363  2B65               	goto	l560
  3418  0364  2B65               	goto	l560
  3419  0365                     l560:	
  3420  0365  0008               	return
  3421  0366                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  3422  0366                     __ptext24:	
  3423 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  3424 ;; Defined at:
  3425 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 1E/1
  3436 ;;		On exit  : 1C/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3441 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3442 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3443 ;;Total ram usage:        2 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:   10
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_USBDeviceTasks
  3450 ;;		_USBCtrlEPServiceComplete
  3451 ;;		_USBCtrlTrfRxService
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function _USBCtrlEPAllowStatusStage
  3457  0366                     _USBCtrlEPAllowStatusStage:	
  3458  0366                     l7685:	
  3459                           ;incstack = 0
  3460                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  3461                           
  3462                           
  3463                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  3464  0366  0022               	movlb	2	; select bank2
  3465  0367  083E               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
  3466  0368  1D03               	btfss	3,2
  3467  0369  0008               	return
  3468                           
  3469                           ;usb_device.c: 1424: {
  3470                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  3471  036A  3001               	movlw	1
  3472  036B  00BE               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3473                           
  3474                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  3475  036C  083D               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
  3476  036D  1D03               	btfss	3,2
  3477  036E  0008               	return
  3478                           
  3479                           ;usb_device.c: 1427: {
  3480                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  3481  036F  3001               	movlw	1
  3482  0370  00BD               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3483                           
  3484                           ;usb_device.c: 1432: if(controlTransferState == 2)
  3485  0371  3002               	movlw	2
  3486  0372  0021               	movlb	1	; select bank1
  3487  0373  0637               	xorwf	_controlTransferState^(0+128),w	;volatile
  3488  0374  1D03               	btfss	3,2
  3489  0375  2B88               	goto	l7701
  3490                           
  3491                           ;usb_device.c: 1433: {
  3492                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  3493  0376  0827               	movf	_pBDTEntryIn^(0+128),w
  3494  0377  0086               	movwf	6
  3495  0378  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  3496  0379  0087               	movwf	7
  3497  037A  3141               	addfsr 1,1
  3498  037B  0181               	clrf	1
  3499                           
  3500                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  3501  037C  0827               	movf	_pBDTEntryIn^(0+128),w
  3502  037D  0086               	movwf	6
  3503  037E  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  3504  037F  0087               	movwf	7
  3505  0380  3048               	movlw	72
  3506  0381  0081               	movwf	1
  3507                           
  3508                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3509  0382  0827               	movf	_pBDTEntryIn^(0+128),w
  3510  0383  0086               	movwf	6
  3511  0384  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  3512  0385  0087               	movwf	7
  3513  0386  1781               	bsf	1,7
  3514                           
  3515                           ;usb_device.c: 1437: }
  3516  0387  0008               	return
  3517  0388                     l7701:	
  3518                           
  3519                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  3520  0388  0B37               	decfsz	_controlTransferState^(0+128),w	;volatile
  3521  0389  0008               	return
  3522                           
  3523                           ;usb_device.c: 1439: {
  3524                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  3525  038A  0022               	movlb	2	; select bank2
  3526  038B  01BF               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  3527                           
  3528                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 16;
  3529  038C  0021               	movlb	1	; select bank1
  3530  038D  0A39               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  3531  038E  0086               	movwf	6
  3532  038F  3010               	movlw	16
  3533  0390  0187               	clrf	7
  3534  0391  0081               	movwf	1
  3535                           
  3536                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3537  0392  3050               	movlw	80
  3538  0393  00D1               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  3539  0394  01D2               	clrf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  3540  0395  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3541  0396  3E02               	addlw	2
  3542  0397  0086               	movwf	6
  3543  0398  0851               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  3544  0399  3FC0               	movwi [0]fsr1
  3545  039A  0852               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  3546  039B  3FC1               	movwi [1]fsr1
  3547                           
  3548                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  3549  039C  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3550  039D  0086               	movwf	6
  3551  039E  3004               	movlw	4
  3552  039F  0081               	movwf	1
  3553                           
  3554                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  3555  03A0  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3556  03A1  0086               	movwf	6
  3557  03A2  3001               	movlw	1
  3558  03A3  1781               	bsf	1,7
  3559                           
  3560                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  3561  03A4  0022               	movlb	2	; select bank2
  3562  03A5  00BF               	movwf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  3563                           
  3564                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 16;
  3565  03A6  0021               	movlb	1	; select bank1
  3566  03A7  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3567  03A8  3E01               	addlw	1
  3568  03A9  00D1               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  3569  03AA  3000               	movlw	0
  3570  03AB  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3571  03AC  00D2               	movwf	(??_USBCtrlEPAllowStatusStage+1)^(0+128)
  3572  03AD  0851               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  3573  03AE  0086               	movwf	6
  3574  03AF  0852               	movf	(??_USBCtrlEPAllowStatusStage+1)^(0+128),w
  3575  03B0  0087               	movwf	7
  3576  03B1  3010               	movlw	16
  3577  03B2  0081               	movwf	1
  3578                           
  3579                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3580  03B3  3050               	movlw	80
  3581  03B4  00D1               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  3582  03B5  01D2               	clrf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  3583  03B6  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3584  03B7  0086               	movwf	6
  3585  03B8  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3586  03B9  0087               	movwf	7
  3587  03BA  3142               	addfsr 1,2
  3588  03BB  0851               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  3589  03BC  3FC0               	movwi [0]fsr1
  3590  03BD  0852               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  3591  03BE  3FC1               	movwi [1]fsr1
  3592                           
  3593                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  3594  03BF  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3595  03C0  0086               	movwf	6
  3596  03C1  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3597  03C2  0087               	movwf	7
  3598  03C3  3080               	movlw	128
  3599  03C4  0081               	movwf	1
  3600  03C5  0008               	return
  3601  03C6                     __end_of_USBCtrlEPAllowStatusStage:	
  3602  03C6                     __ptext7:	
  3603 ;; *************** function _USBCtrlEPService *****************
  3604 ;; Defined at:
  3605 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 1F/1
  3616 ;;		On exit  : 1C/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3621 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;Total ram usage:        3 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:   17
  3626 ;; This function calls:
  3627 ;;		_USBCtrlTrfInHandler
  3628 ;;		_USBCtrlTrfOutHandler
  3629 ;;		_USBCtrlTrfSetupHandler
  3630 ;; This function is called by:
  3631 ;;		_USBDeviceTasks
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           
  3636                           ;psect for function _USBCtrlEPService
  3637  03C6                     _USBCtrlEPService:	
  3638                           
  3639                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  3640                           
  3641                           ;incstack = 0
  3642 ;; hardware stack exceeded
  3643                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3644  03C6  302D               	movlw	45
  3645  03C7  00B5               	movwf	_USBStatusStageTimeoutCounter^(0+128)	;volatile
  3646                           
  3647                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  3648  03C8  0847               	movf	_USTATcopy^(0+128),w	;volatile
  3649  03C9  39FD               	andlw	253
  3650  03CA  1D03               	btfss	3,2
  3651  03CB  2BFE               	goto	l8501
  3652                           
  3653                           ;usb_device.c: 2383: {
  3654                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  3655  03CC  3647               	lsrf	_USTATcopy^(0+128),w	;volatile
  3656  03CD  393F               	andlw	63
  3657  03CE  0709               	addwf	9,w
  3658  03CF  0709               	addwf	9,w
  3659  03D0  3E20               	addlw	32
  3660  03D1  00B9               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  3661                           
  3662                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  3663  03D2  00B2               	movwf	_pBDTEntryEP0OutNext^(0+128)
  3664  03D3  39FF               	andlw	255
  3665  03D4  1D03               	skipz
  3666  03D5  3000               	movlw	0
  3667  03D6  00B3               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  3668                           
  3669                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  3670  03D7  3004               	movlw	4
  3671  03D8  0632               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  3672  03D9  00B2               	movwf	_pBDTEntryEP0OutNext^(0+128)
  3673                           
  3674                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  3675  03DA  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3676  03DB  0086               	movwf	6
  3677  03DC  0187               	clrf	7
  3678  03DD  0C01               	rrf	1,w
  3679  03DE  0C89               	rrf	9,f
  3680  03DF  390F               	andlw	15
  3681  03E0  3A0D               	xorlw	13
  3682  03E1  1D03               	skipz
  3683  03E2  2BFD               	goto	l8499
  3684                           
  3685                           ;usb_device.c: 2400: {
  3686                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  3687  03E3  3050               	movlw	80
  3688  03E4  0086               	movwf	6
  3689  03E5  0021               	movlb	1	; select bank1
  3690  03E6  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3691  03E7  3E02               	addlw	2
  3692  03E8  0084               	movwf	4
  3693  03E9  0185               	clrf	5
  3694  03EA  3F00               	moviw [0]fsr0
  3695  03EB  0022               	movlb	2	; select bank2
  3696  03EC  00E7               	movwf	??_USBCtrlEPService^(0+256)
  3697  03ED  3F01               	moviw [1]fsr0
  3698  03EE  00E8               	movwf	(??_USBCtrlEPService^(0+256)+1)
  3699  03EF  0867               	movf	??_USBCtrlEPService^(0+256),w
  3700  03F0  0084               	movwf	4
  3701  03F1  0868               	movf	(??_USBCtrlEPService+1)^(0+256),w
  3702  03F2  0085               	movwf	5
  3703  03F3  3008               	movlw	8
  3704  03F4  00E9               	movwf	(??_USBCtrlEPService+2)^(0+256)
  3705  03F5  0869               	movf	(??_USBCtrlEPService+2)^(0+256),w
  3706  03F6  1903               	skipnz
  3707  03F7  2BFC               	goto	l8497
  3708  03F8                     u787m0:	
  3709  03F8  0012               	moviw fsr0++
  3710  03F9  001E               	movwi fsr1++
  3711  03FA  0BE9               	decfsz	(??_USBCtrlEPService+2)^(0+256),f
  3712  03FB  2BF8               	goto	u787m0
  3713  03FC                     l8497:	
  3714                           
  3715                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  3716  03FC  2C06               	ljmp	l8243
  3717  03FD                     l8499:	
  3718                           ;usb_device.c: 2409: }
  3719                           
  3720                           
  3721                           ;usb_device.c: 2410: else
  3722                           ;usb_device.c: 2411: {
  3723                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  3724  03FD  2F37               	ljmp	l8269
  3725  03FE                     l8501:	
  3726                           
  3727                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  3728  03FE  30FD               	movlw	253
  3729  03FF  0547               	andwf	_USTATcopy^(0+128),w	;volatile
  3730  0400  0022               	movlb	2	; select bank2
  3731  0401  00E7               	movwf	??_USBCtrlEPService^(0+256)
  3732  0402  3A04               	xorlw	4
  3733  0403  1D03               	btfss	3,2
  3734  0404  0008               	return
  3735                           
  3736                           ;usb_device.c: 2417: {
  3737                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  3738  0405  2E80               	ljmp	l8287
  3739  0406                     __end_of_USBCtrlEPService:	
  3740  0406                     __ptext8:	
  3741 ;; *************** function _USBCtrlTrfSetupHandler *****************
  3742 ;; Defined at:
  3743 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/1
  3754 ;;		On exit  : 1C/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;Total ram usage:        0 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:   16
  3764 ;; This function calls:
  3765 ;;		_USBCheckStdRequest
  3766 ;;		_USBCtrlEPServiceComplete
  3767 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3768 ;; This function is called by:
  3769 ;;		_USBCtrlEPService
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _USBCtrlTrfSetupHandler
  3775  0406                     _USBCtrlTrfSetupHandler:	
  3776  0406                     l8243:	
  3777                           ;incstack = 0
  3778 ;; hardware stack exceeded
  3779                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3780                           
  3781                           
  3782                           ;usb_device.c: 2470: shortPacketStatus = 0;
  3783  0406  0021               	movlb	1	; select bank1
  3784  0407  01B8               	clrf	_shortPacketStatus^(0+128)	;volatile
  3785                           
  3786                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  3787  0408  01B4               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
  3788                           
  3789                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  3790  0409  0022               	movlb	2	; select bank2
  3791  040A  01BC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3792                           
  3793                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  3794  040B  01BB               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3795                           
  3796                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  3797  040C  01BF               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  3798                           
  3799                           ;usb_device.c: 2475: controlTransferState = 0;
  3800  040D  0021               	movlb	1	; select bank1
  3801  040E  01B7               	clrf	_controlTransferState^(0+128)	;volatile
  3802                           
  3803                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  3804  040F  0827               	movf	_pBDTEntryIn^(0+128),w
  3805  0410  0086               	movwf	6
  3806  0411  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  3807  0412  0087               	movwf	7
  3808  0413  3004               	movlw	4
  3809  0414  1381               	bcf	1,7
  3810                           
  3811                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  3812  0415  0627               	xorwf	_pBDTEntryIn^(0+128),w
  3813  0416  00A7               	movwf	_pBDTEntryIn^(0+128)
  3814                           
  3815                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  3816  0417  0086               	movwf	6
  3817  0418  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  3818  0419  0087               	movwf	7
  3819  041A  3004               	movlw	4
  3820  041B  1381               	bcf	1,7
  3821                           
  3822                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  3823  041C  0627               	xorwf	_pBDTEntryIn^(0+128),w
  3824  041D  00A7               	movwf	_pBDTEntryIn^(0+128)
  3825                           
  3826                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  3827  041E  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3828  041F  0086               	movwf	6
  3829  0420  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3830  0421  0087               	movwf	7
  3831  0422  1381               	bcf	1,7
  3832                           
  3833                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  3834  0423  01AF               	clrf	(_inPipes^(0+128)+2)	;volatile
  3835                           
  3836                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  3837  0424  01B0               	clrf	(_inPipes^(0+128)+3)	;volatile
  3838  0425  01B1               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  3839                           
  3840                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  3841  0426  01A2               	clrf	(_outPipes^(0+128)+2)	;volatile
  3842                           
  3843                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  3844  0427  01A3               	clrf	(_outPipes^(0+128)+3)	;volatile
  3845  0428  01A4               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  3846                           
  3847                           ;usb_device.c: 2500: USBCheckStdRequest();
  3848  0429  2436  3180         	fcall	_USBCheckStdRequest
  3849                           
  3850                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  3851  042B  3003               	movlw	3
  3852  042C  0021               	movlb	1	; select bank1
  3853  042D  00DC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3854  042E  01DD               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  3855  042F  01DE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3856  0430  01DF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3857  0431  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3858  0432  01E1               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3859  0433  2347               	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3860                           
  3861                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  3862  0434  319F  2F2C         	ljmp	l7967
  3863  0436                     __end_of_USBCtrlTrfSetupHandler:	
  3864  0436                     __ptext11:	
  3865 ;; *************** function _USBCheckStdRequest *****************
  3866 ;; Defined at:
  3867 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 1F/1
  3878 ;;		On exit  : 1C/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;Total ram usage:        0 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:   15
  3888 ;; This function calls:
  3889 ;;		_USBStdFeatureReqHandler
  3890 ;;		_USBStdGetDscHandler
  3891 ;;		_USBStdGetStatusHandler
  3892 ;;		_USBStdSetCfgHandler
  3893 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3894 ;; This function is called by:
  3895 ;;		_USBCtrlTrfSetupHandler
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           
  3900                           ;psect for function _USBCheckStdRequest
  3901  0436                     _USBCheckStdRequest:	
  3902                           
  3903                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  3904                           
  3905                           ;incstack = 0
  3906 ;; hardware stack exceeded
  3907                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3908  0436  0020               	movlb	0	; select bank0
  3909  0437  0E50               	swapf	80,w	;volatile
  3910  0438  0C89               	rrf	9,f
  3911  0439  3903               	andlw	3
  3912  043A  1D03               	btfss	3,2
  3913  043B  0008               	return
  3914                           
  3915                           ;usb_device.c: 2728: break;
  3916  043C  0851               	movf	81,w	;volatile
  3917                           
  3918                           ; Switch size 1, requested type "speed"
  3919                           ; Number of cases is 11, Range of values is 0 to 12
  3920                           ; switch strategies available:
  3921                           ; Name         Instructions Cycles
  3922                           ; direct_byte           32     6 (fixed)
  3923                           ; simple_byte           34    18 (average)
  3924                           ; jumptable            260     6 (fixed)
  3925                           ;	Chosen strategy is direct_byte
  3926  043D  0084               	movwf	4
  3927  043E  300D               	movlw	13
  3928  043F  0204               	subwf	4,w
  3929  0440  1803               	skipnc
  3930  0441  0008               	return
  3931  0442  3198               	movlp	high S9991
  3932  0443  3504               	lslf	4,w
  3933  0444  3ECF               	addlw	low S9991
  3934  0445  0082               	movwf	2
  3935  0446                     l908:	
  3936  0446  0008               	return
  3937  0447                     l910:	
  3938                           ;usb_device.c: 2691: {
  3939                           ;usb_device.c: 2692: case 5:
  3940                           
  3941                           
  3942                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  3943  0447  0021               	movlb	1	; select bank1
  3944  0448  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  3945                           
  3946                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  3947  0449  3008               	movlw	8
  3948  044A  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
  3949                           
  3950                           ;usb_device.c: 2696: break;
  3951  044B  0008               	return
  3952  044C                     l8071:	
  3953                           
  3954                           ;usb_device.c: 2698: USBStdGetDscHandler();
  3955  044C  2DA1               	ljmp	l7797
  3956  044D                     l8073:	
  3957                           ;usb_device.c: 2699: break;
  3958                           
  3959                           
  3960                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  3961  044D  3191  29EA         	ljmp	l7745
  3962  044F                     l8075:	
  3963                           ;usb_device.c: 2702: break;
  3964                           
  3965                           
  3966                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  3967  044F  30C8               	movlw	low _USBActiveConfiguration
  3968  0450  0021               	movlb	1	; select bank1
  3969  0451  00AD               	movwf	_inPipes^(0+128)	;volatile
  3970  0452  3000               	movlw	high _USBActiveConfiguration
  3971  0453  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
  3972                           
  3973                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  3974  0454  142F               	bsf	(_inPipes^(0+128)+2),0	;volatile
  3975                           
  3976                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  3977  0455  3001               	movlw	1
  3978  0456  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
  3979                           
  3980                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  3981  0457  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  3982                           
  3983                           ;usb_device.c: 2708: break;
  3984  0458  0008               	return
  3985  0459                     l8083:	
  3986                           
  3987                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  3988  0459  319D  2D38         	ljmp	l7827
  3989  045B                     l8085:	
  3990                           ;usb_device.c: 2711: break;
  3991                           
  3992                           
  3993                           ;usb_device.c: 2713: case 3:
  3994                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  3995  045B  2C7A               	ljmp	l7855
  3996  045C                     l8087:	
  3997                           ;usb_device.c: 2715: break;
  3998                           
  3999                           
  4000                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  4001  045C  0854               	movf	84,w	;volatile
  4002  045D  3E60               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  4003  045E  0021               	movlb	1	; select bank1
  4004  045F  00AD               	movwf	_inPipes^(0+128)	;volatile
  4005  0460  3001               	movlw	1
  4006  0461  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
  4007                           
  4008                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4009  0462  142F               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4010                           
  4011                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  4012  0463  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
  4013                           
  4014                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  4015  0464  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4016                           
  4017                           ;usb_device.c: 2721: break;
  4018  0465  0008               	return
  4019  0466                     l919:	
  4020                           ;usb_device.c: 2722: case 11:
  4021                           
  4022                           
  4023                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  4024  0466  0021               	movlb	1	; select bank1
  4025  0467  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4026                           
  4027                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  4028  0468  0020               	movlb	0	; select bank0
  4029  0469  0854               	movf	84,w	;volatile
  4030  046A  3E60               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  4031  046B  0086               	movwf	6
  4032  046C  3001               	movlw	1	; select bank2/3
  4033  046D  0087               	movwf	7
  4034  046E  0852               	movf	82,w	;volatile
  4035  046F  0081               	movwf	1
  4036                           
  4037                           ;usb_device.c: 2725: break;
  4038  0470  0008               	return
  4039  0471                     l8097:	
  4040                           
  4041                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  4042  0471  3002               	movlw	2
  4043  0472  0021               	movlb	1	; select bank1
  4044  0473  00DC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4045  0474  01DD               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4046  0475  01DE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4047  0476  01DF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4048  0477  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4049  0478  01E1               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4050  0479  2B47               	ljmp	l7547
  4051  047A                     __end_of_USBCheckStdRequest:	
  4052  047A                     __ptext16:	
  4053 ;; *************** function _USBStdFeatureReqHandler *****************
  4054 ;; Defined at:
  4055 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  p               2    3[BANK2 ] PTR struct __BDT
  4060 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  4061 ;;  pUEP            2    0[BANK2 ] PTR unsigned char 
  4062 ;;		 -> UEP0(1), 
  4063 ;;  current_ep_d    1    2[BANK2 ] struct .
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      void 
  4066 ;; Registers used:
  4067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 1E/0
  4070 ;;		On exit  : 1C/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Totals:         0       0       2       5       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;Total ram usage:        7 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:   14
  4080 ;; This function calls:
  4081 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4082 ;; This function is called by:
  4083 ;;		_USBCheckStdRequest
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           
  4088                           ;psect for function _USBStdFeatureReqHandler
  4089  047A                     _USBStdFeatureReqHandler:	
  4090  047A                     l7855:	
  4091                           ;incstack = 0
  4092 ;; hardware stack exceeded
  4093                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4094                           
  4095                           
  4096                           ;usb_device.c: 2756: BDT_ENTRY *p;
  4097                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  4098                           ;usb_device.c: 2761: unsigned char* pUEP;
  4099                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  4100                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  4101  047A  0020               	movlb	0	; select bank0
  4102  047B  0B52               	decfsz	82,w	;volatile
  4103  047C  2C8E               	goto	l7867
  4104  047D  0850               	movf	80,w	;volatile
  4105  047E  391F               	andlw	31
  4106  047F  1D03               	skipz
  4107  0480  2C8E               	goto	l7867
  4108                           
  4109                           ;usb_device.c: 2801: {
  4110                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  4111  0481  0021               	movlb	1	; select bank1
  4112  0482  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4113                           
  4114                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  4115  0483  3003               	movlw	3
  4116  0484  0020               	movlb	0	; select bank0
  4117  0485  0651               	xorwf	81,w	;volatile
  4118  0486  1D03               	btfss	3,2
  4119  0487  2C8C               	goto	l7865
  4120                           
  4121                           ;usb_device.c: 2804: RemoteWakeup = 1;
  4122  0488  3001               	movlw	1
  4123  0489  0022               	movlb	2	; select bank2
  4124  048A  00C1               	movwf	_RemoteWakeup^(0+256)	;volatile
  4125  048B  2C8E               	goto	l7867
  4126  048C                     l7865:	
  4127                           
  4128                           ;usb_device.c: 2805: else
  4129                           ;usb_device.c: 2806: RemoteWakeup = 0;
  4130  048C  0022               	movlb	2	; select bank2
  4131  048D  01C1               	clrf	_RemoteWakeup^(0+256)	;volatile
  4132  048E                     l7867:	
  4133                           
  4134                           ;usb_device.c: 2807: }
  4135                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  4136                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  4137                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  4138                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  4139  048E  0020               	movlb	0	; select bank0
  4140  048F  0852               	movf	82,w	;volatile
  4141  0490  1D03               	btfss	3,2
  4142  0491  0008               	return
  4143  0492  0850               	movf	80,w	;volatile
  4144  0493  391F               	andlw	31
  4145  0494  3A02               	xorlw	2
  4146  0495  1D03               	skipz
  4147  0496  0008               	return
  4148  0497  0854               	movf	84,w	;volatile
  4149  0498  390F               	andlw	15
  4150  0499  1903               	skipnz
  4151  049A  0008               	return
  4152  049B  0854               	movf	84,w	;volatile
  4153  049C  390F               	andlw	15
  4154  049D  0021               	movlb	1	; select bank1
  4155  049E  00E2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  4156  049F  3003               	movlw	3
  4157  04A0  0262               	subwf	??_USBStdFeatureReqHandler^(0+128),w
  4158  04A1  1803               	skipnc
  4159  04A2  0008               	return
  4160  04A3  3020               	movlw	32
  4161  04A4  0644               	xorwf	_USBDeviceState^(0+128),w	;volatile
  4162  04A5  1D03               	btfss	3,2
  4163  04A6  0008               	return
  4164                           
  4165                           ;usb_device.c: 2814: {
  4166                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  4167  04A7  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4168                           
  4169                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  4170  04A8  0020               	movlb	0	; select bank0
  4171  04A9  1BD4               	btfsc	84,7	;volatile
  4172  04AA  2CBD               	goto	l7881
  4173                           
  4174                           ;usb_device.c: 2821: {
  4175                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  4176  04AB  0854               	movf	84,w	;volatile
  4177  04AC  390F               	andlw	15
  4178  04AD  0709               	addwf	9,w
  4179  04AE  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4180  04AF  0086               	movwf	6
  4181  04B0  3001               	movlw	1	; select bank2/3
  4182  04B1  0087               	movwf	7
  4183  04B2  3F40               	moviw [0]fsr1
  4184  04B3  0022               	movlb	2	; select bank2
  4185  04B4  00E5               	movwf	USBStdFeatureReqHandler@p^(0+256)
  4186  04B5  3F41               	moviw [1]fsr1
  4187  04B6  00E6               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  4188                           
  4189                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  4190  04B7  0020               	movlb	0	; select bank0
  4191  04B8  0854               	movf	84,w	;volatile
  4192  04B9  390F               	andlw	15
  4193  04BA  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4194  04BB  0086               	movwf	6
  4195  04BC  2CCF               	goto	L3
  4196  04BD                     l7881:	
  4197                           ;usb_device.c: 2824: }
  4198                           
  4199                           
  4200                           ;usb_device.c: 2825: else
  4201                           ;usb_device.c: 2826: {
  4202                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  4203  04BD  0854               	movf	84,w	;volatile
  4204  04BE  390F               	andlw	15
  4205  04BF  0709               	addwf	9,w
  4206  04C0  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  4207  04C1  0086               	movwf	6
  4208  04C2  0187               	clrf	7
  4209  04C3  3F40               	moviw [0]fsr1
  4210  04C4  0022               	movlb	2	; select bank2
  4211  04C5  00E5               	movwf	USBStdFeatureReqHandler@p^(0+256)
  4212  04C6  3F41               	moviw [1]fsr1
  4213  04C7  00E6               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  4214                           
  4215                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  4216  04C8  0020               	movlb	0	; select bank0
  4217  04C9  0854               	movf	84,w	;volatile
  4218  04CA  390F               	andlw	15
  4219  04CB  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4220  04CC  0086               	movwf	6
  4221  04CD  3001               	movlw	1	; select bank2/3
  4222  04CE  0087               	movwf	7
  4223  04CF                     L3:	
  4224  04CF  0801               	movf	1,w
  4225  04D0  0022               	movlb	2	; select bank2
  4226  04D1  00E4               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+256)
  4227                           
  4228                           ;usb_device.c: 2829: }
  4229                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  4230  04D2  1864               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+256),0
  4231  04D3  2CE5               	goto	l7887
  4232                           
  4233                           ;usb_device.c: 2836: {
  4234                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  4235  04D4  30FB               	movlw	251
  4236  04D5  0021               	movlb	1	; select bank1
  4237  04D6  00E2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  4238  04D7  30FF               	movlw	255
  4239  04D8  00E3               	movwf	(??_USBStdFeatureReqHandler^(0+128)+1)
  4240  04D9  0022               	movlb	2	; select bank2
  4241  04DA  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4242  04DB  0021               	movlb	1	; select bank1
  4243  04DC  0562               	andwf	??_USBStdFeatureReqHandler^(0+128),w
  4244  04DD  0022               	movlb	2	; select bank2
  4245  04DE  00E5               	movwf	USBStdFeatureReqHandler@p^(0+256)
  4246  04DF  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4247  04E0  0021               	movlb	1	; select bank1
  4248  04E1  0563               	andwf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  4249  04E2  0022               	movlb	2	; select bank2
  4250  04E3  00E6               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  4251                           
  4252                           ;usb_device.c: 2838: }
  4253  04E4  2CE8               	goto	l7889
  4254  04E5                     l7887:	
  4255                           
  4256                           ;usb_device.c: 2839: else
  4257                           ;usb_device.c: 2840: {
  4258                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  4259  04E5  3004               	movlw	4
  4260  04E6  0465               	iorwf	USBStdFeatureReqHandler@p^(0+256),w
  4261  04E7  00E5               	movwf	USBStdFeatureReqHandler@p^(0+256)
  4262  04E8                     l7889:	
  4263                           
  4264                           ;usb_device.c: 2842: }
  4265                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  4266  04E8  0020               	movlb	0	; select bank0
  4267  04E9  1BD4               	btfsc	84,7	;volatile
  4268  04EA  2CF8               	goto	l7893
  4269                           
  4270                           ;usb_device.c: 2848: {
  4271                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  4272  04EB  0854               	movf	84,w	;volatile
  4273  04EC  390F               	andlw	15
  4274  04ED  0709               	addwf	9,w
  4275  04EE  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4276  04EF  0086               	movwf	6
  4277  04F0  3001               	movlw	1	; select bank2/3
  4278  04F1  0087               	movwf	7
  4279  04F2  0022               	movlb	2	; select bank2
  4280  04F3  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4281  04F4  3FC0               	movwi [0]fsr1
  4282  04F5  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4283  04F6  3FC1               	movwi [1]fsr1
  4284                           
  4285                           ;usb_device.c: 2850: }
  4286  04F7  2D03               	goto	l7895
  4287  04F8                     l7893:	
  4288                           
  4289                           ;usb_device.c: 2851: else
  4290                           ;usb_device.c: 2852: {
  4291                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  4292  04F8  0854               	movf	84,w	;volatile
  4293  04F9  390F               	andlw	15
  4294  04FA  0709               	addwf	9,w
  4295  04FB  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  4296  04FC  0086               	movwf	6
  4297  04FD  0187               	clrf	7
  4298  04FE  0022               	movlb	2	; select bank2
  4299  04FF  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4300  0500  3FC0               	movwi [0]fsr1
  4301  0501  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4302  0502  3FC1               	movwi [1]fsr1
  4303  0503                     l7895:	
  4304                           
  4305                           ;usb_device.c: 2854: }
  4306                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  4307  0503  3003               	movlw	3
  4308  0504  0020               	movlb	0	; select bank0
  4309  0505  0651               	xorwf	81,w	;volatile
  4310  0506  1D03               	btfss	3,2
  4311  0507  2D29               	goto	l7909
  4312                           
  4313                           ;usb_device.c: 2858: {
  4314                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  4315  0508  0022               	movlb	2	; select bank2
  4316  0509  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4317  050A  0086               	movwf	6
  4318  050B  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4319  050C  0087               	movwf	7
  4320  050D  1F81               	btfss	1,7
  4321  050E  2D1D               	goto	l7905
  4322                           
  4323                           ;usb_device.c: 2860: {
  4324                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  4325  050F  0020               	movlb	0	; select bank0
  4326  0510  1BD4               	btfsc	84,7	;volatile
  4327  0511  2D16               	goto	l7903
  4328                           
  4329                           ;usb_device.c: 2864: {
  4330                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  4331  0512  0854               	movf	84,w	;volatile
  4332  0513  390F               	andlw	15
  4333  0514  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4334  0515  2D19               	goto	L4
  4335  0516                     l7903:	
  4336                           ;usb_device.c: 2866: }
  4337                           
  4338                           
  4339                           ;usb_device.c: 2867: else
  4340                           ;usb_device.c: 2868: {
  4341                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  4342  0516  0854               	movf	84,w	;volatile
  4343  0517  390F               	andlw	15
  4344  0518  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4345  0519                     L4:	
  4346  0519  0086               	movwf	6
  4347  051A  3001               	movlw	1	; select bank2/3
  4348  051B  0087               	movwf	7
  4349  051C  1481               	bsf	1,1
  4350  051D                     l7905:	
  4351                           
  4352                           ;usb_device.c: 2870: }
  4353                           ;usb_device.c: 2871: }
  4354                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  4355  051D  0022               	movlb	2	; select bank2
  4356  051E  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4357  051F  0086               	movwf	6
  4358  0520  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4359  0521  0087               	movwf	7
  4360  0522  1501               	bsf	1,2
  4361                           
  4362                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  4363  0523  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4364  0524  0086               	movwf	6
  4365  0525  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4366  0526  0087               	movwf	7
  4367  0527  1781               	bsf	1,7
  4368                           
  4369                           ;usb_device.c: 2876: }
  4370  0528  0008               	return
  4371  0529                     l7909:	
  4372                           
  4373                           ;usb_device.c: 2877: else
  4374                           ;usb_device.c: 2878: {
  4375                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  4376  0529  3004               	movlw	4
  4377  052A  0022               	movlb	2	; select bank2
  4378  052B  0665               	xorwf	USBStdFeatureReqHandler@p^(0+256),w
  4379  052C  00E5               	movwf	USBStdFeatureReqHandler@p^(0+256)
  4380                           
  4381                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  4382  052D  0086               	movwf	6
  4383  052E  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4384  052F  0087               	movwf	7
  4385                           
  4386                           ;usb_device.c: 2885: {
  4387                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  4388  0530  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4389  0531  1F81               	btfss	1,7
  4390  0532  2D4E               	goto	L6
  4391  0533  0086               	movwf	6
  4392  0534  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4393  0535  0087               	movwf	7
  4394  0536  1381               	bcf	1,7
  4395                           
  4396                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  4397  0537  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4398  0538  0086               	movwf	6
  4399  0539  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4400  053A  0087               	movwf	7
  4401  053B  3005               	movlw	5
  4402  053C  1701               	bsf	1,6
  4403                           
  4404                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  4405  053D  0021               	movlb	1	; select bank1
  4406  053E  00DC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4407  053F  01DD               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4408  0540  0022               	movlb	2	; select bank2
  4409  0541  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4410  0542  0021               	movlb	1	; select bank1
  4411  0543  00DF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4412  0544  0022               	movlb	2	; select bank2
  4413  0545  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4414  0546  0021               	movlb	1	; select bank1
  4415  0547  00DE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4416  0548  3002               	movlw	2
  4417  0549  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4418  054A  01E1               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4419  054B  2347  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4420                           
  4421                           ;usb_device.c: 2891: }
  4422  054D  2D52               	goto	l7919
  4423  054E                     L6:	
  4424                           ;usb_device.c: 2892: else
  4425                           ;usb_device.c: 2893: {
  4426                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  4427                           
  4428  054E  0086               	movwf	6
  4429  054F  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4430  0550  0087               	movwf	7
  4431  0551  1701               	bsf	1,6
  4432  0552                     l7919:	
  4433                           
  4434                           ;usb_device.c: 2896: }
  4435                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  4436  0552  3004               	movlw	4
  4437  0553  0022               	movlb	2	; select bank2
  4438  0554  0665               	xorwf	USBStdFeatureReqHandler@p^(0+256),w
  4439  0555  00E5               	movwf	USBStdFeatureReqHandler@p^(0+256)
  4440                           
  4441                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  4442  0556  18E4               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+256),1
  4443  0557  2D5E               	goto	l944
  4444  0558  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4445  0559  0086               	movwf	6
  4446  055A  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4447  055B  0087               	movwf	7
  4448  055C  1F81               	btfss	1,7
  4449  055D  2D85               	goto	l7931
  4450  055E                     l944:	
  4451                           
  4452                           ;usb_device.c: 2907: {
  4453                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  4454  055E  0020               	movlb	0	; select bank0
  4455  055F  1BD4               	btfsc	84,7	;volatile
  4456  0560  2D65               	goto	l7927
  4457                           
  4458                           ;usb_device.c: 2909: {
  4459                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  4460  0561  0854               	movf	84,w	;volatile
  4461  0562  390F               	andlw	15
  4462  0563  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4463  0564  2D68               	goto	L5
  4464  0565                     l7927:	
  4465                           ;usb_device.c: 2911: }
  4466                           
  4467                           
  4468                           ;usb_device.c: 2912: else
  4469                           ;usb_device.c: 2913: {
  4470                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  4471  0565  0854               	movf	84,w	;volatile
  4472  0566  390F               	andlw	15
  4473  0567  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4474  0568                     L5:	
  4475  0568  0086               	movwf	6
  4476  0569  3001               	movlw	1	; select bank2/3
  4477  056A  0087               	movwf	7
  4478  056B  1081               	bcf	1,1
  4479                           
  4480                           ;usb_device.c: 2915: }
  4481                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  4482  056C  0022               	movlb	2	; select bank2
  4483  056D  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4484  056E  0086               	movwf	6
  4485  056F  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4486  0570  0087               	movwf	7
  4487  0571  303B               	movlw	59
  4488  0572  0581               	andwf	1,f
  4489                           
  4490                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  4491  0573  3005               	movlw	5
  4492  0574  0021               	movlb	1	; select bank1
  4493  0575  00DC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4494  0576  01DD               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4495  0577  0022               	movlb	2	; select bank2
  4496  0578  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4497  0579  0021               	movlb	1	; select bank1
  4498  057A  00DF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4499  057B  0022               	movlb	2	; select bank2
  4500  057C  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4501  057D  0021               	movlb	1	; select bank1
  4502  057E  00DE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4503  057F  3002               	movlw	2
  4504  0580  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4505  0581  01E1               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4506  0582  2347  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4507                           
  4508                           ;usb_device.c: 2921: }
  4509  0584  2D8B               	goto	l7933
  4510  0585                     l7931:	
  4511                           
  4512                           ;usb_device.c: 2922: else
  4513                           ;usb_device.c: 2923: {
  4514                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  4515  0585  0865               	movf	USBStdFeatureReqHandler@p^(0+256),w
  4516  0586  0086               	movwf	6
  4517  0587  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  4518  0588  0087               	movwf	7
  4519  0589  303B               	movlw	59
  4520  058A  0581               	andwf	1,f
  4521  058B                     l7933:	
  4522                           
  4523                           ;usb_device.c: 2926: }
  4524                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  4525  058B  0020               	movlb	0	; select bank0
  4526  058C  0854               	movf	84,w	;volatile
  4527  058D  390F               	andlw	15
  4528  058E  3E98               	addlw	152
  4529  058F  0021               	movlb	1	; select bank1
  4530  0590  00E2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  4531  0591  300E               	movlw	14
  4532  0592  01E3               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
  4533  0593  3DE3               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
  4534  0594  0862               	movf	??_USBStdFeatureReqHandler^(0+128),w
  4535  0595  0022               	movlb	2	; select bank2
  4536  0596  00E2               	movwf	USBStdFeatureReqHandler@pUEP^(0+256)
  4537  0597  0021               	movlb	1	; select bank1
  4538  0598  0863               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  4539  0599  0022               	movlb	2	; select bank2
  4540  059A  00E3               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+256)
  4541                           
  4542                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  4543  059B  0862               	movf	USBStdFeatureReqHandler@pUEP^(0+256),w
  4544  059C  0086               	movwf	6
  4545  059D  0863               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+256),w
  4546  059E  0087               	movwf	7
  4547  059F  1001               	bcf	1,0
  4548  05A0  0008               	return
  4549  05A1                     __end_of_USBStdFeatureReqHandler:	
  4550  05A1                     __ptext15:	
  4551 ;; *************** function _USBStdGetDscHandler *****************
  4552 ;; Defined at:
  4553 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;		None
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;		None
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4562 ;; Tracked objects:
  4563 ;;		On entry : 1E/0
  4564 ;;		On exit  : 1E/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;Total ram usage:        3 bytes
  4572 ;; Hardware stack levels used:    1
  4573 ;; Hardware stack levels required when called:   10
  4574 ;; This function calls:
  4575 ;;		Nothing
  4576 ;; This function is called by:
  4577 ;;		_USBCheckStdRequest
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           
  4582                           ;psect for function _USBStdGetDscHandler
  4583  05A1                     _USBStdGetDscHandler:	
  4584  05A1                     l7797:	
  4585                           ;incstack = 0
  4586                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  4587                           
  4588                           
  4589                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  4590  05A1  3080               	movlw	128
  4591  05A2  0020               	movlb	0	; select bank0
  4592  05A3  0650               	xorwf	80,w	;volatile
  4593  05A4  1D03               	btfss	3,2
  4594  05A5  0008               	return
  4595                           
  4596                           ;usb_device.c: 2046: {
  4597                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  4598  05A6  30C0               	movlw	192
  4599  05A7  0021               	movlb	1	; select bank1
  4600  05A8  00AF               	movwf	(_inPipes^(0+128)+2)	;volatile
  4601                           
  4602                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  4603  05A9  2E04               	goto	l7825
  4604  05AA                     l7801:	
  4605                           
  4606                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  4607  05AA  3042               	movlw	low (_device_dsc| (0+32768))
  4608  05AB  0021               	movlb	1	; select bank1
  4609  05AC  00AD               	movwf	_inPipes^(0+128)	;volatile
  4610  05AD  3099               	movlw	high (_device_dsc| (0+32768))
  4611  05AE  00AE               	movwf	(_inPipes^(0+128)+1)	;volatile
  4612                           
  4613                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  4614  05AF  3012               	movlw	18
  4615  05B0  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
  4616  05B1  01B1               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4617                           
  4618                           ;usb_device.c: 2058: break;
  4619  05B2  0008               	return
  4620  05B3                     l7803:	
  4621                           
  4622                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  4623  05B3  0852               	movf	82,w	;volatile
  4624  05B4  1D03               	btfss	3,2
  4625  05B5  2DDF               	goto	l7811
  4626                           
  4627                           ;usb_device.c: 2064: {
  4628                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  4629  05B6  0852               	movf	82,w	;volatile
  4630  05B7  0021               	movlb	1	; select bank1
  4631  05B8  00D1               	movwf	??_USBStdGetDscHandler^(0+128)
  4632  05B9  305E               	movlw	low (_USB_CD_Ptr| (0+32768))
  4633  05BA  01D2               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  4634  05BB  35D1               	lslf	??_USBStdGetDscHandler^(0+128),f
  4635  05BC  0DD2               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  4636  05BD  0751               	addwf	??_USBStdGetDscHandler^(0+128),w
  4637  05BE  0084               	movwf	4
  4638  05BF  3099               	movlw	high (_USB_CD_Ptr| (0+32768))
  4639  05C0  3D52               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  4640  05C1  0085               	movwf	5
  4641  05C2  3F00               	moviw [0]fsr0
  4642  05C3  00AD               	movwf	_inPipes^(0+128)	;volatile
  4643  05C4  3F01               	moviw [1]fsr0
  4644  05C5  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
  4645                           
  4646                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  4647  05C6  082E               	movf	(_inPipes+1)^(0+128),w	;volatile
  4648  05C7  00D2               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  4649  05C8  082D               	movf	_inPipes^(0+128),w	;volatile
  4650  05C9  00D1               	movwf	??_USBStdGetDscHandler^(0+128)
  4651  05CA  3E02               	addlw	2
  4652  05CB  0084               	movwf	4
  4653  05CC  0852               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  4654  05CD  1803               	skipnc
  4655  05CE  0A52               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  4656  05CF  0085               	movwf	5
  4657  05D0  0800               	movf	0,w	;code access
  4658  05D1  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
  4659                           
  4660                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  4661  05D2  082E               	movf	(_inPipes+1)^(0+128),w	;volatile
  4662  05D3  00D2               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  4663  05D4  082D               	movf	_inPipes^(0+128),w	;volatile
  4664  05D5  00D1               	movwf	??_USBStdGetDscHandler^(0+128)
  4665  05D6  3E03               	addlw	3
  4666  05D7  0084               	movwf	4
  4667  05D8  0852               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  4668  05D9  1803               	skipnc
  4669  05DA  0A52               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  4670  05DB  0085               	movwf	5
  4671  05DC  0800               	movf	0,w	;code access
  4672  05DD  00B1               	movwf	(_inPipes^(0+128)+4)	;volatile
  4673                           
  4674                           ;usb_device.c: 2076: }
  4675  05DE  0008               	return
  4676  05DF                     l7811:	
  4677                           
  4678                           ;usb_device.c: 2077: else
  4679                           ;usb_device.c: 2078: {
  4680                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  4681  05DF  0021               	movlb	1	; select bank1
  4682  05E0  01AF               	clrf	(_inPipes^(0+128)+2)	;volatile
  4683  05E1  0008               	return
  4684  05E2                     l7813:	
  4685                           
  4686                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  4687  05E2  3003               	movlw	3
  4688  05E3  0252               	subwf	82,w	;volatile
  4689  05E4  1803               	skipnc
  4690  05E5  2DFE               	goto	l7819
  4691                           
  4692                           ;usb_device.c: 2087: {
  4693                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  4694  05E6  0852               	movf	82,w	;volatile
  4695  05E7  0021               	movlb	1	; select bank1
  4696  05E8  00D1               	movwf	??_USBStdGetDscHandler^(0+128)
  4697  05E9  3054               	movlw	low (_USB_SD_Ptr| (0+32768))
  4698  05EA  01D2               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  4699  05EB  35D1               	lslf	??_USBStdGetDscHandler^(0+128),f
  4700  05EC  0DD2               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  4701  05ED  0751               	addwf	??_USBStdGetDscHandler^(0+128),w
  4702  05EE  0084               	movwf	4
  4703  05EF  3099               	movlw	high (_USB_SD_Ptr| (0+32768))
  4704  05F0  3D52               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  4705  05F1  0085               	movwf	5
  4706  05F2  3F00               	moviw [0]fsr0
  4707  05F3  00AD               	movwf	_inPipes^(0+128)	;volatile
  4708  05F4  3F01               	moviw [1]fsr0
  4709  05F5  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
  4710                           
  4711                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  4712  05F6  082D               	movf	_inPipes^(0+128),w	;volatile
  4713  05F7  0084               	movwf	4
  4714  05F8  082E               	movf	(_inPipes+1)^(0+128),w	;volatile
  4715  05F9  0085               	movwf	5
  4716  05FA  0800               	movf	0,w	;code access
  4717  05FB  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
  4718  05FC  01B1               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4719                           
  4720                           ;usb_device.c: 2092: }
  4721  05FD  0008               	return
  4722  05FE                     l7819:	
  4723                           
  4724                           ;usb_device.c: 2102: else
  4725                           ;usb_device.c: 2103: {
  4726                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  4727  05FE  0021               	movlb	1	; select bank1
  4728  05FF  01AF               	clrf	(_inPipes^(0+128)+2)	;volatile
  4729  0600  0008               	return
  4730  0601                     l7821:	
  4731                           
  4732                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  4733  0601  0021               	movlb	1	; select bank1
  4734  0602  01AF               	clrf	(_inPipes^(0+128)+2)	;volatile
  4735                           
  4736                           ;usb_device.c: 2109: break;
  4737  0603  0008               	return
  4738  0604                     l7825:	
  4739  0604  0020               	movlb	0	; select bank0
  4740  0605  0853               	movf	83,w	;volatile
  4741                           
  4742                           ; Switch size 1, requested type "speed"
  4743                           ; Number of cases is 3, Range of values is 1 to 3
  4744                           ; switch strategies available:
  4745                           ; Name         Instructions Cycles
  4746                           ; simple_byte           10     6 (average)
  4747                           ; direct_byte           15     9 (fixed)
  4748                           ; jumptable            263     9 (fixed)
  4749                           ;	Chosen strategy is simple_byte
  4750  0606  3A01               	xorlw	1	; case 1
  4751  0607  1903               	skipnz
  4752  0608  2DAA               	goto	l7801
  4753  0609  3A03               	xorlw	3	; case 2
  4754  060A  1903               	skipnz
  4755  060B  2DB3               	goto	l7803
  4756  060C  3A01               	xorlw	1	; case 3
  4757  060D  1903               	skipnz
  4758  060E  2DE2               	goto	l7813
  4759  060F  2E01               	goto	l7821
  4760  0610  0008               	return
  4761  0611                     __end_of_USBStdGetDscHandler:	
  4762  0611                     __ptext6:	
  4763 ;; *************** function _USBIncrement1msInternalTimers *****************
  4764 ;; Defined at:
  4765 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;		None
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 1F/1D
  4776 ;;		On exit  : 1F/2
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;Total ram usage:        0 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:   10
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_USBDeviceTasks
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           
  4794                           ;psect for function _USBIncrement1msInternalTimers
  4795  0611                     _USBIncrement1msInternalTimers:	
  4796                           
  4797                           ;usb_device.c: 3033: USB1msTickCount++;
  4798                           
  4799                           ;incstack = 0
  4800                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  4801  0611  3001               	movlw	1
  4802  0612  0022               	movlb	2	; select bank2
  4803  0613  07A6               	addwf	_USB1msTickCount^(0+256),f	;volatile
  4804  0614  3000               	movlw	0
  4805  0615  3DA7               	addwfc	(_USB1msTickCount+1)^(0+256),f	;volatile
  4806  0616  3DA8               	addwfc	(_USB1msTickCount+2)^(0+256),f	;volatile
  4807  0617  3DA9               	addwfc	(_USB1msTickCount+3)^(0+256),f	;volatile
  4808                           
  4809                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  4810  0618  0840               	movf	_USBBusIsSuspended^(0+256),w	;volatile
  4811  0619  1D03               	btfss	3,2
  4812  061A  0008               	return
  4813                           
  4814                           ;usb_device.c: 3035: {
  4815                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  4816  061B  0ABA               	incf	_USBTicksSinceSuspendEnd^(0+256),f	;volatile
  4817                           
  4818                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  4819  061C  083A               	movf	_USBTicksSinceSuspendEnd^(0+256),w	;volatile
  4820  061D  1D03               	btfss	3,2
  4821  061E  0008               	return
  4822                           
  4823                           ;usb_device.c: 3039: {
  4824                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  4825  061F  30FF               	movlw	255
  4826  0620  00BA               	movwf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  4827  0621  0008               	return
  4828  0622                     __end_of_USBIncrement1msInternalTimers:	
  4829  0622                     __ptext5:	
  4830 ;; *************** function _USBStallHandler *****************
  4831 ;; Defined at:
  4832 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4841 ;; Tracked objects:
  4842 ;;		On entry : 1F/1D
  4843 ;;		On exit  : 1F/1D
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4850 ;;Total ram usage:        0 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:   10
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_USBDeviceTasks
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           
  4861                           ;psect for function _USBStallHandler
  4862  0622                     _USBStallHandler:	
  4863                           
  4864                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  4865                           
  4866                           ;incstack = 0
  4867                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4868  0622  1C18               	btfss	24,0	;volatile
  4869  0623  2E3E               	goto	l8481
  4870                           
  4871                           ;usb_device.c: 2215: {
  4872                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4873  0624  0021               	movlb	1	; select bank1
  4874  0625  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4875  0626  0086               	movwf	6
  4876  0627  3080               	movlw	128
  4877  0628  0187               	clrf	7
  4878  0629  0601               	xorwf	1,w
  4879  062A  1D03               	btfss	3,2
  4880  062B  2E3C               	goto	l8479
  4881  062C  0827               	movf	_pBDTEntryIn^(0+128),w
  4882  062D  0086               	movwf	6
  4883  062E  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  4884  062F  0087               	movwf	7
  4885  0630  3084               	movlw	132
  4886  0631  0601               	xorwf	1,w
  4887  0632  1D03               	btfss	3,2
  4888  0633  2E3C               	goto	l8479
  4889                           
  4890                           ;usb_device.c: 2218: {
  4891                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4892  0634  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4893  0635  0086               	movwf	6
  4894  0636  300C               	movlw	12
  4895  0637  0187               	clrf	7
  4896  0638  0081               	movwf	1
  4897                           
  4898                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4899  0639  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4900  063A  0086               	movwf	6
  4901  063B  1781               	bsf	1,7
  4902  063C                     l8479:	
  4903                           
  4904                           ;usb_device.c: 2222: }
  4905                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  4906  063C  003D               	movlb	29	; select bank29
  4907  063D  1018               	bcf	24,0	;volatile
  4908  063E                     l8481:	
  4909                           
  4910                           ;usb_device.c: 2224: }
  4911                           ;usb_device.c: 2226: (UIR &= 0xDF);
  4912  063E  1290               	bcf	16,5	;volatile
  4913  063F  0008               	return
  4914  0640                     __end_of_USBStallHandler:	
  4915  0640                     __ptext4:	
  4916 ;; *************** function _USBSuspend *****************
  4917 ;; Defined at:
  4918 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 1F/1D
  4929 ;;		On exit  : 1E/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;Total ram usage:        0 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:   14
  4939 ;; This function calls:
  4940 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4941 ;; This function is called by:
  4942 ;;		_USBDeviceTasks
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           
  4947                           ;psect for function _USBSuspend
  4948  0640                     _USBSuspend:	
  4949                           
  4950                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  4951                           
  4952                           ;incstack = 0
  4953 ;; hardware stack exceeded
  4954                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4955  0640  1512               	bsf	18,2	;volatile
  4956                           
  4957                           ;usb_device.c: 2271: (UIR &= 0xEF);
  4958  0641  1210               	bcf	16,4	;volatile
  4959                           
  4960                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  4961  0642  148E               	bsf	14,1	;volatile
  4962                           
  4963                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  4964  0643  3001               	movlw	1
  4965  0644  0022               	movlb	2	; select bank2
  4966  0645  00C0               	movwf	_USBBusIsSuspended^(0+256)	;volatile
  4967                           
  4968                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  4969  0646  01BA               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  4970                           
  4971                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4972  0647  3075               	movlw	117
  4973  0648  0021               	movlb	1	; select bank1
  4974  0649  00DC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4975  064A  01DD               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4976  064B  01DE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4977  064C  01DF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4978  064D  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4979  064E  01E1               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4980  064F  2B47               	ljmp	l7547
  4981  0650                     __end_of_USBSuspend:	
  4982  0650                     __ptext3:	
  4983 ;; *************** function _USBWakeFromSuspend *****************
  4984 ;; Defined at:
  4985 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;		None
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;		None
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 1F/1D
  4996 ;;		On exit  : 1F/2
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;Total ram usage:        0 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:   14
  5006 ;; This function calls:
  5007 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5008 ;; This function is called by:
  5009 ;;		_USBDeviceTasks
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           
  5014                           ;psect for function _USBWakeFromSuspend
  5015  0650                     _USBWakeFromSuspend:	
  5016                           
  5017                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5018                           
  5019                           ;incstack = 0
  5020 ;; hardware stack exceeded
  5021                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5022  0650  0022               	movlb	2	; select bank2
  5023  0651  01C0               	clrf	_USBBusIsSuspended^(0+256)	;volatile
  5024                           
  5025                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5026  0652  3074               	movlw	116
  5027  0653  0021               	movlb	1	; select bank1
  5028  0654  00DC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5029  0655  3000               	movlw	0
  5030  0656  01DD               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5031  0657  01DE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5032  0658  01DF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5033  0659  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5034  065A  01E1               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  5035  065B  2347  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5036                           
  5037                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5038  065D  003D               	movlb	29	; select bank29
  5039  065E  108E               	bcf	14,1	;volatile
  5040                           
  5041                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5042  065F  1112               	bcf	18,2	;volatile
  5043  0660                     l869:	
  5044                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5045                           
  5046  0660  1D10               	btfss	16,2	;volatile
  5047  0661  2E64               	goto	l8453
  5048                           
  5049                           ;usb_device.c: 2343: {
  5050                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5051  0662  1110               	bcf	16,2	;volatile
  5052  0663  2E60               	goto	l869
  5053  0664                     l8453:	
  5054                           
  5055                           ;usb_device.c: 2345: }
  5056                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5057  0664  0022               	movlb	2	; select bank2
  5058  0665  01BA               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  5059  0666  0008               	return
  5060  0667                     __end_of_USBWakeFromSuspend:	
  5061  0667                     __ptext38:	
  5062 ;; *************** function _USBDeviceAttach *****************
  5063 ;; Defined at:
  5064 ;;		line 1352 in file "mcc_generated_files/usb/usb_device.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;		None
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0
  5073 ;; Tracked objects:
  5074 ;;		On entry : 1F/1
  5075 ;;		On exit  : 1F/1
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;Total ram usage:        0 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:   10
  5085 ;; This function calls:
  5086 ;;		Nothing
  5087 ;; This function is called by:
  5088 ;;		_SYSTEM_Initialize
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           
  5093                           ;psect for function _USBDeviceAttach
  5094  0667                     _USBDeviceAttach:	
  5095  0667                     l8767:	
  5096                           ;incstack = 0
  5097                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  5098                           
  5099                           
  5100                           ;usb_device.c: 1356: {
  5101                           ;usb_device.c: 1357: if(1 == 1)
  5102  0667  0844               	movf	_USBDeviceState^(0+128),w	;volatile
  5103  0668  1D03               	btfss	3,2
  5104  0669  0008               	return
  5105                           
  5106                           ;usb_device.c: 1358: {
  5107                           ;usb_device.c: 1360: UCON = 0;
  5108  066A  003D               	movlb	29	; select bank29
  5109  066B  018E               	clrf	14	;volatile
  5110                           
  5111                           ;usb_device.c: 1363: UIE = 0;
  5112  066C  0192               	clrf	18	;volatile
  5113                           
  5114                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  5115  066D  3016               	movlw	22
  5116  066E  0091               	movwf	17	;volatile
  5117  066F  309F               	movlw	159
  5118  0670  0097               	movwf	23	;volatile
  5119  0671  307B               	movlw	123
  5120  0672  0092               	movwf	18	;volatile
  5121                           
  5122                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  5123  0673  0021               	movlb	1	; select bank1
  5124  0674  1512               	bsf	18,2	;volatile
  5125  0675  170B               	bsf	11,6	;volatile
  5126  0676  178B               	bsf	11,7	;volatile
  5127  0677                     l758:	
  5128                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  5129                           
  5130  0677  003D               	movlb	29	; select bank29
  5131  0678  198E               	btfsc	14,3	;volatile
  5132  0679  2E7C               	goto	l8783
  5133  067A  158E               	bsf	14,3	;volatile
  5134  067B  2E77               	goto	l758
  5135  067C                     l8783:	
  5136                           
  5137                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  5138  067C  3001               	movlw	1
  5139  067D  0021               	movlb	1	; select bank1
  5140  067E  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
  5141  067F  0008               	return
  5142  0680                     __end_of_USBDeviceAttach:	
  5143  0680                     __ptext25:	
  5144 ;; *************** function _USBCtrlTrfInHandler *****************
  5145 ;; Defined at:
  5146 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  lastDTS         1   13[BANK1 ] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 1F/2
  5157 ;;		On exit  : 1F/1
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;Total ram usage:        3 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:   11
  5167 ;; This function calls:
  5168 ;;		_USBCtrlTrfTxService
  5169 ;; This function is called by:
  5170 ;;		_USBCtrlEPService
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           
  5175                           ;psect for function _USBCtrlTrfInHandler
  5176  0680                     _USBCtrlTrfInHandler:	
  5177  0680                     l8287:	
  5178                           ;incstack = 0
  5179                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5180                           
  5181                           
  5182                           ;usb_device.c: 2594: uint8_t lastDTS;
  5183                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  5184  0680  0021               	movlb	1	; select bank1
  5185  0681  0827               	movf	_pBDTEntryIn^(0+128),w
  5186  0682  0086               	movwf	6
  5187  0683  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  5188  0684  0087               	movwf	7
  5189  0685  3000               	movlw	0
  5190  0686  1B01               	btfsc	1,6
  5191  0687  3001               	movlw	1
  5192  0688  00D6               	movwf	USBCtrlTrfInHandler@lastDTS^(0+128)
  5193                           
  5194                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5195  0689  3004               	movlw	4
  5196  068A  0627               	xorwf	_pBDTEntryIn^(0+128),w
  5197  068B  00A7               	movwf	_pBDTEntryIn^(0+128)
  5198                           
  5199                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  5200  068C  3008               	movlw	8
  5201  068D  0644               	xorwf	_USBDeviceState^(0+128),w	;volatile
  5202  068E  1D03               	btfss	3,2
  5203  068F  2E9D               	goto	l8301
  5204                           
  5205                           ;usb_device.c: 2605: {
  5206                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  5207  0690  0020               	movlb	0	; select bank0
  5208  0691  0852               	movf	82,w	;volatile
  5209  0692  397F               	andlw	127
  5210  0693  003D               	movlb	29	; select bank29
  5211  0694  0096               	movwf	22	;volatile
  5212                           
  5213                           ;usb_device.c: 2607: if(UADDR != 0u)
  5214  0695  0816               	movf	22,w
  5215  0696  1903               	btfsc	3,2
  5216  0697  2E9A               	goto	l8299
  5217                           
  5218                           ;usb_device.c: 2608: {
  5219                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  5220  0698  3010               	movlw	16
  5221  0699  2E9B               	goto	L8
  5222  069A                     l8299:	
  5223                           ;usb_device.c: 2610: }
  5224                           
  5225                           
  5226                           ;usb_device.c: 2611: else
  5227                           ;usb_device.c: 2612: {
  5228                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  5229  069A  3004               	movlw	4
  5230  069B                     L8:	
  5231  069B  0021               	movlb	1	; select bank1
  5232  069C  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
  5233  069D                     l8301:	
  5234                           
  5235                           ;usb_device.c: 2614: }
  5236                           ;usb_device.c: 2615: }
  5237                           ;usb_device.c: 2618: if(controlTransferState == 1)
  5238  069D  0B37               	decfsz	_controlTransferState^(0+128),w	;volatile
  5239  069E  2ED8               	goto	l896
  5240                           
  5241                           ;usb_device.c: 2619: {
  5242                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  5243  069F  3060               	movlw	96
  5244  06A0  00D4               	movwf	??_USBCtrlTrfInHandler^(0+128)
  5245  06A1  01D5               	clrf	(??_USBCtrlTrfInHandler^(0+128)+1)
  5246  06A2  0827               	movf	_pBDTEntryIn^(0+128),w
  5247  06A3  0086               	movwf	6
  5248  06A4  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  5249  06A5  0087               	movwf	7
  5250  06A6  3142               	addfsr 1,2
  5251  06A7  0854               	movf	??_USBCtrlTrfInHandler^(0+128),w
  5252  06A8  3FC0               	movwi [0]fsr1
  5253  06A9  0855               	movf	(??_USBCtrlTrfInHandler^(0+128)+1),w
  5254  06AA  3FC1               	movwi [1]fsr1
  5255                           
  5256                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  5257  06AB  26DF  3180         	fcall	_USBCtrlTrfTxService
  5258                           
  5259                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  5260  06AD  3002               	movlw	2
  5261  06AE  0638               	xorwf	_shortPacketStatus^(0+128),w	;volatile
  5262  06AF  1D03               	btfss	3,2
  5263  06B0  2EBD               	goto	l8311
  5264                           
  5265                           ;usb_device.c: 2628: {
  5266                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  5267  06B1  0827               	movf	_pBDTEntryIn^(0+128),w
  5268  06B2  0086               	movwf	6
  5269  06B3  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  5270  06B4  0087               	movwf	7
  5271  06B5  3004               	movlw	4
  5272  06B6  0081               	movwf	1
  5273                           
  5274                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5275  06B7  0827               	movf	_pBDTEntryIn^(0+128),w
  5276  06B8  0086               	movwf	6
  5277  06B9  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  5278  06BA  0087               	movwf	7
  5279  06BB  1781               	bsf	1,7
  5280                           
  5281                           ;usb_device.c: 2633: }
  5282  06BC  0008               	return
  5283  06BD                     l8311:	
  5284                           
  5285                           ;usb_device.c: 2634: else
  5286                           ;usb_device.c: 2635: {
  5287                           ;usb_device.c: 2636: if(lastDTS == 0)
  5288  06BD  0856               	movf	USBCtrlTrfInHandler@lastDTS^(0+128),w
  5289  06BE  1D03               	btfss	3,2
  5290  06BF  2ECC               	goto	l8315
  5291                           
  5292                           ;usb_device.c: 2637: {
  5293                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5294  06C0  0827               	movf	_pBDTEntryIn^(0+128),w
  5295  06C1  0086               	movwf	6
  5296  06C2  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  5297  06C3  0087               	movwf	7
  5298  06C4  3048               	movlw	72
  5299  06C5  0081               	movwf	1
  5300                           
  5301                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5302  06C6  0827               	movf	_pBDTEntryIn^(0+128),w
  5303  06C7  0086               	movwf	6
  5304  06C8  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  5305  06C9  0087               	movwf	7
  5306  06CA  1781               	bsf	1,7
  5307                           
  5308                           ;usb_device.c: 2640: }
  5309  06CB  0008               	return
  5310  06CC                     l8315:	
  5311                           
  5312                           ;usb_device.c: 2641: else
  5313                           ;usb_device.c: 2642: {
  5314                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  5315  06CC  0827               	movf	_pBDTEntryIn^(0+128),w
  5316  06CD  0086               	movwf	6
  5317  06CE  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  5318  06CF  0087               	movwf	7
  5319  06D0  3008               	movlw	8
  5320  06D1  0081               	movwf	1
  5321                           
  5322                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5323  06D2  0827               	movf	_pBDTEntryIn^(0+128),w
  5324  06D3  0086               	movwf	6
  5325  06D4  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  5326  06D5  0087               	movwf	7
  5327  06D6  1781               	bsf	1,7
  5328  06D7  0008               	return
  5329  06D8                     l896:	
  5330                           
  5331                           ;usb_device.c: 2648: else
  5332                           ;usb_device.c: 2649: {
  5333                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  5334  06D8  1FA2               	btfss	(_outPipes^(0+128)+2),7	;volatile
  5335  06D9  2EDD               	goto	l8319
  5336                           
  5337                           ;usb_device.c: 2656: {
  5338                           ;usb_device.c: 2657: outPipes[0].pFunc();
  5339  06DA  0825               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  5340  06DB  0826               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  5341                           
  5342                           ;usb_device.c: 2658: }
  5343                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  5344  06DC  13A2               	bcf	(_outPipes^(0+128)+2),7	;volatile
  5345  06DD                     l8319:	
  5346                           
  5347                           ;usb_device.c: 2660: }
  5348                           ;usb_device.c: 2662: controlTransferState = 0;
  5349  06DD  01B7               	clrf	_controlTransferState^(0+128)	;volatile
  5350  06DE  0008               	return
  5351  06DF                     __end_of_USBCtrlTrfInHandler:	
  5352  06DF                     __ptext26:	
  5353 ;; *************** function _USBCtrlTrfTxService *****************
  5354 ;; Defined at:
  5355 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;		None
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  byteToSend      1   10[BANK1 ] unsigned char 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5364 ;; Tracked objects:
  5365 ;;		On entry : 1E/0
  5366 ;;		On exit  : 1F/1
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5370 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5372 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5373 ;;Total ram usage:        3 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:   10
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		_USBCtrlEPAllowDataStage
  5380 ;;		_USBCtrlTrfInHandler
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           
  5385                           ;psect for function _USBCtrlTrfTxService
  5386  06DF                     _USBCtrlTrfTxService:	
  5387                           
  5388                           ;usb_device.c: 1773: uint8_t byteToSend;
  5389                           ;usb_device.c: 1777: byteToSend = 16;
  5390                           
  5391                           ;incstack = 0
  5392 ;; hardware stack exceeded
  5393                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  5394  06DF  3010               	movlw	16
  5395  06E0  0021               	movlb	1	; select bank1
  5396  06E1  00D3               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  5397                           
  5398                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)16)
  5399  06E2  3000               	movlw	0
  5400  06E3  0231               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  5401  06E4  3010               	movlw	16
  5402  06E5  1903               	skipnz
  5403  06E6  0230               	subwf	(_inPipes^(0+128)+3),w	;volatile
  5404  06E7  1803               	skipnc
  5405  06E8  2EF4               	goto	l796
  5406                           
  5407                           ;usb_device.c: 1779: {
  5408                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  5409  06E9  0830               	movf	(_inPipes^(0+128)+3),w	;volatile
  5410  06EA  00D3               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  5411                           
  5412                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  5413  06EB  0838               	movf	_shortPacketStatus^(0+128),w	;volatile
  5414  06EC  1D03               	btfss	3,2
  5415  06ED  2EF0               	goto	l7577
  5416                           
  5417                           ;usb_device.c: 1788: {
  5418                           ;usb_device.c: 1789: shortPacketStatus = 1;
  5419  06EE  3001               	movlw	1
  5420  06EF  2EF3               	goto	L9
  5421  06F0                     l7577:	
  5422                           ;usb_device.c: 1790: }
  5423                           
  5424                           
  5425                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  5426  06F0  0B38               	decfsz	_shortPacketStatus^(0+128),w	;volatile
  5427  06F1  2EF4               	goto	l796
  5428                           
  5429                           ;usb_device.c: 1792: {
  5430                           ;usb_device.c: 1793: shortPacketStatus = 2;
  5431  06F2  3002               	movlw	2
  5432  06F3                     L9:	
  5433  06F3  00B8               	movwf	_shortPacketStatus^(0+128)	;volatile
  5434  06F4                     l796:	
  5435                           
  5436                           ;usb_device.c: 1794: }
  5437                           ;usb_device.c: 1795: }
  5438                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  5439  06F4  0853               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  5440  06F5  02B0               	subwf	(_inPipes^(0+128)+3),f	;volatile
  5441  06F6  1C03               	skipc
  5442  06F7  03B1               	decf	((_inPipes+1)^(0+128)+3),f	;volatile
  5443                           
  5444                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  5445  06F8  0827               	movf	_pBDTEntryIn^(0+128),w
  5446  06F9  3E01               	addlw	1
  5447  06FA  00D1               	movwf	??_USBCtrlTrfTxService^(0+128)
  5448  06FB  3000               	movlw	0
  5449  06FC  3D28               	addwfc	(_pBDTEntryIn+1)^(0+128),w
  5450  06FD  00D2               	movwf	(??_USBCtrlTrfTxService+1)^(0+128)
  5451  06FE  0851               	movf	??_USBCtrlTrfTxService^(0+128),w
  5452  06FF  0086               	movwf	6
  5453  0700  0852               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  5454  0701  0087               	movwf	7
  5455  0702  0853               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  5456  0703  0081               	movwf	1
  5457                           
  5458                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  5459  0704  3060               	movlw	96
  5460  0705  0022               	movlb	2	; select bank2
  5461  0706  00C2               	movwf	_pDst^(0+256)
  5462                           
  5463                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  5464  0707  0021               	movlb	1	; select bank1
  5465  0708  1C2F               	btfss	(_inPipes^(0+128)+2),0	;volatile
  5466  0709  2F1D               	goto	l7597
  5467  070A  2F33               	goto	l7607
  5468  070B                     l7589:	
  5469                           
  5470                           ;usb_device.c: 1812: {
  5471                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  5472  070B  0022               	movlb	2	; select bank2
  5473  070C  0842               	movf	_pDst^(0+256),w
  5474  070D  0086               	movwf	6
  5475  070E  0187               	clrf	7
  5476  070F  0021               	movlb	1	; select bank1
  5477  0710  082D               	movf	_inPipes^(0+128),w	;volatile
  5478  0711  0084               	movwf	4
  5479  0712  082E               	movf	(_inPipes+1)^(0+128),w	;volatile
  5480  0713  0085               	movwf	5
  5481  0714  0800               	movf	0,w	;code access
  5482  0715  0081               	movwf	1
  5483  0716  0AAD               	incf	_inPipes^(0+128),f	;volatile
  5484  0717  1903               	skipnz
  5485  0718  0AAE               	incf	(_inPipes+1)^(0+128),f	;volatile
  5486  0719  0022               	movlb	2	; select bank2
  5487  071A  0AC2               	incf	_pDst^(0+256),f
  5488                           
  5489                           ;usb_device.c: 1814: byteToSend--;
  5490  071B  0021               	movlb	1	; select bank1
  5491  071C  03D3               	decf	USBCtrlTrfTxService@byteToSend^(0+128),f
  5492  071D                     l7597:	
  5493  071D  0853               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  5494  071E  1903               	btfsc	3,2
  5495  071F  0008               	return
  5496  0720  2F0B               	goto	l7589
  5497  0721                     l7599:	
  5498                           
  5499                           ;usb_device.c: 1820: {
  5500                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  5501  0721  0022               	movlb	2	; select bank2
  5502  0722  0842               	movf	_pDst^(0+256),w
  5503  0723  0086               	movwf	6
  5504  0724  0187               	clrf	7
  5505  0725  0021               	movlb	1	; select bank1
  5506  0726  082D               	movf	_inPipes^(0+128),w	;volatile
  5507  0727  0084               	movwf	4
  5508  0728  082E               	movf	(_inPipes+1)^(0+128),w	;volatile
  5509  0729  0085               	movwf	5
  5510  072A  0800               	movf	0,w	;code access
  5511  072B  0081               	movwf	1
  5512  072C  0AAD               	incf	_inPipes^(0+128),f	;volatile
  5513  072D  1903               	skipnz
  5514  072E  0AAE               	incf	(_inPipes+1)^(0+128),f	;volatile
  5515  072F  0022               	movlb	2	; select bank2
  5516  0730  0AC2               	incf	_pDst^(0+256),f
  5517                           
  5518                           ;usb_device.c: 1822: byteToSend--;
  5519  0731  0021               	movlb	1	; select bank1
  5520  0732  03D3               	decf	USBCtrlTrfTxService@byteToSend^(0+128),f
  5521  0733                     l7607:	
  5522  0733  0853               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  5523  0734  1903               	btfsc	3,2
  5524  0735  0008               	return
  5525  0736  2F21               	goto	l7599
  5526  0737                     __end_of_USBCtrlTrfTxService:	
  5527  0737                     __ptext22:	
  5528 ;; *************** function _USBCtrlTrfOutHandler *****************
  5529 ;; Defined at:
  5530 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;		None
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 1F/1
  5541 ;;		On exit  : 1C/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5546 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5547 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5548 ;;Total ram usage:        2 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:   12
  5551 ;; This function calls:
  5552 ;;		_USBCtrlTrfRxService
  5553 ;; This function is called by:
  5554 ;;		_USBCtrlEPService
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           
  5559                           ;psect for function _USBCtrlTrfOutHandler
  5560  0737                     _USBCtrlTrfOutHandler:	
  5561  0737                     l8269:	
  5562                           ;incstack = 0
  5563                           ; Regs used in _USBCtrlTrfOutHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5564                           
  5565                           
  5566                           ;usb_device.c: 2540: if(controlTransferState == 2)
  5567  0737  3002               	movlw	2
  5568  0738  0637               	xorwf	_controlTransferState^(0+128),w	;volatile
  5569  0739  1D03               	btfss	3,2
  5570  073A  2F3C               	goto	l8273
  5571                           
  5572                           ;usb_device.c: 2541: {
  5573                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  5574  073B  2F68               	ljmp	l8023
  5575  073C                     l8273:	
  5576                           ;usb_device.c: 2543: }
  5577                           
  5578                           
  5579                           ;usb_device.c: 2544: else
  5580                           ;usb_device.c: 2545: {
  5581                           ;usb_device.c: 2548: controlTransferState = 0;
  5582  073C  01B7               	clrf	_controlTransferState^(0+128)	;volatile
  5583                           
  5584                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  5585  073D  0022               	movlb	2	; select bank2
  5586  073E  083F               	movf	_BothEP0OutUOWNsSet^(0+256),w	;volatile
  5587  073F  1D03               	btfss	3,2
  5588  0740  2F66               	goto	l8285
  5589                           
  5590                           ;usb_device.c: 2556: {
  5591                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 16;
  5592  0741  0021               	movlb	1	; select bank1
  5593  0742  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5594  0743  3E01               	addlw	1
  5595  0744  00D7               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  5596  0745  3000               	movlw	0
  5597  0746  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5598  0747  00D8               	movwf	(??_USBCtrlTrfOutHandler+1)^(0+128)
  5599  0748  0857               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  5600  0749  0086               	movwf	6
  5601  074A  0858               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
  5602  074B  0087               	movwf	7
  5603  074C  3010               	movlw	16
  5604  074D  0081               	movwf	1
  5605                           
  5606                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5607  074E  3050               	movlw	80
  5608  074F  00D7               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  5609  0750  01D8               	clrf	(??_USBCtrlTrfOutHandler^(0+128)+1)
  5610  0751  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5611  0752  0086               	movwf	6
  5612  0753  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5613  0754  0087               	movwf	7
  5614  0755  3142               	addfsr 1,2
  5615  0756  0857               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  5616  0757  3FC0               	movwi [0]fsr1
  5617  0758  0858               	movf	(??_USBCtrlTrfOutHandler^(0+128)+1),w
  5618  0759  3FC1               	movwi [1]fsr1
  5619                           
  5620                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5621  075A  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5622  075B  0086               	movwf	6
  5623  075C  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5624  075D  0087               	movwf	7
  5625  075E  300C               	movlw	12
  5626  075F  0081               	movwf	1
  5627                           
  5628                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5629  0760  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5630  0761  0086               	movwf	6
  5631  0762  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5632  0763  0087               	movwf	7
  5633  0764  1781               	bsf	1,7
  5634                           
  5635                           ;usb_device.c: 2561: }
  5636  0765  0008               	return
  5637  0766                     l8285:	
  5638                           
  5639                           ;usb_device.c: 2562: else
  5640                           ;usb_device.c: 2563: {
  5641                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  5642  0766  01BF               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  5643  0767  0008               	return
  5644  0768                     __end_of_USBCtrlTrfOutHandler:	
  5645  0768                     __ptext23:	
  5646 ;; *************** function _USBCtrlTrfRxService *****************
  5647 ;; Defined at:
  5648 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;  byteToRead      1   13[BANK1 ] unsigned char 
  5653 ;;  i               1   12[BANK1 ] unsigned char 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 1F/1
  5660 ;;		On exit  : 1C/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5664 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5665 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;Total ram usage:        4 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:   11
  5670 ;; This function calls:
  5671 ;;		_USBCtrlEPAllowStatusStage
  5672 ;; This function is called by:
  5673 ;;		_USBCtrlTrfOutHandler
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           
  5678                           ;psect for function _USBCtrlTrfRxService
  5679  0768                     _USBCtrlTrfRxService:	
  5680  0768                     l8023:	
  5681                           ;incstack = 0
  5682                           ; Regs used in _USBCtrlTrfRxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5683                           
  5684                           
  5685                           ;usb_device.c: 1854: uint8_t byteToRead;
  5686                           ;usb_device.c: 1855: uint8_t i;
  5687                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  5688  0768  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5689  0769  0086               	movwf	6
  5690  076A  0187               	clrf	7
  5691  076B  3F41               	moviw [1]fsr1
  5692  076C  00D6               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  5693                           
  5694                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  5695  076D  00D3               	movwf	??_USBCtrlTrfRxService^(0+128)
  5696  076E  01D4               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  5697  076F  0854               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  5698  0770  0224               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
  5699  0771  1D03               	skipz
  5700  0772  2F75               	goto	u7395
  5701  0773  0853               	movf	??_USBCtrlTrfRxService^(0+128),w
  5702  0774  0223               	subwf	(_outPipes^(0+128)+3),w	;volatile
  5703  0775                     u7395:	
  5704  0775  1803               	skipnc
  5705  0776  2F79               	goto	l811
  5706                           
  5707                           ;usb_device.c: 1866: {
  5708                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  5709  0777  0823               	movf	(_outPipes^(0+128)+3),w	;volatile
  5710  0778  00D6               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  5711  0779                     l811:	
  5712                           
  5713                           ;usb_device.c: 1868: }
  5714                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  5715  0779  0856               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  5716  077A  02A3               	subwf	(_outPipes^(0+128)+3),f	;volatile
  5717  077B  1C03               	skipc
  5718  077C  03A4               	decf	((_outPipes+1)^(0+128)+3),f	;volatile
  5719                           
  5720                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  5721  077D  01D5               	clrf	USBCtrlTrfRxService@i^(0+128)
  5722  077E                     l8037:	
  5723  077E  0856               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  5724  077F  0255               	subwf	USBCtrlTrfRxService@i^(0+128),w
  5725  0780  1803               	btfsc	3,0
  5726  0781  2F8F               	goto	l8039
  5727                           
  5728                           ;usb_device.c: 1875: {
  5729                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  5730  0782  0820               	movf	_outPipes^(0+128),w	;volatile
  5731  0783  0086               	movwf	6
  5732  0784  3001               	movlw	1	; select bank2/3
  5733  0785  0087               	movwf	7
  5734  0786  0855               	movf	USBCtrlTrfRxService@i^(0+128),w
  5735  0787  3E60               	addlw	96
  5736  0788  0084               	movwf	4
  5737  0789  0185               	clrf	5
  5738  078A  0800               	movf	0,w
  5739  078B  0081               	movwf	1
  5740  078C  0AA0               	incf	_outPipes^(0+128),f	;volatile
  5741  078D  0AD5               	incf	USBCtrlTrfRxService@i^(0+128),f
  5742  078E  2F7E               	goto	l8037
  5743  078F                     l8039:	
  5744                           
  5745                           ;usb_device.c: 1877: }
  5746                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  5747  078F  0823               	movf	(_outPipes^(0+128)+3),w	;volatile
  5748  0790  0424               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
  5749  0791  1903               	btfsc	3,2
  5750  0792  2FC7               	goto	l8051
  5751                           
  5752                           ;usb_device.c: 1882: {
  5753                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 16;
  5754  0793  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5755  0794  3E01               	addlw	1
  5756  0795  00D3               	movwf	??_USBCtrlTrfRxService^(0+128)
  5757  0796  3000               	movlw	0
  5758  0797  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5759  0798  00D4               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  5760  0799  0853               	movf	??_USBCtrlTrfRxService^(0+128),w
  5761  079A  0086               	movwf	6
  5762  079B  0854               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  5763  079C  0087               	movwf	7
  5764  079D  3010               	movlw	16
  5765  079E  0081               	movwf	1
  5766                           
  5767                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5768  079F  3060               	movlw	96
  5769  07A0  00D3               	movwf	??_USBCtrlTrfRxService^(0+128)
  5770  07A1  01D4               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  5771  07A2  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5772  07A3  0086               	movwf	6
  5773  07A4  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5774  07A5  0087               	movwf	7
  5775  07A6  3142               	addfsr 1,2
  5776  07A7  0853               	movf	??_USBCtrlTrfRxService^(0+128),w
  5777  07A8  3FC0               	movwi [0]fsr1
  5778  07A9  0854               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  5779  07AA  3FC1               	movwi [1]fsr1
  5780                           
  5781                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  5782  07AB  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5783  07AC  0086               	movwf	6
  5784  07AD  0187               	clrf	7
  5785                           
  5786                           ;usb_device.c: 1886: {
  5787                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5788  07AE  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5789  07AF  1B01               	btfsc	1,6
  5790  07B0  2FBC               	goto	L7
  5791  07B1  0086               	movwf	6
  5792  07B2  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5793  07B3  0087               	movwf	7
  5794  07B4  3048               	movlw	72
  5795  07B5  0081               	movwf	1
  5796                           
  5797                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5798  07B6  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5799  07B7  0086               	movwf	6
  5800  07B8  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5801  07B9  0087               	movwf	7
  5802  07BA  1781               	bsf	1,7
  5803                           
  5804                           ;usb_device.c: 1889: }
  5805  07BB  0008               	return
  5806  07BC                     L7:	
  5807                           ;usb_device.c: 1890: else
  5808                           ;usb_device.c: 1891: {
  5809                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  5810                           
  5811  07BC  0086               	movwf	6
  5812  07BD  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5813  07BE  0087               	movwf	7
  5814  07BF  3008               	movlw	8
  5815  07C0  0081               	movwf	1
  5816                           
  5817                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5818  07C1  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5819  07C2  0086               	movwf	6
  5820  07C3  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5821  07C4  0087               	movwf	7
  5822  07C5  1781               	bsf	1,7
  5823  07C6  0008               	return
  5824  07C7                     l8051:	
  5825                           
  5826                           ;usb_device.c: 1896: else
  5827                           ;usb_device.c: 1897: {
  5828                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 16;
  5829  07C7  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5830  07C8  3E01               	addlw	1
  5831  07C9  00D3               	movwf	??_USBCtrlTrfRxService^(0+128)
  5832  07CA  3000               	movlw	0
  5833  07CB  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5834  07CC  00D4               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  5835  07CD  0853               	movf	??_USBCtrlTrfRxService^(0+128),w
  5836  07CE  0086               	movwf	6
  5837  07CF  0854               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  5838  07D0  0087               	movwf	7
  5839  07D1  3010               	movlw	16
  5840  07D2  0081               	movwf	1
  5841                           
  5842                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5843  07D3  3050               	movlw	80
  5844  07D4  00D3               	movwf	??_USBCtrlTrfRxService^(0+128)
  5845  07D5  01D4               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  5846  07D6  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5847  07D7  0086               	movwf	6
  5848  07D8  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5849  07D9  0087               	movwf	7
  5850  07DA  3142               	addfsr 1,2
  5851  07DB  0853               	movf	??_USBCtrlTrfRxService^(0+128),w
  5852  07DC  3FC0               	movwi [0]fsr1
  5853  07DD  0854               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  5854  07DE  3FC1               	movwi [1]fsr1
  5855                           
  5856                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5857  07DF  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5858  07E0  0086               	movwf	6
  5859  07E1  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5860  07E2  0087               	movwf	7
  5861  07E3  3004               	movlw	4
  5862  07E4  0081               	movwf	1
  5863                           
  5864                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5865  07E5  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5866  07E6  0086               	movwf	6
  5867  07E7  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5868  07E8  0087               	movwf	7
  5869  07E9  1781               	bsf	1,7
  5870                           
  5871                           ;usb_device.c: 1915: {
  5872                           ;usb_device.c: 1921: outPipes[0].pFunc();
  5873  07EA  0825               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  5874  07EB  0826               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  5875                           
  5876                           ;usb_device.c: 1926: }
  5877                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  5878  07EC  13A2               	bcf	(_outPipes^(0+128)+2),7	;volatile
  5879                           
  5880                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  5881  07ED  0834               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  5882  07EE  1D03               	btfss	3,2
  5883  07EF  0008               	return
  5884                           
  5885                           ;usb_device.c: 1942: {
  5886                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  5887  07F0  2B66               	ljmp	l7685
  5888  07F1                     __end_of_USBCtrlTrfRxService:	
  5889                           
  5890                           	psect	bssBANK1
  5891  00A0                     __pbssBANK1:	
  5892  00A0                     _outPipes:	
  5893  00A0                     	ds	7
  5894  00A7                     _pBDTEntryIn:	
  5895  00A7                     	ds	6
  5896  00AD                     _inPipes:	
  5897  00AD                     	ds	5
  5898  00B2                     _pBDTEntryEP0OutNext:	
  5899  00B2                     	ds	2
  5900  00B4                     _USBDeferStatusStagePacket:	
  5901  00B4                     	ds	1
  5902  00B5                     _USBStatusStageTimeoutCounter:	
  5903  00B5                     	ds	1
  5904  00B6                     _endpoint_number:	
  5905  00B6                     	ds	1
  5906  00B7                     _controlTransferState:	
  5907  00B7                     	ds	1
  5908  00B8                     _shortPacketStatus:	
  5909  00B8                     	ds	1
  5910  00B9                     _pBDTEntryEP0OutCurrent:	
  5911  00B9                     	ds	1
  5912  00BA                     cmd_task@i:	
  5913  00BA                     	ds	1
  5914  00BB                     cmd_task@do1p1:	
  5915  00BB                     	ds	1
  5916  00BC                     cmd_task@do1p0:	
  5917  00BC                     	ds	1
  5918  00BD                     cmd_task@do0p1:	
  5919  00BD                     	ds	1
  5920  00BE                     cmd_task@do0p0:	
  5921  00BE                     	ds	1
  5922  00BF                     cmd_task@input_mask:	
  5923  00BF                     	ds	1
  5924  00C0                     cmd_task@sie:	
  5925  00C0                     	ds	1
  5926  00C1                     cmd_task@cmd:	
  5927  00C1                     	ds	1
  5928  00C2                     _usb_tx_ptr:	
  5929  00C2                     	ds	1
  5930  00C3                     _usb_rx_ptr:	
  5931  00C3                     	ds	1
  5932  00C4                     _USBDeviceState:	
  5933  00C4                     	ds	1
  5934  00C5                     _cdc_trf_state:	
  5935  00C5                     	ds	1
  5936  00C6                     _cdc_rx_len:	
  5937  00C6                     	ds	1
  5938  00C7                     _USTATcopy:	
  5939  00C7                     	ds	1
  5940  00C8                     _USBActiveConfiguration:	
  5941  00C8                     	ds	1
  5942                           
  5943                           	psect	dataBANK1
  5944  00E7                     __pdataBANK1:	
  5945  00E7                     _usb_rx_bytes_avail:	
  5946  00E7                     	ds	1
  5947                           
  5948                           	psect	bssBANK2
  5949  0120                     __pbssBANK2:	
  5950  0120                     _pBDTEntryOut:	
  5951  0120                     	ds	6
  5952  0126                     _USB1msTickCount:	
  5953  0126                     	ds	4
  5954  012A                     _ep_data_out:	
  5955  012A                     	ds	3
  5956  012D                     _ep_data_in:	
  5957  012D                     	ds	3
  5958  0130                     cmd_task@loop_count:	
  5959  0130                     	ds	2
  5960  0132                     _CDCDataInHandle:	
  5961  0132                     	ds	2
  5962  0134                     _CDCDataOutHandle:	
  5963  0134                     	ds	2
  5964  0136                     _pCDCDst:	
  5965  0136                     	ds	2
  5966  0138                     _pCDCSrc:	
  5967  0138                     	ds	2
  5968  013A                     _USBTicksSinceSuspendEnd:	
  5969  013A                     	ds	1
  5970  013B                     _USBDeferOUTDataStagePackets:	
  5971  013B                     	ds	1
  5972  013C                     _USBDeferINDataStagePackets:	
  5973  013C                     	ds	1
  5974  013D                     _USBStatusStageEnabledFlag2:	
  5975  013D                     	ds	1
  5976  013E                     _USBStatusStageEnabledFlag1:	
  5977  013E                     	ds	1
  5978  013F                     _BothEP0OutUOWNsSet:	
  5979  013F                     	ds	1
  5980  0140                     _USBBusIsSuspended:	
  5981  0140                     	ds	1
  5982  0141                     _RemoteWakeup:	
  5983  0141                     	ds	1
  5984  0142                     _pDst:	
  5985  0142                     	ds	1
  5986  0143                     cmd_task@status_sent:	
  5987  0143                     	ds	1
  5988  0144                     cmd_task@status:	
  5989  0144                     	ds	1
  5990  0145                     cmd_task@data:	
  5991  0145                     	ds	1
  5992  0146                     cmd_task@byte_to_send:	
  5993  0146                     	ds	1
  5994  0147                     cmd_task@mask:	
  5995  0147                     	ds	1
  5996  0148                     cmd_task@expected_data:	
  5997  0148                     	ds	1
  5998  0149                     cmd_task@actual_data:	
  5999  0149                     	ds	1
  6000  014A                     cmd_task@loop_is_active:	
  6001  014A                     	ds	1
  6002  014B                     cmd_task@inout_cfg:	
  6003  014B                     	ds	1
  6004  014C                     cmd_task@num_bytes:	
  6005  014C                     	ds	1
  6006  014D                     cmd_task@num_bits:	
  6007  014D                     	ds	1
  6008  014E                     cmd_task@op0:	
  6009  014E                     	ds	1
  6010  014F                     _cdc_mem_type:	
  6011  014F                     	ds	1
  6012  0150                     _cdc_tx_len:	
  6013  0150                     	ds	1
  6014  0151                     _dummy_encapsulated_cmd_response:	
  6015  0151                     	ds	8
  6016  0159                     _line_coding:	
  6017  0159                     	ds	7
  6018  0160                     _USBAlternateInterface:	
  6019  0160                     	ds	2
  6020                           
  6021                           	psect	dataBANK2
  6022  016D                     __pdataBANK2:	
  6023  016D                     cmd_task@compare_data_matches:	
  6024  016D                     	ds	1
  6025  016E                     cmd_task@gpio_dir:	
  6026  016E                     	ds	1
  6027                           
  6028                           	psect	dataBANK3
  6029  01A0                     __pdataBANK3:	
  6030  01A0                     _usb_rx_buf:	
  6031  01A0                     	ds	64
  6032                           
  6033                           	psect	bssBANK4
  6034  0220                     __pbssBANK4:	
  6035  0220                     _sie_configs:	
  6036  0220                     	ds	64
  6037                           
  6038                           	psect	bssBANK5
  6039  02A0                     __pbssBANK5:	
  6040  02A0                     _cdc_data_rx:	
  6041  02A0                     	ds	64
  6042                           
  6043                           	psect	bssBANK6
  6044  0320                     __pbssBANK6:	
  6045  0320                     _usb_tx_buf:	
  6046  0320                     	ds	64
  6047                           
  6048                           	psect	bssBANK7
  6049  03A0                     __pbssBANK7:	
  6050  03A0                     _cdc_data_tx:	
  6051  03A0                     	ds	64
  6052                           
  6053                           	psect	inittext
  6054  07F1                     init_ram:	
  6055  07F1  00FE               	movwf	126
  6056  07F2                     initloop:	
  6057  07F2  0012               	moviw fsr0++
  6058  07F3  001E               	movwi fsr1++
  6059  07F4  0BFE               	decfsz	126,f
  6060  07F5  2FF2               	goto	initloop
  6061  07F6  3400               	retlw	0
  6062                           
  6063                           	psect	clrtext
  6064  07F7                     clear_ram0:	
  6065                           ;	Called with FSR0 containing the base address, and
  6066                           ;	WREG with the size to clear
  6067                           
  6068  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
  6069  07F8                     clrloop0:	
  6070  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
  6071  07F9  3101               	addfsr 0,1
  6072  07FA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6073  07FB  2FF8               	goto	clrloop0	;have we reached the end yet?
  6074  07FC  3400               	retlw	0	;all done for this memory range, return
  6075                           
  6076                           	psect	cstackBANK2
  6077  0162                     __pcstackBANK2:	
  6078  0162                     USBStdFeatureReqHandler@pUEP:	
  6079                           
  6080                           ; 2 bytes @ 0x0
  6081  0162                     	ds	2
  6082  0164                     USBStdFeatureReqHandler@current_ep_data:	
  6083                           
  6084                           ; 1 bytes @ 0x2
  6085  0164                     	ds	1
  6086  0165                     USBStdFeatureReqHandler@p:	
  6087                           
  6088                           ; 2 bytes @ 0x3
  6089  0165                     	ds	2
  6090  0167                     ??_USBCtrlEPService:	
  6091                           
  6092                           ; 1 bytes @ 0x5
  6093  0167                     	ds	3
  6094  016A                     USBDeviceTasks@i:	
  6095                           
  6096                           ; 1 bytes @ 0x8
  6097  016A                     	ds	1
  6098  016B                     main@cmd_pt:	
  6099                           
  6100                           ; 2 bytes @ 0x9
  6101  016B                     	ds	2
  6102                           
  6103                           	psect	cstackBANK1
  6104  00C9                     __pcstackBANK1:	
  6105  00C9                     i1USBStdSetCfgHandler@p:	
  6106  00C9                     i1USBStdFeatureReqHandler@pUEP:	
  6107                           ; 2 bytes @ 0x0
  6108                           
  6109                           
  6110                           ; 2 bytes @ 0x0
  6111  00C9                     	ds	2
  6112  00CB                     i1USBStdSetCfgHandler@i_2232:	
  6113  00CB                     i1USBStdFeatureReqHandler@current_ep_data:	
  6114                           ; 1 bytes @ 0x2
  6115                           
  6116                           
  6117                           ; 1 bytes @ 0x2
  6118  00CB                     	ds	1
  6119  00CC                     i1USBStdSetCfgHandler@i:	
  6120  00CC                     i1USBStdFeatureReqHandler@p:	
  6121                           ; 1 bytes @ 0x3
  6122                           
  6123                           
  6124                           ; 2 bytes @ 0x3
  6125  00CC                     	ds	2
  6126  00CE                     ??i1_USBCtrlEPService:	
  6127                           
  6128                           ; 1 bytes @ 0x5
  6129  00CE                     	ds	3
  6130  00D1                     ??_OSCILLATOR_Initialize:	
  6131  00D1                     ??_WDT_Initialize:	
  6132                           ; 1 bytes @ 0x8
  6133                           
  6134  00D1                     ??_USBDeviceInit:	
  6135                           ; 1 bytes @ 0x8
  6136                           
  6137  00D1                     ??_USBDeviceAttach:	
  6138                           ; 1 bytes @ 0x8
  6139                           
  6140  00D1                     ??_USBIncrement1msInternalTimers:	
  6141                           ; 1 bytes @ 0x8
  6142                           
  6143  00D1                     ??_USBCtrlEPAllowStatusStage:	
  6144                           ; 1 bytes @ 0x8
  6145                           
  6146  00D1                     ??_USBStallHandler:	
  6147                           ; 1 bytes @ 0x8
  6148                           
  6149  00D1                     ?_USBConfigureEndpoint:	
  6150                           ; 1 bytes @ 0x8
  6151                           
  6152  00D1                     ??_USBCtrlTrfTxService:	
  6153                           ; 1 bytes @ 0x8
  6154                           
  6155  00D1                     ??_USBCheckCDCRequest:	
  6156                           ; 1 bytes @ 0x8
  6157                           
  6158  00D1                     ?_putUSBUSART:	
  6159                           ; 1 bytes @ 0x8
  6160                           
  6161  00D1                     ??_PIN_MANAGER_Initialize:	
  6162                           ; 1 bytes @ 0x8
  6163                           
  6164  00D1                     ??_gpio_init:	
  6165                           ; 1 bytes @ 0x8
  6166                           
  6167  00D1                     ??_cmd_task:	
  6168                           ; 1 bytes @ 0x8
  6169                           
  6170  00D1                     ??_USBStdGetDscHandler:	
  6171                           ; 1 bytes @ 0x8
  6172                           
  6173  00D1                     ??_USBStdGetStatusHandler:	
  6174                           ; 1 bytes @ 0x8
  6175                           
  6176  00D1                     ?_USBTransferOnePacket:	
  6177                           ; 1 bytes @ 0x8
  6178                           
  6179  00D1                     ?_memset:	
  6180                           ; 2 bytes @ 0x8
  6181                           
  6182  00D1                     putUSBUSART@length:	
  6183                           ; 2 bytes @ 0x8
  6184                           
  6185  00D1                     USBTransferOnePacket@dir:	
  6186                           ; 1 bytes @ 0x8
  6187                           
  6188  00D1                     USBConfigureEndpoint@direction:	
  6189                           ; 1 bytes @ 0x8
  6190                           
  6191  00D1                     USBDeviceInit@p:	
  6192                           ; 1 bytes @ 0x8
  6193                           
  6194  00D1                     USBStdGetStatusHandler@p:	
  6195                           ; 2 bytes @ 0x8
  6196                           
  6197  00D1                     memset@p1:	
  6198                           ; 2 bytes @ 0x8
  6199                           
  6200                           
  6201                           ; 2 bytes @ 0x8
  6202  00D1                     	ds	1
  6203  00D2                     ??_USBConfigureEndpoint:	
  6204  00D2                     ??_putUSBUSART:	
  6205                           ; 1 bytes @ 0x9
  6206                           
  6207  00D2                     putUSBUSART@data:	
  6208                           ; 1 bytes @ 0x9
  6209                           
  6210  00D2                     USBTransferOnePacket@data:	
  6211                           ; 1 bytes @ 0x9
  6212                           
  6213                           
  6214                           ; 2 bytes @ 0x9
  6215  00D2                     	ds	1
  6216  00D3                     ??_cmd_tx_buffer_task:	
  6217  00D3                     ??_USBCtrlTrfRxService:	
  6218                           ; 1 bytes @ 0xA
  6219                           
  6220  00D3                     USBDeviceInit@i_1567:	
  6221                           ; 1 bytes @ 0xA
  6222                           
  6223  00D3                     USBConfigureEndpoint@EPNum:	
  6224                           ; 1 bytes @ 0xA
  6225                           
  6226  00D3                     USBCtrlTrfTxService@byteToSend:	
  6227                           ; 1 bytes @ 0xA
  6228                           
  6229  00D3                     memset@c:	
  6230                           ; 1 bytes @ 0xA
  6231                           
  6232                           
  6233                           ; 2 bytes @ 0xA
  6234  00D3                     	ds	1
  6235  00D4                     ??_USBCtrlTrfInHandler:	
  6236  00D4                     ??_USBCtrlEPAllowDataStage:	
  6237                           ; 1 bytes @ 0xB
  6238                           
  6239  00D4                     cmd_task@PT_YIELD_FLAG:	
  6240                           ; 1 bytes @ 0xB
  6241                           
  6242  00D4                     USBDeviceInit@i:	
  6243                           ; 1 bytes @ 0xB
  6244                           
  6245  00D4                     USBTransferOnePacket@len:	
  6246                           ; 1 bytes @ 0xB
  6247                           
  6248  00D4                     USBConfigureEndpoint@handle:	
  6249                           ; 1 bytes @ 0xB
  6250                           
  6251                           
  6252                           ; 1 bytes @ 0xB
  6253  00D4                     	ds	1
  6254  00D5                     ?_USBEnableEndpoint:	
  6255  00D5                     ??_USBTransferOnePacket:	
  6256                           ; 1 bytes @ 0xC
  6257                           
  6258  00D5                     ??_SYSTEM_Initialize:	
  6259                           ; 1 bytes @ 0xC
  6260                           
  6261  00D5                     cmd_task@last_phase_overlay:	
  6262                           ; 1 bytes @ 0xC
  6263                           
  6264  00D5                     USBEnableEndpoint@options:	
  6265                           ; 1 bytes @ 0xC
  6266                           
  6267  00D5                     USBCtrlTrfRxService@i:	
  6268                           ; 1 bytes @ 0xC
  6269                           
  6270  00D5                     memset@n:	
  6271                           ; 1 bytes @ 0xC
  6272                           
  6273                           
  6274                           ; 2 bytes @ 0xC
  6275  00D5                     	ds	1
  6276  00D6                     ??_USBEnableEndpoint:	
  6277  00D6                     ??_USBCtrlEPServiceComplete:	
  6278                           ; 1 bytes @ 0xD
  6279                           
  6280  00D6                     cmd_task@last_phase_overlay_902:	
  6281                           ; 1 bytes @ 0xD
  6282                           
  6283  00D6                     USBCtrlTrfRxService@byteToRead:	
  6284                           ; 1 bytes @ 0xD
  6285                           
  6286  00D6                     USBCtrlTrfInHandler@lastDTS:	
  6287                           ; 1 bytes @ 0xD
  6288                           
  6289                           
  6290                           ; 1 bytes @ 0xD
  6291  00D6                     	ds	1
  6292  00D7                     ??_memset:	
  6293  00D7                     ??_USBCtrlTrfOutHandler:	
  6294                           ; 1 bytes @ 0xE
  6295                           
  6296  00D7                     cmd_task@op1:	
  6297                           ; 1 bytes @ 0xE
  6298                           
  6299  00D7                     memset@p:	
  6300                           ; 1 bytes @ 0xE
  6301                           
  6302                           
  6303                           ; 2 bytes @ 0xE
  6304  00D7                     	ds	1
  6305  00D8                     cmd_task@bit_to_set:	
  6306  00D8                     USBEnableEndpoint@p:	
  6307                           ; 1 bytes @ 0xF
  6308                           
  6309                           
  6310                           ; 2 bytes @ 0xF
  6311  00D8                     	ds	1
  6312  00D9                     cmd_task@bit_to_set_901:	
  6313  00D9                     USBTransferOnePacket@ep:	
  6314                           ; 1 bytes @ 0x10
  6315                           
  6316                           
  6317                           ; 1 bytes @ 0x10
  6318  00D9                     	ds	1
  6319  00DA                     cmd_task@data_904:	
  6320  00DA                     USBEnableEndpoint@ep:	
  6321                           ; 1 bytes @ 0x11
  6322                           
  6323  00DA                     USBTransferOnePacket@handle:	
  6324                           ; 1 bytes @ 0x11
  6325                           
  6326                           
  6327                           ; 2 bytes @ 0x11
  6328  00DA                     	ds	1
  6329  00DB                     cmd_task@tmp:	
  6330                           
  6331                           ; 1 bytes @ 0x12
  6332  00DB                     	ds	1
  6333  00DC                     ??_CDCInitEP:	
  6334  00DC                     ?_getsUSBUSART:	
  6335                           ; 1 bytes @ 0x13
  6336                           
  6337  00DC                     ??_CDCTxService:	
  6338                           ; 1 bytes @ 0x13
  6339                           
  6340  00DC                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  6341                           ; 1 bytes @ 0x13
  6342                           
  6343  00DC                     getsUSBUSART@len:	
  6344                           ; 1 bytes @ 0x13
  6345                           
  6346  00DC                     CDCTxService@i:	
  6347                           ; 1 bytes @ 0x13
  6348                           
  6349  00DC                     cmd_task@last_phase_overlay_905:	
  6350                           ; 1 bytes @ 0x13
  6351                           
  6352  00DC                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  6353                           ; 1 bytes @ 0x13
  6354                           
  6355                           
  6356                           ; 2 bytes @ 0x13
  6357  00DC                     	ds	1
  6358  00DD                     ??_getsUSBUSART:	
  6359  00DD                     CDCTxService@byte_to_send:	
  6360                           ; 1 bytes @ 0x14
  6361                           
  6362  00DD                     cmd_task@data_903:	
  6363                           ; 1 bytes @ 0x14
  6364                           
  6365                           
  6366                           ; 1 bytes @ 0x14
  6367  00DD                     	ds	1
  6368  00DE                     getsUSBUSART@buffer:	
  6369  00DE                     cmd_task@pt:	
  6370                           ; 1 bytes @ 0x15
  6371                           
  6372  00DE                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  6373                           ; 1 bytes @ 0x15
  6374                           
  6375                           
  6376                           ; 2 bytes @ 0x15
  6377  00DE                     	ds	1
  6378  00DF                     ??_cmd_rx_buffer_task:	
  6379                           
  6380                           ; 1 bytes @ 0x16
  6381  00DF                     	ds	1
  6382  00E0                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  6383                           
  6384                           ; 2 bytes @ 0x17
  6385  00E0                     	ds	2
  6386  00E2                     ??_USBWakeFromSuspend:	
  6387  00E2                     ??_USBSuspend:	
  6388                           ; 1 bytes @ 0x19
  6389                           
  6390  00E2                     ??_USBStdFeatureReqHandler:	
  6391                           ; 1 bytes @ 0x19
  6392                           
  6393  00E2                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  6394                           ; 1 bytes @ 0x19
  6395                           
  6396  00E2                     ??_USBStdSetCfgHandler:	
  6397                           ; 1 bytes @ 0x19
  6398                           
  6399  00E2                     USBStdSetCfgHandler@p:	
  6400                           ; 1 bytes @ 0x19
  6401                           
  6402                           
  6403                           ; 2 bytes @ 0x19
  6404  00E2                     	ds	2
  6405  00E4                     USBStdSetCfgHandler@i_2232:	
  6406                           
  6407                           ; 1 bytes @ 0x1B
  6408  00E4                     	ds	1
  6409  00E5                     USBStdSetCfgHandler@i:	
  6410                           
  6411                           ; 1 bytes @ 0x1C
  6412  00E5                     	ds	1
  6413  00E6                     ??_USBDeviceTasks:	
  6414  00E6                     ??_USBCtrlTrfSetupHandler:	
  6415                           ; 1 bytes @ 0x1D
  6416                           
  6417  00E6                     ??_USBCheckStdRequest:	
  6418                           ; 1 bytes @ 0x1D
  6419                           
  6420                           
  6421                           ; 1 bytes @ 0x1D
  6422  00E6                     	ds	1
  6423  00E7                     ??_usb_task:	
  6424  00E7                     ??_main:	
  6425                           ; 1 bytes @ 0x1E
  6426                           
  6427                           
  6428                           	psect	cstackCOMMON
  6429  0070                     __pcstackCOMMON:	
  6430                           ; 1 bytes @ 0x1E
  6431                           
  6432  0070                     ?_USBDeviceTasks:	
  6433  0070                     ?_OSCILLATOR_Initialize:	
  6434                           ; 1 bytes @ 0x0
  6435                           
  6436  0070                     ?_WDT_Initialize:	
  6437                           ; 1 bytes @ 0x0
  6438                           
  6439  0070                     ?_USBDeviceInit:	
  6440                           ; 1 bytes @ 0x0
  6441                           
  6442  0070                     ?_USBDeviceAttach:	
  6443                           ; 1 bytes @ 0x0
  6444                           
  6445  0070                     ?_USBWakeFromSuspend:	
  6446                           ; 1 bytes @ 0x0
  6447                           
  6448  0070                     ?_USBSuspend:	
  6449                           ; 1 bytes @ 0x0
  6450                           
  6451  0070                     ?_USBIncrement1msInternalTimers:	
  6452                           ; 1 bytes @ 0x0
  6453                           
  6454  0070                     ?_USBCtrlEPAllowStatusStage:	
  6455                           ; 1 bytes @ 0x0
  6456                           
  6457  0070                     ?_USBStallHandler:	
  6458                           ; 1 bytes @ 0x0
  6459                           
  6460  0070                     ?_USBCtrlEPService:	
  6461                           ; 1 bytes @ 0x0
  6462                           
  6463  0070                     ?_USBCtrlTrfTxService:	
  6464                           ; 1 bytes @ 0x0
  6465                           
  6466  0070                     ?_USBCtrlTrfSetupHandler:	
  6467                           ; 1 bytes @ 0x0
  6468                           
  6469  0070                     ?_USBCtrlTrfOutHandler:	
  6470                           ; 1 bytes @ 0x0
  6471                           
  6472  0070                     ?_USBCtrlTrfInHandler:	
  6473                           ; 1 bytes @ 0x0
  6474                           
  6475  0070                     ?_USBCheckStdRequest:	
  6476                           ; 1 bytes @ 0x0
  6477                           
  6478  0070                     ?_USBStdFeatureReqHandler:	
  6479                           ; 1 bytes @ 0x0
  6480                           
  6481  0070                     ?_USBCheckCDCRequest:	
  6482                           ; 1 bytes @ 0x0
  6483                           
  6484  0070                     ?_CDCInitEP:	
  6485                           ; 1 bytes @ 0x0
  6486                           
  6487  0070                     ?_CDCTxService:	
  6488                           ; 1 bytes @ 0x0
  6489                           
  6490  0070                     ?_INTERRUPT_InterruptManager:	
  6491                           ; 1 bytes @ 0x0
  6492                           
  6493  0070                     ?_PIN_MANAGER_Initialize:	
  6494                           ; 1 bytes @ 0x0
  6495                           
  6496  0070                     ?_SYSTEM_Initialize:	
  6497                           ; 1 bytes @ 0x0
  6498                           
  6499  0070                     ?_usb_task:	
  6500                           ; 1 bytes @ 0x0
  6501                           
  6502  0070                     ?_gpio_init:	
  6503                           ; 1 bytes @ 0x0
  6504                           
  6505  0070                     ?_cmd_task:	
  6506                           ; 1 bytes @ 0x0
  6507                           
  6508  0070                     ?_cmd_rx_buffer_task:	
  6509                           ; 1 bytes @ 0x0
  6510                           
  6511  0070                     ?_cmd_tx_buffer_task:	
  6512                           ; 1 bytes @ 0x0
  6513                           
  6514  0070                     ?_main:	
  6515                           ; 1 bytes @ 0x0
  6516                           
  6517  0070                     ?_USBCtrlEPAllowDataStage:	
  6518                           ; 1 bytes @ 0x0
  6519                           
  6520  0070                     ?_USBCtrlEPServiceComplete:	
  6521                           ; 1 bytes @ 0x0
  6522                           
  6523  0070                     ?_USBCtrlTrfRxService:	
  6524                           ; 1 bytes @ 0x0
  6525                           
  6526  0070                     ?_USBStdSetCfgHandler:	
  6527                           ; 1 bytes @ 0x0
  6528                           
  6529  0070                     ?_USBStdGetDscHandler:	
  6530                           ; 1 bytes @ 0x0
  6531                           
  6532  0070                     ?_USBStdGetStatusHandler:	
  6533                           ; 1 bytes @ 0x0
  6534                           
  6535  0070                     ?i1_USBCheckCDCRequest:	
  6536                           ; 1 bytes @ 0x0
  6537                           
  6538  0070                     ??i1_USBCheckCDCRequest:	
  6539                           ; 1 bytes @ 0x0
  6540                           
  6541  0070                     ?i1_CDCInitEP:	
  6542                           ; 1 bytes @ 0x0
  6543                           
  6544  0070                     ?i1_USBDeviceInit:	
  6545                           ; 1 bytes @ 0x0
  6546                           
  6547  0070                     ??i1_USBDeviceInit:	
  6548                           ; 1 bytes @ 0x0
  6549                           
  6550  0070                     ?i1_USBDeviceTasks:	
  6551                           ; 1 bytes @ 0x0
  6552                           
  6553  0070                     ?i1_USBCtrlEPAllowStatusStage:	
  6554                           ; 1 bytes @ 0x0
  6555                           
  6556  0070                     ??i1_USBCtrlEPAllowStatusStage:	
  6557                           ; 1 bytes @ 0x0
  6558                           
  6559  0070                     ?i1_USBCtrlEPAllowDataStage:	
  6560                           ; 1 bytes @ 0x0
  6561                           
  6562  0070                     ?i1_USBConfigureEndpoint:	
  6563                           ; 1 bytes @ 0x0
  6564                           
  6565  0070                     ?i1_USBCtrlEPServiceComplete:	
  6566                           ; 1 bytes @ 0x0
  6567                           
  6568  0070                     ?i1_USBCtrlTrfTxService:	
  6569                           ; 1 bytes @ 0x0
  6570                           
  6571  0070                     ??i1_USBCtrlTrfTxService:	
  6572                           ; 1 bytes @ 0x0
  6573                           
  6574  0070                     ?i1_USBCtrlTrfRxService:	
  6575                           ; 1 bytes @ 0x0
  6576                           
  6577  0070                     ?i1_USBStdSetCfgHandler:	
  6578                           ; 1 bytes @ 0x0
  6579                           
  6580  0070                     ?i1_USBStdGetDscHandler:	
  6581                           ; 1 bytes @ 0x0
  6582                           
  6583  0070                     ??i1_USBStdGetDscHandler:	
  6584                           ; 1 bytes @ 0x0
  6585                           
  6586  0070                     ?i1_USBStdGetStatusHandler:	
  6587                           ; 1 bytes @ 0x0
  6588                           
  6589  0070                     ??i1_USBStdGetStatusHandler:	
  6590                           ; 1 bytes @ 0x0
  6591                           
  6592  0070                     ?i1_USBStallHandler:	
  6593                           ; 1 bytes @ 0x0
  6594                           
  6595  0070                     ??i1_USBStallHandler:	
  6596                           ; 1 bytes @ 0x0
  6597                           
  6598  0070                     ?i1_USBSuspend:	
  6599                           ; 1 bytes @ 0x0
  6600                           
  6601  0070                     ?i1_USBWakeFromSuspend:	
  6602                           ; 1 bytes @ 0x0
  6603                           
  6604  0070                     ?i1_USBCtrlEPService:	
  6605                           ; 1 bytes @ 0x0
  6606                           
  6607  0070                     ?i1_USBCtrlTrfSetupHandler:	
  6608                           ; 1 bytes @ 0x0
  6609                           
  6610  0070                     ?i1_USBCtrlTrfOutHandler:	
  6611                           ; 1 bytes @ 0x0
  6612                           
  6613  0070                     ?i1_USBCtrlTrfInHandler:	
  6614                           ; 1 bytes @ 0x0
  6615                           
  6616  0070                     ?i1_USBCheckStdRequest:	
  6617                           ; 1 bytes @ 0x0
  6618                           
  6619  0070                     ?i1_USBStdFeatureReqHandler:	
  6620                           ; 1 bytes @ 0x0
  6621                           
  6622  0070                     ?i1_USBIncrement1msInternalTimers:	
  6623                           ; 1 bytes @ 0x0
  6624                           
  6625  0070                     ??i1_USBIncrement1msInternalTimers:	
  6626                           ; 1 bytes @ 0x0
  6627                           
  6628  0070                     ?i1_memset:	
  6629                           ; 1 bytes @ 0x0
  6630                           
  6631  0070                     ?i1_USBTransferOnePacket:	
  6632                           ; 1 bytes @ 0x0
  6633                           
  6634  0070                     i1USBTransferOnePacket@dir:	
  6635                           ; 2 bytes @ 0x0
  6636                           
  6637  0070                     i1USBConfigureEndpoint@direction:	
  6638                           ; 1 bytes @ 0x0
  6639                           
  6640  0070                     i1USBDeviceInit@p:	
  6641                           ; 1 bytes @ 0x0
  6642                           
  6643  0070                     i1USBStdGetStatusHandler@p:	
  6644                           ; 2 bytes @ 0x0
  6645                           
  6646  0070                     i1memset@p1:	
  6647                           ; 2 bytes @ 0x0
  6648                           
  6649                           
  6650                           ; 2 bytes @ 0x0
  6651  0070                     	ds	1
  6652  0071                     ??i1_USBConfigureEndpoint:	
  6653  0071                     i1USBTransferOnePacket@data:	
  6654                           ; 1 bytes @ 0x1
  6655                           
  6656                           
  6657                           ; 2 bytes @ 0x1
  6658  0071                     	ds	1
  6659  0072                     ??i1_USBCtrlTrfRxService:	
  6660  0072                     i1USBDeviceInit@i_1567:	
  6661                           ; 1 bytes @ 0x2
  6662                           
  6663  0072                     i1USBConfigureEndpoint@EPNum:	
  6664                           ; 1 bytes @ 0x2
  6665                           
  6666  0072                     i1USBCtrlTrfTxService@byteToSend:	
  6667                           ; 1 bytes @ 0x2
  6668                           
  6669  0072                     i1memset@c:	
  6670                           ; 1 bytes @ 0x2
  6671                           
  6672                           
  6673                           ; 2 bytes @ 0x2
  6674  0072                     	ds	1
  6675  0073                     ??i1_USBCtrlEPAllowDataStage:	
  6676  0073                     ??i1_USBCtrlTrfInHandler:	
  6677                           ; 1 bytes @ 0x3
  6678                           
  6679  0073                     i1USBDeviceInit@i:	
  6680                           ; 1 bytes @ 0x3
  6681                           
  6682  0073                     i1USBTransferOnePacket@len:	
  6683                           ; 1 bytes @ 0x3
  6684                           
  6685  0073                     i1USBConfigureEndpoint@handle:	
  6686                           ; 1 bytes @ 0x3
  6687                           
  6688                           
  6689                           ; 1 bytes @ 0x3
  6690  0073                     	ds	1
  6691  0074                     ?i1_USBEnableEndpoint:	
  6692  0074                     ??i1_USBTransferOnePacket:	
  6693                           ; 1 bytes @ 0x4
  6694                           
  6695  0074                     i1USBEnableEndpoint@options:	
  6696                           ; 1 bytes @ 0x4
  6697                           
  6698  0074                     i1USBCtrlTrfRxService@i:	
  6699                           ; 1 bytes @ 0x4
  6700                           
  6701  0074                     i1memset@n:	
  6702                           ; 1 bytes @ 0x4
  6703                           
  6704                           
  6705                           ; 2 bytes @ 0x4
  6706  0074                     	ds	1
  6707  0075                     ??i1_USBEnableEndpoint:	
  6708  0075                     ??i1_USBCtrlEPServiceComplete:	
  6709                           ; 1 bytes @ 0x5
  6710                           
  6711  0075                     i1USBCtrlTrfRxService@byteToRead:	
  6712                           ; 1 bytes @ 0x5
  6713                           
  6714  0075                     i1USBCtrlTrfInHandler@lastDTS:	
  6715                           ; 1 bytes @ 0x5
  6716                           
  6717                           
  6718                           ; 1 bytes @ 0x5
  6719  0075                     	ds	1
  6720  0076                     ??i1_USBCtrlTrfOutHandler:	
  6721  0076                     ??i1_memset:	
  6722                           ; 1 bytes @ 0x6
  6723                           
  6724  0076                     i1memset@p:	
  6725                           ; 1 bytes @ 0x6
  6726                           
  6727                           
  6728                           ; 2 bytes @ 0x6
  6729  0076                     	ds	1
  6730  0077                     i1USBEnableEndpoint@p:	
  6731                           
  6732                           ; 2 bytes @ 0x7
  6733  0077                     	ds	1
  6734  0078                     i1USBTransferOnePacket@ep:	
  6735                           
  6736                           ; 1 bytes @ 0x8
  6737  0078                     	ds	1
  6738  0079                     i1USBEnableEndpoint@ep:	
  6739  0079                     i1USBTransferOnePacket@handle:	
  6740                           ; 1 bytes @ 0x9
  6741                           
  6742                           
  6743                           ; 2 bytes @ 0x9
  6744  0079                     	ds	2
  6745  007B                     ??i1_CDCInitEP:	
  6746  007B                     ??i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  6747                           ; 1 bytes @ 0xB
  6748                           
  6749  007B                     ??i1_USBStdSetCfgHandler:	
  6750                           ; 1 bytes @ 0xB
  6751                           
  6752  007B                     ??i1_USBSuspend:	
  6753                           ; 1 bytes @ 0xB
  6754                           
  6755  007B                     ??i1_USBWakeFromSuspend:	
  6756                           ; 1 bytes @ 0xB
  6757                           
  6758  007B                     ??i1_USBStdFeatureReqHandler:	
  6759                           ; 1 bytes @ 0xB
  6760                           
  6761                           
  6762                           ; 1 bytes @ 0xB
  6763  007B                     	ds	2
  6764  007D                     ??i1_USBDeviceTasks:	
  6765  007D                     ??i1_USBCtrlTrfSetupHandler:	
  6766                           ; 1 bytes @ 0xD
  6767                           
  6768  007D                     ??i1_USBCheckStdRequest:	
  6769                           ; 1 bytes @ 0xD
  6770                           
  6771                           
  6772                           ; 1 bytes @ 0xD
  6773  007D                     	ds	1
  6774  007E                     ??_INTERRUPT_InterruptManager:	
  6775                           
  6776                           	psect	cstackBANK0h
  6777  0058                     __pcstackBANK0h:	
  6778                           ; 1 bytes @ 0xE
  6779                           
  6780  0058                     ?i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  6781  0058                     i1USER_USB_CALLBACK_EVENT_HANDLER@event:	
  6782                           ; 1 bytes @ 0x0
  6783                           
  6784                           
  6785                           ; 2 bytes @ 0x0
  6786  0058                     	ds	2
  6787  005A                     i1USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  6788                           
  6789                           ; 2 bytes @ 0x2
  6790  005A                     	ds	2
  6791  005C                     i1USER_USB_CALLBACK_EVENT_HANDLER@size:	
  6792                           
  6793                           ; 2 bytes @ 0x4
  6794  005C                     	ds	2
  6795  005E                     i1USBDeviceTasks@i:	
  6796                           
  6797                           ; 1 bytes @ 0x6
  6798  005E                     	ds	1
  6799                           
  6800                           	psect	text1
  6801  0000                     __ptext1:	
  6802 ;; *************** function _usb_task *****************
  6803 ;; Defined at:
  6804 ;;		line 82 in file "main.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;		None
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;		None
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  1    wreg      void 
  6811 ;; Registers used:
  6812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6813 ;; Tracked objects:
  6814 ;;		On entry : 1E/1
  6815 ;;		On exit  : 3/1
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6822 ;;Total ram usage:        0 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; Hardware stack levels required when called:   19
  6825 ;; This function calls:
  6826 ;;		_CDCTxService
  6827 ;;		_USBDeviceTasks
  6828 ;; This function is called by:
  6829 ;;		_main
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833  0000                     _usb_task:	
  6834                           ;psect for function _usb_task
  6835                           
  6836  0000                     __end_of_usb_task:	
  6837                           ;main.c: 89: CDCTxService();
  6838                           
  6839                           ;main.c: 85: if (
  6840                           ;main.c: 86: (USBDeviceState >= CONFIGURED_STATE) &&
  6841                           ;main.c: 87: (UCONbits.SUSPND == 0)
  6842                           ;main.c: 88: ) {
  6843                           
  6844                           ;main.c: 83: USBDeviceTasks();
  6845                           
  6846                           ;incstack = 0
  6847 ;; hardware stack exceeded
  6848                           ; Regs used in _usb_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6849                           
  6850                           
  6851                           	psect	text9
  6852  1F2C                     __ptext9:	
  6853 ;; *************** function _USBCtrlEPServiceComplete *****************
  6854 ;; Defined at:
  6855 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;		None
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;		None
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      void 
  6862 ;; Registers used:
  6863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 1E/1
  6866 ;;		On exit  : 1C/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;Total ram usage:        2 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:   12
  6876 ;; This function calls:
  6877 ;;		_USBCtrlEPAllowDataStage
  6878 ;;		_USBCtrlEPAllowStatusStage
  6879 ;; This function is called by:
  6880 ;;		_USBCtrlTrfSetupHandler
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           
  6885                           ;psect for function _USBCtrlEPServiceComplete
  6886  1F2C                     _USBCtrlEPServiceComplete:	
  6887  1F2C                     l7967:	
  6888                           ;incstack = 0
  6889 ;; hardware stack exceeded
  6890                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6891                           
  6892                           
  6893                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  6894  1F2C  003D               	movlb	29	; select bank29
  6895  1F2D  120E               	bcf	14,4	;volatile
  6896                           
  6897                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  6898  1F2E  0021               	movlb	1	; select bank1
  6899  1F2F  1BAF               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  6900  1F30  2F6D               	goto	l783
  6901                           
  6902                           ;usb_device.c: 1629: {
  6903                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  6904  1F31  1FA2               	btfss	(_outPipes^(0+128)+2),7	;volatile
  6905  1F32  2F3E               	goto	l7981
  6906                           
  6907                           ;usb_device.c: 1631: {
  6908                           ;usb_device.c: 1632: controlTransferState = 2;
  6909  1F33  3002               	movlw	2
  6910  1F34  00B7               	movwf	_controlTransferState^(0+128)	;volatile
  6911                           
  6912                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  6913  1F35  0022               	movlb	2	; select bank2
  6914  1F36  083B               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
  6915  1F37  1D03               	btfss	3,2
  6916  1F38  2F3A               	goto	l7977
  6917                           
  6918                           ;usb_device.c: 1644: {
  6919                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  6920  1F39  27A9               	fcall	_USBCtrlEPAllowDataStage
  6921  1F3A                     l7977:	
  6922                           
  6923                           ;usb_device.c: 1646: }
  6924                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  6925  1F3A  0022               	movlb	2	; select bank2
  6926  1F3B  01BD               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  6927                           
  6928                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  6929  1F3C  01BE               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  6930                           
  6931                           ;usb_device.c: 1652: }
  6932  1F3D  0008               	return
  6933  1F3E                     l7981:	
  6934                           
  6935                           ;usb_device.c: 1653: else
  6936                           ;usb_device.c: 1654: {
  6937                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 16;
  6938  1F3E  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6939  1F3F  3E01               	addlw	1
  6940  1F40  00D6               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  6941  1F41  3000               	movlw	0
  6942  1F42  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6943  1F43  00D7               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  6944  1F44  0856               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  6945  1F45  0086               	movwf	6
  6946  1F46  0857               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  6947  1F47  0087               	movwf	7
  6948  1F48  3010               	movlw	16
  6949  1F49  0081               	movwf	1
  6950                           
  6951                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6952  1F4A  3050               	movlw	80
  6953  1F4B  00D6               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  6954  1F4C  01D7               	clrf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  6955  1F4D  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6956  1F4E  0086               	movwf	6
  6957  1F4F  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6958  1F50  0087               	movwf	7
  6959  1F51  3142               	addfsr 1,2
  6960  1F52  0856               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  6961  1F53  3FC0               	movwi [0]fsr1
  6962  1F54  0857               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  6963  1F55  3FC1               	movwi [1]fsr1
  6964                           
  6965                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6966  1F56  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6967  1F57  0086               	movwf	6
  6968  1F58  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6969  1F59  0087               	movwf	7
  6970  1F5A  300C               	movlw	12
  6971  1F5B  0081               	movwf	1
  6972                           
  6973                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6974  1F5C  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6975  1F5D  0086               	movwf	6
  6976  1F5E  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6977  1F5F  0087               	movwf	7
  6978  1F60  1781               	bsf	1,7
  6979                           
  6980                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6981  1F61  0827               	movf	_pBDTEntryIn^(0+128),w
  6982  1F62  0086               	movwf	6
  6983  1F63  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  6984  1F64  0087               	movwf	7
  6985  1F65  3004               	movlw	4
  6986  1F66  0081               	movwf	1
  6987                           
  6988                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6989  1F67  0827               	movf	_pBDTEntryIn^(0+128),w
  6990  1F68  0086               	movwf	6
  6991  1F69  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  6992  1F6A  0087               	movwf	7
  6993  1F6B  1781               	bsf	1,7
  6994  1F6C  0008               	return
  6995  1F6D                     l783:	
  6996                           
  6997                           ;usb_device.c: 1667: else
  6998                           ;usb_device.c: 1668: {
  6999                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  7000  1F6D  0020               	movlb	0	; select bank0
  7001  1F6E  1FD0               	btfss	80,7	;volatile
  7002  1F6F  2F82               	goto	l8007
  7003                           
  7004                           ;usb_device.c: 1670: {
  7005                           ;usb_device.c: 1671: controlTransferState = 1;
  7006  1F70  3001               	movlw	1
  7007  1F71  0021               	movlb	1	; select bank1
  7008  1F72  00B7               	movwf	_controlTransferState^(0+128)	;volatile
  7009                           
  7010                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  7011  1F73  0022               	movlb	2	; select bank2
  7012  1F74  083C               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
  7013  1F75  1D03               	btfss	3,2
  7014  1F76  2F79               	goto	l7999
  7015                           
  7016                           ;usb_device.c: 1686: {
  7017                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  7018  1F77  27A9  319F         	fcall	_USBCtrlEPAllowDataStage
  7019  1F79                     l7999:	
  7020                           
  7021                           ;usb_device.c: 1688: }
  7022                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  7023  1F79  0022               	movlb	2	; select bank2
  7024  1F7A  01BD               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7025                           
  7026                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  7027  1F7B  01BE               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7028                           
  7029                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  7030  1F7C  0021               	movlb	1	; select bank1
  7031  1F7D  0834               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  7032  1F7E  1D03               	btfss	3,2
  7033  1F7F  0008               	return
  7034                           
  7035                           ;usb_device.c: 1713: {
  7036                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  7037  1F80  3183  2B66         	ljmp	l7685
  7038  1F82                     l8007:	
  7039                           
  7040                           ;usb_device.c: 1717: else
  7041                           ;usb_device.c: 1718: {
  7042                           ;usb_device.c: 1729: controlTransferState = 2;
  7043  1F82  3002               	movlw	2
  7044  1F83  0021               	movlb	1	; select bank1
  7045  1F84  00B7               	movwf	_controlTransferState^(0+128)	;volatile
  7046                           
  7047                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 16;
  7048  1F85  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7049  1F86  3E01               	addlw	1
  7050  1F87  00D6               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  7051  1F88  3000               	movlw	0
  7052  1F89  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7053  1F8A  00D7               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  7054  1F8B  0856               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  7055  1F8C  0086               	movwf	6
  7056  1F8D  0857               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  7057  1F8E  0087               	movwf	7
  7058  1F8F  3010               	movlw	16
  7059  1F90  0081               	movwf	1
  7060                           
  7061                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7062  1F91  3050               	movlw	80
  7063  1F92  00D6               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  7064  1F93  01D7               	clrf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  7065  1F94  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7066  1F95  0086               	movwf	6
  7067  1F96  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7068  1F97  0087               	movwf	7
  7069  1F98  3142               	addfsr 1,2
  7070  1F99  0856               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  7071  1F9A  3FC0               	movwi [0]fsr1
  7072  1F9B  0857               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  7073  1F9C  3FC1               	movwi [1]fsr1
  7074                           
  7075                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7076  1F9D  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7077  1F9E  0086               	movwf	6
  7078  1F9F  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7079  1FA0  0087               	movwf	7
  7080  1FA1  3004               	movlw	4
  7081  1FA2  0081               	movwf	1
  7082                           
  7083                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7084  1FA3  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7085  1FA4  0086               	movwf	6
  7086  1FA5  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7087  1FA6  0087               	movwf	7
  7088  1FA7  1781               	bsf	1,7
  7089  1FA8  2F79               	goto	l7999
  7090  1FA9                     __end_of_USBCtrlEPServiceComplete:	
  7091                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  7092                           
  7093                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  7094                           
  7095                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  7096                           
  7097  1FA9                     __ptext10:	
  7098 ;; *************** function _USBCtrlEPAllowDataStage *****************
  7099 ;; Defined at:
  7100 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;		None
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;		None
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      void 
  7107 ;; Registers used:
  7108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7109 ;; Tracked objects:
  7110 ;;		On entry : 1F/2
  7111 ;;		On exit  : 1F/1
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;Total ram usage:        2 bytes
  7119 ;; Hardware stack levels used:    1
  7120 ;; Hardware stack levels required when called:   11
  7121 ;; This function calls:
  7122 ;;		_USBCtrlTrfTxService
  7123 ;; This function is called by:
  7124 ;;		_USBCtrlEPServiceComplete
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           
  7129                           ;psect for function _USBCtrlEPAllowDataStage
  7130  1FA9                     _USBCtrlEPAllowDataStage:	
  7131                           
  7132                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  7133                           
  7134                           ;incstack = 0
  7135 ;; hardware stack exceeded
  7136                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7137  1FA9  01BC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  7138                           
  7139                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  7140  1FAA  01BB               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  7141                           
  7142                           ;usb_device.c: 1493: if(controlTransferState == 2)
  7143  1FAB  3002               	movlw	2
  7144  1FAC  0021               	movlb	1	; select bank1
  7145  1FAD  0637               	xorwf	_controlTransferState^(0+128),w	;volatile
  7146  1FAE  1D03               	btfss	3,2
  7147  1FAF  2FD4               	goto	l7733
  7148                           
  7149                           ;usb_device.c: 1494: {
  7150                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 16;
  7151  1FB0  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7152  1FB1  3E01               	addlw	1
  7153  1FB2  00D4               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  7154  1FB3  3000               	movlw	0
  7155  1FB4  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7156  1FB5  00D5               	movwf	(??_USBCtrlEPAllowDataStage+1)^(0+128)
  7157  1FB6  0854               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  7158  1FB7  0086               	movwf	6
  7159  1FB8  0855               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
  7160  1FB9  0087               	movwf	7
  7161  1FBA  3010               	movlw	16
  7162  1FBB  0081               	movwf	1
  7163                           
  7164                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7165  1FBC  3060               	movlw	96
  7166  1FBD  00D4               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  7167  1FBE  01D5               	clrf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  7168  1FBF  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7169  1FC0  0086               	movwf	6
  7170  1FC1  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7171  1FC2  0087               	movwf	7
  7172  1FC3  3142               	addfsr 1,2
  7173  1FC4  0854               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  7174  1FC5  3FC0               	movwi [0]fsr1
  7175  1FC6  0855               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  7176  1FC7  3FC1               	movwi [1]fsr1
  7177                           
  7178                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7179  1FC8  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7180  1FC9  0086               	movwf	6
  7181  1FCA  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7182  1FCB  0087               	movwf	7
  7183  1FCC  3048               	movlw	72
  7184  1FCD  0081               	movwf	1
  7185                           
  7186                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7187  1FCE  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7188  1FCF  0086               	movwf	6
  7189  1FD0  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7190  1FD1  0087               	movwf	7
  7191  1FD2  1781               	bsf	1,7
  7192                           
  7193                           ;usb_device.c: 1500: }
  7194  1FD3  0008               	return
  7195  1FD4                     l7733:	
  7196                           
  7197                           ;usb_device.c: 1501: else
  7198                           ;usb_device.c: 1502: {
  7199                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  7200  1FD4  0831               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  7201  1FD5  0020               	movlb	0	; select bank0
  7202  1FD6  0257               	subwf	87,w	;volatile
  7203  1FD7  1D03               	skipz
  7204  1FD8  2FDD               	goto	u7015
  7205  1FD9  0021               	movlb	1	; select bank1
  7206  1FDA  0830               	movf	(_inPipes^(0+128)+3),w	;volatile
  7207  1FDB  0020               	movlb	0	; select bank0
  7208  1FDC  0256               	subwf	86,w	;volatile
  7209  1FDD                     u7015:	
  7210  1FDD  1803               	skipnc
  7211  1FDE  2FE6               	goto	l7737
  7212                           
  7213                           ;usb_device.c: 1506: {
  7214                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  7215  1FDF  0857               	movf	87,w	;volatile
  7216  1FE0  0021               	movlb	1	; select bank1
  7217  1FE1  00B1               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7218  1FE2  0020               	movlb	0	; select bank0
  7219  1FE3  0856               	movf	86,w	;volatile
  7220  1FE4  0021               	movlb	1	; select bank1
  7221  1FE5  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
  7222  1FE6                     l7737:	
  7223                           
  7224                           ;usb_device.c: 1508: }
  7225                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  7226  1FE6  3186  26DF         	fcall	_USBCtrlTrfTxService
  7227                           
  7228                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7229  1FE8  3060               	movlw	96
  7230  1FE9  00D4               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  7231  1FEA  01D5               	clrf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  7232  1FEB  0827               	movf	_pBDTEntryIn^(0+128),w
  7233  1FEC  0086               	movwf	6
  7234  1FED  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  7235  1FEE  0087               	movwf	7
  7236  1FEF  3142               	addfsr 1,2
  7237  1FF0  0854               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  7238  1FF1  3FC0               	movwi [0]fsr1
  7239  1FF2  0855               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  7240  1FF3  3FC1               	movwi [1]fsr1
  7241                           
  7242                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7243  1FF4  0827               	movf	_pBDTEntryIn^(0+128),w
  7244  1FF5  0086               	movwf	6
  7245  1FF6  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  7246  1FF7  0087               	movwf	7
  7247  1FF8  3048               	movlw	72
  7248  1FF9  0081               	movwf	1
  7249                           
  7250                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7251  1FFA  0827               	movf	_pBDTEntryIn^(0+128),w
  7252  1FFB  0086               	movwf	6
  7253  1FFC  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
  7254  1FFD  0087               	movwf	7
  7255  1FFE  1781               	bsf	1,7
  7256  1FFF  0008               	return
  7257  2000                     __end_of_USBCtrlEPAllowDataStage:	
  7258                           
  7259                           	psect	swtext1
  7260  18CF                     __pswtext1:	
  7261  18CF                     S9991:	
  7262  18CF  3184  2C59         	ljmp	l8083
  7263  18D1  3184  2C5B         	ljmp	l8085
  7264  18D3  3184  2C46         	ljmp	l908
  7265  18D5  3184  2C5B         	ljmp	l8085
  7266  18D7  3184  2C46         	ljmp	l908
  7267  18D9  3184  2C47         	ljmp	l910
  7268  18DB  3184  2C4C         	ljmp	l8071
  7269  18DD  3184  2C71         	ljmp	l8097
  7270  18DF  3184  2C4F         	ljmp	l8075
  7271  18E1  3184  2C4D         	ljmp	l8073
  7272  18E3  3184  2C5C         	ljmp	l8087
  7273  18E5  3184  2C66         	ljmp	l919
  7274  18E7  3184  2C46         	ljmp	l908
  7275                           
  7276                           	psect	text12
  7277  11EA                     __ptext12:	
  7278 ;; *************** function _USBStdSetCfgHandler *****************
  7279 ;; Defined at:
  7280 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  p               2   25[BANK1 ] PTR unsigned char 
  7285 ;;		 -> UEP1(1), 
  7286 ;;  i               1   27[BANK1 ] unsigned char 
  7287 ;;  i               1   28[BANK1 ] unsigned char 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      void 
  7290 ;; Registers used:
  7291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7292 ;; Tracked objects:
  7293 ;;		On entry : 1E/0
  7294 ;;		On exit  : 1F/1
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7300 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7301 ;;Total ram usage:        4 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:   14
  7304 ;; This function calls:
  7305 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7306 ;;		_memset
  7307 ;; This function is called by:
  7308 ;;		_USBCheckStdRequest
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           
  7313                           ;psect for function _USBStdSetCfgHandler
  7314  11EA                     _USBStdSetCfgHandler:	
  7315  11EA                     l7745:	
  7316                           ;incstack = 0
  7317 ;; hardware stack exceeded
  7318                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7319                           
  7320                           
  7321                           ;usb_device.c: 1970: uint8_t i;
  7322                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  7323  11EA  0021               	movlb	1	; select bank1
  7324  11EB  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7325                           
  7326                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  7327  11EC  300E               	movlw	14
  7328  11ED  00E3               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
  7329  11EE  3099               	movlw	153
  7330  11EF  00E2               	movwf	USBStdSetCfgHandler@p^(0+128)
  7331  11F0  01E4               	clrf	USBStdSetCfgHandler@i_2232^(0+128)
  7332  11F1                     l7753:	
  7333  11F1  0862               	movf	USBStdSetCfgHandler@p^(0+128),w
  7334  11F2  0086               	movwf	6
  7335  11F3  0863               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
  7336  11F4  0087               	movwf	7
  7337  11F5  0181               	clrf	1
  7338  11F6  0AE2               	incf	USBStdSetCfgHandler@p^(0+128),f
  7339  11F7  1903               	skipnz
  7340  11F8  0AE3               	incf	(USBStdSetCfgHandler@p+1)^(0+128),f
  7341  11F9  3002               	movlw	2
  7342  11FA  0AE4               	incf	USBStdSetCfgHandler@i_2232^(0+128),f
  7343  11FB  0264               	subwf	USBStdSetCfgHandler@i_2232^(0+128),w
  7344  11FC  1C03               	skipc
  7345  11FD  29F1               	goto	l7753
  7346                           
  7347                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  7348  11FE  3020               	movlw	32
  7349  11FF  00D1               	movwf	memset@p1^(0+128)
  7350  1200  3030               	movlw	48
  7351  1201  01D2               	clrf	(memset@p1+1)^(0+128)
  7352  1202  01D3               	clrf	memset@c^(0+128)
  7353  1203  01D4               	clrf	(memset@c+1)^(0+128)
  7354  1204  00D5               	movwf	memset@n^(0+128)
  7355  1205  01D6               	clrf	(memset@n+1)^(0+128)
  7356  1206  224D  3191         	fcall	_memset
  7357                           
  7358                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  7359  1208  003D               	movlb	29	; select bank29
  7360  1209  170E               	bsf	14,6	;volatile
  7361                           
  7362                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  7363  120A  0021               	movlb	1	; select bank1
  7364  120B  01E5               	clrf	USBStdSetCfgHandler@i^(0+128)
  7365  120C                     l7771:	
  7366                           
  7367                           ;usb_device.c: 1988: {
  7368                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  7369  120C  0865               	movf	USBStdSetCfgHandler@i^(0+128),w
  7370  120D  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7371  120E  0086               	movwf	6
  7372  120F  3001               	movlw	1	; select bank2/3
  7373  1210  0087               	movwf	7
  7374  1211  0181               	clrf	1
  7375                           
  7376                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  7377  1212  0865               	movf	USBStdSetCfgHandler@i^(0+128),w
  7378  1213  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7379  1214  0086               	movwf	6
  7380  1215  3003               	movlw	3
  7381  1216  0181               	clrf	1
  7382  1217  0AE5               	incf	USBStdSetCfgHandler@i^(0+128),f
  7383  1218  0265               	subwf	USBStdSetCfgHandler@i^(0+128),w
  7384  1219  1C03               	skipc
  7385  121A  2A0C               	goto	l7771
  7386                           
  7387                           ;usb_device.c: 1991: }
  7388                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  7389  121B  3060               	movlw	low _USBAlternateInterface
  7390  121C  00D1               	movwf	memset@p1^(0+128)
  7391  121D  3001               	movlw	high _USBAlternateInterface
  7392  121E  00D2               	movwf	(memset@p1+1)^(0+128)
  7393  121F  3002               	movlw	2
  7394  1220  01D3               	clrf	memset@c^(0+128)
  7395  1221  01D4               	clrf	(memset@c+1)^(0+128)
  7396  1222  00D5               	movwf	memset@n^(0+128)
  7397  1223  01D6               	clrf	(memset@n+1)^(0+128)
  7398  1224  224D  3191         	fcall	_memset
  7399                           
  7400                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  7401  1226  003D               	movlb	29	; select bank29
  7402  1227  130E               	bcf	14,6	;volatile
  7403                           
  7404                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7405  1228  3028               	movlw	40
  7406  1229  0021               	movlb	1	; select bank1
  7407  122A  00A7               	movwf	_pBDTEntryIn^(0+128)
  7408  122B  3020               	movlw	32
  7409  122C  01A8               	clrf	(_pBDTEntryIn+1)^(0+128)
  7410                           
  7411                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  7412  122D  00B9               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  7413                           
  7414                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7415  122E  00B2               	movwf	_pBDTEntryEP0OutNext^(0+128)
  7416  122F  39FF               	andlw	255
  7417  1230  1D03               	skipz
  7418  1231  3000               	movlw	0
  7419  1232  00B3               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  7420                           
  7421                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  7422  1233  0020               	movlb	0	; select bank0
  7423  1234  0852               	movf	82,w	;volatile
  7424  1235  0021               	movlb	1	; select bank1
  7425  1236  00C8               	movwf	_USBActiveConfiguration^(0+128)	;volatile
  7426                           
  7427                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  7428  1237  0848               	movf	_USBActiveConfiguration^(0+128),w	;volatile
  7429  1238  1D03               	btfss	3,2
  7430  1239  2A3D               	goto	l7793
  7431                           
  7432                           ;usb_device.c: 2010: {
  7433                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  7434  123A  3010               	movlw	16
  7435  123B  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
  7436                           
  7437                           ;usb_device.c: 2013: }
  7438  123C  0008               	return
  7439  123D                     l7793:	
  7440  123D  30C8               	movlw	low _USBActiveConfiguration
  7441                           
  7442                           ;usb_device.c: 2014: else
  7443                           ;usb_device.c: 2015: {
  7444                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  7445  123E  01DC               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  7446  123F  0ADC               	incf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),f
  7447  1240  01DD               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  7448  1241  00DE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  7449  1242  3000               	movlw	high _USBActiveConfiguration
  7450  1243  00DF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  7451  1244  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  7452  1245  0AE0               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128),f
  7453  1246  01E1               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  7454  1247  3183  2347         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7455                           
  7456                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  7457  1249  3020               	movlw	32
  7458  124A  0021               	movlb	1	; select bank1
  7459  124B  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
  7460  124C  0008               	return
  7461  124D                     __end_of_USBStdSetCfgHandler:	
  7462  124D                     __ptext13:	
  7463 ;; *************** function _memset *****************
  7464 ;; Defined at:
  7465 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  p1              2    8[BANK1 ] PTR void 
  7468 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7469 ;;  c               2   10[BANK1 ] int 
  7470 ;;  n               2   12[BANK1 ] unsigned int 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  p               2   14[BANK1 ] PTR unsigned char 
  7473 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  2    8[BANK1 ] PTR void 
  7476 ;; Registers used:
  7477 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7478 ;; Tracked objects:
  7479 ;;		On entry : 1F/1
  7480 ;;		On exit  : 1F/1
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7483 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7486 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7487 ;;Total ram usage:        8 bytes
  7488 ;; Hardware stack levels used:    1
  7489 ;; Hardware stack levels required when called:   10
  7490 ;; This function calls:
  7491 ;;		Nothing
  7492 ;; This function is called by:
  7493 ;;		_USBStdSetCfgHandler
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           
  7498                           ;psect for function _memset
  7499  124D                     _memset:	
  7500                           
  7501                           ;incstack = 0
  7502 ;; hardware stack exceeded
  7503                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7504  124D  0852               	movf	(memset@p1+1)^(0+128),w
  7505  124E  00D8               	movwf	(memset@p+1)^(0+128)
  7506  124F  0851               	movf	memset@p1^(0+128),w
  7507  1250  00D7               	movwf	memset@p^(0+128)
  7508  1251                     l7615:	
  7509  1251  3001               	movlw	1
  7510  1252  02D5               	subwf	memset@n^(0+128),f
  7511  1253  3000               	movlw	0
  7512  1254  3BD6               	subwfb	(memset@n+1)^(0+128),f
  7513  1255  0F55               	incfsz	memset@n^(0+128),w
  7514  1256  2A5A               	goto	l7611
  7515  1257  0A56               	incf	(memset@n+1)^(0+128),w
  7516  1258  1903               	btfsc	3,2
  7517  1259  0008               	return
  7518  125A                     l7611:	
  7519  125A  0857               	movf	memset@p^(0+128),w
  7520  125B  0086               	movwf	6
  7521  125C  0858               	movf	(memset@p+1)^(0+128),w
  7522  125D  0087               	movwf	7
  7523  125E  0853               	movf	memset@c^(0+128),w
  7524  125F  0081               	movwf	1
  7525  1260  0AD7               	incf	memset@p^(0+128),f
  7526  1261  1903               	skipnz
  7527  1262  0AD8               	incf	(memset@p+1)^(0+128),f
  7528  1263  2A51               	goto	l7615
  7529  1264                     __end_of_memset:	
  7530                           
  7531                           	psect	text14
  7532  1D38                     __ptext14:	
  7533 ;; *************** function _USBStdGetStatusHandler *****************
  7534 ;; Defined at:
  7535 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;  p               2    8[BANK1 ] PTR struct __BDT
  7540 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  1    wreg      void 
  7543 ;; Registers used:
  7544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7545 ;; Tracked objects:
  7546 ;;		On entry : 1E/0
  7547 ;;		On exit  : 1F/1
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7551 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7553 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7554 ;;Total ram usage:        2 bytes
  7555 ;; Hardware stack levels used:    1
  7556 ;; Hardware stack levels required when called:   10
  7557 ;; This function calls:
  7558 ;;		Nothing
  7559 ;; This function is called by:
  7560 ;;		_USBCheckStdRequest
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           
  7565                           ;psect for function _USBStdGetStatusHandler
  7566  1D38                     _USBStdGetStatusHandler:	
  7567  1D38                     l7827:	
  7568                           ;incstack = 0
  7569                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  7570                           
  7571                           
  7572                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  7573  1D38  0020               	movlb	0	; select bank0
  7574  1D39  01E0               	clrf	96	;volatile
  7575                           
  7576                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  7577  1D3A  01E1               	clrf	97	;volatile
  7578                           
  7579                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  7580  1D3B  2D73               	goto	l7847
  7581  1D3C                     l848:	
  7582                           ;usb_device.c: 2135: {
  7583                           ;usb_device.c: 2136: case (0x00):
  7584                           
  7585                           
  7586                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  7587  1D3C  0021               	movlb	1	; select bank1
  7588  1D3D  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7589                           
  7590                           ;usb_device.c: 2145: }
  7591                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  7592                           
  7593                           ;usb_device.c: 2142: if(0 == 1)
  7594  1D3E  0022               	movlb	2	; select bank2
  7595  1D3F  0B41               	decfsz	_RemoteWakeup^(0+256),w	;volatile
  7596  1D40  2D7E               	goto	l851
  7597                           
  7598                           ;usb_device.c: 2148: {
  7599                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  7600  1D41  0020               	movlb	0	; select bank0
  7601  1D42  14E0               	bsf	96,1	;volatile
  7602  1D43  2D7E               	goto	l851
  7603  1D44                     l852:	
  7604                           ;usb_device.c: 2152: case (0x01):
  7605                           
  7606                           
  7607                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  7608  1D44  0021               	movlb	1	; select bank1
  7609  1D45  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7610                           
  7611                           ;usb_device.c: 2154: break;
  7612  1D46  2D7E               	goto	l851
  7613  1D47                     l853:	
  7614                           ;usb_device.c: 2155: case (0x02):
  7615                           
  7616                           
  7617                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  7618  1D47  0021               	movlb	1	; select bank1
  7619  1D48  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7620                           
  7621                           ;usb_device.c: 2160: {
  7622                           ;usb_device.c: 2161: BDT_ENTRY *p;
  7623                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  7624  1D49  0020               	movlb	0	; select bank0
  7625  1D4A  1BD4               	btfsc	84,7	;volatile
  7626  1D4B  2D58               	goto	l7837
  7627                           
  7628                           ;usb_device.c: 2164: {
  7629                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7630  1D4C  0854               	movf	84,w	;volatile
  7631  1D4D  390F               	andlw	15
  7632  1D4E  0709               	addwf	9,w
  7633  1D4F  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7634  1D50  0086               	movwf	6
  7635  1D51  3001               	movlw	1	; select bank2/3
  7636  1D52  0087               	movwf	7
  7637  1D53  3F40               	moviw [0]fsr1
  7638  1D54  0021               	movlb	1	; select bank1
  7639  1D55  00D1               	movwf	USBStdGetStatusHandler@p^(0+128)
  7640  1D56  3F41               	moviw [1]fsr1
  7641  1D57  2D62               	goto	L2
  7642  1D58                     l7837:	
  7643                           ;usb_device.c: 2166: }
  7644                           
  7645                           
  7646                           ;usb_device.c: 2167: else
  7647                           ;usb_device.c: 2168: {
  7648                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7649  1D58  0854               	movf	84,w	;volatile
  7650  1D59  390F               	andlw	15
  7651  1D5A  0709               	addwf	9,w
  7652  1D5B  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7653  1D5C  0086               	movwf	6
  7654  1D5D  0187               	clrf	7
  7655  1D5E  3F40               	moviw [0]fsr1
  7656  1D5F  0021               	movlb	1	; select bank1
  7657  1D60  00D1               	movwf	USBStdGetStatusHandler@p^(0+128)
  7658  1D61  3F41               	moviw [1]fsr1
  7659  1D62                     L2:	
  7660  1D62  00D2               	movwf	(USBStdGetStatusHandler@p+1)^(0+128)
  7661                           
  7662                           ;usb_device.c: 2170: }
  7663                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  7664  1D63  0851               	movf	USBStdGetStatusHandler@p^(0+128),w
  7665  1D64  0086               	movwf	6
  7666  1D65  0852               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  7667  1D66  0087               	movwf	7
  7668  1D67  1F81               	btfss	1,7
  7669  1D68  2D7E               	goto	l851
  7670  1D69  0851               	movf	USBStdGetStatusHandler@p^(0+128),w
  7671  1D6A  0086               	movwf	6
  7672  1D6B  0852               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  7673  1D6C  0087               	movwf	7
  7674  1D6D  1D01               	btfss	1,2
  7675  1D6E  2D7E               	goto	l851
  7676                           
  7677                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  7678  1D6F  3001               	movlw	1
  7679  1D70  0020               	movlb	0	; select bank0
  7680  1D71  00E0               	movwf	96	;volatile
  7681  1D72  2D7E               	goto	l851
  7682  1D73                     l7847:	
  7683  1D73  0850               	movf	80,w	;volatile
  7684  1D74  391F               	andlw	31
  7685                           
  7686                           ; Switch size 1, requested type "speed"
  7687                           ; Number of cases is 3, Range of values is 0 to 2
  7688                           ; switch strategies available:
  7689                           ; Name         Instructions Cycles
  7690                           ; simple_byte           10     6 (average)
  7691                           ; direct_byte           12     6 (fixed)
  7692                           ; jumptable            260     6 (fixed)
  7693                           ;	Chosen strategy is simple_byte
  7694  1D75  1903               	skipnz
  7695  1D76  2D3C               	goto	l848
  7696  1D77  3A01               	xorlw	1	; case 1
  7697  1D78  1903               	skipnz
  7698  1D79  2D44               	goto	l852
  7699  1D7A  3A03               	xorlw	3	; case 2
  7700  1D7B  1903               	skipnz
  7701  1D7C  2D47               	goto	l853
  7702  1D7D  2D7E               	goto	l851
  7703  1D7E                     l851:	
  7704                           
  7705                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  7706  1D7E  0021               	movlb	1	; select bank1
  7707  1D7F  1FAF               	btfss	(_inPipes^(0+128)+2),7	;volatile
  7708  1D80  0008               	return
  7709                           
  7710                           ;usb_device.c: 2179: {
  7711                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7712  1D81  3060               	movlw	96
  7713  1D82  00AD               	movwf	_inPipes^(0+128)	;volatile
  7714  1D83  01AE               	clrf	(_inPipes+1)^(0+128)	;volatile
  7715                           
  7716                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7717  1D84  142F               	bsf	(_inPipes^(0+128)+2),0	;volatile
  7718                           
  7719                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7720  1D85  3002               	movlw	2
  7721  1D86  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
  7722  1D87  0008               	return
  7723  1D88                     __end_of_USBStdGetStatusHandler:	
  7724                           
  7725                           	psect	swtext2
  7726  1000                     __pswtext2:	
  7727  1000                     S9997:	
  7728  1000  3183  2B4F         	ljmp	l7549
  7729  1002  3183  2B65         	ljmp	l560
  7730  1004  3183  2B51         	ljmp	l7551
  7731  1006  3183  2B65         	ljmp	l560
  7732  1008  3183  2B65         	ljmp	l560
  7733  100A  3183  2B65         	ljmp	l560
  7734  100C  3183  2B65         	ljmp	l560
  7735  100E  3183  2B65         	ljmp	l560
  7736  1010  3183  2B65         	ljmp	l560
  7737  1012  3183  2B65         	ljmp	l560
  7738  1014  3183  2B65         	ljmp	l560
  7739  1016  3183  2B65         	ljmp	l560
  7740  1018  3183  2B65         	ljmp	l560
  7741  101A  3183  2B65         	ljmp	l560
  7742  101C  3183  2B65         	ljmp	l560
  7743  101E  3183  2B65         	ljmp	l560
  7744  1020  3183  2B65         	ljmp	l560
  7745  1022  3183  2B65         	ljmp	l560
  7746  1024  3183  2B65         	ljmp	l560
  7747  1026  3183  2B65         	ljmp	l560
  7748  1028  3183  2B65         	ljmp	l560
  7749  102A  3183  2B65         	ljmp	l560
  7750  102C  3183  2B65         	ljmp	l560
  7751  102E  3183  2B65         	ljmp	l560
  7752  1030  3183  2B65         	ljmp	l560
  7753  1032  3183  2B65         	ljmp	l560
  7754  1034  3183  2B65         	ljmp	l560
  7755  1036  3183  2B65         	ljmp	l560
  7756  1038  3183  2B65         	ljmp	l560
  7757  103A  3183  2B65         	ljmp	l560
  7758  103C  3183  2B65         	ljmp	l560
  7759  103E  3183  2B65         	ljmp	l560
  7760  1040  3183  2B65         	ljmp	l560
  7761  1042  3183  2B65         	ljmp	l560
  7762  1044  3183  2B65         	ljmp	l560
  7763  1046  3183  2B65         	ljmp	l560
  7764  1048  3183  2B65         	ljmp	l560
  7765  104A  3183  2B65         	ljmp	l560
  7766  104C  3183  2B65         	ljmp	l560
  7767  104E  3183  2B65         	ljmp	l560
  7768  1050  3183  2B65         	ljmp	l560
  7769  1052  3183  2B65         	ljmp	l560
  7770  1054  3183  2B65         	ljmp	l560
  7771  1056  3183  2B65         	ljmp	l560
  7772  1058  3183  2B65         	ljmp	l560
  7773  105A  3183  2B65         	ljmp	l560
  7774  105C  3183  2B65         	ljmp	l560
  7775  105E  3183  2B65         	ljmp	l560
  7776  1060  3183  2B65         	ljmp	l560
  7777  1062  3183  2B65         	ljmp	l560
  7778  1064  3183  2B65         	ljmp	l560
  7779  1066  3183  2B65         	ljmp	l560
  7780  1068  3183  2B65         	ljmp	l560
  7781  106A  3183  2B65         	ljmp	l560
  7782  106C  3183  2B65         	ljmp	l560
  7783  106E  3183  2B65         	ljmp	l560
  7784  1070  3183  2B65         	ljmp	l560
  7785  1072  3183  2B65         	ljmp	l560
  7786  1074  3183  2B65         	ljmp	l560
  7787  1076  3183  2B65         	ljmp	l560
  7788  1078  3183  2B65         	ljmp	l560
  7789  107A  3183  2B65         	ljmp	l560
  7790  107C  3183  2B65         	ljmp	l560
  7791  107E  3183  2B65         	ljmp	l560
  7792  1080  3183  2B65         	ljmp	l560
  7793  1082  3183  2B65         	ljmp	l560
  7794  1084  3183  2B65         	ljmp	l560
  7795  1086  3183  2B65         	ljmp	l560
  7796  1088  3183  2B65         	ljmp	l560
  7797  108A  3183  2B65         	ljmp	l560
  7798  108C  3183  2B65         	ljmp	l560
  7799  108E  3183  2B65         	ljmp	l560
  7800  1090  3183  2B65         	ljmp	l560
  7801  1092  3183  2B65         	ljmp	l560
  7802  1094  3183  2B65         	ljmp	l560
  7803  1096  3183  2B65         	ljmp	l560
  7804  1098  3183  2B65         	ljmp	l560
  7805  109A  3183  2B65         	ljmp	l560
  7806  109C  3183  2B65         	ljmp	l560
  7807  109E  3183  2B65         	ljmp	l560
  7808  10A0  3183  2B65         	ljmp	l560
  7809  10A2  3183  2B65         	ljmp	l560
  7810  10A4  3183  2B65         	ljmp	l560
  7811  10A6  3183  2B65         	ljmp	l560
  7812  10A8  3183  2B65         	ljmp	l560
  7813  10AA  3183  2B65         	ljmp	l560
  7814  10AC  3183  2B65         	ljmp	l560
  7815  10AE  3183  2B65         	ljmp	l560
  7816  10B0  3183  2B65         	ljmp	l560
  7817  10B2  3183  2B65         	ljmp	l560
  7818  10B4  3183  2B65         	ljmp	l560
  7819  10B6  3183  2B65         	ljmp	l560
  7820  10B8  3183  2B65         	ljmp	l560
  7821  10BA  3183  2B65         	ljmp	l560
  7822  10BC  3183  2B65         	ljmp	l560
  7823  10BE  3183  2B65         	ljmp	l560
  7824  10C0  3183  2B65         	ljmp	l560
  7825  10C2  3183  2B65         	ljmp	l560
  7826  10C4  3183  2B65         	ljmp	l560
  7827  10C6  3183  2B65         	ljmp	l560
  7828  10C8  3183  2B65         	ljmp	l560
  7829  10CA  3183  2B65         	ljmp	l560
  7830  10CC  3183  2B65         	ljmp	l560
  7831  10CE  3183  2B65         	ljmp	l560
  7832  10D0  3183  2B65         	ljmp	l560
  7833  10D2  3183  2B65         	ljmp	l560
  7834  10D4  3183  2B65         	ljmp	l560
  7835  10D6  3183  2B65         	ljmp	l560
  7836  10D8  3183  2B65         	ljmp	l560
  7837  10DA  3183  2B65         	ljmp	l560
  7838  10DC  3183  2B65         	ljmp	l560
  7839  10DE  3183  2B65         	ljmp	l560
  7840  10E0  3183  2B65         	ljmp	l560
  7841  10E2  3183  2B65         	ljmp	l560
  7842  10E4  3183  2B65         	ljmp	l560
  7843  10E6  3183  2B65         	ljmp	l560
  7844  10E8  3183  2B65         	ljmp	l560
  7845                           
  7846                           	psect	text18
  7847  1C9F                     __ptext18:	
  7848 ;; *************** function _USBCheckCDCRequest *****************
  7849 ;; Defined at:
  7850 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;		None
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;		None
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7859 ;; Tracked objects:
  7860 ;;		On entry : 1F/1
  7861 ;;		On exit  : 1E/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;Total ram usage:        0 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:   10
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           
  7879                           ;psect for function _USBCheckCDCRequest
  7880  1C9F                     _USBCheckCDCRequest:	
  7881  1C9F                     l7439:	
  7882                           ;incstack = 0
  7883                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  7884                           
  7885                           
  7886                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
  7887  1C9F  0020               	movlb	0	; select bank0
  7888  1CA0  0850               	movf	80,w	;volatile
  7889  1CA1  391F               	andlw	31
  7890  1CA2  3A01               	xorlw	1
  7891  1CA3  1D03               	btfss	3,2
  7892  1CA4  0008               	return
  7893                           
  7894                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
  7895  1CA5  0E50               	swapf	80,w	;volatile
  7896  1CA6  0C89               	rrf	9,f
  7897  1CA7  3903               	andlw	3
  7898  1CA8  3A01               	xorlw	1
  7899  1CA9  1D03               	btfss	3,2
  7900  1CAA  0008               	return
  7901                           
  7902                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
  7903                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
  7904  1CAB  0854               	movf	84,w	;volatile
  7905  1CAC  1903               	btfsc	3,2
  7906  1CAD  2CE0               	goto	l7483
  7907  1CAE  0354               	decf	84,w	;volatile
  7908  1CAF  1D03               	btfss	3,2
  7909  1CB0  0008               	return
  7910  1CB1  2CE0               	goto	l7483
  7911  1CB2                     l7453:	
  7912                           
  7913                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7914  1CB2  3051               	movlw	low _dummy_encapsulated_cmd_response
  7915  1CB3  0021               	movlb	1	; select bank1
  7916  1CB4  00AD               	movwf	_inPipes^(0+128)	;volatile
  7917  1CB5  3001               	movlw	high _dummy_encapsulated_cmd_response
  7918  1CB6  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
  7919                           
  7920                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
  7921  1CB7  3008               	movlw	8
  7922  1CB8  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
  7923  1CB9  01B1               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  7924                           
  7925                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7926  1CBA  142F               	bsf	(_inPipes^(0+128)+2),0	;volatile
  7927                           
  7928                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
  7929  1CBB  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7930                           
  7931                           ;usb_device_cdc.c: 174: break;
  7932  1CBC  0008               	return
  7933  1CBD                     l7461:	
  7934                           
  7935                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7936  1CBD  3051               	movlw	low _dummy_encapsulated_cmd_response
  7937  1CBE  0021               	movlb	1	; select bank1
  7938  1CBF  00AD               	movwf	_inPipes^(0+128)	;volatile
  7939  1CC0  3001               	movlw	high _dummy_encapsulated_cmd_response
  7940  1CC1  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
  7941                           
  7942                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
  7943  1CC2  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7944                           
  7945                           ;usb_device_cdc.c: 179: break;
  7946  1CC3  0008               	return
  7947  1CC4                     l7465:	
  7948                           
  7949                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
  7950  1CC4  0857               	movf	87,w	;volatile
  7951  1CC5  0021               	movlb	1	; select bank1
  7952  1CC6  00A4               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
  7953  1CC7  0020               	movlb	0	; select bank0
  7954  1CC8  0856               	movf	86,w	;volatile
  7955  1CC9  0021               	movlb	1	; select bank1
  7956  1CCA  00A3               	movwf	(_outPipes^(0+128)+3)	;volatile
  7957                           
  7958                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  7959  1CCB  3059               	movlw	(low (_line_coding| (0+256)))& (0+255)
  7960  1CCC  00A0               	movwf	_outPipes^(0+128)	;volatile
  7961                           
  7962                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
  7963  1CCD  01A5               	clrf	(low ((_outPipes| 0+5)))^(0+128)	;volatile
  7964  1CCE  01A6               	clrf	((low ((_outPipes| 0+5))+1))^(0+128)	;volatile
  7965                           
  7966                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
  7967  1CCF  17A2               	bsf	(_outPipes^(0+128)+2),7	;volatile
  7968                           
  7969                           ;usb_device_cdc.c: 188: break;
  7970  1CD0  0008               	return
  7971  1CD1                     l7471:	
  7972                           
  7973                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7974  1CD1  3059               	movlw	low _line_coding
  7975  1CD2  0021               	movlb	1	; select bank1
  7976  1CD3  00AD               	movwf	_inPipes^(0+128)	;volatile
  7977  1CD4  3001               	movlw	high _line_coding
  7978  1CD5  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
  7979  1CD6  3007               	movlw	7
  7980  1CD7  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
  7981  1CD8  01B1               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  7982  1CD9  30C1               	movlw	193
  7983  1CDA  00AF               	movwf	(_inPipes^(0+128)+2)	;volatile
  7984                           
  7985                           ;usb_device_cdc.c: 195: break;
  7986  1CDB  0008               	return
  7987  1CDC                     l7477:	
  7988                           
  7989                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  7990  1CDC  0852               	movf	82,w	;volatile
  7991                           
  7992                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
  7993  1CDD  0021               	movlb	1	; select bank1
  7994  1CDE  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7995                           
  7996                           ;usb_device_cdc.c: 231: break;
  7997  1CDF  0008               	return
  7998  1CE0                     l7483:	
  7999  1CE0  0851               	movf	81,w	;volatile
  8000                           
  8001                           ; Switch size 1, requested type "speed"
  8002                           ; Number of cases is 5, Range of values is 0 to 34
  8003                           ; switch strategies available:
  8004                           ; Name         Instructions Cycles
  8005                           ; direct_byte           76     6 (fixed)
  8006                           ; simple_byte           16     9 (average)
  8007                           ; jumptable            260     6 (fixed)
  8008                           ;	Chosen strategy is direct_byte
  8009  1CE1  0084               	movwf	4
  8010  1CE2  3023               	movlw	35
  8011  1CE3  0204               	subwf	4,w
  8012  1CE4  1803               	skipnc
  8013  1CE5  0008               	return
  8014  1CE6  3198               	movlp	high S9999
  8015  1CE7  3504               	lslf	4,w
  8016  1CE8  3E00               	addlw	low S9999
  8017  1CE9  0082               	movwf	2
  8018  1CEA                     l46:	
  8019  1CEA  0008               	return
  8020  1CEB                     __end_of_USBCheckCDCRequest:	
  8021                           
  8022                           	psect	swtext3
  8023  1800                     __pswtext3:	
  8024  1800                     S9999:	
  8025  1800  319C  2CB2         	ljmp	l7453
  8026  1802  319C  2CBD         	ljmp	l7461
  8027  1804  319C  2CEA         	ljmp	l46
  8028  1806  319C  2CEA         	ljmp	l46
  8029  1808  319C  2CEA         	ljmp	l46
  8030  180A  319C  2CEA         	ljmp	l46
  8031  180C  319C  2CEA         	ljmp	l46
  8032  180E  319C  2CEA         	ljmp	l46
  8033  1810  319C  2CEA         	ljmp	l46
  8034  1812  319C  2CEA         	ljmp	l46
  8035  1814  319C  2CEA         	ljmp	l46
  8036  1816  319C  2CEA         	ljmp	l46
  8037  1818  319C  2CEA         	ljmp	l46
  8038  181A  319C  2CEA         	ljmp	l46
  8039  181C  319C  2CEA         	ljmp	l46
  8040  181E  319C  2CEA         	ljmp	l46
  8041  1820  319C  2CEA         	ljmp	l46
  8042  1822  319C  2CEA         	ljmp	l46
  8043  1824  319C  2CEA         	ljmp	l46
  8044  1826  319C  2CEA         	ljmp	l46
  8045  1828  319C  2CEA         	ljmp	l46
  8046  182A  319C  2CEA         	ljmp	l46
  8047  182C  319C  2CEA         	ljmp	l46
  8048  182E  319C  2CEA         	ljmp	l46
  8049  1830  319C  2CEA         	ljmp	l46
  8050  1832  319C  2CEA         	ljmp	l46
  8051  1834  319C  2CEA         	ljmp	l46
  8052  1836  319C  2CEA         	ljmp	l46
  8053  1838  319C  2CEA         	ljmp	l46
  8054  183A  319C  2CEA         	ljmp	l46
  8055  183C  319C  2CEA         	ljmp	l46
  8056  183E  319C  2CEA         	ljmp	l46
  8057  1840  319C  2CC4         	ljmp	l7465
  8058  1842  319C  2CD1         	ljmp	l7471
  8059  1844  319C  2CDC         	ljmp	l7477
  8060                           
  8061                           	psect	text19
  8062  1DF8                     __ptext19:	
  8063 ;; *************** function _CDCInitEP *****************
  8064 ;; Defined at:
  8065 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;		None
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;		None
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8074 ;; Tracked objects:
  8075 ;;		On entry : 1F/1
  8076 ;;		On exit  : 1F/1
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;Total ram usage:        0 bytes
  8084 ;; Hardware stack levels used:    1
  8085 ;; Hardware stack levels required when called:   12
  8086 ;; This function calls:
  8087 ;;		_USBEnableEndpoint
  8088 ;;		_USBTransferOnePacket
  8089 ;; This function is called by:
  8090 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           
  8095                           ;psect for function _CDCInitEP
  8096  1DF8                     _CDCInitEP:	
  8097  1DF8                     l7489:	
  8098                           ;incstack = 0
  8099                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8100                           
  8101                           
  8102                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
  8103  1DF8  0022               	movlb	2	; select bank2
  8104  1DF9  304B               	movlw	75
  8105  1DFA  01DC               	clrf	(_line_coding+3)^(0+256)
  8106  1DFB  01DB               	clrf	(_line_coding+2)^(0+256)
  8107  1DFC  00DA               	movwf	(_line_coding+1)^(0+256)
  8108  1DFD  3008               	movlw	8
  8109  1DFE  01D9               	clrf	_line_coding^(0+256)
  8110                           
  8111                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
  8112  1DFF  01DD               	clrf	(_line_coding^(0+256)+4)
  8113  1E00  01DE               	clrf	(_line_coding^(0+256)+5)
  8114                           
  8115                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
  8116  1E01  00DF               	movwf	(_line_coding^(0+256)+6)
  8117                           
  8118                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
  8119  1E02  0021               	movlb	1	; select bank1
  8120  1E03  301A               	movlw	26
  8121  1E04  01C6               	clrf	_cdc_rx_len^(0+128)
  8122                           
  8123                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
  8124  1E05  00D5               	movwf	USBEnableEndpoint@options^(0+128)
  8125  1E06  3001               	movlw	1
  8126  1E07  2623  319D         	fcall	_USBEnableEndpoint
  8127                           
  8128                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8129  1E09  301E               	movlw	30
  8130  1E0A  00D5               	movwf	USBEnableEndpoint@options^(0+128)
  8131  1E0B  3002               	movlw	2
  8132  1E0C  2623               	fcall	_USBEnableEndpoint
  8133  1E0D  30A0               	movlw	low _cdc_data_rx
  8134                           
  8135                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8136  1E0E  01D1               	clrf	USBTransferOnePacket@dir^(0+128)
  8137  1E0F  00D2               	movwf	USBTransferOnePacket@data^(0+128)
  8138  1E10  3002               	movlw	high _cdc_data_rx
  8139  1E11  00D3               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  8140  1E12  3040               	movlw	64
  8141  1E13  00D4               	movwf	USBTransferOnePacket@len^(0+128)
  8142  1E14  3002               	movlw	2
  8143  1E15  3182  2231         	fcall	_USBTransferOnePacket
  8144  1E17  0852               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  8145  1E18  0022               	movlb	2	; select bank2
  8146  1E19  00B5               	movwf	(_CDCDataOutHandle+1)^(0+256)
  8147  1E1A  0021               	movlb	1	; select bank1
  8148  1E1B  0851               	movf	?_USBTransferOnePacket^(0+128),w
  8149  1E1C  0022               	movlb	2	; select bank2
  8150  1E1D  00B4               	movwf	_CDCDataOutHandle^(0+256)
  8151                           
  8152                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
  8153  1E1E  01B2               	clrf	_CDCDataInHandle^(0+256)
  8154  1E1F  01B3               	clrf	(_CDCDataInHandle+1)^(0+256)
  8155                           
  8156                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
  8157  1E20  0021               	movlb	1	; select bank1
  8158  1E21  01C5               	clrf	_cdc_trf_state^(0+128)
  8159  1E22  0008               	return
  8160  1E23                     __end_of_CDCInitEP:	
  8161  1E23                     __ptext20:	
  8162 ;; *************** function _USBEnableEndpoint *****************
  8163 ;; Defined at:
  8164 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  ep              1    wreg     unsigned char 
  8167 ;;  options         1   12[BANK1 ] unsigned char 
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;  ep              1   17[BANK1 ] unsigned char 
  8170 ;;  p               2   15[BANK1 ] PTR unsigned char 
  8171 ;;		 -> UEP0(1), 
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  1    wreg      void 
  8174 ;; Registers used:
  8175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8176 ;; Tracked objects:
  8177 ;;		On entry : 1F/1
  8178 ;;		On exit  : 1F/1
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8181 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8184 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8185 ;;Total ram usage:        6 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; Hardware stack levels required when called:   11
  8188 ;; This function calls:
  8189 ;;		_USBConfigureEndpoint
  8190 ;; This function is called by:
  8191 ;;		_CDCInitEP
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           
  8196                           ;psect for function _USBEnableEndpoint
  8197  1E23                     _USBEnableEndpoint:	
  8198                           
  8199                           ;incstack = 0
  8200                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8201                           ;USBEnableEndpoint@ep stored from wreg
  8202  1E23  00DA               	movwf	USBEnableEndpoint@ep^(0+128)
  8203                           
  8204                           ;usb_device.c: 880: unsigned char* p;
  8205                           ;usb_device.c: 884: if(options & 0x04)
  8206  1E24  1D55               	btfss	USBEnableEndpoint@options^(0+128),2
  8207  1E25  2E29               	goto	l7387
  8208                           
  8209                           ;usb_device.c: 885: {
  8210                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8211  1E26  01D1               	clrf	USBConfigureEndpoint@direction^(0+128)
  8212  1E27  2640  319D         	fcall	_USBConfigureEndpoint
  8213  1E29                     l7387:	
  8214                           
  8215                           ;usb_device.c: 887: }
  8216                           ;usb_device.c: 888: if(options & 0x02)
  8217  1E29  1CD5               	btfss	USBEnableEndpoint@options^(0+128),1
  8218  1E2A  2E2F               	goto	l7391
  8219                           
  8220                           ;usb_device.c: 889: {
  8221                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8222  1E2B  01D1               	clrf	USBConfigureEndpoint@direction^(0+128)
  8223  1E2C  0AD1               	incf	USBConfigureEndpoint@direction^(0+128),f
  8224  1E2D  085A               	movf	USBEnableEndpoint@ep^(0+128),w
  8225  1E2E  2640               	fcall	_USBConfigureEndpoint
  8226  1E2F                     l7391:	
  8227                           
  8228                           ;usb_device.c: 891: }
  8229                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8230  1E2F  085A               	movf	USBEnableEndpoint@ep^(0+128),w
  8231  1E30  3E98               	addlw	152
  8232  1E31  00D6               	movwf	??_USBEnableEndpoint^(0+128)
  8233  1E32  300E               	movlw	14
  8234  1E33  01D7               	clrf	(??_USBEnableEndpoint^(0+128)+1)
  8235  1E34  3DD7               	addwfc	(??_USBEnableEndpoint^(0+128)+1),f
  8236  1E35  0856               	movf	??_USBEnableEndpoint^(0+128),w
  8237  1E36  00D8               	movwf	USBEnableEndpoint@p^(0+128)
  8238  1E37  0857               	movf	(??_USBEnableEndpoint+1)^(0+128),w
  8239  1E38  00D9               	movwf	(USBEnableEndpoint@p+1)^(0+128)
  8240                           
  8241                           ;usb_device.c: 901: *p = options;
  8242  1E39  0858               	movf	USBEnableEndpoint@p^(0+128),w
  8243  1E3A  0086               	movwf	6
  8244  1E3B  0859               	movf	(USBEnableEndpoint@p+1)^(0+128),w
  8245  1E3C  0087               	movwf	7
  8246  1E3D  0855               	movf	USBEnableEndpoint@options^(0+128),w
  8247  1E3E  0081               	movwf	1
  8248  1E3F  0008               	return
  8249  1E40                     __end_of_USBEnableEndpoint:	
  8250  1E40                     __ptext21:	
  8251 ;; *************** function _USBConfigureEndpoint *****************
  8252 ;; Defined at:
  8253 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  EPNum           1    wreg     unsigned char 
  8256 ;;  direction       1    8[BANK1 ] unsigned char 
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;  EPNum           1   10[BANK1 ] unsigned char 
  8259 ;;  handle          1   11[BANK1 ] PTR volatile struct __BD
  8260 ;;		 -> BDT(48), 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  1    wreg      void 
  8263 ;; Registers used:
  8264 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8265 ;; Tracked objects:
  8266 ;;		On entry : 1F/1
  8267 ;;		On exit  : 1F/1
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8270 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;Total ram usage:        4 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:   10
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_USBEnableEndpoint
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           
  8285                           ;psect for function _USBConfigureEndpoint
  8286  1E40                     _USBConfigureEndpoint:	
  8287                           
  8288                           ;incstack = 0
  8289                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8290                           ;USBConfigureEndpoint@EPNum stored from wreg
  8291  1E40  00D3               	movwf	USBConfigureEndpoint@EPNum^(0+128)
  8292                           
  8293                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8294                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8295  1E41  3020               	movlw	32
  8296  1E42  00D4               	movwf	USBConfigureEndpoint@handle^(0+128)
  8297                           
  8298                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8299  1E43  0851               	movf	USBConfigureEndpoint@direction^(0+128),w
  8300  1E44  00D2               	movwf	??_USBConfigureEndpoint^(0+128)
  8301  1E45  35D2               	lslf	??_USBConfigureEndpoint^(0+128),f
  8302  1E46  0853               	movf	USBConfigureEndpoint@EPNum^(0+128),w
  8303  1E47  0709               	addwf	9,w
  8304  1E48  0709               	addwf	9,w
  8305  1E49  0752               	addwf	??_USBConfigureEndpoint^(0+128),w
  8306  1E4A  0709               	addwf	9,w
  8307  1E4B  0709               	addwf	9,w
  8308  1E4C  07D4               	addwf	USBConfigureEndpoint@handle^(0+128),f
  8309                           
  8310                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8311  1E4D  0854               	movf	USBConfigureEndpoint@handle^(0+128),w
  8312  1E4E  0086               	movwf	6
  8313  1E4F  0187               	clrf	7
  8314  1E50  1381               	bcf	1,7
  8315                           
  8316                           ;usb_device.c: 1557: if(direction == 0)
  8317  1E51  0851               	movf	USBConfigureEndpoint@direction^(0+128),w
  8318  1E52  1D03               	btfss	3,2
  8319  1E53  2E5E               	goto	l7377
  8320                           
  8321                           ;usb_device.c: 1558: {
  8322                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8323  1E54  3553               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  8324  1E55  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8325  1E56  0086               	movwf	6
  8326  1E57  3001               	movlw	1	; select bank2/3
  8327  1E58  0087               	movwf	7
  8328  1E59  0854               	movf	USBConfigureEndpoint@handle^(0+128),w
  8329  1E5A  3FC0               	movwi [0]fsr1
  8330  1E5B  3000               	movlw	0
  8331  1E5C  3FC1               	movwi [1]fsr1
  8332                           
  8333                           ;usb_device.c: 1560: }
  8334  1E5D  2E66               	goto	l7379
  8335  1E5E                     l7377:	
  8336                           
  8337                           ;usb_device.c: 1561: else
  8338                           ;usb_device.c: 1562: {
  8339                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8340  1E5E  3553               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  8341  1E5F  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8342  1E60  0086               	movwf	6
  8343  1E61  0187               	clrf	7
  8344  1E62  0854               	movf	USBConfigureEndpoint@handle^(0+128),w
  8345  1E63  3FC0               	movwi [0]fsr1
  8346  1E64  3000               	movlw	0
  8347  1E65  3FC1               	movwi [1]fsr1
  8348  1E66                     l7379:	
  8349                           
  8350                           ;usb_device.c: 1564: }
  8351                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8352  1E66  0854               	movf	USBConfigureEndpoint@handle^(0+128),w
  8353  1E67  0086               	movwf	6
  8354  1E68  0187               	clrf	7
  8355  1E69  1301               	bcf	1,6
  8356                           
  8357                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8358  1E6A  0854               	movf	USBConfigureEndpoint@handle^(0+128),w
  8359  1E6B  3E04               	addlw	4
  8360  1E6C  0086               	movwf	6
  8361  1E6D  1701               	bsf	1,6
  8362  1E6E  0008               	return
  8363  1E6F                     __end_of_USBConfigureEndpoint:	
  8364                           
  8365                           	psect	text28
  8366  0000                     __ptext28:	
  8367 ;; *************** function _gpio_init *****************
  8368 ;; Defined at:
  8369 ;;		line 120 in file "main.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;		None
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      void 
  8376 ;; Registers used:
  8377 ;;		wreg
  8378 ;; Tracked objects:
  8379 ;;		On entry : 1F/1
  8380 ;;		On exit  : 1F/1
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;Total ram usage:        0 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:   10
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_main
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397  0000                     _gpio_init:	
  8398                           ;psect for function _gpio_init
  8399                           
  8400  0000                     __end_of_gpio_init:	
  8401                           ;main.c: 121: TRISC = 0b111111;
  8402                           
  8403                           ;incstack = 0
  8404                           ; Regs used in _gpio_init: [wreg]
  8405                           
  8406                           
  8407                           	psect	text29
  8408  0000                     __ptext29:	
  8409 ;; *************** function _cmd_tx_buffer_task *****************
  8410 ;; Defined at:
  8411 ;;		line 558 in file "main.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;		None
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      void 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2, status,0, pclath, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 1F/1
  8422 ;;		On exit  : 1F/1
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;Total ram usage:        0 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:   11
  8432 ;; This function calls:
  8433 ;;		_putUSBUSART
  8434 ;; This function is called by:
  8435 ;;		_main
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439  0000                     _cmd_tx_buffer_task:	
  8440                           ;psect for function _cmd_tx_buffer_task
  8441                           
  8442  0000                     __end_of_cmd_tx_buffer_task:	
  8443                           ;main.c: 561: usb_tx_ptr = 0;
  8444                           
  8445                           ;main.c: 560: putUSBUSART(usb_tx_buf, usb_tx_ptr);
  8446                           
  8447                           ;main.c: 559: if ((cdc_trf_state == 0) && usb_tx_ptr > 0) {
  8448                           
  8449                           ;incstack = 0
  8450                           ; Regs used in _cmd_tx_buffer_task: [wreg+status,2+status,0+pclath+cstack]
  8451                           
  8452                           
  8453                           	psect	text31
  8454  0974                     __ptext31:	
  8455 ;; *************** function _cmd_task *****************
  8456 ;; Defined at:
  8457 ;;		line 127 in file "main.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  pt              1    wreg     PTR struct pt
  8460 ;;		 -> main@cmd_pt(2), 
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;  pt              1   21[BANK1 ] PTR struct pt
  8463 ;;		 -> main@cmd_pt(2), 
  8464 ;;  data            1   20[BANK1 ] unsigned char 
  8465 ;;  last_phase_o    1   19[BANK1 ] unsigned char 
  8466 ;;  data            1   17[BANK1 ] unsigned char 
  8467 ;;  bit_to_set      1   16[BANK1 ] unsigned char 
  8468 ;;  last_phase_o    1   13[BANK1 ] unsigned char 
  8469 ;;  bit_to_set      1   15[BANK1 ] unsigned char 
  8470 ;;  last_phase_o    1   12[BANK1 ] unsigned char 
  8471 ;;  tmp             1   18[BANK1 ] unsigned char 
  8472 ;;  op1             1   14[BANK1 ] unsigned char 
  8473 ;;  PT_YIELD_FLA    1   11[BANK1 ] unsigned char 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1    wreg      unsigned char 
  8476 ;; Registers used:
  8477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8478 ;; Tracked objects:
  8479 ;;		On entry : 1F/1
  8480 ;;		On exit  : 1F/1
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8484 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;Total ram usage:       14 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:   10
  8490 ;; This function calls:
  8491 ;;		Nothing
  8492 ;; This function is called by:
  8493 ;;		_main
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           
  8498                           ;psect for function _cmd_task
  8499  0974                     _cmd_task:	
  8500                           
  8501                           ;incstack = 0
  8502                           ; Regs used in _cmd_task: [wreg-fsr1h+status,2+status,0]
  8503                           ;cmd_task@pt stored from wreg
  8504  0974  00DE               	movwf	cmd_task@pt^(0+128)
  8505                           
  8506                           ;main.c: 128: static uint8_t gpio_dir = 0b111111;
  8507                           ;main.c: 130: static uint8_t cmd;
  8508                           ;main.c: 131: static uint8_t op0;
  8509                           ;main.c: 132: static uint8_t sie;
  8510                           ;main.c: 133: static uint8_t num_bits;
  8511                           ;main.c: 134: static uint8_t num_bytes;
  8512                           ;main.c: 135: static uint8_t input_mask;
  8513                           ;main.c: 136: static uint8_t do0p0;
  8514                           ;main.c: 137: static uint8_t do0p1;
  8515                           ;main.c: 138: static uint8_t do1p0;
  8516                           ;main.c: 139: static uint8_t do1p1;
  8517                           ;main.c: 140: static uint8_t inout_cfg;
  8518                           ;main.c: 141: static uint8_t i;
  8519                           ;main.c: 143: static uint8_t loop_start = 3;
  8520  0975  01D4               	clrf	cmd_task@PT_YIELD_FLAG^(0+128)
  8521  0976  0AD4               	incf	cmd_task@PT_YIELD_FLAG^(0+128),f
  8522  0977  2F9E               	goto	l9471
  8523  0978                     l8843:	
  8524  0978  0021               	movlb	1	; select bank1
  8525  0979  01D4               	clrf	cmd_task@PT_YIELD_FLAG^(0+128)
  8526  097A  085E               	movf	cmd_task@pt^(0+128),w
  8527  097B  0086               	movwf	6
  8528  097C  3001               	movlw	1	; select bank2/3
  8529  097D  0087               	movwf	7
  8530  097E  30A6               	movlw	166
  8531  097F  3FC0               	movwi [0]fsr1
  8532  0980  3000               	movlw	0
  8533  0981  3FC1               	movwi [1]fsr1
  8534  0982                     l8847:	
  8535  0982  0854               	movf	cmd_task@PT_YIELD_FLAG^(0+128),w
  8536  0983  1903               	btfsc	3,2
  8537  0984  0008               	return
  8538  0985  085E               	movf	cmd_task@pt^(0+128),w
  8539  0986  0086               	movwf	6
  8540  0987  3001               	movlw	1	; select bank2/3
  8541  0988  0087               	movwf	7
  8542  0989  30A7               	movlw	167
  8543  098A  3FC0               	movwi [0]fsr1
  8544  098B  3000               	movlw	0
  8545  098C  3FC1               	movwi [1]fsr1
  8546  098D                     l8853:	
  8547  098D  0867               	movf	_usb_rx_bytes_avail^(0+128),w
  8548  098E  0243               	subwf	_usb_rx_ptr^(0+128),w
  8549  098F  1803               	btfsc	3,0
  8550  0990  0008               	return
  8551  0991  0843               	movf	_usb_rx_ptr^(0+128),w
  8552  0992  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
  8553  0993  0086               	movwf	6
  8554  0994  3001               	movlw	1	; select bank3/4
  8555  0995  0087               	movwf	7
  8556  0996  0801               	movf	1,w
  8557  0997  00C1               	movwf	cmd_task@cmd^(0+128)
  8558  0998  0AC3               	incf	_usb_rx_ptr^(0+128),f
  8559                           
  8560                           ;main.c: 173: op0 = cmd & 0xc0;
  8561  0999  0022               	movlb	2	; select bank2
  8562  099A  00CE               	movwf	cmd_task@op0^(0+256)
  8563  099B  30C0               	movlw	192
  8564  099C  05CE               	andwf	cmd_task@op0^(0+256),f
  8565                           
  8566                           ;main.c: 175: if (op0 == 0x40) {
  8567  099D  3040               	movlw	64
  8568  099E  064E               	xorwf	cmd_task@op0^(0+256),w
  8569  099F  1D03               	btfss	3,2
  8570  09A0  29A5               	goto	l8869
  8571                           
  8572                           ;main.c: 177: LATC = cmd & ~gpio_dir;
  8573  09A1  096E               	comf	cmd_task@gpio_dir^(0+256),w
  8574  09A2  0021               	movlb	1	; select bank1
  8575  09A3  0541               	andwf	cmd_task@cmd^(0+128),w
  8576  09A4  2DC3               	goto	L23
  8577  09A5                     l8869:	
  8578                           ;main.c: 179: } else if (op0 == 0x80) {
  8579                           
  8580  09A5  3080               	movlw	128
  8581  09A6  064E               	xorwf	cmd_task@op0^(0+256),w
  8582  09A7  1D03               	btfss	3,2
  8583  09A8  29CF               	goto	l8887
  8584                           
  8585                           ;main.c: 181: byte_to_send = PORTC & gpio_dir;
  8586  09A9  0020               	movlb	0	; select bank0
  8587  09AA  080E               	movf	14,w	;volatile
  8588  09AB  0022               	movlb	2	; select bank2
  8589  09AC  00C6               	movwf	cmd_task@byte_to_send^(0+256)
  8590  09AD  086E               	movf	cmd_task@gpio_dir^(0+256),w
  8591  09AE  05C6               	andwf	cmd_task@byte_to_send^(0+256),f
  8592                           
  8593                           ;main.c: 182: LATC = cmd & ~gpio_dir;
  8594  09AF  096E               	comf	cmd_task@gpio_dir^(0+256),w
  8595  09B0  0021               	movlb	1	; select bank1
  8596  09B1  0541               	andwf	cmd_task@cmd^(0+128),w
  8597  09B2  0022               	movlb	2	; select bank2
  8598  09B3  008E               	movwf	14	;volatile
  8599  09B4  0021               	movlb	1	; select bank1
  8600  09B5  085E               	movf	cmd_task@pt^(0+128),w
  8601  09B6  0086               	movwf	6
  8602  09B7  3001               	movlw	1	; select bank2/3
  8603  09B8  0087               	movwf	7
  8604  09B9  30B7               	movlw	183
  8605  09BA  3FC0               	movwi [0]fsr1
  8606  09BB  3000               	movlw	0
  8607  09BC  3FC1               	movwi [1]fsr1
  8608  09BD                     l8879:	
  8609  09BD  0845               	movf	_cdc_trf_state^(0+128),w
  8610  09BE  1D03               	btfss	3,2
  8611  09BF  0008               	return
  8612  09C0  3040               	movlw	64
  8613  09C1  0242               	subwf	_usb_tx_ptr^(0+128),w
  8614  09C2  1803               	btfsc	3,0
  8615  09C3  0008               	return
  8616  09C4  0842               	movf	_usb_tx_ptr^(0+128),w
  8617  09C5  3E20               	addlw	(low (_usb_tx_buf| (0+768)))& (0+255)
  8618  09C6  0086               	movwf	6
  8619  09C7  3003               	movlw	3	; select bank6/7
  8620  09C8  0087               	movwf	7
  8621  09C9  0022               	movlb	2	; select bank2
  8622  09CA  0846               	movf	cmd_task@byte_to_send^(0+256),w
  8623  09CB                     L13:	
  8624  09CB  0081               	movwf	1
  8625  09CC  0021               	movlb	1	; select bank1
  8626  09CD  0AC2               	incf	_usb_tx_ptr^(0+128),f
  8627                           
  8628                           ;main.c: 185: } else {
  8629  09CE  2978               	goto	l8843
  8630  09CF                     l8887:	
  8631                           
  8632                           ;main.c: 186: uint8_t op1 = cmd & 0xF8;
  8633  09CF  0021               	movlb	1	; select bank1
  8634  09D0  0841               	movf	cmd_task@cmd^(0+128),w
  8635  09D1  00D7               	movwf	cmd_task@op1^(0+128)
  8636  09D2  30F8               	movlw	248
  8637  09D3  05D7               	andwf	cmd_task@op1^(0+128),f
  8638                           
  8639                           ;main.c: 188: if (op1 == 0x18) {
  8640  09D4  3018               	movlw	24
  8641  09D5  0657               	xorwf	cmd_task@op1^(0+128),w
  8642  09D6  1D03               	btfss	3,2
  8643  09D7  2E23               	goto	l9307
  8644                           
  8645                           ;main.c: 190: sie = cmd & 0x7;
  8646  09D8  0841               	movf	cmd_task@cmd^(0+128),w
  8647  09D9  00C0               	movwf	cmd_task@sie^(0+128)
  8648  09DA  3007               	movlw	7
  8649  09DB  05C0               	andwf	cmd_task@sie^(0+128),f
  8650  09DC  085E               	movf	cmd_task@pt^(0+128),w
  8651  09DD  0086               	movwf	6
  8652  09DE  3001               	movlw	1	; select bank2/3
  8653  09DF  0087               	movwf	7
  8654  09E0  30C0               	movlw	192
  8655  09E1  3FC0               	movwi [0]fsr1
  8656  09E2  3000               	movlw	0
  8657  09E3  3FC1               	movwi [1]fsr1
  8658  09E4                     l8899:	
  8659  09E4  0867               	movf	_usb_rx_bytes_avail^(0+128),w
  8660  09E5  0243               	subwf	_usb_rx_ptr^(0+128),w
  8661  09E6  1803               	btfsc	3,0
  8662  09E7  0008               	return
  8663  09E8  0843               	movf	_usb_rx_ptr^(0+128),w
  8664  09E9  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
  8665  09EA  0086               	movwf	6
  8666  09EB  3001               	movlw	1	; select bank3/4
  8667  09EC  0087               	movwf	7
  8668  09ED  0801               	movf	1,w
  8669  09EE  0022               	movlb	2	; select bank2
  8670  09EF  00CD               	movwf	cmd_task@num_bits^(0+256)
  8671  09F0  0021               	movlb	1	; select bank1
  8672  09F1  0AC3               	incf	_usb_rx_ptr^(0+128),f
  8673  09F2  085E               	movf	cmd_task@pt^(0+128),w
  8674  09F3  0086               	movwf	6
  8675  09F4  30C1               	movlw	193
  8676  09F5  3FC0               	movwi [0]fsr1
  8677  09F6  3000               	movlw	0
  8678  09F7  3FC1               	movwi [1]fsr1
  8679  09F8                     l8909:	
  8680  09F8  0867               	movf	_usb_rx_bytes_avail^(0+128),w
  8681  09F9  0243               	subwf	_usb_rx_ptr^(0+128),w
  8682  09FA  1803               	btfsc	3,0
  8683  09FB  0008               	return
  8684  09FC  0843               	movf	_usb_rx_ptr^(0+128),w
  8685  09FD  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
  8686  09FE  0086               	movwf	6
  8687  09FF  3001               	movlw	1	; select bank3/4
  8688  0A00  0087               	movwf	7
  8689  0A01  0801               	movf	1,w
  8690  0A02  0022               	movlb	2	; select bank2
  8691  0A03  00CC               	movwf	cmd_task@num_bytes^(0+256)
  8692  0A04  0021               	movlb	1	; select bank1
  8693  0A05  0AC3               	incf	_usb_rx_ptr^(0+128),f
  8694                           
  8695                           ;main.c: 195: do0p0 = sie_configs[sie].do0p0;
  8696  0A06  0840               	movf	cmd_task@sie^(0+128),w
  8697  0A07  0709               	addwf	9,w
  8698  0A08  0709               	addwf	9,w
  8699  0A09  0709               	addwf	9,w
  8700  0A0A  3E22               	addlw	(low ((_sie_configs| (0+512)+2)))& (0+255)
  8701  0A0B  0086               	movwf	6
  8702  0A0C  3002               	movlw	2	; select bank4/5
  8703  0A0D  0087               	movwf	7
  8704  0A0E  0801               	movf	1,w
  8705  0A0F  00BE               	movwf	cmd_task@do0p0^(0+128)
  8706                           
  8707                           ;main.c: 196: do0p1 = sie_configs[sie].do0p1;
  8708  0A10  0840               	movf	cmd_task@sie^(0+128),w
  8709  0A11  0709               	addwf	9,w
  8710  0A12  0709               	addwf	9,w
  8711  0A13  0709               	addwf	9,w
  8712  0A14  3E23               	addlw	(low ((_sie_configs| (0+512)+3)))& (0+255)
  8713  0A15  0086               	movwf	6
  8714  0A16  0801               	movf	1,w
  8715  0A17  00BD               	movwf	cmd_task@do0p1^(0+128)
  8716                           
  8717                           ;main.c: 197: inout_cfg = sie_configs[sie].config_byte & 0xf;
  8718  0A18  0840               	movf	cmd_task@sie^(0+128),w
  8719  0A19  0709               	addwf	9,w
  8720  0A1A  0709               	addwf	9,w
  8721  0A1B  0709               	addwf	9,w
  8722  0A1C  3E20               	addlw	(low (_sie_configs| (0+512)))& (0+255)
  8723  0A1D  0086               	movwf	6
  8724  0A1E  0801               	movf	1,w
  8725  0A1F  0022               	movlb	2	; select bank2
  8726  0A20  00CB               	movwf	cmd_task@inout_cfg^(0+256)
  8727  0A21  300F               	movlw	15
  8728  0A22  05CB               	andwf	cmd_task@inout_cfg^(0+256),f
  8729                           
  8730                           ;main.c: 200: if (inout_cfg == 0x0C) {
  8731  0A23  300C               	movlw	12
  8732  0A24  064B               	xorwf	cmd_task@inout_cfg^(0+256),w
  8733  0A25  1D03               	btfss	3,2
  8734  0A26  2BAA               	goto	l9085
  8735                           
  8736                           ;main.c: 201: compare_data_matches = 1;
  8737  0A27  01ED               	clrf	cmd_task@compare_data_matches^(0+256)
  8738  0A28  0AED               	incf	cmd_task@compare_data_matches^(0+256),f
  8739                           
  8740                           ;main.c: 203: input_mask = sie_configs[sie].input_mask;
  8741  0A29  0021               	movlb	1	; select bank1
  8742  0A2A  0840               	movf	cmd_task@sie^(0+128),w
  8743  0A2B  0709               	addwf	9,w
  8744  0A2C  0709               	addwf	9,w
  8745  0A2D  0709               	addwf	9,w
  8746  0A2E  3E21               	addlw	(low ((_sie_configs| (0+512)+1)))& (0+255)
  8747  0A2F  0086               	movwf	6
  8748  0A30  0801               	movf	1,w
  8749  0A31  00BF               	movwf	cmd_task@input_mask^(0+128)
  8750                           
  8751                           ;main.c: 205: for (i = 0; i < num_bytes; i += 1) {
  8752  0A32  01BA               	clrf	cmd_task@i^(0+128)
  8753  0A33                     l9011:	
  8754  0A33  0022               	movlb	2	; select bank2
  8755  0A34  084C               	movf	cmd_task@num_bytes^(0+256),w
  8756  0A35  0021               	movlb	1	; select bank1
  8757  0A36  023A               	subwf	cmd_task@i^(0+128),w
  8758  0A37  1803               	btfsc	3,0
  8759  0A38  2AF8               	goto	l9013
  8760                           
  8761                           ;main.c: 206: actual_data = 0;
  8762  0A39  0022               	movlb	2	; select bank2
  8763  0A3A  01C9               	clrf	cmd_task@actual_data^(0+256)
  8764                           
  8765                           ;main.c: 208: LATC = do0p0;
  8766  0A3B  0021               	movlb	1	; select bank1
  8767  0A3C  083E               	movf	cmd_task@do0p0^(0+128),w
  8768  0A3D  0022               	movlb	2	; select bank2
  8769  0A3E  008E               	movwf	14	;volatile
  8770                           
  8771                           ;main.c: 209: LATC = do0p1;
  8772  0A3F  0021               	movlb	1	; select bank1
  8773  0A40  083D               	movf	cmd_task@do0p1^(0+128),w
  8774  0A41  0022               	movlb	2	; select bank2
  8775  0A42  008E               	movwf	14	;volatile
  8776                           
  8777                           ;main.c: 210: if (PORTC & input_mask) actual_data = actual_data | 0x01;
  8778  0A43  0020               	movlb	0	; select bank0
  8779  0A44  080E               	movf	14,w	;volatile
  8780  0A45  0021               	movlb	1	; select bank1
  8781  0A46  053F               	andwf	cmd_task@input_mask^(0+128),w
  8782  0A47  1903               	btfsc	3,2
  8783  0A48  2A4B               	goto	l8943
  8784  0A49  0022               	movlb	2	; select bank2
  8785  0A4A  1449               	bsf	cmd_task@actual_data^(0+256),0
  8786  0A4B                     l8943:	
  8787                           
  8788                           ;main.c: 212: LATC = do0p0;
  8789  0A4B  0021               	movlb	1	; select bank1
  8790  0A4C  083E               	movf	cmd_task@do0p0^(0+128),w
  8791  0A4D  0022               	movlb	2	; select bank2
  8792  0A4E  008E               	movwf	14	;volatile
  8793                           
  8794                           ;main.c: 213: LATC = do0p1;
  8795  0A4F  0021               	movlb	1	; select bank1
  8796  0A50  083D               	movf	cmd_task@do0p1^(0+128),w
  8797  0A51  0022               	movlb	2	; select bank2
  8798  0A52  008E               	movwf	14	;volatile
  8799                           
  8800                           ;main.c: 214: if (PORTC & input_mask) actual_data = actual_data | 0x02;
  8801  0A53  0020               	movlb	0	; select bank0
  8802  0A54  080E               	movf	14,w	;volatile
  8803  0A55  0021               	movlb	1	; select bank1
  8804  0A56  053F               	andwf	cmd_task@input_mask^(0+128),w
  8805  0A57  1903               	btfsc	3,2
  8806  0A58  2A5B               	goto	l8949
  8807  0A59  0022               	movlb	2	; select bank2
  8808  0A5A  14C9               	bsf	cmd_task@actual_data^(0+256),1
  8809  0A5B                     l8949:	
  8810                           
  8811                           ;main.c: 216: LATC = do0p0;
  8812  0A5B  0021               	movlb	1	; select bank1
  8813  0A5C  083E               	movf	cmd_task@do0p0^(0+128),w
  8814  0A5D  0022               	movlb	2	; select bank2
  8815  0A5E  008E               	movwf	14	;volatile
  8816                           
  8817                           ;main.c: 217: LATC = do0p1;
  8818  0A5F  0021               	movlb	1	; select bank1
  8819  0A60  083D               	movf	cmd_task@do0p1^(0+128),w
  8820  0A61  0022               	movlb	2	; select bank2
  8821  0A62  008E               	movwf	14	;volatile
  8822                           
  8823                           ;main.c: 218: if (PORTC & input_mask) actual_data = actual_data | 0x04;
  8824  0A63  0020               	movlb	0	; select bank0
  8825  0A64  080E               	movf	14,w	;volatile
  8826  0A65  0021               	movlb	1	; select bank1
  8827  0A66  053F               	andwf	cmd_task@input_mask^(0+128),w
  8828  0A67  1903               	btfsc	3,2
  8829  0A68  2A6B               	goto	l8955
  8830  0A69  0022               	movlb	2	; select bank2
  8831  0A6A  1549               	bsf	cmd_task@actual_data^(0+256),2
  8832  0A6B                     l8955:	
  8833                           
  8834                           ;main.c: 220: LATC = do0p0;
  8835  0A6B  0021               	movlb	1	; select bank1
  8836  0A6C  083E               	movf	cmd_task@do0p0^(0+128),w
  8837  0A6D  0022               	movlb	2	; select bank2
  8838  0A6E  008E               	movwf	14	;volatile
  8839                           
  8840                           ;main.c: 221: LATC = do0p1;
  8841  0A6F  0021               	movlb	1	; select bank1
  8842  0A70  083D               	movf	cmd_task@do0p1^(0+128),w
  8843  0A71  0022               	movlb	2	; select bank2
  8844  0A72  008E               	movwf	14	;volatile
  8845                           
  8846                           ;main.c: 222: if (PORTC & input_mask) actual_data = actual_data | 0x08;
  8847  0A73  0020               	movlb	0	; select bank0
  8848  0A74  080E               	movf	14,w	;volatile
  8849  0A75  0021               	movlb	1	; select bank1
  8850  0A76  053F               	andwf	cmd_task@input_mask^(0+128),w
  8851  0A77  1903               	btfsc	3,2
  8852  0A78  2A7B               	goto	l8961
  8853  0A79  0022               	movlb	2	; select bank2
  8854  0A7A  15C9               	bsf	cmd_task@actual_data^(0+256),3
  8855  0A7B                     l8961:	
  8856                           
  8857                           ;main.c: 224: LATC = do0p0;
  8858  0A7B  0021               	movlb	1	; select bank1
  8859  0A7C  083E               	movf	cmd_task@do0p0^(0+128),w
  8860  0A7D  0022               	movlb	2	; select bank2
  8861  0A7E  008E               	movwf	14	;volatile
  8862                           
  8863                           ;main.c: 225: LATC = do0p1;
  8864  0A7F  0021               	movlb	1	; select bank1
  8865  0A80  083D               	movf	cmd_task@do0p1^(0+128),w
  8866  0A81  0022               	movlb	2	; select bank2
  8867  0A82  008E               	movwf	14	;volatile
  8868                           
  8869                           ;main.c: 226: if (PORTC & input_mask) actual_data = actual_data | 0x10;
  8870  0A83  0020               	movlb	0	; select bank0
  8871  0A84  080E               	movf	14,w	;volatile
  8872  0A85  0021               	movlb	1	; select bank1
  8873  0A86  053F               	andwf	cmd_task@input_mask^(0+128),w
  8874  0A87  1903               	btfsc	3,2
  8875  0A88  2A8B               	goto	l8967
  8876  0A89  0022               	movlb	2	; select bank2
  8877  0A8A  1649               	bsf	cmd_task@actual_data^(0+256),4
  8878  0A8B                     l8967:	
  8879                           
  8880                           ;main.c: 228: LATC = do0p0;
  8881  0A8B  0021               	movlb	1	; select bank1
  8882  0A8C  083E               	movf	cmd_task@do0p0^(0+128),w
  8883  0A8D  0022               	movlb	2	; select bank2
  8884  0A8E  008E               	movwf	14	;volatile
  8885                           
  8886                           ;main.c: 229: LATC = do0p1;
  8887  0A8F  0021               	movlb	1	; select bank1
  8888  0A90  083D               	movf	cmd_task@do0p1^(0+128),w
  8889  0A91  0022               	movlb	2	; select bank2
  8890  0A92  008E               	movwf	14	;volatile
  8891                           
  8892                           ;main.c: 230: if (PORTC & input_mask) actual_data = actual_data | 0x20;
  8893  0A93  0020               	movlb	0	; select bank0
  8894  0A94  080E               	movf	14,w	;volatile
  8895  0A95  0021               	movlb	1	; select bank1
  8896  0A96  053F               	andwf	cmd_task@input_mask^(0+128),w
  8897  0A97  1903               	btfsc	3,2
  8898  0A98  2A9B               	goto	l8973
  8899  0A99  0022               	movlb	2	; select bank2
  8900  0A9A  16C9               	bsf	cmd_task@actual_data^(0+256),5
  8901  0A9B                     l8973:	
  8902                           
  8903                           ;main.c: 232: LATC = do0p0;
  8904  0A9B  0021               	movlb	1	; select bank1
  8905  0A9C  083E               	movf	cmd_task@do0p0^(0+128),w
  8906  0A9D  0022               	movlb	2	; select bank2
  8907  0A9E  008E               	movwf	14	;volatile
  8908                           
  8909                           ;main.c: 233: LATC = do0p1;
  8910  0A9F  0021               	movlb	1	; select bank1
  8911  0AA0  083D               	movf	cmd_task@do0p1^(0+128),w
  8912  0AA1  0022               	movlb	2	; select bank2
  8913  0AA2  008E               	movwf	14	;volatile
  8914                           
  8915                           ;main.c: 234: if (PORTC & input_mask) actual_data = actual_data | 0x40;
  8916  0AA3  0020               	movlb	0	; select bank0
  8917  0AA4  080E               	movf	14,w	;volatile
  8918  0AA5  0021               	movlb	1	; select bank1
  8919  0AA6  053F               	andwf	cmd_task@input_mask^(0+128),w
  8920  0AA7  1903               	btfsc	3,2
  8921  0AA8  2AAB               	goto	l8979
  8922  0AA9  0022               	movlb	2	; select bank2
  8923  0AAA  1749               	bsf	cmd_task@actual_data^(0+256),6
  8924  0AAB                     l8979:	
  8925                           
  8926                           ;main.c: 236: LATC = do0p0;
  8927  0AAB  0021               	movlb	1	; select bank1
  8928  0AAC  083E               	movf	cmd_task@do0p0^(0+128),w
  8929  0AAD  0022               	movlb	2	; select bank2
  8930  0AAE  008E               	movwf	14	;volatile
  8931                           
  8932                           ;main.c: 237: LATC = do0p1;
  8933  0AAF  0021               	movlb	1	; select bank1
  8934  0AB0  083D               	movf	cmd_task@do0p1^(0+128),w
  8935  0AB1  0022               	movlb	2	; select bank2
  8936  0AB2  008E               	movwf	14	;volatile
  8937                           
  8938                           ;main.c: 238: if (PORTC & input_mask) actual_data = actual_data | 0x80;
  8939  0AB3  0020               	movlb	0	; select bank0
  8940  0AB4  080E               	movf	14,w	;volatile
  8941  0AB5  0021               	movlb	1	; select bank1
  8942  0AB6  053F               	andwf	cmd_task@input_mask^(0+128),w
  8943  0AB7  1903               	btfsc	3,2
  8944  0AB8  2ABB               	goto	l8985
  8945  0AB9  0022               	movlb	2	; select bank2
  8946  0ABA  17C9               	bsf	cmd_task@actual_data^(0+256),7
  8947  0ABB                     l8985:	
  8948  0ABB  0021               	movlb	1	; select bank1
  8949  0ABC  085E               	movf	cmd_task@pt^(0+128),w
  8950  0ABD  0086               	movwf	6
  8951  0ABE  3001               	movlw	1	; select bank2/3
  8952  0ABF  0087               	movwf	7
  8953  0AC0  30F1               	movlw	241
  8954  0AC1  3FC0               	movwi [0]fsr1
  8955  0AC2  3000               	movlw	0
  8956  0AC3  3FC1               	movwi [1]fsr1
  8957  0AC4                     l8987:	
  8958  0AC4  0867               	movf	_usb_rx_bytes_avail^(0+128),w
  8959  0AC5  0243               	subwf	_usb_rx_ptr^(0+128),w
  8960  0AC6  1803               	btfsc	3,0
  8961  0AC7  0008               	return
  8962  0AC8  0843               	movf	_usb_rx_ptr^(0+128),w
  8963  0AC9  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
  8964  0ACA  0086               	movwf	6
  8965  0ACB  3001               	movlw	1	; select bank3/4
  8966  0ACC  0087               	movwf	7
  8967  0ACD  0801               	movf	1,w
  8968  0ACE  0022               	movlb	2	; select bank2
  8969  0ACF  00C8               	movwf	cmd_task@expected_data^(0+256)
  8970  0AD0  0021               	movlb	1	; select bank1
  8971  0AD1  0AC3               	incf	_usb_rx_ptr^(0+128),f
  8972  0AD2  085E               	movf	cmd_task@pt^(0+128),w
  8973  0AD3  0086               	movwf	6
  8974  0AD4  30F2               	movlw	242
  8975  0AD5  3FC0               	movwi [0]fsr1
  8976  0AD6  3000               	movlw	0
  8977  0AD7  3FC1               	movwi [1]fsr1
  8978  0AD8                     l8997:	
  8979  0AD8  0867               	movf	_usb_rx_bytes_avail^(0+128),w
  8980  0AD9  0243               	subwf	_usb_rx_ptr^(0+128),w
  8981  0ADA  1803               	btfsc	3,0
  8982  0ADB  0008               	return
  8983  0ADC  0843               	movf	_usb_rx_ptr^(0+128),w
  8984  0ADD  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
  8985  0ADE  0086               	movwf	6
  8986  0ADF  3001               	movlw	1	; select bank3/4
  8987  0AE0  0087               	movwf	7
  8988  0AE1  0801               	movf	1,w
  8989  0AE2  0022               	movlb	2	; select bank2
  8990  0AE3  00C7               	movwf	cmd_task@mask^(0+256)
  8991  0AE4  0021               	movlb	1	; select bank1
  8992  0AE5  0AC3               	incf	_usb_rx_ptr^(0+128),f
  8993                           
  8994                           ;main.c: 244: if ((expected_data & mask) != (actual_data & mask)) {
  8995  0AE6  0022               	movlb	2	; select bank2
  8996  0AE7  0847               	movf	cmd_task@mask^(0+256),w
  8997  0AE8  0549               	andwf	cmd_task@actual_data^(0+256),w
  8998  0AE9  0021               	movlb	1	; select bank1
  8999  0AEA  00D1               	movwf	??_cmd_task^(0+128)
  9000  0AEB  0022               	movlb	2	; select bank2
  9001  0AEC  0847               	movf	cmd_task@mask^(0+256),w
  9002  0AED  0548               	andwf	cmd_task@expected_data^(0+256),w
  9003  0AEE  0021               	movlb	1	; select bank1
  9004  0AEF  00D2               	movwf	(??_cmd_task+1)^(0+128)
  9005  0AF0  0651               	xorwf	??_cmd_task^(0+128),w
  9006  0AF1  1903               	skipnz
  9007  0AF2  2AF5               	goto	l9009
  9008                           
  9009                           ;main.c: 245: compare_data_matches = 0;
  9010  0AF3  0022               	movlb	2	; select bank2
  9011  0AF4  01ED               	clrf	cmd_task@compare_data_matches^(0+256)
  9012  0AF5                     l9009:	
  9013  0AF5  0021               	movlb	1	; select bank1
  9014  0AF6  0ABA               	incf	cmd_task@i^(0+128),f
  9015  0AF7  2A33               	goto	l9011
  9016  0AF8                     l9013:	
  9017                           
  9018                           ;main.c: 246: }
  9019                           ;main.c: 247: }
  9020                           ;main.c: 249: actual_data = 0;
  9021  0AF8  0022               	movlb	2	; select bank2
  9022  0AF9  01C9               	clrf	cmd_task@actual_data^(0+256)
  9023                           
  9024                           ;main.c: 250: uint8_t bit_to_set = 1;
  9025  0AFA  0021               	movlb	1	; select bank1
  9026  0AFB  01D8               	clrf	cmd_task@bit_to_set^(0+128)
  9027  0AFC  0AD8               	incf	cmd_task@bit_to_set^(0+128),f
  9028                           
  9029                           ;main.c: 252: for (i = 0; i < num_bits - 1; i += 1) {
  9030  0AFD  01BA               	clrf	cmd_task@i^(0+128)
  9031  0AFE                     l342:	
  9032  0AFE  0022               	movlb	2	; select bank2
  9033  0AFF  084D               	movf	cmd_task@num_bits^(0+256),w
  9034  0B00  3EFF               	addlw	255
  9035  0B01  0021               	movlb	1	; select bank1
  9036  0B02  00D1               	movwf	??_cmd_task^(0+128)
  9037  0B03  30FF               	movlw	255
  9038  0B04  1803               	skipnc
  9039  0B05  3000               	movlw	0
  9040  0B06  00D2               	movwf	(??_cmd_task^(0+128)+1)
  9041  0B07  0852               	movf	(??_cmd_task+1)^(0+128),w
  9042  0B08  3A80               	xorlw	128
  9043  0B09  3C80               	sublw	128
  9044  0B0A  1D03               	skipz
  9045  0B0B  2B0E               	goto	u8625
  9046  0B0C  0851               	movf	??_cmd_task^(0+128),w
  9047  0B0D  023A               	subwf	cmd_task@i^(0+128),w
  9048  0B0E                     u8625:	
  9049  0B0E  1803               	btfsc	3,0
  9050  0B0F  2B25               	goto	l9027
  9051                           
  9052                           ;main.c: 253: LATC = do0p0;
  9053  0B10  0021               	movlb	1	; select bank1
  9054  0B11  083E               	movf	cmd_task@do0p0^(0+128),w
  9055  0B12  0022               	movlb	2	; select bank2
  9056  0B13  008E               	movwf	14	;volatile
  9057                           
  9058                           ;main.c: 254: LATC = do0p1;
  9059  0B14  0021               	movlb	1	; select bank1
  9060  0B15  083D               	movf	cmd_task@do0p1^(0+128),w
  9061  0B16  0022               	movlb	2	; select bank2
  9062  0B17  008E               	movwf	14	;volatile
  9063                           
  9064                           ;main.c: 255: if (PORTC & input_mask) actual_data = actual_data | bit_to_set;
  9065  0B18  0020               	movlb	0	; select bank0
  9066  0B19  080E               	movf	14,w	;volatile
  9067  0B1A  0021               	movlb	1	; select bank1
  9068  0B1B  053F               	andwf	cmd_task@input_mask^(0+128),w
  9069  0B1C  1903               	btfsc	3,2
  9070  0B1D  2B21               	goto	l9023
  9071  0B1E  0858               	movf	cmd_task@bit_to_set^(0+128),w
  9072  0B1F  0022               	movlb	2	; select bank2
  9073  0B20  04C9               	iorwf	cmd_task@actual_data^(0+256),f
  9074  0B21                     l9023:	
  9075                           
  9076                           ;main.c: 257: bit_to_set = bit_to_set << 1;
  9077  0B21  0021               	movlb	1	; select bank1
  9078  0B22  35D8               	lslf	cmd_task@bit_to_set^(0+128),f
  9079  0B23  0ABA               	incf	cmd_task@i^(0+128),f
  9080  0B24  2AFE               	goto	l342
  9081  0B25                     l9027:	
  9082                           
  9083                           ;main.c: 258: }
  9084                           ;main.c: 260: uint8_t last_phase_overlay = sie_configs[sie].last_phase_overlay;
  9085  0B25  0021               	movlb	1	; select bank1
  9086  0B26  0840               	movf	cmd_task@sie^(0+128),w
  9087  0B27  0709               	addwf	9,w
  9088  0B28  0709               	addwf	9,w
  9089  0B29  0709               	addwf	9,w
  9090  0B2A  3E26               	addlw	(low ((_sie_configs| (0+512)+6)))& (0+255)
  9091  0B2B  0086               	movwf	6
  9092  0B2C  3002               	movlw	2	; select bank4/5
  9093  0B2D  0087               	movwf	7
  9094  0B2E  0801               	movf	1,w
  9095  0B2F  00D5               	movwf	cmd_task@last_phase_overlay^(0+128)
  9096                           
  9097                           ;main.c: 262: LATC = do0p0 | last_phase_overlay;
  9098  0B30  043E               	iorwf	cmd_task@do0p0^(0+128),w
  9099  0B31  0022               	movlb	2	; select bank2
  9100  0B32  008E               	movwf	14	;volatile
  9101                           
  9102                           ;main.c: 263: LATC = do0p1 | last_phase_overlay;
  9103  0B33  0021               	movlb	1	; select bank1
  9104  0B34  083D               	movf	cmd_task@do0p1^(0+128),w
  9105  0B35  0455               	iorwf	cmd_task@last_phase_overlay^(0+128),w
  9106  0B36  0022               	movlb	2	; select bank2
  9107  0B37  008E               	movwf	14	;volatile
  9108                           
  9109                           ;main.c: 264: if (PORTC & input_mask) actual_data = actual_data | bit_to_set;
  9110  0B38  0020               	movlb	0	; select bank0
  9111  0B39  080E               	movf	14,w	;volatile
  9112  0B3A  0021               	movlb	1	; select bank1
  9113  0B3B  053F               	andwf	cmd_task@input_mask^(0+128),w
  9114  0B3C  1903               	btfsc	3,2
  9115  0B3D  2B41               	goto	l9037
  9116  0B3E  0858               	movf	cmd_task@bit_to_set^(0+128),w
  9117  0B3F  0022               	movlb	2	; select bank2
  9118  0B40  04C9               	iorwf	cmd_task@actual_data^(0+256),f
  9119  0B41                     l9037:	
  9120  0B41  0021               	movlb	1	; select bank1
  9121  0B42  085E               	movf	cmd_task@pt^(0+128),w
  9122  0B43  0086               	movwf	6
  9123  0B44  3001               	movlw	1	; select bank2/3
  9124  0B45  0087               	movwf	7
  9125  0B46  300B               	movlw	11
  9126  0B47  3FC0               	movwi [0]fsr1
  9127  0B48  3001               	movlw	1
  9128  0B49  3FC1               	movwi [1]fsr1
  9129  0B4A                     l9039:	
  9130  0B4A  0867               	movf	_usb_rx_bytes_avail^(0+128),w
  9131  0B4B  0243               	subwf	_usb_rx_ptr^(0+128),w
  9132  0B4C  1803               	btfsc	3,0
  9133  0B4D  0008               	return
  9134  0B4E  0843               	movf	_usb_rx_ptr^(0+128),w
  9135  0B4F  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
  9136  0B50  0086               	movwf	6
  9137  0B51  3001               	movlw	1	; select bank3/4
  9138  0B52  0087               	movwf	7
  9139  0B53  0801               	movf	1,w
  9140  0B54  0022               	movlb	2	; select bank2
  9141  0B55  00C8               	movwf	cmd_task@expected_data^(0+256)
  9142  0B56  0021               	movlb	1	; select bank1
  9143  0B57  0AC3               	incf	_usb_rx_ptr^(0+128),f
  9144  0B58  085E               	movf	cmd_task@pt^(0+128),w
  9145  0B59  0086               	movwf	6
  9146  0B5A  300C               	movlw	12
  9147  0B5B  3FC0               	movwi [0]fsr1
  9148  0B5C  3001               	movlw	1
  9149  0B5D  3FC1               	movwi [1]fsr1
  9150  0B5E                     l9049:	
  9151  0B5E  0867               	movf	_usb_rx_bytes_avail^(0+128),w
  9152  0B5F  0243               	subwf	_usb_rx_ptr^(0+128),w
  9153  0B60  1803               	btfsc	3,0
  9154  0B61  0008               	return
  9155  0B62  0843               	movf	_usb_rx_ptr^(0+128),w
  9156  0B63  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
  9157  0B64  0086               	movwf	6
  9158  0B65  3001               	movlw	1	; select bank3/4
  9159  0B66  0087               	movwf	7
  9160  0B67  0801               	movf	1,w
  9161  0B68  0022               	movlb	2	; select bank2
  9162  0B69  00C7               	movwf	cmd_task@mask^(0+256)
  9163  0B6A  0021               	movlb	1	; select bank1
  9164  0B6B  0AC3               	incf	_usb_rx_ptr^(0+128),f
  9165                           
  9166                           ;main.c: 270: if ((expected_data & mask) != (actual_data & mask)) {
  9167  0B6C  0022               	movlb	2	; select bank2
  9168  0B6D  0847               	movf	cmd_task@mask^(0+256),w
  9169  0B6E  0549               	andwf	cmd_task@actual_data^(0+256),w
  9170  0B6F  0021               	movlb	1	; select bank1
  9171  0B70  00D1               	movwf	??_cmd_task^(0+128)
  9172  0B71  0022               	movlb	2	; select bank2
  9173  0B72  0847               	movf	cmd_task@mask^(0+256),w
  9174  0B73  0548               	andwf	cmd_task@expected_data^(0+256),w
  9175  0B74  0021               	movlb	1	; select bank1
  9176  0B75  00D2               	movwf	(??_cmd_task+1)^(0+128)
  9177  0B76  0651               	xorwf	??_cmd_task^(0+128),w
  9178  0B77  1903               	skipnz
  9179  0B78  2B7B               	goto	l9061
  9180                           
  9181                           ;main.c: 271: compare_data_matches = 0;
  9182  0B79  0022               	movlb	2	; select bank2
  9183  0B7A  01ED               	clrf	cmd_task@compare_data_matches^(0+256)
  9184  0B7B                     l9061:	
  9185                           
  9186                           ;main.c: 272: }
  9187                           ;main.c: 274: if (loop_is_active) {
  9188  0B7B  0022               	movlb	2	; select bank2
  9189  0B7C  084A               	movf	cmd_task@loop_is_active^(0+256),w
  9190  0B7D  1903               	btfsc	3,2
  9191  0B7E  2B85               	goto	l9067
  9192                           
  9193                           ;main.c: 275: if (compare_data_matches) {
  9194  0B7F  086D               	movf	cmd_task@compare_data_matches^(0+256),w
  9195  0B80  1903               	btfsc	3,2
  9196  0B81  2978               	goto	l8843
  9197  0B82                     l9065:	
  9198                           
  9199                           ;main.c: 276: loop_is_active = 0;
  9200  0B82  0022               	movlb	2	; select bank2
  9201  0B83  01CA               	clrf	cmd_task@loop_is_active^(0+256)
  9202  0B84  2978               	goto	l8843
  9203  0B85                     l9067:	
  9204                           
  9205                           ;main.c: 279: if (!compare_data_matches) {
  9206  0B85  086D               	movf	cmd_task@compare_data_matches^(0+256),w
  9207  0B86  1D03               	btfss	3,2
  9208  0B87  2978               	goto	l8843
  9209                           
  9210                           ;main.c: 280: status = STATUS_FAIL;
  9211  0B88  01C4               	clrf	cmd_task@status^(0+256)
  9212  0B89  0AC4               	incf	cmd_task@status^(0+256),f
  9213                           
  9214                           ;main.c: 282: if (!status_sent) {
  9215  0B8A  0843               	movf	cmd_task@status_sent^(0+256),w
  9216  0B8B  1D03               	btfss	3,2
  9217  0B8C  2978               	goto	l8843
  9218  0B8D  0021               	movlb	1	; select bank1
  9219  0B8E  085E               	movf	cmd_task@pt^(0+128),w
  9220  0B8F  0086               	movwf	6
  9221  0B90  3001               	movlw	1	; select bank2/3
  9222  0B91  0087               	movwf	7
  9223  0B92  301B               	movlw	27
  9224  0B93  3FC0               	movwi [0]fsr1
  9225  0B94  3001               	movlw	1
  9226  0B95  3FC1               	movwi [1]fsr1
  9227  0B96                     l9075:	
  9228  0B96  0845               	movf	_cdc_trf_state^(0+128),w
  9229  0B97  1D03               	btfss	3,2
  9230  0B98  0008               	return
  9231  0B99  3040               	movlw	64
  9232  0B9A  0242               	subwf	_usb_tx_ptr^(0+128),w
  9233  0B9B  1803               	btfsc	3,0
  9234  0B9C  0008               	return
  9235  0B9D  0842               	movf	_usb_tx_ptr^(0+128),w
  9236  0B9E  3E20               	addlw	(low (_usb_tx_buf| (0+768)))& (0+255)
  9237  0B9F  0086               	movwf	6
  9238  0BA0  3003               	movlw	3	; select bank6/7
  9239  0BA1  0087               	movwf	7
  9240  0BA2  0181               	clrf	1
  9241  0BA3  0A81               	incf	1,f
  9242  0BA4                     l9081:	
  9243  0BA4  0021               	movlb	1	; select bank1
  9244  0BA5  0AC2               	incf	_usb_tx_ptr^(0+128),f
  9245                           
  9246                           ;main.c: 284: status_sent = 1;
  9247  0BA6  0022               	movlb	2	; select bank2
  9248  0BA7  01C3               	clrf	cmd_task@status_sent^(0+256)
  9249  0BA8  0AC3               	incf	cmd_task@status_sent^(0+256),f
  9250  0BA9  2978               	goto	l8843
  9251  0BAA                     l9085:	
  9252  0BAA  3004               	movlw	4
  9253  0BAB  064B               	xorwf	cmd_task@inout_cfg^(0+256),w
  9254  0BAC  1D03               	btfss	3,2
  9255  0BAD  2CBF               	goto	l9191
  9256                           
  9257                           ;main.c: 292: input_mask = sie_configs[sie].input_mask;
  9258  0BAE  0021               	movlb	1	; select bank1
  9259  0BAF  0840               	movf	cmd_task@sie^(0+128),w
  9260  0BB0  0709               	addwf	9,w
  9261  0BB1  0709               	addwf	9,w
  9262  0BB2  0709               	addwf	9,w
  9263  0BB3  3E21               	addlw	(low ((_sie_configs| (0+512)+1)))& (0+255)
  9264  0BB4  0086               	movwf	6
  9265  0BB5  3002               	movlw	2	; select bank4/5
  9266  0BB6  0087               	movwf	7
  9267  0BB7  0801               	movf	1,w
  9268  0BB8  00BF               	movwf	cmd_task@input_mask^(0+128)
  9269                           
  9270                           ;main.c: 294: for (i = 0; i < num_bytes; i += 1) {
  9271  0BB9  01BA               	clrf	cmd_task@i^(0+128)
  9272  0BBA                     l9155:	
  9273  0BBA  0022               	movlb	2	; select bank2
  9274  0BBB  084C               	movf	cmd_task@num_bytes^(0+256),w
  9275  0BBC  0021               	movlb	1	; select bank1
  9276  0BBD  023A               	subwf	cmd_task@i^(0+128),w
  9277  0BBE  1803               	btfsc	3,0
  9278  0BBF  2C5E               	goto	l9157
  9279                           
  9280                           ;main.c: 295: data = 0;
  9281  0BC0  0022               	movlb	2	; select bank2
  9282  0BC1  01C5               	clrf	cmd_task@data^(0+256)
  9283                           
  9284                           ;main.c: 297: LATC = do0p0;
  9285  0BC2  0021               	movlb	1	; select bank1
  9286  0BC3  083E               	movf	cmd_task@do0p0^(0+128),w
  9287  0BC4  0022               	movlb	2	; select bank2
  9288  0BC5  008E               	movwf	14	;volatile
  9289                           
  9290                           ;main.c: 298: LATC = do0p1;
  9291  0BC6  0021               	movlb	1	; select bank1
  9292  0BC7  083D               	movf	cmd_task@do0p1^(0+128),w
  9293  0BC8  0022               	movlb	2	; select bank2
  9294  0BC9  008E               	movwf	14	;volatile
  9295                           
  9296                           ;main.c: 299: if (PORTC & input_mask) data = data | 0x01;
  9297  0BCA  0020               	movlb	0	; select bank0
  9298  0BCB  080E               	movf	14,w	;volatile
  9299  0BCC  0021               	movlb	1	; select bank1
  9300  0BCD  053F               	andwf	cmd_task@input_mask^(0+128),w
  9301  0BCE  1903               	btfsc	3,2
  9302  0BCF  2BD2               	goto	l9101
  9303  0BD0  0022               	movlb	2	; select bank2
  9304  0BD1  1445               	bsf	cmd_task@data^(0+256),0
  9305  0BD2                     l9101:	
  9306                           
  9307                           ;main.c: 301: LATC = do0p0;
  9308  0BD2  0021               	movlb	1	; select bank1
  9309  0BD3  083E               	movf	cmd_task@do0p0^(0+128),w
  9310  0BD4  0022               	movlb	2	; select bank2
  9311  0BD5  008E               	movwf	14	;volatile
  9312                           
  9313                           ;main.c: 302: LATC = do0p1;
  9314  0BD6  0021               	movlb	1	; select bank1
  9315  0BD7  083D               	movf	cmd_task@do0p1^(0+128),w
  9316  0BD8  0022               	movlb	2	; select bank2
  9317  0BD9  008E               	movwf	14	;volatile
  9318                           
  9319                           ;main.c: 303: if (PORTC & input_mask) data = data | 0x02;
  9320  0BDA  0020               	movlb	0	; select bank0
  9321  0BDB  080E               	movf	14,w	;volatile
  9322  0BDC  0021               	movlb	1	; select bank1
  9323  0BDD  053F               	andwf	cmd_task@input_mask^(0+128),w
  9324  0BDE  1903               	btfsc	3,2
  9325  0BDF  2BE2               	goto	l9107
  9326  0BE0  0022               	movlb	2	; select bank2
  9327  0BE1  14C5               	bsf	cmd_task@data^(0+256),1
  9328  0BE2                     l9107:	
  9329                           
  9330                           ;main.c: 305: LATC = do0p0;
  9331  0BE2  0021               	movlb	1	; select bank1
  9332  0BE3  083E               	movf	cmd_task@do0p0^(0+128),w
  9333  0BE4  0022               	movlb	2	; select bank2
  9334  0BE5  008E               	movwf	14	;volatile
  9335                           
  9336                           ;main.c: 306: LATC = do0p1;
  9337  0BE6  0021               	movlb	1	; select bank1
  9338  0BE7  083D               	movf	cmd_task@do0p1^(0+128),w
  9339  0BE8  0022               	movlb	2	; select bank2
  9340  0BE9  008E               	movwf	14	;volatile
  9341                           
  9342                           ;main.c: 307: if (PORTC & input_mask) data = data | 0x04;
  9343  0BEA  0020               	movlb	0	; select bank0
  9344  0BEB  080E               	movf	14,w	;volatile
  9345  0BEC  0021               	movlb	1	; select bank1
  9346  0BED  053F               	andwf	cmd_task@input_mask^(0+128),w
  9347  0BEE  1903               	btfsc	3,2
  9348  0BEF  2BF2               	goto	l9113
  9349  0BF0  0022               	movlb	2	; select bank2
  9350  0BF1  1545               	bsf	cmd_task@data^(0+256),2
  9351  0BF2                     l9113:	
  9352                           
  9353                           ;main.c: 309: LATC = do0p0;
  9354  0BF2  0021               	movlb	1	; select bank1
  9355  0BF3  083E               	movf	cmd_task@do0p0^(0+128),w
  9356  0BF4  0022               	movlb	2	; select bank2
  9357  0BF5  008E               	movwf	14	;volatile
  9358                           
  9359                           ;main.c: 310: LATC = do0p1;
  9360  0BF6  0021               	movlb	1	; select bank1
  9361  0BF7  083D               	movf	cmd_task@do0p1^(0+128),w
  9362  0BF8  0022               	movlb	2	; select bank2
  9363  0BF9  008E               	movwf	14	;volatile
  9364                           
  9365                           ;main.c: 311: if (PORTC & input_mask) data = data | 0x08;
  9366  0BFA  0020               	movlb	0	; select bank0
  9367  0BFB  080E               	movf	14,w	;volatile
  9368  0BFC  0021               	movlb	1	; select bank1
  9369  0BFD  053F               	andwf	cmd_task@input_mask^(0+128),w
  9370  0BFE  1903               	btfsc	3,2
  9371  0BFF  2C02               	goto	l9119
  9372  0C00  0022               	movlb	2	; select bank2
  9373  0C01  15C5               	bsf	cmd_task@data^(0+256),3
  9374  0C02                     l9119:	
  9375                           
  9376                           ;main.c: 313: LATC = do0p0;
  9377  0C02  0021               	movlb	1	; select bank1
  9378  0C03  083E               	movf	cmd_task@do0p0^(0+128),w
  9379  0C04  0022               	movlb	2	; select bank2
  9380  0C05  008E               	movwf	14	;volatile
  9381                           
  9382                           ;main.c: 314: LATC = do0p1;
  9383  0C06  0021               	movlb	1	; select bank1
  9384  0C07  083D               	movf	cmd_task@do0p1^(0+128),w
  9385  0C08  0022               	movlb	2	; select bank2
  9386  0C09  008E               	movwf	14	;volatile
  9387                           
  9388                           ;main.c: 315: if (PORTC & input_mask) data = data | 0x10;
  9389  0C0A  0020               	movlb	0	; select bank0
  9390  0C0B  080E               	movf	14,w	;volatile
  9391  0C0C  0021               	movlb	1	; select bank1
  9392  0C0D  053F               	andwf	cmd_task@input_mask^(0+128),w
  9393  0C0E  1903               	btfsc	3,2
  9394  0C0F  2C12               	goto	l9125
  9395  0C10  0022               	movlb	2	; select bank2
  9396  0C11  1645               	bsf	cmd_task@data^(0+256),4
  9397  0C12                     l9125:	
  9398                           
  9399                           ;main.c: 317: LATC = do0p0;
  9400  0C12  0021               	movlb	1	; select bank1
  9401  0C13  083E               	movf	cmd_task@do0p0^(0+128),w
  9402  0C14  0022               	movlb	2	; select bank2
  9403  0C15  008E               	movwf	14	;volatile
  9404                           
  9405                           ;main.c: 318: LATC = do0p1;
  9406  0C16  0021               	movlb	1	; select bank1
  9407  0C17  083D               	movf	cmd_task@do0p1^(0+128),w
  9408  0C18  0022               	movlb	2	; select bank2
  9409  0C19  008E               	movwf	14	;volatile
  9410                           
  9411                           ;main.c: 319: if (PORTC & input_mask) data = data | 0x20;
  9412  0C1A  0020               	movlb	0	; select bank0
  9413  0C1B  080E               	movf	14,w	;volatile
  9414  0C1C  0021               	movlb	1	; select bank1
  9415  0C1D  053F               	andwf	cmd_task@input_mask^(0+128),w
  9416  0C1E  1903               	btfsc	3,2
  9417  0C1F  2C22               	goto	l9131
  9418  0C20  0022               	movlb	2	; select bank2
  9419  0C21  16C5               	bsf	cmd_task@data^(0+256),5
  9420  0C22                     l9131:	
  9421                           
  9422                           ;main.c: 321: LATC = do0p0;
  9423  0C22  0021               	movlb	1	; select bank1
  9424  0C23  083E               	movf	cmd_task@do0p0^(0+128),w
  9425  0C24  0022               	movlb	2	; select bank2
  9426  0C25  008E               	movwf	14	;volatile
  9427                           
  9428                           ;main.c: 322: LATC = do0p1;
  9429  0C26  0021               	movlb	1	; select bank1
  9430  0C27  083D               	movf	cmd_task@do0p1^(0+128),w
  9431  0C28  0022               	movlb	2	; select bank2
  9432  0C29  008E               	movwf	14	;volatile
  9433                           
  9434                           ;main.c: 323: if (PORTC & input_mask) data = data | 0x40;
  9435  0C2A  0020               	movlb	0	; select bank0
  9436  0C2B  080E               	movf	14,w	;volatile
  9437  0C2C  0021               	movlb	1	; select bank1
  9438  0C2D  053F               	andwf	cmd_task@input_mask^(0+128),w
  9439  0C2E  1903               	btfsc	3,2
  9440  0C2F  2C32               	goto	l9137
  9441  0C30  0022               	movlb	2	; select bank2
  9442  0C31  1745               	bsf	cmd_task@data^(0+256),6
  9443  0C32                     l9137:	
  9444                           
  9445                           ;main.c: 325: LATC = do0p0;
  9446  0C32  0021               	movlb	1	; select bank1
  9447  0C33  083E               	movf	cmd_task@do0p0^(0+128),w
  9448  0C34  0022               	movlb	2	; select bank2
  9449  0C35  008E               	movwf	14	;volatile
  9450                           
  9451                           ;main.c: 326: LATC = do0p1;
  9452  0C36  0021               	movlb	1	; select bank1
  9453  0C37  083D               	movf	cmd_task@do0p1^(0+128),w
  9454  0C38  0022               	movlb	2	; select bank2
  9455  0C39  008E               	movwf	14	;volatile
  9456                           
  9457                           ;main.c: 327: if (PORTC & input_mask) data = data | 0x80;
  9458  0C3A  0020               	movlb	0	; select bank0
  9459  0C3B  080E               	movf	14,w	;volatile
  9460  0C3C  0021               	movlb	1	; select bank1
  9461  0C3D  053F               	andwf	cmd_task@input_mask^(0+128),w
  9462  0C3E  1903               	btfsc	3,2
  9463  0C3F  2C42               	goto	l9143
  9464  0C40  0022               	movlb	2	; select bank2
  9465  0C41  17C5               	bsf	cmd_task@data^(0+256),7
  9466  0C42                     l9143:	
  9467  0C42  0021               	movlb	1	; select bank1
  9468  0C43  085E               	movf	cmd_task@pt^(0+128),w
  9469  0C44  0086               	movwf	6
  9470  0C45  3001               	movlw	1	; select bank2/3
  9471  0C46  0087               	movwf	7
  9472  0C47  3049               	movlw	73
  9473  0C48  3FC0               	movwi [0]fsr1
  9474  0C49  3001               	movlw	1
  9475  0C4A  3FC1               	movwi [1]fsr1
  9476  0C4B                     l9145:	
  9477  0C4B  0845               	movf	_cdc_trf_state^(0+128),w
  9478  0C4C  1D03               	btfss	3,2
  9479  0C4D  0008               	return
  9480  0C4E  3040               	movlw	64
  9481  0C4F  0242               	subwf	_usb_tx_ptr^(0+128),w
  9482  0C50  1803               	btfsc	3,0
  9483  0C51  0008               	return
  9484  0C52  0842               	movf	_usb_tx_ptr^(0+128),w
  9485  0C53  3E20               	addlw	(low (_usb_tx_buf| (0+768)))& (0+255)
  9486  0C54  0086               	movwf	6
  9487  0C55  3003               	movlw	3	; select bank6/7
  9488  0C56  0087               	movwf	7
  9489  0C57  0022               	movlb	2	; select bank2
  9490  0C58  0845               	movf	cmd_task@data^(0+256),w
  9491  0C59  0081               	movwf	1
  9492  0C5A  0021               	movlb	1	; select bank1
  9493  0C5B  0AC2               	incf	_usb_tx_ptr^(0+128),f
  9494  0C5C  0ABA               	incf	cmd_task@i^(0+128),f
  9495  0C5D  2BBA               	goto	l9155
  9496  0C5E                     l9157:	
  9497                           
  9498                           ;main.c: 330: }
  9499                           ;main.c: 332: data = 0;
  9500  0C5E  0022               	movlb	2	; select bank2
  9501  0C5F  01C5               	clrf	cmd_task@data^(0+256)
  9502                           
  9503                           ;main.c: 333: uint8_t bit_to_set = 1;
  9504  0C60  0021               	movlb	1	; select bank1
  9505  0C61  01D9               	clrf	cmd_task@bit_to_set_901^(0+128)
  9506  0C62  0AD9               	incf	cmd_task@bit_to_set_901^(0+128),f
  9507                           
  9508                           ;main.c: 335: for (i = 0; i < num_bits - 1; i += 1) {
  9509  0C63  01BA               	clrf	cmd_task@i^(0+128)
  9510  0C64                     l386:	
  9511  0C64  0022               	movlb	2	; select bank2
  9512  0C65  084D               	movf	cmd_task@num_bits^(0+256),w
  9513  0C66  3EFF               	addlw	255
  9514  0C67  0021               	movlb	1	; select bank1
  9515  0C68  00D1               	movwf	??_cmd_task^(0+128)
  9516  0C69  30FF               	movlw	255
  9517  0C6A  1803               	skipnc
  9518  0C6B  3000               	movlw	0
  9519  0C6C  00D2               	movwf	(??_cmd_task^(0+128)+1)
  9520  0C6D  0852               	movf	(??_cmd_task+1)^(0+128),w
  9521  0C6E  3A80               	xorlw	128
  9522  0C6F  3C80               	sublw	128
  9523  0C70  1D03               	skipz
  9524  0C71  2C74               	goto	u8865
  9525  0C72  0851               	movf	??_cmd_task^(0+128),w
  9526  0C73  023A               	subwf	cmd_task@i^(0+128),w
  9527  0C74                     u8865:	
  9528  0C74  1803               	btfsc	3,0
  9529  0C75  2C8B               	goto	l9171
  9530                           
  9531                           ;main.c: 336: LATC = do0p0;
  9532  0C76  0021               	movlb	1	; select bank1
  9533  0C77  083E               	movf	cmd_task@do0p0^(0+128),w
  9534  0C78  0022               	movlb	2	; select bank2
  9535  0C79  008E               	movwf	14	;volatile
  9536                           
  9537                           ;main.c: 337: LATC = do0p1;
  9538  0C7A  0021               	movlb	1	; select bank1
  9539  0C7B  083D               	movf	cmd_task@do0p1^(0+128),w
  9540  0C7C  0022               	movlb	2	; select bank2
  9541  0C7D  008E               	movwf	14	;volatile
  9542                           
  9543                           ;main.c: 338: if (PORTC & input_mask) data = data | bit_to_set;
  9544  0C7E  0020               	movlb	0	; select bank0
  9545  0C7F  080E               	movf	14,w	;volatile
  9546  0C80  0021               	movlb	1	; select bank1
  9547  0C81  053F               	andwf	cmd_task@input_mask^(0+128),w
  9548  0C82  1903               	btfsc	3,2
  9549  0C83  2C87               	goto	l9167
  9550  0C84  0859               	movf	cmd_task@bit_to_set_901^(0+128),w
  9551  0C85  0022               	movlb	2	; select bank2
  9552  0C86  04C5               	iorwf	cmd_task@data^(0+256),f
  9553  0C87                     l9167:	
  9554                           
  9555                           ;main.c: 340: bit_to_set = bit_to_set << 1;
  9556  0C87  0021               	movlb	1	; select bank1
  9557  0C88  35D9               	lslf	cmd_task@bit_to_set_901^(0+128),f
  9558  0C89  0ABA               	incf	cmd_task@i^(0+128),f
  9559  0C8A  2C64               	goto	l386
  9560  0C8B                     l9171:	
  9561                           
  9562                           ;main.c: 341: }
  9563                           ;main.c: 343: uint8_t last_phase_overlay = sie_configs[sie].last_phase_overlay;
  9564  0C8B  0021               	movlb	1	; select bank1
  9565  0C8C  0840               	movf	cmd_task@sie^(0+128),w
  9566  0C8D  0709               	addwf	9,w
  9567  0C8E  0709               	addwf	9,w
  9568  0C8F  0709               	addwf	9,w
  9569  0C90  3E26               	addlw	(low ((_sie_configs| (0+512)+6)))& (0+255)
  9570  0C91  0086               	movwf	6
  9571  0C92  3002               	movlw	2	; select bank4/5
  9572  0C93  0087               	movwf	7
  9573  0C94  0801               	movf	1,w
  9574  0C95  00D6               	movwf	cmd_task@last_phase_overlay_902^(0+128)
  9575                           
  9576                           ;main.c: 345: LATC = do0p0 | last_phase_overlay;
  9577  0C96  043E               	iorwf	cmd_task@do0p0^(0+128),w
  9578  0C97  0022               	movlb	2	; select bank2
  9579  0C98  008E               	movwf	14	;volatile
  9580                           
  9581                           ;main.c: 346: LATC = do0p1 | last_phase_overlay;
  9582  0C99  0021               	movlb	1	; select bank1
  9583  0C9A  083D               	movf	cmd_task@do0p1^(0+128),w
  9584  0C9B  0456               	iorwf	cmd_task@last_phase_overlay_902^(0+128),w
  9585  0C9C  0022               	movlb	2	; select bank2
  9586  0C9D  008E               	movwf	14	;volatile
  9587                           
  9588                           ;main.c: 347: if (PORTC & input_mask) data = data | bit_to_set;
  9589  0C9E  0020               	movlb	0	; select bank0
  9590  0C9F  080E               	movf	14,w	;volatile
  9591  0CA0  0021               	movlb	1	; select bank1
  9592  0CA1  053F               	andwf	cmd_task@input_mask^(0+128),w
  9593  0CA2  1903               	btfsc	3,2
  9594  0CA3  2CA7               	goto	l9181
  9595  0CA4  0859               	movf	cmd_task@bit_to_set_901^(0+128),w
  9596  0CA5  0022               	movlb	2	; select bank2
  9597  0CA6  04C5               	iorwf	cmd_task@data^(0+256),f
  9598  0CA7                     l9181:	
  9599  0CA7  0021               	movlb	1	; select bank1
  9600  0CA8  085E               	movf	cmd_task@pt^(0+128),w
  9601  0CA9  0086               	movwf	6
  9602  0CAA  3001               	movlw	1	; select bank2/3
  9603  0CAB  0087               	movwf	7
  9604  0CAC  305D               	movlw	93
  9605  0CAD  3FC0               	movwi [0]fsr1
  9606  0CAE  3001               	movlw	1
  9607  0CAF  3FC1               	movwi [1]fsr1
  9608  0CB0                     l9183:	
  9609  0CB0  0845               	movf	_cdc_trf_state^(0+128),w
  9610  0CB1  1D03               	btfss	3,2
  9611  0CB2  0008               	return
  9612  0CB3  3040               	movlw	64
  9613  0CB4  0242               	subwf	_usb_tx_ptr^(0+128),w
  9614  0CB5  1803               	btfsc	3,0
  9615  0CB6  0008               	return
  9616  0CB7  0842               	movf	_usb_tx_ptr^(0+128),w
  9617  0CB8  3E20               	addlw	(low (_usb_tx_buf| (0+768)))& (0+255)
  9618  0CB9  0086               	movwf	6
  9619  0CBA  3003               	movlw	3	; select bank6/7
  9620  0CBB  0087               	movwf	7
  9621  0CBC  0022               	movlb	2	; select bank2
  9622  0CBD  0845               	movf	cmd_task@data^(0+256),w
  9623  0CBE  29CB               	goto	L13
  9624  0CBF                     l9191:	
  9625  0CBF  0B4B               	decfsz	cmd_task@inout_cfg^(0+256),w
  9626  0CC0  2DC5               	goto	l9289
  9627                           
  9628                           ;main.c: 352: do1p0 = sie_configs[sie].do1p0;
  9629  0CC1  0021               	movlb	1	; select bank1
  9630  0CC2  0840               	movf	cmd_task@sie^(0+128),w
  9631  0CC3  0709               	addwf	9,w
  9632  0CC4  0709               	addwf	9,w
  9633  0CC5  0709               	addwf	9,w
  9634  0CC6  3E24               	addlw	(low ((_sie_configs| (0+512)+4)))& (0+255)
  9635  0CC7  0086               	movwf	6
  9636  0CC8  3002               	movlw	2	; select bank4/5
  9637  0CC9  0087               	movwf	7
  9638  0CCA  0801               	movf	1,w
  9639  0CCB  00BC               	movwf	cmd_task@do1p0^(0+128)
  9640                           
  9641                           ;main.c: 353: do1p1 = sie_configs[sie].do1p1;
  9642  0CCC  0840               	movf	cmd_task@sie^(0+128),w
  9643  0CCD  0709               	addwf	9,w
  9644  0CCE  0709               	addwf	9,w
  9645  0CCF  0709               	addwf	9,w
  9646  0CD0  3E25               	addlw	(low ((_sie_configs| (0+512)+5)))& (0+255)
  9647  0CD1  0086               	movwf	6
  9648  0CD2  0801               	movf	1,w
  9649  0CD3  00BB               	movwf	cmd_task@do1p1^(0+128)
  9650                           
  9651                           ;main.c: 355: for (i = 0; i < num_bytes; i += 1) {
  9652  0CD4  01BA               	clrf	cmd_task@i^(0+128)
  9653  0CD5                     l9257:	
  9654  0CD5  0022               	movlb	2	; select bank2
  9655  0CD6  084C               	movf	cmd_task@num_bytes^(0+256),w
  9656  0CD7  0021               	movlb	1	; select bank1
  9657  0CD8  023A               	subwf	cmd_task@i^(0+128),w
  9658  0CD9  085E               	movf	cmd_task@pt^(0+128),w
  9659  0CDA  0086               	movwf	6
  9660  0CDB  3001               	movlw	1	; select bank2/3
  9661  0CDC  0087               	movwf	7
  9662  0CDD  1803               	btfsc	3,0
  9663  0CDE  2D71               	goto	L26
  9664  0CDF  3064               	movlw	100
  9665  0CE0  3FC0               	movwi [0]fsr1
  9666  0CE1  3001               	movlw	1
  9667  0CE2  3FC1               	movwi [1]fsr1
  9668  0CE3                     l9199:	
  9669  0CE3  0867               	movf	_usb_rx_bytes_avail^(0+128),w
  9670  0CE4  0243               	subwf	_usb_rx_ptr^(0+128),w
  9671  0CE5  1803               	btfsc	3,0
  9672  0CE6  0008               	return
  9673  0CE7  0843               	movf	_usb_rx_ptr^(0+128),w
  9674  0CE8  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
  9675  0CE9  0086               	movwf	6
  9676  0CEA  3001               	movlw	1	; select bank3/4
  9677  0CEB  0087               	movwf	7
  9678  0CEC  0801               	movf	1,w
  9679  0CED  00DD               	movwf	cmd_task@data_903^(0+128)
  9680  0CEE  0AC3               	incf	_usb_rx_ptr^(0+128),f
  9681                           
  9682                           ;main.c: 358: if (data & 0x01) {
  9683  0CEF  1C5D               	btfss	cmd_task@data_903^(0+128),0
  9684  0CF0  2CF7               	goto	l9211
  9685                           
  9686                           ;main.c: 359: LATC = do1p0;
  9687  0CF1  083C               	movf	cmd_task@do1p0^(0+128),w
  9688  0CF2  0022               	movlb	2	; select bank2
  9689  0CF3  008E               	movwf	14	;volatile
  9690                           
  9691                           ;main.c: 360: LATC = do1p1;
  9692  0CF4  0021               	movlb	1	; select bank1
  9693  0CF5  083B               	movf	cmd_task@do1p1^(0+128),w
  9694  0CF6  2CFC               	goto	L14
  9695  0CF7                     l9211:	
  9696                           ;main.c: 361: } else {
  9697                           
  9698                           
  9699                           ;main.c: 362: LATC = do0p0;
  9700  0CF7  083E               	movf	cmd_task@do0p0^(0+128),w
  9701  0CF8  0022               	movlb	2	; select bank2
  9702  0CF9  008E               	movwf	14	;volatile
  9703                           
  9704                           ;main.c: 363: LATC = do0p1;
  9705  0CFA  0021               	movlb	1	; select bank1
  9706  0CFB  083D               	movf	cmd_task@do0p1^(0+128),w
  9707  0CFC                     L14:	
  9708  0CFC  0022               	movlb	2	; select bank2
  9709  0CFD  008E               	movwf	14	;volatile
  9710                           
  9711                           ;main.c: 364: }
  9712                           ;main.c: 366: if (data & 0x02) {
  9713  0CFE  0021               	movlb	1	; select bank1
  9714  0CFF  1CDD               	btfss	cmd_task@data_903^(0+128),1
  9715  0D00  2D07               	goto	l9217
  9716                           
  9717                           ;main.c: 367: LATC = do1p0;
  9718  0D01  083C               	movf	cmd_task@do1p0^(0+128),w
  9719  0D02  0022               	movlb	2	; select bank2
  9720  0D03  008E               	movwf	14	;volatile
  9721                           
  9722                           ;main.c: 368: LATC = do1p1;
  9723  0D04  0021               	movlb	1	; select bank1
  9724  0D05  083B               	movf	cmd_task@do1p1^(0+128),w
  9725  0D06  2D0C               	goto	L15
  9726  0D07                     l9217:	
  9727                           ;main.c: 369: } else {
  9728                           
  9729                           
  9730                           ;main.c: 370: LATC = do0p0;
  9731  0D07  083E               	movf	cmd_task@do0p0^(0+128),w
  9732  0D08  0022               	movlb	2	; select bank2
  9733  0D09  008E               	movwf	14	;volatile
  9734                           
  9735                           ;main.c: 371: LATC = do0p1;
  9736  0D0A  0021               	movlb	1	; select bank1
  9737  0D0B  083D               	movf	cmd_task@do0p1^(0+128),w
  9738  0D0C                     L15:	
  9739  0D0C  0022               	movlb	2	; select bank2
  9740  0D0D  008E               	movwf	14	;volatile
  9741                           
  9742                           ;main.c: 372: }
  9743                           ;main.c: 374: if (data & 0x04) {
  9744  0D0E  0021               	movlb	1	; select bank1
  9745  0D0F  1D5D               	btfss	cmd_task@data_903^(0+128),2
  9746  0D10  2D17               	goto	l9223
  9747                           
  9748                           ;main.c: 375: LATC = do1p0;
  9749  0D11  083C               	movf	cmd_task@do1p0^(0+128),w
  9750  0D12  0022               	movlb	2	; select bank2
  9751  0D13  008E               	movwf	14	;volatile
  9752                           
  9753                           ;main.c: 376: LATC = do1p1;
  9754  0D14  0021               	movlb	1	; select bank1
  9755  0D15  083B               	movf	cmd_task@do1p1^(0+128),w
  9756  0D16  2D1C               	goto	L16
  9757  0D17                     l9223:	
  9758                           ;main.c: 377: } else {
  9759                           
  9760                           
  9761                           ;main.c: 378: LATC = do0p0;
  9762  0D17  083E               	movf	cmd_task@do0p0^(0+128),w
  9763  0D18  0022               	movlb	2	; select bank2
  9764  0D19  008E               	movwf	14	;volatile
  9765                           
  9766                           ;main.c: 379: LATC = do0p1;
  9767  0D1A  0021               	movlb	1	; select bank1
  9768  0D1B  083D               	movf	cmd_task@do0p1^(0+128),w
  9769  0D1C                     L16:	
  9770  0D1C  0022               	movlb	2	; select bank2
  9771  0D1D  008E               	movwf	14	;volatile
  9772                           
  9773                           ;main.c: 380: }
  9774                           ;main.c: 382: if (data & 0x08) {
  9775  0D1E  0021               	movlb	1	; select bank1
  9776  0D1F  1DDD               	btfss	cmd_task@data_903^(0+128),3
  9777  0D20  2D27               	goto	l9229
  9778                           
  9779                           ;main.c: 383: LATC = do1p0;
  9780  0D21  083C               	movf	cmd_task@do1p0^(0+128),w
  9781  0D22  0022               	movlb	2	; select bank2
  9782  0D23  008E               	movwf	14	;volatile
  9783                           
  9784                           ;main.c: 384: LATC = do1p1;
  9785  0D24  0021               	movlb	1	; select bank1
  9786  0D25  083B               	movf	cmd_task@do1p1^(0+128),w
  9787  0D26  2D2C               	goto	L17
  9788  0D27                     l9229:	
  9789                           ;main.c: 385: } else {
  9790                           
  9791                           
  9792                           ;main.c: 386: LATC = do0p0;
  9793  0D27  083E               	movf	cmd_task@do0p0^(0+128),w
  9794  0D28  0022               	movlb	2	; select bank2
  9795  0D29  008E               	movwf	14	;volatile
  9796                           
  9797                           ;main.c: 387: LATC = do0p1;
  9798  0D2A  0021               	movlb	1	; select bank1
  9799  0D2B  083D               	movf	cmd_task@do0p1^(0+128),w
  9800  0D2C                     L17:	
  9801  0D2C  0022               	movlb	2	; select bank2
  9802  0D2D  008E               	movwf	14	;volatile
  9803                           
  9804                           ;main.c: 388: }
  9805                           ;main.c: 390: if (data & 0x10) {
  9806  0D2E  0021               	movlb	1	; select bank1
  9807  0D2F  1E5D               	btfss	cmd_task@data_903^(0+128),4
  9808  0D30  2D37               	goto	l9235
  9809                           
  9810                           ;main.c: 391: LATC = do1p0;
  9811  0D31  083C               	movf	cmd_task@do1p0^(0+128),w
  9812  0D32  0022               	movlb	2	; select bank2
  9813  0D33  008E               	movwf	14	;volatile
  9814                           
  9815                           ;main.c: 392: LATC = do1p1;
  9816  0D34  0021               	movlb	1	; select bank1
  9817  0D35  083B               	movf	cmd_task@do1p1^(0+128),w
  9818  0D36  2D3C               	goto	L18
  9819  0D37                     l9235:	
  9820                           ;main.c: 393: } else {
  9821                           
  9822                           
  9823                           ;main.c: 394: LATC = do0p0;
  9824  0D37  083E               	movf	cmd_task@do0p0^(0+128),w
  9825  0D38  0022               	movlb	2	; select bank2
  9826  0D39  008E               	movwf	14	;volatile
  9827                           
  9828                           ;main.c: 395: LATC = do0p1;
  9829  0D3A  0021               	movlb	1	; select bank1
  9830  0D3B  083D               	movf	cmd_task@do0p1^(0+128),w
  9831  0D3C                     L18:	
  9832  0D3C  0022               	movlb	2	; select bank2
  9833  0D3D  008E               	movwf	14	;volatile
  9834                           
  9835                           ;main.c: 396: }
  9836                           ;main.c: 398: if (data & 0x20) {
  9837  0D3E  0021               	movlb	1	; select bank1
  9838  0D3F  1EDD               	btfss	cmd_task@data_903^(0+128),5
  9839  0D40  2D47               	goto	l9241
  9840                           
  9841                           ;main.c: 399: LATC = do1p0;
  9842  0D41  083C               	movf	cmd_task@do1p0^(0+128),w
  9843  0D42  0022               	movlb	2	; select bank2
  9844  0D43  008E               	movwf	14	;volatile
  9845                           
  9846                           ;main.c: 400: LATC = do1p1;
  9847  0D44  0021               	movlb	1	; select bank1
  9848  0D45  083B               	movf	cmd_task@do1p1^(0+128),w
  9849  0D46  2D4C               	goto	L19
  9850  0D47                     l9241:	
  9851                           ;main.c: 401: } else {
  9852                           
  9853                           
  9854                           ;main.c: 402: LATC = do0p0;
  9855  0D47  083E               	movf	cmd_task@do0p0^(0+128),w
  9856  0D48  0022               	movlb	2	; select bank2
  9857  0D49  008E               	movwf	14	;volatile
  9858                           
  9859                           ;main.c: 403: LATC = do0p1;
  9860  0D4A  0021               	movlb	1	; select bank1
  9861  0D4B  083D               	movf	cmd_task@do0p1^(0+128),w
  9862  0D4C                     L19:	
  9863  0D4C  0022               	movlb	2	; select bank2
  9864  0D4D  008E               	movwf	14	;volatile
  9865                           
  9866                           ;main.c: 404: }
  9867                           ;main.c: 406: if (data & 0x40) {
  9868  0D4E  0021               	movlb	1	; select bank1
  9869  0D4F  1F5D               	btfss	cmd_task@data_903^(0+128),6
  9870  0D50  2D57               	goto	l9247
  9871                           
  9872                           ;main.c: 407: LATC = do1p0;
  9873  0D51  083C               	movf	cmd_task@do1p0^(0+128),w
  9874  0D52  0022               	movlb	2	; select bank2
  9875  0D53  008E               	movwf	14	;volatile
  9876                           
  9877                           ;main.c: 408: LATC = do1p1;
  9878  0D54  0021               	movlb	1	; select bank1
  9879  0D55  083B               	movf	cmd_task@do1p1^(0+128),w
  9880  0D56  2D5C               	goto	L20
  9881  0D57                     l9247:	
  9882                           ;main.c: 409: } else {
  9883                           
  9884                           
  9885                           ;main.c: 410: LATC = do0p0;
  9886  0D57  083E               	movf	cmd_task@do0p0^(0+128),w
  9887  0D58  0022               	movlb	2	; select bank2
  9888  0D59  008E               	movwf	14	;volatile
  9889                           
  9890                           ;main.c: 411: LATC = do0p1;
  9891  0D5A  0021               	movlb	1	; select bank1
  9892  0D5B  083D               	movf	cmd_task@do0p1^(0+128),w
  9893  0D5C                     L20:	
  9894  0D5C  0022               	movlb	2	; select bank2
  9895  0D5D  008E               	movwf	14	;volatile
  9896                           
  9897                           ;main.c: 412: }
  9898                           ;main.c: 414: if (data & 0x80) {
  9899  0D5E  0021               	movlb	1	; select bank1
  9900  0D5F  1FDD               	btfss	cmd_task@data_903^(0+128),7
  9901  0D60  2D67               	goto	l9253
  9902                           
  9903                           ;main.c: 415: LATC = do1p0;
  9904  0D61  083C               	movf	cmd_task@do1p0^(0+128),w
  9905  0D62  0022               	movlb	2	; select bank2
  9906  0D63  008E               	movwf	14	;volatile
  9907                           
  9908                           ;main.c: 416: LATC = do1p1;
  9909  0D64  0021               	movlb	1	; select bank1
  9910  0D65  083B               	movf	cmd_task@do1p1^(0+128),w
  9911  0D66  2D6C               	goto	L21
  9912  0D67                     l9253:	
  9913                           ;main.c: 417: } else {
  9914                           
  9915                           
  9916                           ;main.c: 418: LATC = do0p0;
  9917  0D67  083E               	movf	cmd_task@do0p0^(0+128),w
  9918  0D68  0022               	movlb	2	; select bank2
  9919  0D69  008E               	movwf	14	;volatile
  9920                           
  9921                           ;main.c: 419: LATC = do0p1;
  9922  0D6A  0021               	movlb	1	; select bank1
  9923  0D6B  083D               	movf	cmd_task@do0p1^(0+128),w
  9924  0D6C                     L21:	
  9925  0D6C  0022               	movlb	2	; select bank2
  9926  0D6D  008E               	movwf	14	;volatile
  9927  0D6E  0021               	movlb	1	; select bank1
  9928  0D6F  0ABA               	incf	cmd_task@i^(0+128),f
  9929  0D70  2CD5               	goto	l9257
  9930  0D71                     L26:	
  9931  0D71  30A7               	movlw	167
  9932  0D72  3FC0               	movwi [0]fsr1
  9933  0D73  3001               	movlw	1
  9934  0D74  3FC1               	movwi [1]fsr1
  9935  0D75                     l9261:	
  9936  0D75  0867               	movf	_usb_rx_bytes_avail^(0+128),w
  9937  0D76  0243               	subwf	_usb_rx_ptr^(0+128),w
  9938  0D77  1803               	btfsc	3,0
  9939  0D78  0008               	return
  9940  0D79  0843               	movf	_usb_rx_ptr^(0+128),w
  9941  0D7A  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
  9942  0D7B  0086               	movwf	6
  9943  0D7C  3001               	movlw	1	; select bank3/4
  9944  0D7D  0087               	movwf	7
  9945  0D7E  0801               	movf	1,w
  9946  0D7F  00DA               	movwf	cmd_task@data_904^(0+128)
  9947  0D80  0AC3               	incf	_usb_rx_ptr^(0+128),f
  9948                           
  9949                           ;main.c: 425: for (i = 0; i < num_bits - 1; i += 1) {
  9950  0D81  01BA               	clrf	cmd_task@i^(0+128)
  9951  0D82                     l9279:	
  9952  0D82  0022               	movlb	2	; select bank2
  9953  0D83  084D               	movf	cmd_task@num_bits^(0+256),w
  9954  0D84  3EFF               	addlw	255
  9955  0D85  0021               	movlb	1	; select bank1
  9956  0D86  00D1               	movwf	??_cmd_task^(0+128)
  9957  0D87  30FF               	movlw	255
  9958  0D88  1803               	skipnc
  9959  0D89  3000               	movlw	0
  9960  0D8A  00D2               	movwf	(??_cmd_task^(0+128)+1)
  9961  0D8B  0852               	movf	(??_cmd_task+1)^(0+128),w
  9962  0D8C  3A80               	xorlw	128
  9963  0D8D  3C80               	sublw	128
  9964  0D8E  1D03               	skipz
  9965  0D8F  2D92               	goto	u9035
  9966  0D90  0851               	movf	??_cmd_task^(0+128),w
  9967  0D91  023A               	subwf	cmd_task@i^(0+128),w
  9968  0D92                     u9035:	
  9969  0D92  1803               	btfsc	3,0
  9970  0D93  2DA8               	goto	l9281
  9971                           
  9972                           ;main.c: 426: if (data & 1) {
  9973  0D94  0021               	movlb	1	; select bank1
  9974  0D95  1C5A               	btfss	cmd_task@data_904^(0+128),0
  9975  0D96  2D9D               	goto	l9273
  9976                           
  9977                           ;main.c: 427: LATC = do1p0;
  9978  0D97  083C               	movf	cmd_task@do1p0^(0+128),w
  9979  0D98  0022               	movlb	2	; select bank2
  9980  0D99  008E               	movwf	14	;volatile
  9981                           
  9982                           ;main.c: 428: LATC = do1p1;
  9983  0D9A  0021               	movlb	1	; select bank1
  9984  0D9B  083B               	movf	cmd_task@do1p1^(0+128),w
  9985  0D9C  2DA2               	goto	L22
  9986  0D9D                     l9273:	
  9987                           ;main.c: 429: } else {
  9988                           
  9989                           
  9990                           ;main.c: 430: LATC = do0p0;
  9991  0D9D  083E               	movf	cmd_task@do0p0^(0+128),w
  9992  0D9E  0022               	movlb	2	; select bank2
  9993  0D9F  008E               	movwf	14	;volatile
  9994                           
  9995                           ;main.c: 431: LATC = do0p1;
  9996  0DA0  0021               	movlb	1	; select bank1
  9997  0DA1  083D               	movf	cmd_task@do0p1^(0+128),w
  9998  0DA2                     L22:	
  9999  0DA2  0022               	movlb	2	; select bank2
 10000  0DA3  008E               	movwf	14	;volatile
 10001                           
 10002                           ;main.c: 432: }
 10003                           ;main.c: 434: data = data >> 1;
 10004  0DA4  0021               	movlb	1	; select bank1
 10005  0DA5  36DA               	lsrf	cmd_task@data_904^(0+128),f
 10006  0DA6  0ABA               	incf	cmd_task@i^(0+128),f
 10007  0DA7  2D82               	goto	l9279
 10008  0DA8                     l9281:	
 10009                           
 10010                           ;main.c: 435: }
 10011                           ;main.c: 437: uint8_t last_phase_overlay = sie_configs[sie].last_phase_overlay;
 10012  0DA8  0021               	movlb	1	; select bank1
 10013  0DA9  0840               	movf	cmd_task@sie^(0+128),w
 10014  0DAA  0709               	addwf	9,w
 10015  0DAB  0709               	addwf	9,w
 10016  0DAC  0709               	addwf	9,w
 10017  0DAD  3E26               	addlw	(low ((_sie_configs| (0+512)+6)))& (0+255)
 10018  0DAE  0086               	movwf	6
 10019  0DAF  3002               	movlw	2	; select bank4/5
 10020  0DB0  0087               	movwf	7
 10021  0DB1  0801               	movf	1,w
 10022  0DB2  00DC               	movwf	cmd_task@last_phase_overlay_905^(0+128)
 10023                           
 10024                           ;main.c: 439: if (data & 1) {
 10025  0DB3  1C5A               	btfss	cmd_task@data_904^(0+128),0
 10026  0DB4  2DBC               	goto	l9287
 10027                           
 10028                           ;main.c: 440: LATC = do1p0 | last_phase_overlay;
 10029  0DB5  083C               	movf	cmd_task@do1p0^(0+128),w
 10030  0DB6  045C               	iorwf	cmd_task@last_phase_overlay_905^(0+128),w
 10031  0DB7  0022               	movlb	2	; select bank2
 10032  0DB8  008E               	movwf	14	;volatile
 10033                           
 10034                           ;main.c: 441: LATC = do1p1 | last_phase_overlay;
 10035  0DB9  0021               	movlb	1	; select bank1
 10036  0DBA  083B               	movf	cmd_task@do1p1^(0+128),w
 10037  0DBB  2DC2               	goto	L25
 10038  0DBC                     l9287:	
 10039                           ;main.c: 442: } else {
 10040                           
 10041                           
 10042                           ;main.c: 443: LATC = do0p0 | last_phase_overlay;
 10043  0DBC  083E               	movf	cmd_task@do0p0^(0+128),w
 10044  0DBD  045C               	iorwf	cmd_task@last_phase_overlay_905^(0+128),w
 10045  0DBE  0022               	movlb	2	; select bank2
 10046  0DBF  008E               	movwf	14	;volatile
 10047                           
 10048                           ;main.c: 444: LATC = do0p1 | last_phase_overlay;
 10049  0DC0  0021               	movlb	1	; select bank1
 10050  0DC1  083D               	movf	cmd_task@do0p1^(0+128),w
 10051  0DC2                     L25:	
 10052  0DC2  045C               	iorwf	cmd_task@last_phase_overlay_905^(0+128),w
 10053  0DC3                     L23:	
 10054  0DC3  0022               	movlb	2	; select bank2
 10055  0DC4  2F9C               	goto	L24
 10056  0DC5                     l9289:	
 10057  0DC5  084B               	movf	cmd_task@inout_cfg^(0+256),w
 10058  0DC6  1D03               	btfss	3,2
 10059  0DC7  2978               	goto	l8843
 10060                           
 10061                           ;main.c: 448: for (i = 0; i < num_bytes; i += 1) {
 10062  0DC8  0021               	movlb	1	; select bank1
 10063  0DC9  01BA               	clrf	cmd_task@i^(0+128)
 10064  0DCA                     l9297:	
 10065  0DCA  0022               	movlb	2	; select bank2
 10066  0DCB  084C               	movf	cmd_task@num_bytes^(0+256),w
 10067  0DCC  0021               	movlb	1	; select bank1
 10068  0DCD  023A               	subwf	cmd_task@i^(0+128),w
 10069  0DCE  1803               	btfsc	3,0
 10070  0DCF  2E12               	goto	l9299
 10071                           
 10072                           ;main.c: 449: LATC = do0p0;
 10073  0DD0  083E               	movf	cmd_task@do0p0^(0+128),w
 10074  0DD1  0022               	movlb	2	; select bank2
 10075  0DD2  008E               	movwf	14	;volatile
 10076                           
 10077                           ;main.c: 450: LATC = do0p1;
 10078  0DD3  0021               	movlb	1	; select bank1
 10079  0DD4  083D               	movf	cmd_task@do0p1^(0+128),w
 10080  0DD5  0022               	movlb	2	; select bank2
 10081  0DD6  008E               	movwf	14	;volatile
 10082                           
 10083                           ;main.c: 451: LATC = do0p0;
 10084  0DD7  0021               	movlb	1	; select bank1
 10085  0DD8  083E               	movf	cmd_task@do0p0^(0+128),w
 10086  0DD9  0022               	movlb	2	; select bank2
 10087  0DDA  008E               	movwf	14	;volatile
 10088                           
 10089                           ;main.c: 452: LATC = do0p1;
 10090  0DDB  0021               	movlb	1	; select bank1
 10091  0DDC  083D               	movf	cmd_task@do0p1^(0+128),w
 10092  0DDD  0022               	movlb	2	; select bank2
 10093  0DDE  008E               	movwf	14	;volatile
 10094                           
 10095                           ;main.c: 453: LATC = do0p0;
 10096  0DDF  0021               	movlb	1	; select bank1
 10097  0DE0  083E               	movf	cmd_task@do0p0^(0+128),w
 10098  0DE1  0022               	movlb	2	; select bank2
 10099  0DE2  008E               	movwf	14	;volatile
 10100                           
 10101                           ;main.c: 454: LATC = do0p1;
 10102  0DE3  0021               	movlb	1	; select bank1
 10103  0DE4  083D               	movf	cmd_task@do0p1^(0+128),w
 10104  0DE5  0022               	movlb	2	; select bank2
 10105  0DE6  008E               	movwf	14	;volatile
 10106                           
 10107                           ;main.c: 455: LATC = do0p0;
 10108  0DE7  0021               	movlb	1	; select bank1
 10109  0DE8  083E               	movf	cmd_task@do0p0^(0+128),w
 10110  0DE9  0022               	movlb	2	; select bank2
 10111  0DEA  008E               	movwf	14	;volatile
 10112                           
 10113                           ;main.c: 456: LATC = do0p1;
 10114  0DEB  0021               	movlb	1	; select bank1
 10115  0DEC  083D               	movf	cmd_task@do0p1^(0+128),w
 10116  0DED  0022               	movlb	2	; select bank2
 10117  0DEE  008E               	movwf	14	;volatile
 10118                           
 10119                           ;main.c: 457: LATC = do0p0;
 10120  0DEF  0021               	movlb	1	; select bank1
 10121  0DF0  083E               	movf	cmd_task@do0p0^(0+128),w
 10122  0DF1  0022               	movlb	2	; select bank2
 10123  0DF2  008E               	movwf	14	;volatile
 10124                           
 10125                           ;main.c: 458: LATC = do0p1;
 10126  0DF3  0021               	movlb	1	; select bank1
 10127  0DF4  083D               	movf	cmd_task@do0p1^(0+128),w
 10128  0DF5  0022               	movlb	2	; select bank2
 10129  0DF6  008E               	movwf	14	;volatile
 10130                           
 10131                           ;main.c: 459: LATC = do0p0;
 10132  0DF7  0021               	movlb	1	; select bank1
 10133  0DF8  083E               	movf	cmd_task@do0p0^(0+128),w
 10134  0DF9  0022               	movlb	2	; select bank2
 10135  0DFA  008E               	movwf	14	;volatile
 10136                           
 10137                           ;main.c: 460: LATC = do0p1;
 10138  0DFB  0021               	movlb	1	; select bank1
 10139  0DFC  083D               	movf	cmd_task@do0p1^(0+128),w
 10140  0DFD  0022               	movlb	2	; select bank2
 10141  0DFE  008E               	movwf	14	;volatile
 10142                           
 10143                           ;main.c: 461: LATC = do0p0;
 10144  0DFF  0021               	movlb	1	; select bank1
 10145  0E00  083E               	movf	cmd_task@do0p0^(0+128),w
 10146  0E01  0022               	movlb	2	; select bank2
 10147  0E02  008E               	movwf	14	;volatile
 10148                           
 10149                           ;main.c: 462: LATC = do0p1;
 10150  0E03  0021               	movlb	1	; select bank1
 10151  0E04  083D               	movf	cmd_task@do0p1^(0+128),w
 10152  0E05  0022               	movlb	2	; select bank2
 10153  0E06  008E               	movwf	14	;volatile
 10154                           
 10155                           ;main.c: 463: LATC = do0p0;
 10156  0E07  0021               	movlb	1	; select bank1
 10157  0E08  083E               	movf	cmd_task@do0p0^(0+128),w
 10158  0E09  0022               	movlb	2	; select bank2
 10159  0E0A  008E               	movwf	14	;volatile
 10160                           
 10161                           ;main.c: 464: LATC = do0p1;
 10162  0E0B  0021               	movlb	1	; select bank1
 10163  0E0C  083D               	movf	cmd_task@do0p1^(0+128),w
 10164  0E0D  0022               	movlb	2	; select bank2
 10165  0E0E  008E               	movwf	14	;volatile
 10166  0E0F  0021               	movlb	1	; select bank1
 10167  0E10  0ABA               	incf	cmd_task@i^(0+128),f
 10168  0E11  2DCA               	goto	l9297
 10169  0E12                     l9299:	
 10170                           
 10171                           ;main.c: 465: }
 10172                           ;main.c: 467: for (i = 0; i < num_bits; i += 1) {
 10173  0E12  01BA               	clrf	cmd_task@i^(0+128)
 10174  0E13                     l9305:	
 10175  0E13  0022               	movlb	2	; select bank2
 10176  0E14  084D               	movf	cmd_task@num_bits^(0+256),w
 10177  0E15  0021               	movlb	1	; select bank1
 10178  0E16  023A               	subwf	cmd_task@i^(0+128),w
 10179  0E17  1803               	btfsc	3,0
 10180  0E18  2978               	goto	l8843
 10181                           
 10182                           ;main.c: 468: LATC = do0p0;
 10183  0E19  083E               	movf	cmd_task@do0p0^(0+128),w
 10184  0E1A  0022               	movlb	2	; select bank2
 10185  0E1B  008E               	movwf	14	;volatile
 10186                           
 10187                           ;main.c: 469: LATC = do0p1;
 10188  0E1C  0021               	movlb	1	; select bank1
 10189  0E1D  083D               	movf	cmd_task@do0p1^(0+128),w
 10190  0E1E  0022               	movlb	2	; select bank2
 10191  0E1F  008E               	movwf	14	;volatile
 10192  0E20  0021               	movlb	1	; select bank1
 10193  0E21  0ABA               	incf	cmd_task@i^(0+128),f
 10194  0E22  2E13               	goto	l9305
 10195  0E23                     l9307:	
 10196  0E23  3010               	movlw	16
 10197  0E24  0641               	xorwf	cmd_task@cmd^(0+128),w
 10198  0E25  1D03               	btfss	3,2
 10199  0E26  2E5F               	goto	l9335
 10200  0E27  085E               	movf	cmd_task@pt^(0+128),w
 10201  0E28  0086               	movwf	6
 10202  0E29  3001               	movlw	1	; select bank2/3
 10203  0E2A  0087               	movwf	7
 10204  0E2B  30DB               	movlw	219
 10205  0E2C  3FC0               	movwi [0]fsr1
 10206  0E2D  3001               	movlw	1
 10207  0E2E  3FC1               	movwi [1]fsr1
 10208  0E2F                     l9311:	
 10209  0E2F  0867               	movf	_usb_rx_bytes_avail^(0+128),w
 10210  0E30  0243               	subwf	_usb_rx_ptr^(0+128),w
 10211  0E31  1803               	btfsc	3,0
 10212  0E32  0008               	return
 10213  0E33  0843               	movf	_usb_rx_ptr^(0+128),w
 10214  0E34  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
 10215  0E35  0086               	movwf	6
 10216  0E36  3001               	movlw	1	; select bank3/4
 10217  0E37  0087               	movwf	7
 10218  0E38  0801               	movf	1,w
 10219  0E39  00DB               	movwf	cmd_task@tmp^(0+128)
 10220  0E3A  0AC3               	incf	_usb_rx_ptr^(0+128),f
 10221                           
 10222                           ;main.c: 476: loop_count = tmp;
 10223  0E3B  0022               	movlb	2	; select bank2
 10224  0E3C  00B0               	movwf	cmd_task@loop_count^(0+256)
 10225  0E3D  01B1               	clrf	(cmd_task@loop_count+1)^(0+256)
 10226  0E3E  0021               	movlb	1	; select bank1
 10227  0E3F  085E               	movf	cmd_task@pt^(0+128),w
 10228  0E40  0086               	movwf	6
 10229  0E41  30DE               	movlw	222
 10230  0E42  3FC0               	movwi [0]fsr1
 10231  0E43  3001               	movlw	1
 10232  0E44  3FC1               	movwi [1]fsr1
 10233  0E45                     l9323:	
 10234  0E45  0867               	movf	_usb_rx_bytes_avail^(0+128),w
 10235  0E46  0243               	subwf	_usb_rx_ptr^(0+128),w
 10236  0E47  1803               	btfsc	3,0
 10237  0E48  0008               	return
 10238  0E49  0843               	movf	_usb_rx_ptr^(0+128),w
 10239  0E4A  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
 10240  0E4B  0086               	movwf	6
 10241  0E4C  3001               	movlw	1	; select bank3/4
 10242  0E4D  0087               	movwf	7
 10243  0E4E  0801               	movf	1,w
 10244  0E4F  00DB               	movwf	cmd_task@tmp^(0+128)
 10245  0E50  0AC3               	incf	_usb_rx_ptr^(0+128),f
 10246                           
 10247                           ;main.c: 479: loop_count |= ((uint16_t) tmp) << 8;
 10248  0E51  00D1               	movwf	??_cmd_task^(0+128)
 10249  0E52  01D2               	clrf	(??_cmd_task^(0+128)+1)
 10250  0E53  00D2               	movwf	(??_cmd_task^(0+128)+1)
 10251  0E54  01D1               	clrf	??_cmd_task^(0+128)
 10252  0E55  0851               	movf	??_cmd_task^(0+128),w
 10253  0E56  0022               	movlb	2	; select bank2
 10254  0E57  04B0               	iorwf	cmd_task@loop_count^(0+256),f
 10255  0E58  0021               	movlb	1	; select bank1
 10256  0E59  0852               	movf	(??_cmd_task+1)^(0+128),w
 10257  0E5A  0022               	movlb	2	; select bank2
 10258  0E5B  04B1               	iorwf	(cmd_task@loop_count+1)^(0+256),f
 10259                           
 10260                           ;main.c: 481: loop_is_active = 1;
 10261  0E5C  01CA               	clrf	cmd_task@loop_is_active^(0+256)
 10262  0E5D  0ACA               	incf	cmd_task@loop_is_active^(0+256),f
 10263                           
 10264                           ;main.c: 483: } else if (cmd == 0x11) {
 10265  0E5E  2978               	goto	l8843
 10266  0E5F                     l9335:	
 10267  0E5F  3011               	movlw	17
 10268  0E60  0641               	xorwf	cmd_task@cmd^(0+128),w
 10269  0E61  1D03               	btfss	3,2
 10270  0E62  2E93               	goto	l9361
 10271                           
 10272                           ;main.c: 485: loop_count -= 1;
 10273  0E63  3001               	movlw	1
 10274  0E64  0022               	movlb	2	; select bank2
 10275  0E65  02B0               	subwf	cmd_task@loop_count^(0+256),f
 10276  0E66  3000               	movlw	0
 10277  0E67  3BB1               	subwfb	(cmd_task@loop_count+1)^(0+256),f
 10278                           
 10279                           ;main.c: 487: if (loop_count > 0) {
 10280  0E68  0830               	movf	cmd_task@loop_count^(0+256),w
 10281  0E69  0431               	iorwf	(cmd_task@loop_count+1)^(0+256),w
 10282  0E6A  1903               	btfsc	3,2
 10283  0E6B  2E73               	goto	l9345
 10284                           
 10285                           ;main.c: 488: if (loop_is_active) {
 10286  0E6C  084A               	movf	cmd_task@loop_is_active^(0+256),w
 10287  0E6D  1903               	btfsc	3,2
 10288  0E6E  2978               	goto	l8843
 10289                           
 10290                           ;main.c: 490: usb_rx_ptr = loop_start;
 10291  0E6F  3003               	movlw	3
 10292  0E70  0021               	movlb	1	; select bank1
 10293  0E71  00C3               	movwf	_usb_rx_ptr^(0+128)
 10294                           
 10295                           ;main.c: 491: } else {
 10296  0E72  2978               	goto	l8843
 10297  0E73                     l9345:	
 10298                           
 10299                           ;main.c: 497: if (loop_is_active) {
 10300  0E73  084A               	movf	cmd_task@loop_is_active^(0+256),w
 10301  0E74  1903               	btfsc	3,2
 10302  0E75  2B82               	goto	l9065
 10303                           
 10304                           ;main.c: 499: status = STATUS_FAIL;
 10305  0E76  01C4               	clrf	cmd_task@status^(0+256)
 10306  0E77  0AC4               	incf	cmd_task@status^(0+256),f
 10307                           
 10308                           ;main.c: 500: status_sent = 1;
 10309  0E78  01C3               	clrf	cmd_task@status_sent^(0+256)
 10310  0E79  0AC3               	incf	cmd_task@status_sent^(0+256),f
 10311  0E7A  0021               	movlb	1	; select bank1
 10312  0E7B  085E               	movf	cmd_task@pt^(0+128),w
 10313  0E7C  0086               	movwf	6
 10314  0E7D  3001               	movlw	1	; select bank2/3
 10315  0E7E  0087               	movwf	7
 10316  0E7F  30F5               	movlw	245
 10317  0E80  3FC0               	movwi [0]fsr1
 10318  0E81  3001               	movlw	1
 10319  0E82  3FC1               	movwi [1]fsr1
 10320  0E83                     l9351:	
 10321  0E83  0845               	movf	_cdc_trf_state^(0+128),w
 10322  0E84  1D03               	btfss	3,2
 10323  0E85  0008               	return
 10324  0E86  3040               	movlw	64
 10325  0E87  0242               	subwf	_usb_tx_ptr^(0+128),w
 10326  0E88  1803               	btfsc	3,0
 10327  0E89  0008               	return
 10328  0E8A  0842               	movf	_usb_tx_ptr^(0+128),w
 10329  0E8B  3E20               	addlw	(low (_usb_tx_buf| (0+768)))& (0+255)
 10330  0E8C  0086               	movwf	6
 10331  0E8D  3003               	movlw	3	; select bank6/7
 10332  0E8E  0087               	movwf	7
 10333  0E8F  0181               	clrf	1
 10334  0E90  0A81               	incf	1,f
 10335  0E91  0AC2               	incf	_usb_tx_ptr^(0+128),f
 10336  0E92  2B82               	goto	l9065
 10337  0E93                     l9361:	
 10338  0E93  3008               	movlw	8
 10339  0E94  0657               	xorwf	cmd_task@op1^(0+128),w
 10340  0E95  1D03               	btfss	3,2
 10341  0E96  2F5E               	goto	l9437
 10342                           
 10343                           ;main.c: 511: sie = cmd & 0x7;
 10344  0E97  0841               	movf	cmd_task@cmd^(0+128),w
 10345  0E98  00C0               	movwf	cmd_task@sie^(0+128)
 10346  0E99  3007               	movlw	7
 10347  0E9A  05C0               	andwf	cmd_task@sie^(0+128),f
 10348  0E9B  085E               	movf	cmd_task@pt^(0+128),w
 10349  0E9C  0086               	movwf	6
 10350  0E9D  3001               	movlw	1	; select bank2/3
 10351  0E9E  0087               	movwf	7
 10352  0E9F  3FC0               	movwi [0]fsr1
 10353  0EA0  3002               	movlw	2
 10354  0EA1  3FC1               	movwi [1]fsr1
 10355  0EA2                     l9369:	
 10356  0EA2  0867               	movf	_usb_rx_bytes_avail^(0+128),w
 10357  0EA3  0243               	subwf	_usb_rx_ptr^(0+128),w
 10358  0EA4  1803               	btfsc	3,0
 10359  0EA5  0008               	return
 10360  0EA6  0840               	movf	cmd_task@sie^(0+128),w
 10361  0EA7  0709               	addwf	9,w
 10362  0EA8  0709               	addwf	9,w
 10363  0EA9  0709               	addwf	9,w
 10364  0EAA  3E20               	addlw	(low (_sie_configs| (0+512)))& (0+255)
 10365  0EAB  0086               	movwf	6
 10366  0EAC  3002               	movlw	2	; select bank4/5
 10367  0EAD  0087               	movwf	7
 10368  0EAE  0843               	movf	_usb_rx_ptr^(0+128),w
 10369  0EAF  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
 10370  0EB0  0084               	movwf	4
 10371  0EB1  3001               	movlw	1	; select bank3/4
 10372  0EB2  0085               	movwf	5
 10373  0EB3  0800               	movf	0,w
 10374  0EB4  0081               	movwf	1
 10375  0EB5  0AC3               	incf	_usb_rx_ptr^(0+128),f
 10376  0EB6  085E               	movf	cmd_task@pt^(0+128),w
 10377  0EB7  0086               	movwf	6
 10378  0EB8  3001               	movlw	1	; select bank2/3
 10379  0EB9  0087               	movwf	7
 10380  0EBA  3002               	movlw	2
 10381  0EBB  3FC0               	movwi [0]fsr1
 10382  0EBC  3FC1               	movwi [1]fsr1
 10383  0EBD                     l9379:	
 10384  0EBD  0867               	movf	_usb_rx_bytes_avail^(0+128),w
 10385  0EBE  0243               	subwf	_usb_rx_ptr^(0+128),w
 10386  0EBF  1803               	btfsc	3,0
 10387  0EC0  0008               	return
 10388  0EC1  0840               	movf	cmd_task@sie^(0+128),w
 10389  0EC2  0709               	addwf	9,w
 10390  0EC3  0709               	addwf	9,w
 10391  0EC4  0709               	addwf	9,w
 10392  0EC5  3E21               	addlw	(low ((_sie_configs| (0+512)+1)))& (0+255)
 10393  0EC6  0086               	movwf	6
 10394  0EC7  3002               	movlw	2	; select bank4/5
 10395  0EC8  0087               	movwf	7
 10396  0EC9  0843               	movf	_usb_rx_ptr^(0+128),w
 10397  0ECA  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
 10398  0ECB  0084               	movwf	4
 10399  0ECC  3001               	movlw	1	; select bank3/4
 10400  0ECD  0085               	movwf	5
 10401  0ECE  0800               	movf	0,w
 10402  0ECF  0081               	movwf	1
 10403  0ED0  0AC3               	incf	_usb_rx_ptr^(0+128),f
 10404  0ED1  085E               	movf	cmd_task@pt^(0+128),w
 10405  0ED2  0086               	movwf	6
 10406  0ED3  3001               	movlw	1	; select bank2/3
 10407  0ED4  0087               	movwf	7
 10408  0ED5  3003               	movlw	3
 10409  0ED6  3FC0               	movwi [0]fsr1
 10410  0ED7  3002               	movlw	2
 10411  0ED8  3FC1               	movwi [1]fsr1
 10412  0ED9                     l9389:	
 10413  0ED9  0867               	movf	_usb_rx_bytes_avail^(0+128),w
 10414  0EDA  0243               	subwf	_usb_rx_ptr^(0+128),w
 10415  0EDB  1803               	btfsc	3,0
 10416  0EDC  0008               	return
 10417  0EDD  0840               	movf	cmd_task@sie^(0+128),w
 10418  0EDE  0709               	addwf	9,w
 10419  0EDF  0709               	addwf	9,w
 10420  0EE0  0709               	addwf	9,w
 10421  0EE1  3E22               	addlw	(low ((_sie_configs| (0+512)+2)))& (0+255)
 10422  0EE2  0086               	movwf	6
 10423  0EE3  3002               	movlw	2	; select bank4/5
 10424  0EE4  0087               	movwf	7
 10425  0EE5  0843               	movf	_usb_rx_ptr^(0+128),w
 10426  0EE6  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
 10427  0EE7  0084               	movwf	4
 10428  0EE8  3001               	movlw	1	; select bank3/4
 10429  0EE9  0085               	movwf	5
 10430  0EEA  0800               	movf	0,w
 10431  0EEB  0081               	movwf	1
 10432  0EEC  0AC3               	incf	_usb_rx_ptr^(0+128),f
 10433  0EED  085E               	movf	cmd_task@pt^(0+128),w
 10434  0EEE  0086               	movwf	6
 10435  0EEF  3001               	movlw	1	; select bank2/3
 10436  0EF0  0087               	movwf	7
 10437  0EF1  3004               	movlw	4
 10438  0EF2  3FC0               	movwi [0]fsr1
 10439  0EF3  3002               	movlw	2
 10440  0EF4  3FC1               	movwi [1]fsr1
 10441  0EF5                     l9399:	
 10442  0EF5  0867               	movf	_usb_rx_bytes_avail^(0+128),w
 10443  0EF6  0243               	subwf	_usb_rx_ptr^(0+128),w
 10444  0EF7  1803               	btfsc	3,0
 10445  0EF8  0008               	return
 10446  0EF9  0840               	movf	cmd_task@sie^(0+128),w
 10447  0EFA  0709               	addwf	9,w
 10448  0EFB  0709               	addwf	9,w
 10449  0EFC  0709               	addwf	9,w
 10450  0EFD  3E23               	addlw	(low ((_sie_configs| (0+512)+3)))& (0+255)
 10451  0EFE  0086               	movwf	6
 10452  0EFF  3002               	movlw	2	; select bank4/5
 10453  0F00  0087               	movwf	7
 10454  0F01  0843               	movf	_usb_rx_ptr^(0+128),w
 10455  0F02  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
 10456  0F03  0084               	movwf	4
 10457  0F04  3001               	movlw	1	; select bank3/4
 10458  0F05  0085               	movwf	5
 10459  0F06  0800               	movf	0,w
 10460  0F07  0081               	movwf	1
 10461  0F08  0AC3               	incf	_usb_rx_ptr^(0+128),f
 10462  0F09  085E               	movf	cmd_task@pt^(0+128),w
 10463  0F0A  0086               	movwf	6
 10464  0F0B  3001               	movlw	1	; select bank2/3
 10465  0F0C  0087               	movwf	7
 10466  0F0D  3005               	movlw	5
 10467  0F0E  3FC0               	movwi [0]fsr1
 10468  0F0F  3002               	movlw	2
 10469  0F10  3FC1               	movwi [1]fsr1
 10470  0F11                     l9409:	
 10471  0F11  0867               	movf	_usb_rx_bytes_avail^(0+128),w
 10472  0F12  0243               	subwf	_usb_rx_ptr^(0+128),w
 10473  0F13  1803               	btfsc	3,0
 10474  0F14  0008               	return
 10475  0F15  0840               	movf	cmd_task@sie^(0+128),w
 10476  0F16  0709               	addwf	9,w
 10477  0F17  0709               	addwf	9,w
 10478  0F18  0709               	addwf	9,w
 10479  0F19  3E24               	addlw	(low ((_sie_configs| (0+512)+4)))& (0+255)
 10480  0F1A  0086               	movwf	6
 10481  0F1B  3002               	movlw	2	; select bank4/5
 10482  0F1C  0087               	movwf	7
 10483  0F1D  0843               	movf	_usb_rx_ptr^(0+128),w
 10484  0F1E  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
 10485  0F1F  0084               	movwf	4
 10486  0F20  3001               	movlw	1	; select bank3/4
 10487  0F21  0085               	movwf	5
 10488  0F22  0800               	movf	0,w
 10489  0F23  0081               	movwf	1
 10490  0F24  0AC3               	incf	_usb_rx_ptr^(0+128),f
 10491  0F25  085E               	movf	cmd_task@pt^(0+128),w
 10492  0F26  0086               	movwf	6
 10493  0F27  3001               	movlw	1	; select bank2/3
 10494  0F28  0087               	movwf	7
 10495  0F29  3006               	movlw	6
 10496  0F2A  3FC0               	movwi [0]fsr1
 10497  0F2B  3002               	movlw	2
 10498  0F2C  3FC1               	movwi [1]fsr1
 10499  0F2D                     l9419:	
 10500  0F2D  0867               	movf	_usb_rx_bytes_avail^(0+128),w
 10501  0F2E  0243               	subwf	_usb_rx_ptr^(0+128),w
 10502  0F2F  1803               	btfsc	3,0
 10503  0F30  0008               	return
 10504  0F31  0840               	movf	cmd_task@sie^(0+128),w
 10505  0F32  0709               	addwf	9,w
 10506  0F33  0709               	addwf	9,w
 10507  0F34  0709               	addwf	9,w
 10508  0F35  3E25               	addlw	(low ((_sie_configs| (0+512)+5)))& (0+255)
 10509  0F36  0086               	movwf	6
 10510  0F37  3002               	movlw	2	; select bank4/5
 10511  0F38  0087               	movwf	7
 10512  0F39  0843               	movf	_usb_rx_ptr^(0+128),w
 10513  0F3A  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
 10514  0F3B  0084               	movwf	4
 10515  0F3C  3001               	movlw	1	; select bank3/4
 10516  0F3D  0085               	movwf	5
 10517  0F3E  0800               	movf	0,w
 10518  0F3F  0081               	movwf	1
 10519  0F40  0AC3               	incf	_usb_rx_ptr^(0+128),f
 10520  0F41  085E               	movf	cmd_task@pt^(0+128),w
 10521  0F42  0086               	movwf	6
 10522  0F43  3001               	movlw	1	; select bank2/3
 10523  0F44  0087               	movwf	7
 10524  0F45  3007               	movlw	7
 10525  0F46  3FC0               	movwi [0]fsr1
 10526  0F47  3002               	movlw	2
 10527  0F48  3FC1               	movwi [1]fsr1
 10528  0F49                     l9429:	
 10529  0F49  0867               	movf	_usb_rx_bytes_avail^(0+128),w
 10530  0F4A  0243               	subwf	_usb_rx_ptr^(0+128),w
 10531  0F4B  1803               	btfsc	3,0
 10532  0F4C  0008               	return
 10533  0F4D  0840               	movf	cmd_task@sie^(0+128),w
 10534  0F4E  0709               	addwf	9,w
 10535  0F4F  0709               	addwf	9,w
 10536  0F50  0709               	addwf	9,w
 10537  0F51  3E26               	addlw	(low ((_sie_configs| (0+512)+6)))& (0+255)
 10538  0F52  0086               	movwf	6
 10539  0F53  3002               	movlw	2	; select bank4/5
 10540  0F54  0087               	movwf	7
 10541  0F55  0843               	movf	_usb_rx_ptr^(0+128),w
 10542  0F56  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
 10543  0F57  0084               	movwf	4
 10544  0F58  3001               	movlw	1	; select bank3/4
 10545  0F59  0085               	movwf	5
 10546  0F5A  0800               	movf	0,w
 10547  0F5B  0081               	movwf	1
 10548  0F5C  0AC3               	incf	_usb_rx_ptr^(0+128),f
 10549                           
 10550                           ;main.c: 521: } else if (cmd == 0x20) {
 10551  0F5D  2978               	goto	l8843
 10552  0F5E                     l9437:	
 10553  0F5E  3020               	movlw	32
 10554  0F5F  0641               	xorwf	cmd_task@cmd^(0+128),w
 10555  0F60  1D03               	btfss	3,2
 10556  0F61  2F66               	goto	l9441
 10557                           
 10558                           ;main.c: 523: status = STATUS_SUCCESS;
 10559  0F62  0022               	movlb	2	; select bank2
 10560  0F63  01C4               	clrf	cmd_task@status^(0+256)
 10561                           
 10562                           ;main.c: 524: status_sent = 0;
 10563  0F64  01C3               	clrf	cmd_task@status_sent^(0+256)
 10564                           
 10565                           ;main.c: 526: } else if (cmd == 0x21) {
 10566  0F65  2978               	goto	l8843
 10567  0F66                     l9441:	
 10568  0F66  3021               	movlw	33
 10569  0F67  0641               	xorwf	cmd_task@cmd^(0+128),w
 10570  0F68  1D03               	btfss	3,2
 10571  0F69  2F82               	goto	l9455
 10572  0F6A  085E               	movf	cmd_task@pt^(0+128),w
 10573  0F6B  0086               	movwf	6
 10574  0F6C  3001               	movlw	1	; select bank2/3
 10575  0F6D  0087               	movwf	7
 10576  0F6E  3010               	movlw	16
 10577  0F6F  3FC0               	movwi [0]fsr1
 10578  0F70  3002               	movlw	2
 10579  0F71  3FC1               	movwi [1]fsr1
 10580  0F72                     l9445:	
 10581  0F72  0845               	movf	_cdc_trf_state^(0+128),w
 10582  0F73  1D03               	btfss	3,2
 10583  0F74  0008               	return
 10584  0F75  3040               	movlw	64
 10585  0F76  0242               	subwf	_usb_tx_ptr^(0+128),w
 10586  0F77  1803               	btfsc	3,0
 10587  0F78  0008               	return
 10588  0F79  0842               	movf	_usb_tx_ptr^(0+128),w
 10589  0F7A  3E20               	addlw	(low (_usb_tx_buf| (0+768)))& (0+255)
 10590  0F7B  0086               	movwf	6
 10591  0F7C  3003               	movlw	3	; select bank6/7
 10592  0F7D  0087               	movwf	7
 10593  0F7E  0022               	movlb	2	; select bank2
 10594  0F7F  0844               	movf	cmd_task@status^(0+256),w
 10595  0F80  0081               	movwf	1
 10596  0F81  2BA4               	goto	l9081
 10597  0F82                     l9455:	
 10598  0F82  085E               	movf	cmd_task@pt^(0+128),w
 10599  0F83  0086               	movwf	6
 10600  0F84  3001               	movlw	1	; select bank2/3
 10601  0F85  0087               	movwf	7
 10602  0F86  3015               	movlw	21
 10603  0F87  3FC0               	movwi [0]fsr1
 10604  0F88  3002               	movlw	2
 10605  0F89  3FC1               	movwi [1]fsr1
 10606  0F8A                     l9457:	
 10607  0F8A  0867               	movf	_usb_rx_bytes_avail^(0+128),w
 10608  0F8B  0243               	subwf	_usb_rx_ptr^(0+128),w
 10609  0F8C  1803               	btfsc	3,0
 10610  0F8D  0008               	return
 10611  0F8E  0843               	movf	_usb_rx_ptr^(0+128),w
 10612  0F8F  3EA0               	addlw	(low (_usb_rx_buf| (0+256)))& (0+255)
 10613  0F90  0086               	movwf	6
 10614  0F91  3001               	movlw	1	; select bank3/4
 10615  0F92  0087               	movwf	7
 10616  0F93  0801               	movf	1,w
 10617  0F94  00C1               	movwf	cmd_task@cmd^(0+128)
 10618  0F95  0AC3               	incf	_usb_rx_ptr^(0+128),f
 10619                           
 10620                           ;main.c: 534: gpio_dir = cmd & 0x3f;
 10621  0F96  0022               	movlb	2	; select bank2
 10622  0F97  00EE               	movwf	cmd_task@gpio_dir^(0+256)
 10623  0F98  303F               	movlw	63
 10624  0F99  05EE               	andwf	cmd_task@gpio_dir^(0+256),f
 10625                           
 10626                           ;main.c: 535: TRISC = gpio_dir;
 10627  0F9A  086E               	movf	cmd_task@gpio_dir^(0+256),w
 10628  0F9B  0021               	movlb	1	; select bank1
 10629  0F9C                     L24:	
 10630  0F9C  008E               	movwf	14	;volatile
 10631  0F9D  2978               	goto	l8843
 10632  0F9E                     l9471:	
 10633  0F9E  085E               	movf	cmd_task@pt^(0+128),w
 10634  0F9F  0086               	movwf	6
 10635  0FA0  3001               	movlw	1	; select bank2/3
 10636  0FA1  0087               	movwf	7
 10637  0FA2  3F40               	moviw [0]fsr1
 10638  0FA3  00D1               	movwf	??_cmd_task^(0+128)
 10639  0FA4  3F41               	moviw [1]fsr1
 10640  0FA5  00D2               	movwf	(??_cmd_task^(0+128)+1)
 10641                           
 10642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
 10643                           ; Switch size 1, requested type "speed"
 10644                           ; Number of cases is 3, Range of values is 0 to 2
 10645                           ; switch strategies available:
 10646                           ; Name         Instructions Cycles
 10647                           ; simple_byte           10     6 (average)
 10648                           ; direct_byte           12     6 (fixed)
 10649                           ; jumptable            260     6 (fixed)
 10650                           ;	Chosen strategy is simple_byte
 10651  0FA6  0852               	movf	(??_cmd_task+1)^(0+128),w
 10652  0FA7  3A00               	xorlw	0	; case 0
 10653  0FA8  1903               	skipnz
 10654  0FA9  2FB1               	goto	l10001
 10655  0FAA  3A01               	xorlw	1	; case 1
 10656  0FAB  1903               	skipnz
 10657  0FAC  2FCB               	goto	l10003
 10658  0FAD  3A03               	xorlw	3	; case 2
 10659  0FAE  1903               	skipnz
 10660  0FAF  2FEB               	goto	l10005
 10661  0FB0  2FF8               	goto	l9473
 10662  0FB1                     l10001:	
 10663                           
 10664                           ; Switch size 1, requested type "speed"
 10665                           ; Number of cases is 8, Range of values is 0 to 242
 10666                           ; switch strategies available:
 10667                           ; Name         Instructions Cycles
 10668                           ; simple_byte           25    13 (average)
 10669                           ; jumptable            260     6 (fixed)
 10670                           ;	Chosen strategy is simple_byte
 10671  0FB1  0851               	movf	??_cmd_task^(0+128),w
 10672  0FB2  3A00               	xorlw	0	; case 0
 10673  0FB3  1903               	skipnz
 10674  0FB4  2978               	goto	l8843
 10675  0FB5  3AA6               	xorlw	166	; case 166
 10676  0FB6  1903               	skipnz
 10677  0FB7  2982               	goto	l8847
 10678  0FB8  3A01               	xorlw	1	; case 167
 10679  0FB9  1903               	skipnz
 10680  0FBA  298D               	goto	l8853
 10681  0FBB  3A10               	xorlw	16	; case 183
 10682  0FBC  1903               	skipnz
 10683  0FBD  29BD               	goto	l8879
 10684  0FBE  3A77               	xorlw	119	; case 192
 10685  0FBF  1903               	skipnz
 10686  0FC0  29E4               	goto	l8899
 10687  0FC1  3A01               	xorlw	1	; case 193
 10688  0FC2  1903               	skipnz
 10689  0FC3  29F8               	goto	l8909
 10690  0FC4  3A30               	xorlw	48	; case 241
 10691  0FC5  1903               	skipnz
 10692  0FC6  2AC4               	goto	l8987
 10693  0FC7  3A03               	xorlw	3	; case 242
 10694  0FC8  1903               	skipnz
 10695  0FC9  2AD8               	goto	l8997
 10696  0FCA  2FF8               	goto	l9473
 10697  0FCB                     l10003:	
 10698                           
 10699                           ; Switch size 1, requested type "speed"
 10700                           ; Number of cases is 10, Range of values is 11 to 245
 10701                           ; switch strategies available:
 10702                           ; Name         Instructions Cycles
 10703                           ; simple_byte           31    16 (average)
 10704                           ; jumptable            263     9 (fixed)
 10705                           ;	Chosen strategy is simple_byte
 10706  0FCB  0851               	movf	??_cmd_task^(0+128),w
 10707  0FCC  3A0B               	xorlw	11	; case 11
 10708  0FCD  1903               	skipnz
 10709  0FCE  2B4A               	goto	l9039
 10710  0FCF  3A07               	xorlw	7	; case 12
 10711  0FD0  1903               	skipnz
 10712  0FD1  2B5E               	goto	l9049
 10713  0FD2  3A17               	xorlw	23	; case 27
 10714  0FD3  1903               	skipnz
 10715  0FD4  2B96               	goto	l9075
 10716  0FD5  3A52               	xorlw	82	; case 73
 10717  0FD6  1903               	skipnz
 10718  0FD7  2C4B               	goto	l9145
 10719  0FD8  3A14               	xorlw	20	; case 93
 10720  0FD9  1903               	skipnz
 10721  0FDA  2CB0               	goto	l9183
 10722  0FDB  3A39               	xorlw	57	; case 100
 10723  0FDC  1903               	skipnz
 10724  0FDD  2CE3               	goto	l9199
 10725  0FDE  3AC3               	xorlw	195	; case 167
 10726  0FDF  1903               	skipnz
 10727  0FE0  2D75               	goto	l9261
 10728  0FE1  3A7C               	xorlw	124	; case 219
 10729  0FE2  1903               	skipnz
 10730  0FE3  2E2F               	goto	l9311
 10731  0FE4  3A05               	xorlw	5	; case 222
 10732  0FE5  1903               	skipnz
 10733  0FE6  2E45               	goto	l9323
 10734  0FE7  3A2B               	xorlw	43	; case 245
 10735  0FE8  1903               	skipnz
 10736  0FE9  2E83               	goto	l9351
 10737  0FEA  2FF8               	goto	l9473
 10738  0FEB                     l10005:	
 10739                           
 10740                           ; Switch size 1, requested type "speed"
 10741                           ; Number of cases is 9, Range of values is 1 to 21
 10742                           ; switch strategies available:
 10743                           ; Name         Instructions Cycles
 10744                           ; direct_byte           51     9 (fixed)
 10745                           ; simple_byte           28    15 (average)
 10746                           ; jumptable            263     9 (fixed)
 10747                           ;	Chosen strategy is direct_byte
 10748  0FEB  0851               	movf	??_cmd_task^(0+128),w
 10749  0FEC  3EFF               	addlw	-1
 10750  0FED  1C03               	skipc
 10751  0FEE  2FF8               	goto	l9475
 10752  0FEF  0084               	movwf	4
 10753  0FF0  3015               	movlw	21
 10754  0FF1  0204               	subwf	4,w
 10755  0FF2  1803               	skipnc
 10756  0FF3  2FF8               	goto	l9475
 10757  0FF4  3192               	movlp	high S10007
 10758  0FF5  3504               	lslf	4,w
 10759  0FF6  3E64               	addlw	low S10007
 10760  0FF7  0082               	movwf	2
 10761  0FF8                     l9473:	
 10762  0FF8                     l9475:	
 10763  0FF8  085E               	movf	cmd_task@pt^(0+128),w
 10764  0FF9  0086               	movwf	6
 10765  0FFA  3001               	movlw	1	; select bank2/3
 10766  0FFB  0087               	movwf	7
 10767  0FFC  3000               	movlw	0
 10768  0FFD  3FC0               	movwi [0]fsr1
 10769  0FFE  3FC1               	movwi [1]fsr1
 10770  0FFF  0008               	return
 10771  1000                     __end_of_cmd_task:	
 10772                           
 10773                           	psect	swtext4
 10774  1264                     __pswtext4:	
 10775  1264                     S10007:	
 10776  1264  318E  2EA2         	ljmp	l9369
 10777  1266  318E  2EBD         	ljmp	l9379
 10778  1268  318E  2ED9         	ljmp	l9389
 10779  126A  318E  2EF5         	ljmp	l9399
 10780  126C  318F  2F11         	ljmp	l9409
 10781  126E  318F  2F2D         	ljmp	l9419
 10782  1270  318F  2F49         	ljmp	l9429
 10783  1272  318F  2FF8         	ljmp	l9473
 10784  1274  318F  2FF8         	ljmp	l9473
 10785  1276  318F  2FF8         	ljmp	l9473
 10786  1278  318F  2FF8         	ljmp	l9473
 10787  127A  318F  2FF8         	ljmp	l9473
 10788  127C  318F  2FF8         	ljmp	l9473
 10789  127E  318F  2FF8         	ljmp	l9473
 10790  1280  318F  2FF8         	ljmp	l9473
 10791  1282  318F  2F72         	ljmp	l9445
 10792  1284  318F  2FF8         	ljmp	l9473
 10793  1286  318F  2FF8         	ljmp	l9473
 10794  1288  318F  2FF8         	ljmp	l9473
 10795  128A  318F  2FF8         	ljmp	l9473
 10796  128C  318F  2F8A         	ljmp	l9457
 10797                           
 10798                           	psect	text32
 10799  0000                     __ptext32:	
 10800 ;; *************** function _cmd_rx_buffer_task *****************
 10801 ;; Defined at:
 10802 ;;		line 548 in file "main.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;		None
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;		None
 10807 ;; Return value:  Size  Location     Type
 10808 ;;                  1    wreg      void 
 10809 ;; Registers used:
 10810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10811 ;; Tracked objects:
 10812 ;;		On entry : 3/1
 10813 ;;		On exit  : 1F/1
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;Total ram usage:        0 bytes
 10821 ;; Hardware stack levels used:    1
 10822 ;; Hardware stack levels required when called:   12
 10823 ;; This function calls:
 10824 ;;		_getsUSBUSART
 10825 ;; This function is called by:
 10826 ;;		_main
 10827 ;; This function uses a non-reentrant model
 10828 ;;
 10829                           
 10830  0000                     _cmd_rx_buffer_task:	
 10831                           ;psect for function _cmd_rx_buffer_task
 10832                           
 10833  0000                     __end_of_cmd_rx_buffer_task:	
 10834                           ;main.c: 551: usb_rx_ptr = 0;
 10835                           
 10836                           ;main.c: 550: usb_rx_bytes_avail = getsUSBUSART(usb_rx_buf, 64);
 10837                           
 10838                           ;main.c: 549: if (usb_rx_ptr >= usb_rx_bytes_avail) {
 10839                           
 10840                           ;incstack = 0
 10841                           ; Regs used in _cmd_rx_buffer_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10842                           
 10843                           
 10844                           	psect	intentry
 10845  0004                     __pintentry:	
 10846 ;; *************** function _INTERRUPT_InterruptManager *****************
 10847 ;; Defined at:
 10848 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;		None
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;		None
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      void 
 10855 ;; Registers used:
 10856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;Total ram usage:        0 bytes
 10867 ;; Hardware stack levels used:    1
 10868 ;; Hardware stack levels required when called:    9
 10869 ;; This function calls:
 10870 ;;		i1_USBDeviceTasks
 10871 ;; This function is called by:
 10872 ;;		Interrupt level 1
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876  0004                     _INTERRUPT_InterruptManager:	
 10877                           
 10878                           ;incstack = 0
 10879 ;; hardware stack exceeded
 10880  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10881                           
 10882                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10883  0005  3180               	pagesel	$
 10884                           
 10885                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE2bits.USBIE == 1 && PIR2bits.USB
      +                          IF == 1)
 10886  0006  1F0B               	btfss	11,6	;volatile
 10887  0007  2810               	goto	i1l133
 10888  0008  0021               	movlb	1	; select bank1
 10889  0009  1D12               	btfss	18,2	;volatile
 10890  000A  2810               	goto	i1l133
 10891  000B  0020               	movlb	0	; select bank0
 10892  000C  1D12               	btfss	18,2	;volatile
 10893  000D  2810               	goto	i1l133
 10894                           
 10895                           ;interrupt_manager.c: 55: {
 10896                           ;interrupt_manager.c: 56: USBDeviceTasks();
 10897  000E  3195  25C8         	fcall	i1_USBDeviceTasks
 10898  0010                     i1l133:	
 10899                           ;interrupt_manager.c: 57: }
 10900                           
 10901  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10902  0011  0009               	retfie
 10903  0012                     __end_of_INTERRUPT_InterruptManager:	
 10904                           
 10905                           	psect	text49
 10906  142D                     __ptext49:	
 10907 ;; *************** function i1_USBCtrlTrfSetupHandler *****************
 10908 ;; Defined at:
 10909 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;		None
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;		None
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/1
 10920 ;;		On exit  : 1C/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;Total ram usage:        0 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    6
 10930 ;; This function calls:
 10931 ;;		i1_USBCheckStdRequest
 10932 ;;		i1_USBCtrlEPServiceComplete
 10933 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10934 ;; This function is called by:
 10935 ;;		i1_USBCtrlEPService
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           
 10940                           ;psect for function i1_USBCtrlTrfSetupHandler
 10941  142D                     i1_USBCtrlTrfSetupHandler:	
 10942                           
 10943                           ;usb_device.c: 2470: shortPacketStatus = 0;
 10944                           
 10945                           ;incstack = 0
 10946 ;; hardware stack exceeded
 10947                           ; Regs used in i1_USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10948  142D  0021               	movlb	1	; select bank1
 10949  142E  01B8               	clrf	_shortPacketStatus^(0+128)	;volatile
 10950                           
 10951                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 10952  142F  01B4               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
 10953                           
 10954                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 10955  1430  0022               	movlb	2	; select bank2
 10956  1431  01BC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10957                           
 10958                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 10959  1432  01BB               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10960                           
 10961                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 10962  1433  01BF               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 10963                           
 10964                           ;usb_device.c: 2475: controlTransferState = 0;
 10965  1434  0021               	movlb	1	; select bank1
 10966  1435  01B7               	clrf	_controlTransferState^(0+128)	;volatile
 10967                           
 10968                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10969  1436  0827               	movf	_pBDTEntryIn^(0+128),w
 10970  1437  0086               	movwf	6
 10971  1438  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 10972  1439  0087               	movwf	7
 10973  143A  3004               	movlw	4
 10974  143B  1381               	bcf	1,7
 10975                           
 10976                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10977  143C  0627               	xorwf	_pBDTEntryIn^(0+128),w
 10978  143D  00A7               	movwf	_pBDTEntryIn^(0+128)
 10979                           
 10980                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10981  143E  0086               	movwf	6
 10982  143F  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 10983  1440  0087               	movwf	7
 10984  1441  3004               	movlw	4
 10985  1442  1381               	bcf	1,7
 10986                           
 10987                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10988  1443  0627               	xorwf	_pBDTEntryIn^(0+128),w
 10989  1444  00A7               	movwf	_pBDTEntryIn^(0+128)
 10990                           
 10991                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 10992  1445  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10993  1446  0086               	movwf	6
 10994  1447  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10995  1448  0087               	movwf	7
 10996  1449  1381               	bcf	1,7
 10997                           
 10998                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 10999  144A  01AF               	clrf	(_inPipes^(0+128)+2)	;volatile
 11000                           
 11001                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 11002  144B  01B0               	clrf	(_inPipes^(0+128)+3)	;volatile
 11003  144C  01B1               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 11004                           
 11005                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 11006  144D  01A2               	clrf	(_outPipes^(0+128)+2)	;volatile
 11007                           
 11008                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 11009  144E  01A3               	clrf	(_outPipes^(0+128)+3)	;volatile
 11010  144F  01A4               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
 11011                           
 11012                           ;usb_device.c: 2500: USBCheckStdRequest();
 11013  1450  245F  3194         	fcall	i1_USBCheckStdRequest
 11014                           
 11015                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 11016  1452  3003               	movlw	3
 11017  1453  0020               	movlb	0	; select bank0
 11018  1454  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11019  1455  3000               	movlw	0
 11020  1456  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11021  1457  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11022  1458  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11023  1459  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11024  145A  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11025  145B  2668               	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11026                           
 11027                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 11028  145C  3192  22A3         	fcall	i1_USBCtrlEPServiceComplete
 11029  145E  0008               	return
 11030  145F                     __end_ofi1_USBCtrlTrfSetupHandler:	
 11031  145F                     __ptext52:	
 11032 ;; *************** function i1_USBCheckStdRequest *****************
 11033 ;; Defined at:
 11034 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;		None
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;		None
 11039 ;; Return value:  Size  Location     Type
 11040 ;;                  1    wreg      void 
 11041 ;; Registers used:
 11042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11043 ;; Tracked objects:
 11044 ;;		On entry : 1F/1
 11045 ;;		On exit  : 1E/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11052 ;;Total ram usage:        0 bytes
 11053 ;; Hardware stack levels used:    1
 11054 ;; Hardware stack levels required when called:    5
 11055 ;; This function calls:
 11056 ;;		i1_USBStdFeatureReqHandler
 11057 ;;		i1_USBStdGetDscHandler
 11058 ;;		i1_USBStdGetStatusHandler
 11059 ;;		i1_USBStdSetCfgHandler
 11060 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11061 ;; This function is called by:
 11062 ;;		i1_USBCtrlTrfSetupHandler
 11063 ;; This function uses a non-reentrant model
 11064 ;;
 11065                           
 11066                           
 11067                           ;psect for function i1_USBCheckStdRequest
 11068  145F                     i1_USBCheckStdRequest:	
 11069                           
 11070                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 11071                           
 11072                           ;incstack = 0
 11073 ;; hardware stack exceeded
 11074                           ; Regs used in i1_USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11075  145F  0020               	movlb	0	; select bank0
 11076  1460  0E50               	swapf	80,w	;volatile
 11077  1461  0C89               	rrf	9,f
 11078  1462  3903               	andlw	3
 11079  1463  1D03               	btfss	3,2
 11080  1464  0008               	return
 11081  1465  2C9F               	goto	i1l8357
 11082  1466                     i1l910:	
 11083                           ;usb_device.c: 2691: {
 11084                           ;usb_device.c: 2692: case 5:
 11085                           
 11086                           
 11087                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 11088  1466  0021               	movlb	1	; select bank1
 11089  1467  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11090                           
 11091                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 11092  1468  3008               	movlw	8
 11093  1469  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
 11094                           
 11095                           ;usb_device.c: 2696: break;
 11096  146A  0008               	return
 11097  146B                     i1l8327:	
 11098                           
 11099                           ;usb_device.c: 2698: USBStdGetDscHandler();
 11100  146B  319D  2588         	fcall	i1_USBStdGetDscHandler
 11101                           
 11102                           ;usb_device.c: 2699: break;
 11103  146D  0008               	return
 11104  146E                     i1l8329:	
 11105                           
 11106                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 11107  146E  3188  200D         	fcall	i1_USBStdSetCfgHandler
 11108                           
 11109                           ;usb_device.c: 2702: break;
 11110  1470  0008               	return
 11111  1471                     i1l8331:	
 11112                           
 11113                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 11114  1471  30C8               	movlw	low _USBActiveConfiguration
 11115  1472  0021               	movlb	1	; select bank1
 11116  1473  00AD               	movwf	_inPipes^(0+128)	;volatile
 11117  1474  3000               	movlw	high _USBActiveConfiguration
 11118  1475  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
 11119                           
 11120                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11121  1476  142F               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11122                           
 11123                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 11124  1477  3001               	movlw	1
 11125  1478  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
 11126                           
 11127                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 11128  1479  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11129                           
 11130                           ;usb_device.c: 2708: break;
 11131  147A  0008               	return
 11132  147B                     i1l8339:	
 11133                           
 11134                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 11135  147B  319C  24EB         	fcall	i1_USBStdGetStatusHandler
 11136                           
 11137                           ;usb_device.c: 2711: break;
 11138  147D  0008               	return
 11139  147E                     i1l8341:	
 11140                           
 11141                           ;usb_device.c: 2713: case 3:
 11142                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 11143  147E  24AA               	fcall	i1_USBStdFeatureReqHandler
 11144                           
 11145                           ;usb_device.c: 2715: break;
 11146  147F  0008               	return
 11147  1480                     i1l8343:	
 11148                           
 11149                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 11150  1480  0854               	movf	84,w	;volatile
 11151  1481  3E60               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 11152  1482  0021               	movlb	1	; select bank1
 11153  1483  00AD               	movwf	_inPipes^(0+128)	;volatile
 11154  1484  3001               	movlw	1
 11155  1485  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
 11156                           
 11157                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11158  1486  142F               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11159                           
 11160                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 11161  1487  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
 11162                           
 11163                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 11164  1488  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11165                           
 11166                           ;usb_device.c: 2721: break;
 11167  1489  0008               	return
 11168  148A                     i1l919:	
 11169                           ;usb_device.c: 2722: case 11:
 11170                           
 11171                           
 11172                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 11173  148A  0021               	movlb	1	; select bank1
 11174  148B  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11175                           
 11176                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 11177  148C  0020               	movlb	0	; select bank0
 11178  148D  0854               	movf	84,w	;volatile
 11179  148E  3E60               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 11180  148F  0086               	movwf	6
 11181  1490  3001               	movlw	1	; select bank2/3
 11182  1491  0087               	movwf	7
 11183  1492  0852               	movf	82,w	;volatile
 11184  1493  0081               	movwf	1
 11185                           
 11186                           ;usb_device.c: 2725: break;
 11187  1494  0008               	return
 11188  1495                     i1l8353:	
 11189                           
 11190                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 11191  1495  3002               	movlw	2
 11192  1496  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11193  1497  3000               	movlw	0
 11194  1498  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11195  1499  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11196  149A  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11197  149B  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11198  149C  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11199  149D  2668               	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11200                           
 11201                           ;usb_device.c: 2728: break;
 11202  149E  0008               	return
 11203  149F                     i1l8357:	
 11204  149F  0851               	movf	81,w	;volatile
 11205                           
 11206                           ; Switch size 1, requested type "speed"
 11207                           ; Number of cases is 11, Range of values is 0 to 12
 11208                           ; switch strategies available:
 11209                           ; Name         Instructions Cycles
 11210                           ; direct_byte           32     6 (fixed)
 11211                           ; simple_byte           34    18 (average)
 11212                           ; jumptable            260     6 (fixed)
 11213                           ;	Chosen strategy is direct_byte
 11214  14A0  0084               	movwf	4
 11215  14A1  300D               	movlw	13
 11216  14A2  0204               	subwf	4,w
 11217  14A3  1803               	skipnc
 11218  14A4  0008               	return
 11219  14A5  3199               	movlp	high i1S10009
 11220  14A6  3504               	lslf	4,w
 11221  14A7  3E00               	addlw	low i1S10009
 11222  14A8  0082               	movwf	2
 11223  14A9                     i1l908:	
 11224  14A9  0008               	return
 11225  14AA                     __end_ofi1_USBCheckStdRequest:	
 11226  14AA                     __ptext57:	
 11227 ;; *************** function i1_USBStdFeatureReqHandler *****************
 11228 ;; Defined at:
 11229 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;		None
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;  USBStdFeatur    2    3[BANK1 ] PTR struct __BDT
 11234 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 11235 ;;  USBStdFeatur    2    0[BANK1 ] PTR unsigned char 
 11236 ;;		 -> UEP0(1), 
 11237 ;;  USBStdFeatur    1    2[BANK1 ] struct .
 11238 ;; Return value:  Size  Location     Type
 11239 ;;                  1    wreg      void 
 11240 ;; Registers used:
 11241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11242 ;; Tracked objects:
 11243 ;;		On entry : 1E/0
 11244 ;;		On exit  : 1E/0
 11245 ;;		Unchanged: 0/0
 11246 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;      Totals:         2       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;Total ram usage:        7 bytes
 11252 ;; Hardware stack levels used:    1
 11253 ;; Hardware stack levels required when called:    4
 11254 ;; This function calls:
 11255 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11256 ;; This function is called by:
 11257 ;;		i1_USBCheckStdRequest
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           
 11262                           ;psect for function i1_USBStdFeatureReqHandler
 11263  14AA                     i1_USBStdFeatureReqHandler:	
 11264                           
 11265                           ;usb_device.c: 2756: BDT_ENTRY *p;
 11266                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 11267                           ;usb_device.c: 2761: unsigned char* pUEP;
 11268                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 11269                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 11270                           
 11271                           ;incstack = 0
 11272 ;; hardware stack exceeded
 11273                           ; Regs used in i1_USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11274  14AA  0020               	movlb	0	; select bank0
 11275  14AB  0B52               	decfsz	82,w	;volatile
 11276  14AC  2CBE               	goto	i1l8173
 11277  14AD  0850               	movf	80,w	;volatile
 11278  14AE  391F               	andlw	31
 11279  14AF  1D03               	skipz
 11280  14B0  2CBE               	goto	i1l8173
 11281                           
 11282                           ;usb_device.c: 2801: {
 11283                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 11284  14B1  0021               	movlb	1	; select bank1
 11285  14B2  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11286                           
 11287                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 11288  14B3  3003               	movlw	3
 11289  14B4  0020               	movlb	0	; select bank0
 11290  14B5  0651               	xorwf	81,w	;volatile
 11291  14B6  1D03               	btfss	3,2
 11292  14B7  2CBC               	goto	i1l8171
 11293                           
 11294                           ;usb_device.c: 2804: RemoteWakeup = 1;
 11295  14B8  3001               	movlw	1
 11296  14B9  0022               	movlb	2	; select bank2
 11297  14BA  00C1               	movwf	_RemoteWakeup^(0+256)	;volatile
 11298  14BB  2CBE               	goto	i1l8173
 11299  14BC                     i1l8171:	
 11300                           
 11301                           ;usb_device.c: 2805: else
 11302                           ;usb_device.c: 2806: RemoteWakeup = 0;
 11303  14BC  0022               	movlb	2	; select bank2
 11304  14BD  01C1               	clrf	_RemoteWakeup^(0+256)	;volatile
 11305  14BE                     i1l8173:	
 11306                           
 11307                           ;usb_device.c: 2807: }
 11308                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 11309                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 11310                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 11311                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 11312  14BE  0020               	movlb	0	; select bank0
 11313  14BF  0852               	movf	82,w	;volatile
 11314  14C0  1D03               	btfss	3,2
 11315  14C1  0008               	return
 11316  14C2  0850               	movf	80,w	;volatile
 11317  14C3  391F               	andlw	31
 11318  14C4  3A02               	xorlw	2
 11319  14C5  1D03               	skipz
 11320  14C6  0008               	return
 11321  14C7  0854               	movf	84,w	;volatile
 11322  14C8  390F               	andlw	15
 11323  14C9  1903               	skipnz
 11324  14CA  0008               	return
 11325  14CB  0854               	movf	84,w	;volatile
 11326  14CC  390F               	andlw	15
 11327  14CD  00FB               	movwf	??i1_USBStdFeatureReqHandler
 11328  14CE  3003               	movlw	3
 11329  14CF  027B               	subwf	??i1_USBStdFeatureReqHandler,w
 11330  14D0  1803               	skipnc
 11331  14D1  0008               	return
 11332  14D2  3020               	movlw	32
 11333  14D3  0021               	movlb	1	; select bank1
 11334  14D4  0644               	xorwf	_USBDeviceState^(0+128),w	;volatile
 11335  14D5  1D03               	btfss	3,2
 11336  14D6  0008               	return
 11337                           
 11338                           ;usb_device.c: 2814: {
 11339                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 11340  14D7  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11341                           
 11342                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 11343  14D8  0020               	movlb	0	; select bank0
 11344  14D9  1BD4               	btfsc	84,7	;volatile
 11345  14DA  2CED               	goto	i1l8187
 11346                           
 11347                           ;usb_device.c: 2821: {
 11348                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11349  14DB  0854               	movf	84,w	;volatile
 11350  14DC  390F               	andlw	15
 11351  14DD  0709               	addwf	9,w
 11352  14DE  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11353  14DF  0086               	movwf	6
 11354  14E0  3001               	movlw	1	; select bank2/3
 11355  14E1  0087               	movwf	7
 11356  14E2  3F40               	moviw [0]fsr1
 11357  14E3  0021               	movlb	1	; select bank1
 11358  14E4  00CC               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 11359  14E5  3F41               	moviw [1]fsr1
 11360  14E6  00CD               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 11361                           
 11362                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 11363  14E7  0020               	movlb	0	; select bank0
 11364  14E8  0854               	movf	84,w	;volatile
 11365  14E9  390F               	andlw	15
 11366  14EA  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 11367  14EB  0086               	movwf	6
 11368  14EC  2CFF               	goto	L30
 11369  14ED                     i1l8187:	
 11370                           ;usb_device.c: 2824: }
 11371                           
 11372                           
 11373                           ;usb_device.c: 2825: else
 11374                           ;usb_device.c: 2826: {
 11375                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11376  14ED  0854               	movf	84,w	;volatile
 11377  14EE  390F               	andlw	15
 11378  14EF  0709               	addwf	9,w
 11379  14F0  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 11380  14F1  0086               	movwf	6
 11381  14F2  0187               	clrf	7
 11382  14F3  3F40               	moviw [0]fsr1
 11383  14F4  0021               	movlb	1	; select bank1
 11384  14F5  00CC               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 11385  14F6  3F41               	moviw [1]fsr1
 11386  14F7  00CD               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 11387                           
 11388                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11389  14F8  0020               	movlb	0	; select bank0
 11390  14F9  0854               	movf	84,w	;volatile
 11391  14FA  390F               	andlw	15
 11392  14FB  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 11393  14FC  0086               	movwf	6
 11394  14FD  3001               	movlw	1	; select bank2/3
 11395  14FE  0087               	movwf	7
 11396  14FF                     L30:	
 11397  14FF  0801               	movf	1,w
 11398  1500  0021               	movlb	1	; select bank1
 11399  1501  00CB               	movwf	i1USBStdFeatureReqHandler@current_ep_data^(0+128)
 11400                           
 11401                           ;usb_device.c: 2829: }
 11402                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 11403  1502  184B               	btfsc	i1USBStdFeatureReqHandler@current_ep_data^(0+128),0
 11404  1503  2D0F               	goto	i1l8193
 11405                           
 11406                           ;usb_device.c: 2836: {
 11407                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 11408  1504  30FB               	movlw	251
 11409  1505  00FB               	movwf	??i1_USBStdFeatureReqHandler
 11410  1506  30FF               	movlw	255
 11411  1507  00FC               	movwf	??i1_USBStdFeatureReqHandler+1
 11412  1508  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11413  1509  057B               	andwf	??i1_USBStdFeatureReqHandler,w
 11414  150A  00CC               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 11415  150B  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11416  150C  057C               	andwf	??i1_USBStdFeatureReqHandler+1,w
 11417  150D  00CD               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 11418                           
 11419                           ;usb_device.c: 2838: }
 11420  150E  2D12               	goto	i1l8195
 11421  150F                     i1l8193:	
 11422                           
 11423                           ;usb_device.c: 2839: else
 11424                           ;usb_device.c: 2840: {
 11425                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 11426  150F  3004               	movlw	4
 11427  1510  044C               	iorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 11428  1511  00CC               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 11429  1512                     i1l8195:	
 11430                           
 11431                           ;usb_device.c: 2842: }
 11432                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 11433  1512  0020               	movlb	0	; select bank0
 11434  1513  1BD4               	btfsc	84,7	;volatile
 11435  1514  2D22               	goto	i1l8199
 11436                           
 11437                           ;usb_device.c: 2848: {
 11438                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11439  1515  0854               	movf	84,w	;volatile
 11440  1516  390F               	andlw	15
 11441  1517  0709               	addwf	9,w
 11442  1518  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11443  1519  0086               	movwf	6
 11444  151A  3001               	movlw	1	; select bank2/3
 11445  151B  0087               	movwf	7
 11446  151C  0021               	movlb	1	; select bank1
 11447  151D  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11448  151E  3FC0               	movwi [0]fsr1
 11449  151F  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11450  1520  3FC1               	movwi [1]fsr1
 11451                           
 11452                           ;usb_device.c: 2850: }
 11453  1521  2D2D               	goto	i1l8201
 11454  1522                     i1l8199:	
 11455                           
 11456                           ;usb_device.c: 2851: else
 11457                           ;usb_device.c: 2852: {
 11458                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11459  1522  0854               	movf	84,w	;volatile
 11460  1523  390F               	andlw	15
 11461  1524  0709               	addwf	9,w
 11462  1525  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 11463  1526  0086               	movwf	6
 11464  1527  0187               	clrf	7
 11465  1528  0021               	movlb	1	; select bank1
 11466  1529  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11467  152A  3FC0               	movwi [0]fsr1
 11468  152B  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11469  152C  3FC1               	movwi [1]fsr1
 11470  152D                     i1l8201:	
 11471                           
 11472                           ;usb_device.c: 2854: }
 11473                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 11474  152D  3003               	movlw	3
 11475  152E  0020               	movlb	0	; select bank0
 11476  152F  0651               	xorwf	81,w	;volatile
 11477  1530  1D03               	btfss	3,2
 11478  1531  2D53               	goto	i1l8215
 11479                           
 11480                           ;usb_device.c: 2858: {
 11481                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 11482  1532  0021               	movlb	1	; select bank1
 11483  1533  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11484  1534  0086               	movwf	6
 11485  1535  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11486  1536  0087               	movwf	7
 11487  1537  1F81               	btfss	1,7
 11488  1538  2D47               	goto	i1l8211
 11489                           
 11490                           ;usb_device.c: 2860: {
 11491                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 11492  1539  0020               	movlb	0	; select bank0
 11493  153A  1BD4               	btfsc	84,7	;volatile
 11494  153B  2D40               	goto	i1l8209
 11495                           
 11496                           ;usb_device.c: 2864: {
 11497                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11498  153C  0854               	movf	84,w	;volatile
 11499  153D  390F               	andlw	15
 11500  153E  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 11501  153F  2D43               	goto	L31
 11502  1540                     i1l8209:	
 11503                           ;usb_device.c: 2866: }
 11504                           
 11505                           
 11506                           ;usb_device.c: 2867: else
 11507                           ;usb_device.c: 2868: {
 11508                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11509  1540  0854               	movf	84,w	;volatile
 11510  1541  390F               	andlw	15
 11511  1542  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 11512  1543                     L31:	
 11513  1543  0086               	movwf	6
 11514  1544  3001               	movlw	1	; select bank2/3
 11515  1545  0087               	movwf	7
 11516  1546  1481               	bsf	1,1
 11517  1547                     i1l8211:	
 11518                           
 11519                           ;usb_device.c: 2870: }
 11520                           ;usb_device.c: 2871: }
 11521                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 11522  1547  0021               	movlb	1	; select bank1
 11523  1548  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11524  1549  0086               	movwf	6
 11525  154A  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11526  154B  0087               	movwf	7
 11527  154C  1501               	bsf	1,2
 11528                           
 11529                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 11530  154D  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11531  154E  0086               	movwf	6
 11532  154F  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11533  1550  0087               	movwf	7
 11534  1551  1781               	bsf	1,7
 11535                           
 11536                           ;usb_device.c: 2876: }
 11537  1552  0008               	return
 11538  1553                     i1l8215:	
 11539                           
 11540                           ;usb_device.c: 2877: else
 11541                           ;usb_device.c: 2878: {
 11542                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 11543  1553  3004               	movlw	4
 11544  1554  0021               	movlb	1	; select bank1
 11545  1555  064C               	xorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 11546  1556  00CC               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 11547                           
 11548                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 11549  1557  0086               	movwf	6
 11550  1558  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11551  1559  0087               	movwf	7
 11552                           
 11553                           ;usb_device.c: 2885: {
 11554                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 11555  155A  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11556  155B  1F81               	btfss	1,7
 11557  155C  2D78               	goto	L33
 11558  155D  0086               	movwf	6
 11559  155E  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11560  155F  0087               	movwf	7
 11561  1560  1381               	bcf	1,7
 11562                           
 11563                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 11564  1561  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11565  1562  0086               	movwf	6
 11566  1563  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11567  1564  0087               	movwf	7
 11568  1565  3005               	movlw	5
 11569  1566  1701               	bsf	1,6
 11570                           
 11571                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11572  1567  0020               	movlb	0	; select bank0
 11573  1568  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11574  1569  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11575  156A  0021               	movlb	1	; select bank1
 11576  156B  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11577  156C  0020               	movlb	0	; select bank0
 11578  156D  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11579  156E  0021               	movlb	1	; select bank1
 11580  156F  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11581  1570  0020               	movlb	0	; select bank0
 11582  1571  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11583  1572  3002               	movlw	2
 11584  1573  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11585  1574  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11586  1575  2668  3194         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11587                           
 11588                           ;usb_device.c: 2891: }
 11589  1577  2D7C               	goto	i1l8225
 11590  1578                     L33:	
 11591                           ;usb_device.c: 2892: else
 11592                           ;usb_device.c: 2893: {
 11593                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 11594                           
 11595  1578  0086               	movwf	6
 11596  1579  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11597  157A  0087               	movwf	7
 11598  157B  1701               	bsf	1,6
 11599  157C                     i1l8225:	
 11600                           
 11601                           ;usb_device.c: 2896: }
 11602                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 11603  157C  3004               	movlw	4
 11604  157D  0021               	movlb	1	; select bank1
 11605  157E  064C               	xorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 11606  157F  00CC               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 11607                           
 11608                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11609  1580  18CB               	btfsc	i1USBStdFeatureReqHandler@current_ep_data^(0+128),1
 11610  1581  2D88               	goto	i1l944
 11611  1582  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11612  1583  0086               	movwf	6
 11613  1584  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11614  1585  0087               	movwf	7
 11615  1586  1F81               	btfss	1,7
 11616  1587  2DAF               	goto	i1l8237
 11617  1588                     i1l944:	
 11618                           
 11619                           ;usb_device.c: 2907: {
 11620                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 11621  1588  0020               	movlb	0	; select bank0
 11622  1589  1BD4               	btfsc	84,7	;volatile
 11623  158A  2D8F               	goto	i1l8233
 11624                           
 11625                           ;usb_device.c: 2909: {
 11626                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11627  158B  0854               	movf	84,w	;volatile
 11628  158C  390F               	andlw	15
 11629  158D  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 11630  158E  2D92               	goto	L32
 11631  158F                     i1l8233:	
 11632                           ;usb_device.c: 2911: }
 11633                           
 11634                           
 11635                           ;usb_device.c: 2912: else
 11636                           ;usb_device.c: 2913: {
 11637                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11638  158F  0854               	movf	84,w	;volatile
 11639  1590  390F               	andlw	15
 11640  1591  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 11641  1592                     L32:	
 11642  1592  0086               	movwf	6
 11643  1593  3001               	movlw	1	; select bank2/3
 11644  1594  0087               	movwf	7
 11645  1595  1081               	bcf	1,1
 11646                           
 11647                           ;usb_device.c: 2915: }
 11648                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11649  1596  0021               	movlb	1	; select bank1
 11650  1597  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11651  1598  0086               	movwf	6
 11652  1599  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11653  159A  0087               	movwf	7
 11654  159B  303B               	movlw	59
 11655  159C  0581               	andwf	1,f
 11656                           
 11657                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11658  159D  3005               	movlw	5
 11659  159E  0020               	movlb	0	; select bank0
 11660  159F  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11661  15A0  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11662  15A1  0021               	movlb	1	; select bank1
 11663  15A2  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11664  15A3  0020               	movlb	0	; select bank0
 11665  15A4  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11666  15A5  0021               	movlb	1	; select bank1
 11667  15A6  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11668  15A7  0020               	movlb	0	; select bank0
 11669  15A8  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11670  15A9  3002               	movlw	2
 11671  15AA  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11672  15AB  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11673  15AC  2668  3194         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11674                           
 11675                           ;usb_device.c: 2921: }
 11676  15AE  2DB5               	goto	i1l8239
 11677  15AF                     i1l8237:	
 11678                           
 11679                           ;usb_device.c: 2922: else
 11680                           ;usb_device.c: 2923: {
 11681                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11682  15AF  084C               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 11683  15B0  0086               	movwf	6
 11684  15B1  084D               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 11685  15B2  0087               	movwf	7
 11686  15B3  303B               	movlw	59
 11687  15B4  0581               	andwf	1,f
 11688  15B5                     i1l8239:	
 11689                           
 11690                           ;usb_device.c: 2926: }
 11691                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11692  15B5  0020               	movlb	0	; select bank0
 11693  15B6  0854               	movf	84,w	;volatile
 11694  15B7  390F               	andlw	15
 11695  15B8  3E98               	addlw	152
 11696  15B9  00FB               	movwf	??i1_USBStdFeatureReqHandler
 11697  15BA  300E               	movlw	14
 11698  15BB  01FC               	clrf	??i1_USBStdFeatureReqHandler+1
 11699  15BC  3DFC               	addwfc	??i1_USBStdFeatureReqHandler+1,f
 11700  15BD  087B               	movf	??i1_USBStdFeatureReqHandler,w
 11701  15BE  0021               	movlb	1	; select bank1
 11702  15BF  00C9               	movwf	i1USBStdFeatureReqHandler@pUEP^(0+128)
 11703  15C0  087C               	movf	??i1_USBStdFeatureReqHandler+1,w
 11704  15C1  00CA               	movwf	(i1USBStdFeatureReqHandler@pUEP+1)^(0+128)
 11705                           
 11706                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 11707  15C2  0849               	movf	i1USBStdFeatureReqHandler@pUEP^(0+128),w
 11708  15C3  0086               	movwf	6
 11709  15C4  084A               	movf	(i1USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 11710  15C5  0087               	movwf	7
 11711  15C6  1001               	bcf	1,0
 11712  15C7  0008               	return
 11713  15C8                     __end_ofi1_USBStdFeatureReqHandler:	
 11714  15C8                     __ptext42:	
 11715 ;; *************** function i1_USBDeviceTasks *****************
 11716 ;; Defined at:
 11717 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
 11718 ;; Parameters:    Size  Location     Type
 11719 ;;		None
 11720 ;; Auto vars:     Size  Location     Type
 11721 ;;  USBDeviceTas    1    6[BANK0h] unsigned char 
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  1    wreg      void 
 11724 ;; Registers used:
 11725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11726 ;; Tracked objects:
 11727 ;;		On entry : 1F/0
 11728 ;;		On exit  : 1F/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11732 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11734 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11735 ;;Total ram usage:        2 bytes
 11736 ;; Hardware stack levels used:    1
 11737 ;; Hardware stack levels required when called:    8
 11738 ;; This function calls:
 11739 ;;		i1_USBCtrlEPAllowStatusStage
 11740 ;;		i1_USBCtrlEPService
 11741 ;;		i1_USBDeviceInit
 11742 ;;		i1_USBIncrement1msInternalTimers
 11743 ;;		i1_USBStallHandler
 11744 ;;		i1_USBSuspend
 11745 ;;		i1_USBWakeFromSuspend
 11746 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11747 ;; This function is called by:
 11748 ;;		_INTERRUPT_InterruptManager
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           
 11752                           
 11753                           ;psect for function i1_USBDeviceTasks
 11754  15C8                     i1_USBDeviceTasks:	
 11755                           
 11756                           ;usb_device.c: 479: uint8_t i;
 11757                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 11758                           
 11759                           ;incstack = 0
 11760 ;; hardware stack exceeded
 11761                           ; Regs used in i1_USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11762  15C8  0021               	movlb	1	; select bank1
 11763  15C9  0344               	decf	_USBDeviceState^(0+128),w	;volatile
 11764  15CA  1D03               	btfss	3,2
 11765  15CB  2DD5               	goto	i1l9529
 11766                           
 11767                           ;usb_device.c: 591: {
 11768                           ;usb_device.c: 601: if(!UCONbits.SE0)
 11769  15CC  003D               	movlb	29	; select bank29
 11770  15CD  1A8E               	btfsc	14,5	;volatile
 11771  15CE  2DD5               	goto	i1l9529
 11772                           
 11773                           ;usb_device.c: 602: {
 11774                           ;usb_device.c: 608: {UIR = 0;};
 11775  15CF  0190               	clrf	16	;volatile
 11776                           
 11777                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 11778  15D0  1412               	bsf	18,0	;volatile
 11779                           
 11780                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 11781  15D1  1612               	bsf	18,4	;volatile
 11782                           
 11783                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 11784  15D2  3002               	movlw	2
 11785  15D3  0021               	movlb	1	; select bank1
 11786  15D4  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
 11787  15D5                     i1l9529:	
 11788                           
 11789                           ;usb_device.c: 617: }
 11790                           ;usb_device.c: 618: }
 11791                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 11792  15D5  003D               	movlb	29	; select bank29
 11793  15D6  1910               	btfsc	16,2	;volatile
 11794  15D7  1D12               	btfss	18,2	;volatile
 11795  15D8  2DDC               	goto	i1l9537
 11796                           
 11797                           ;usb_device.c: 635: {
 11798                           ;usb_device.c: 636: (UIR &= 0xFB);
 11799  15D9  1110               	bcf	16,2	;volatile
 11800                           
 11801                           ;usb_device.c: 640: USBWakeFromSuspend();
 11802  15DA  27E9  3194         	fcall	i1_USBWakeFromSuspend
 11803  15DC                     i1l9537:	
 11804                           
 11805                           ;usb_device.c: 642: }
 11806                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 11807  15DC  003D               	movlb	29	; select bank29
 11808  15DD  1C8E               	btfss	14,1	;volatile
 11809  15DE  2DE2               	goto	i1l709
 11810                           
 11811                           ;usb_device.c: 648: {
 11812                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
 11813  15DF  0020               	movlb	0	; select bank0
 11814  15E0  1112               	bcf	18,2	;volatile
 11815                           
 11816                           ;usb_device.c: 650: return;
 11817  15E1  0008               	return
 11818  15E2                     i1l709:	
 11819                           
 11820                           ;usb_device.c: 651: }
 11821                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 11822  15E2  1810               	btfsc	16,0	;volatile
 11823  15E3  1C12               	btfss	18,0	;volatile
 11824  15E4  2DEC               	goto	i1l9551
 11825                           
 11826                           ;usb_device.c: 664: {
 11827                           ;usb_device.c: 665: USBDeviceInit();
 11828  15E5  272D  3194         	fcall	i1_USBDeviceInit
 11829                           
 11830                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 11831  15E7  1512               	bsf	18,2	;volatile
 11832                           
 11833                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 11834  15E8  3004               	movlw	4
 11835  15E9  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
 11836                           
 11837                           ;usb_device.c: 681: (UIR &= 0xFE);
 11838  15EA  003D               	movlb	29	; select bank29
 11839  15EB  1010               	bcf	16,0	;volatile
 11840  15EC                     i1l9551:	
 11841                           
 11842                           ;usb_device.c: 682: }
 11843                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11844  15EC  1A10               	btfsc	16,4	;volatile
 11845  15ED  1E12               	btfss	18,4	;volatile
 11846  15EE  2DF1               	goto	i1l9557
 11847                           
 11848                           ;usb_device.c: 688: {
 11849                           ;usb_device.c: 694: USBSuspend();
 11850  15EF  27D7  3194         	fcall	i1_USBSuspend
 11851  15F1                     i1l9557:	
 11852                           
 11853                           ;usb_device.c: 696: }
 11854                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 11855  15F1  003D               	movlb	29	; select bank29
 11856  15F2  1F10               	btfss	16,6	;volatile
 11857  15F3  2E0E               	goto	i1l9575
 11858                           
 11859                           ;usb_device.c: 709: {
 11860                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 11861  15F4  1F12               	btfss	18,6	;volatile
 11862  15F5  2E01               	goto	i1l9563
 11863                           
 11864                           ;usb_device.c: 712: {
 11865                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11866  15F6  3073               	movlw	115
 11867  15F7  0020               	movlb	0	; select bank0
 11868  15F8  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11869  15F9  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11870  15FA  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11871  15FB  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11872  15FC  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11873  15FD  0ADC               	incf	i1USER_USB_CALLBACK_EVENT_HANDLER@size,f
 11874  15FE  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11875  15FF  2668  3194         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11876  1601                     i1l9563:	
 11877                           
 11878                           ;usb_device.c: 714: }
 11879                           ;usb_device.c: 715: (UIR &= 0xBF);
 11880  1601  003D               	movlb	29	; select bank29
 11881  1602  1310               	bcf	16,6	;volatile
 11882                           
 11883                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 11884  1603  27A8  3194         	fcall	i1_USBIncrement1msInternalTimers
 11885                           
 11886                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 11887  1605  0021               	movlb	1	; select bank1
 11888  1606  0835               	movf	_USBStatusStageTimeoutCounter^(0+128),w
 11889  1607  1D03               	btfss	3,2
 11890                           
 11891                           ;usb_device.c: 736: {
 11892                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 11893  1608  03B5               	decf	_USBStatusStageTimeoutCounter^(0+128),f	;volatile
 11894                           
 11895                           ;usb_device.c: 738: }
 11896                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 11897  1609  0835               	movf	_USBStatusStageTimeoutCounter^(0+128),w	;volatile
 11898  160A  1D03               	btfss	3,2
 11899  160B  2E0E               	goto	i1l9575
 11900                           
 11901                           ;usb_device.c: 745: {
 11902                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 11903  160C  268A  3194         	fcall	i1_USBCtrlEPAllowStatusStage
 11904  160E                     i1l9575:	
 11905                           
 11906                           ;usb_device.c: 747: }
 11907                           ;usb_device.c: 749: }
 11908                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 11909  160E  003D               	movlb	29	; select bank29
 11910  160F  1A90               	btfsc	16,5	;volatile
 11911  1610  1E92               	btfss	18,5	;volatile
 11912  1611  2E14               	goto	i1l9581
 11913                           
 11914                           ;usb_device.c: 752: {
 11915                           ;usb_device.c: 753: USBStallHandler();
 11916  1612  27B9  3194         	fcall	i1_USBStallHandler
 11917  1614                     i1l9581:	
 11918                           
 11919                           ;usb_device.c: 754: }
 11920                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11921  1614  1890               	btfsc	16,1	;volatile
 11922  1615  1C92               	btfss	18,1	;volatile
 11923  1616  2E25               	goto	i1l9589
 11924                           
 11925                           ;usb_device.c: 757: {
 11926                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 11927  1617  30FF               	movlw	255
 11928  1618  0020               	movlb	0	; select bank0
 11929  1619  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11930  161A  307F               	movlw	127
 11931  161B  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11932  161C  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11933  161D  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11934  161E  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11935  161F  0ADC               	incf	i1USER_USB_CALLBACK_EVENT_HANDLER@size,f
 11936  1620  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11937  1621  2668  3194         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11938                           
 11939                           ;usb_device.c: 759: {UEIR = 0;};
 11940  1623  003D               	movlb	29	; select bank29
 11941  1624  0193               	clrf	19	;volatile
 11942  1625                     i1l9589:	
 11943                           
 11944                           ;usb_device.c: 767: }
 11945                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11946  1625  3004               	movlw	4
 11947  1626  0021               	movlb	1	; select bank1
 11948  1627  0244               	subwf	_USBDeviceState^(0+128),w	;volatile
 11949  1628  1803               	skipnc
 11950  1629  2E2D               	goto	i1l719
 11951                           
 11952                           ;usb_device.c: 775: {
 11953                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
 11954  162A  0020               	movlb	0	; select bank0
 11955  162B  1112               	bcf	18,2	;volatile
 11956                           
 11957                           ;usb_device.c: 777: return;
 11958  162C  0008               	return
 11959  162D                     i1l719:	
 11960                           
 11961                           ;usb_device.c: 778: }
 11962                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 11963  162D  003D               	movlb	29	; select bank29
 11964  162E  1D92               	btfss	18,3	;volatile
 11965  162F  2E65               	goto	i1l720
 11966                           
 11967                           ;usb_device.c: 784: {
 11968                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11969  1630  0020               	movlb	0	; select bank0
 11970  1631  01DE               	clrf	i1USBDeviceTasks@i
 11971  1632                     i1l9595:	
 11972  1632  3004               	movlw	4
 11973  1633  025E               	subwf	i1USBDeviceTasks@i,w
 11974  1634  1803               	btfsc	3,0
 11975  1635  2E65               	goto	i1l720
 11976                           
 11977                           ;usb_device.c: 786: {
 11978                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 11979  1636  003D               	movlb	29	; select bank29
 11980  1637  1D90               	btfss	16,3	;volatile
 11981  1638  2E65               	goto	i1l720
 11982                           
 11983                           ;usb_device.c: 788: {
 11984                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 11985  1639  080F               	movf	15,w	;volatile
 11986  163A  0021               	movlb	1	; select bank1
 11987  163B  00C7               	movwf	_USTATcopy^(0+128)	;volatile
 11988                           
 11989                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11990  163C  0C47               	rrf	_USTATcopy^(0+128),w	;volatile
 11991  163D  00FD               	movwf	??i1_USBDeviceTasks
 11992  163E  0CFD               	rrf	??i1_USBDeviceTasks,f
 11993  163F  0C7D               	rrf	??i1_USBDeviceTasks,w
 11994  1640  390F               	andlw	15
 11995  1641  00B6               	movwf	_endpoint_number^(0+128)	;volatile
 11996                           
 11997                           ;usb_device.c: 793: (UIR &= 0xF7);
 11998  1642  003D               	movlb	29	; select bank29
 11999  1643  1190               	bcf	16,3	;volatile
 12000                           
 12001                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 12002  1644  0021               	movlb	1	; select bank1
 12003  1645  1947               	btfsc	_USTATcopy^(0+128),2	;volatile
 12004  1646  2E4A               	goto	i1l9609
 12005                           
 12006                           ;usb_device.c: 799: {
 12007                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 12008  1647  0836               	movf	_endpoint_number^(0+128),w	;volatile
 12009  1648  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12010  1649  2E4C               	goto	L28
 12011  164A                     i1l9609:	
 12012                           ;usb_device.c: 801: }
 12013                           
 12014                           
 12015                           ;usb_device.c: 802: else
 12016                           ;usb_device.c: 803: {
 12017                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 12018  164A  0836               	movf	_endpoint_number^(0+128),w	;volatile
 12019  164B  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12020  164C                     L28:	
 12021  164C  0086               	movwf	6
 12022  164D  3001               	movlw	1	; select bank2/3
 12023  164E  0087               	movwf	7
 12024  164F  0681               	xorwf	1,f
 12025                           
 12026                           ;usb_device.c: 805: }
 12027                           ;usb_device.c: 810: if(endpoint_number == 0)
 12028  1650  0836               	movf	_endpoint_number^(0+128),w	;volatile
 12029  1651  1D03               	btfss	3,2
 12030  1652  2E56               	goto	i1l9615
 12031                           
 12032                           ;usb_device.c: 811: {
 12033                           ;usb_device.c: 812: USBCtrlEPService();
 12034  1653  26EA  3194         	fcall	i1_USBCtrlEPService
 12035                           
 12036                           ;usb_device.c: 813: }
 12037  1655  2E62               	goto	i1l9617
 12038  1656                     i1l9615:	
 12039                           
 12040                           ;usb_device.c: 814: else
 12041                           ;usb_device.c: 815: {
 12042                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 12043  1656  3072               	movlw	114
 12044  1657  0020               	movlb	0	; select bank0
 12045  1658  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12046  1659  30C7               	movlw	low _USTATcopy
 12047  165A  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12048  165B  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12049  165C  3000               	movlw	high _USTATcopy
 12050  165D  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12051  165E  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12052  165F  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12053  1660  2668  3194         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12054  1662                     i1l9617:	
 12055  1662  0020               	movlb	0	; select bank0
 12056  1663  0ADE               	incf	i1USBDeviceTasks@i,f
 12057  1664  2E32               	goto	i1l9595
 12058  1665                     i1l720:	
 12059                           
 12060                           ;usb_device.c: 822: }
 12061                           ;usb_device.c: 823: }
 12062                           ;usb_device.c: 824: }
 12063                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
 12064  1665  0020               	movlb	0	; select bank0
 12065  1666  1112               	bcf	18,2	;volatile
 12066  1667  0008               	return
 12067  1668                     __end_ofi1_USBDeviceTasks:	
 12068  1668                     __ptext58:	
 12069 ;; *************** function i1_USER_USB_CALLBACK_EVENT_HANDLER *****************
 12070 ;; Defined at:
 12071 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
 12072 ;; Parameters:    Size  Location     Type
 12073 ;;  event           2    0[BANK0h] enum E34
 12074 ;;  pdata           2    2[BANK0h] PTR void 
 12075 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 12076 ;;		 -> NULL(0), 
 12077 ;;  size            2    4[BANK0h] unsigned int 
 12078 ;; Auto vars:     Size  Location     Type
 12079 ;;		None
 12080 ;; Return value:  Size  Location     Type
 12081 ;;                  1    wreg      unsigned char 
 12082 ;; Registers used:
 12083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12084 ;; Tracked objects:
 12085 ;;		On entry : 1F/0
 12086 ;;		On exit  : 1E/0
 12087 ;;		Unchanged: 0/0
 12088 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12089 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12092 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;Total ram usage:        6 bytes
 12094 ;; Hardware stack levels used:    1
 12095 ;; Hardware stack levels required when called:    3
 12096 ;; This function calls:
 12097 ;;		i1_CDCInitEP
 12098 ;;		i1_USBCheckCDCRequest
 12099 ;; This function is called by:
 12100 ;;		i1_USBDeviceTasks
 12101 ;;		i1_USBStdSetCfgHandler
 12102 ;;		i1_USBSuspend
 12103 ;;		i1_USBWakeFromSuspend
 12104 ;;		i1_USBCtrlTrfSetupHandler
 12105 ;;		i1_USBCheckStdRequest
 12106 ;;		i1_USBStdFeatureReqHandler
 12107 ;; This function uses a non-reentrant model
 12108 ;;
 12109                           
 12110                           
 12111                           ;psect for function i1_USER_USB_CALLBACK_EVENT_HANDLER
 12112  1668                     i1_USER_USB_CALLBACK_EVENT_HANDLER:	
 12113                           
 12114                           ;usb_device_events.c: 51: switch( (int) event )
 12115                           
 12116                           ;incstack = 0
 12117                           ; Regs used in i1_USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12118  1668  2E6F               	goto	i1l7945
 12119  1669                     i1l7939:	
 12120                           
 12121                           ;usb_device_events.c: 76: CDCInitEP();
 12122  1669  3188  2088         	fcall	i1_CDCInitEP
 12123                           
 12124                           ;usb_device_events.c: 77: break;
 12125  166B  0008               	return
 12126  166C                     i1l7941:	
 12127                           
 12128                           ;usb_device_events.c: 85: USBCheckCDCRequest();
 12129  166C  319C  2454         	fcall	i1_USBCheckCDCRequest
 12130                           
 12131                           ;usb_device_events.c: 86: break;
 12132  166E  0008               	return
 12133  166F                     i1l7945:	
 12134                           
 12135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12136                           ; Switch size 1, requested type "speed"
 12137                           ; Number of cases is 2, Range of values is 0 to 127
 12138                           ; switch strategies available:
 12139                           ; Name         Instructions Cycles
 12140                           ; simple_byte            7     4 (average)
 12141                           ; direct_byte          262     6 (fixed)
 12142                           ; jumptable            260     6 (fixed)
 12143                           ;	Chosen strategy is simple_byte
 12144  166F  0859               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
 12145  1670  3A00               	xorlw	0	; case 0
 12146  1671  1903               	skipnz
 12147  1672  2E77               	goto	i1l10011
 12148  1673  3A7F               	xorlw	127	; case 127
 12149  1674  1903               	skipnz
 12150  1675  2E84               	goto	i1l10013
 12151  1676  2E89               	goto	i1l560
 12152  1677                     i1l10011:	
 12153                           
 12154                           ; Switch size 1, requested type "speed"
 12155                           ; Number of cases is 8, Range of values is 1 to 117
 12156                           ; switch strategies available:
 12157                           ; Name         Instructions Cycles
 12158                           ; direct_byte          243     9 (fixed)
 12159                           ; simple_byte           25    13 (average)
 12160                           ; jumptable            263     9 (fixed)
 12161                           ;	Chosen strategy is direct_byte
 12162  1677  0858               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 12163  1678  3EFF               	addlw	-1
 12164  1679  1C03               	skipc
 12165  167A  0008               	return
 12166  167B  0084               	movwf	4
 12167  167C  3075               	movlw	117
 12168  167D  0204               	subwf	4,w
 12169  167E  1803               	skipnc
 12170  167F  0008               	return
 12171  1680  3191               	movlp	high i1S10015
 12172  1681  3504               	lslf	4,w
 12173  1682  3E00               	addlw	low i1S10015
 12174  1683  0082               	movwf	2
 12175  1684                     i1l10013:	
 12176                           
 12177                           ; Switch size 1, requested type "speed"
 12178                           ; Number of cases is 1, Range of values is 255 to 255
 12179                           ; switch strategies available:
 12180                           ; Name         Instructions Cycles
 12181                           ; simple_byte            4     3 (average)
 12182                           ; direct_byte            7     5 (fixed)
 12183                           ; jumptable            263     9 (fixed)
 12184                           ;	Chosen strategy is simple_byte
 12185  1684  0858               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 12186  1685  3AFF               	xorlw	255	; case 255
 12187  1686  1903               	skipnz
 12188  1687  2E89               	goto	i1l560
 12189  1688  2E89               	goto	i1l560
 12190  1689                     i1l560:	
 12191  1689  0008               	return
 12192  168A                     __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER:	
 12193  168A                     __ptext66:	
 12194 ;; *************** function i1_USBCtrlEPAllowStatusStage *****************
 12195 ;; Defined at:
 12196 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;		None
 12199 ;; Auto vars:     Size  Location     Type
 12200 ;;		None
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  1    wreg      void 
 12203 ;; Registers used:
 12204 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12205 ;; Tracked objects:
 12206 ;;		On entry : 1E/1
 12207 ;;		On exit  : 1C/0
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12214 ;;Total ram usage:        2 bytes
 12215 ;; Hardware stack levels used:    1
 12216 ;; This function calls:
 12217 ;;		Nothing
 12218 ;; This function is called by:
 12219 ;;		i1_USBDeviceTasks
 12220 ;;		i1_USBCtrlEPServiceComplete
 12221 ;;		i1_USBCtrlTrfRxService
 12222 ;; This function uses a non-reentrant model
 12223 ;;
 12224                           
 12225                           
 12226                           ;psect for function i1_USBCtrlEPAllowStatusStage
 12227  168A                     i1_USBCtrlEPAllowStatusStage:	
 12228                           
 12229                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 12230                           
 12231                           ;incstack = 0
 12232                           ; Regs used in i1_USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 12233  168A  0022               	movlb	2	; select bank2
 12234  168B  083E               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
 12235  168C  1D03               	btfss	3,2
 12236  168D  0008               	return
 12237                           
 12238                           ;usb_device.c: 1424: {
 12239                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 12240  168E  3001               	movlw	1
 12241  168F  00BE               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12242                           
 12243                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 12244  1690  083D               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
 12245  1691  1D03               	btfss	3,2
 12246  1692  0008               	return
 12247                           
 12248                           ;usb_device.c: 1427: {
 12249                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 12250  1693  3001               	movlw	1
 12251  1694  00BD               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12252                           
 12253                           ;usb_device.c: 1432: if(controlTransferState == 2)
 12254  1695  3002               	movlw	2
 12255  1696  0021               	movlb	1	; select bank1
 12256  1697  0637               	xorwf	_controlTransferState^(0+128),w	;volatile
 12257  1698  1D03               	btfss	3,2
 12258  1699  2EAC               	goto	i1l5133
 12259                           
 12260                           ;usb_device.c: 1433: {
 12261                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 12262  169A  0827               	movf	_pBDTEntryIn^(0+128),w
 12263  169B  0086               	movwf	6
 12264  169C  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 12265  169D  0087               	movwf	7
 12266  169E  3141               	addfsr 1,1
 12267  169F  0181               	clrf	1
 12268                           
 12269                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12270  16A0  0827               	movf	_pBDTEntryIn^(0+128),w
 12271  16A1  0086               	movwf	6
 12272  16A2  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 12273  16A3  0087               	movwf	7
 12274  16A4  3048               	movlw	72
 12275  16A5  0081               	movwf	1
 12276                           
 12277                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12278  16A6  0827               	movf	_pBDTEntryIn^(0+128),w
 12279  16A7  0086               	movwf	6
 12280  16A8  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 12281  16A9  0087               	movwf	7
 12282  16AA  1781               	bsf	1,7
 12283                           
 12284                           ;usb_device.c: 1437: }
 12285  16AB  0008               	return
 12286  16AC                     i1l5133:	
 12287                           
 12288                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 12289  16AC  0B37               	decfsz	_controlTransferState^(0+128),w	;volatile
 12290  16AD  0008               	return
 12291                           
 12292                           ;usb_device.c: 1439: {
 12293                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 12294  16AE  0022               	movlb	2	; select bank2
 12295  16AF  01BF               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 12296                           
 12297                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 16;
 12298  16B0  0021               	movlb	1	; select bank1
 12299  16B1  0A39               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
 12300  16B2  0086               	movwf	6
 12301  16B3  3010               	movlw	16
 12302  16B4  0187               	clrf	7
 12303  16B5  0081               	movwf	1
 12304                           
 12305                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 12306  16B6  3050               	movlw	80
 12307  16B7  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 12308  16B8  01F1               	clrf	??i1_USBCtrlEPAllowStatusStage+1
 12309  16B9  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12310  16BA  3E02               	addlw	2
 12311  16BB  0086               	movwf	6
 12312  16BC  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 12313  16BD  3FC0               	movwi [0]fsr1
 12314  16BE  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 12315  16BF  3FC1               	movwi [1]fsr1
 12316                           
 12317                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12318  16C0  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12319  16C1  0086               	movwf	6
 12320  16C2  3004               	movlw	4
 12321  16C3  0081               	movwf	1
 12322                           
 12323                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12324  16C4  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12325  16C5  0086               	movwf	6
 12326  16C6  3001               	movlw	1
 12327  16C7  1781               	bsf	1,7
 12328                           
 12329                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 12330  16C8  0022               	movlb	2	; select bank2
 12331  16C9  00BF               	movwf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 12332                           
 12333                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 16;
 12334  16CA  0021               	movlb	1	; select bank1
 12335  16CB  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 12336  16CC  3E01               	addlw	1
 12337  16CD  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 12338  16CE  3000               	movlw	0
 12339  16CF  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 12340  16D0  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 12341  16D1  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 12342  16D2  0086               	movwf	6
 12343  16D3  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 12344  16D4  0087               	movwf	7
 12345  16D5  3010               	movlw	16
 12346  16D6  0081               	movwf	1
 12347                           
 12348                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 12349  16D7  3050               	movlw	80
 12350  16D8  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 12351  16D9  01F1               	clrf	??i1_USBCtrlEPAllowStatusStage+1
 12352  16DA  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 12353  16DB  0086               	movwf	6
 12354  16DC  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 12355  16DD  0087               	movwf	7
 12356  16DE  3142               	addfsr 1,2
 12357  16DF  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 12358  16E0  3FC0               	movwi [0]fsr1
 12359  16E1  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 12360  16E2  3FC1               	movwi [1]fsr1
 12361                           
 12362                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12363  16E3  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 12364  16E4  0086               	movwf	6
 12365  16E5  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 12366  16E6  0087               	movwf	7
 12367  16E7  3080               	movlw	128
 12368  16E8  0081               	movwf	1
 12369  16E9  0008               	return
 12370  16EA                     __end_ofi1_USBCtrlEPAllowStatusStage:	
 12371  16EA                     __ptext48:	
 12372 ;; *************** function i1_USBCtrlEPService *****************
 12373 ;; Defined at:
 12374 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;		None
 12377 ;; Auto vars:     Size  Location     Type
 12378 ;;		None
 12379 ;; Return value:  Size  Location     Type
 12380 ;;                  1    wreg      void 
 12381 ;; Registers used:
 12382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12383 ;; Tracked objects:
 12384 ;;		On entry : 1F/1
 12385 ;;		On exit  : 1C/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12390 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;Total ram usage:        3 bytes
 12393 ;; Hardware stack levels used:    1
 12394 ;; Hardware stack levels required when called:    7
 12395 ;; This function calls:
 12396 ;;		i1_USBCtrlTrfInHandler
 12397 ;;		i1_USBCtrlTrfOutHandler
 12398 ;;		i1_USBCtrlTrfSetupHandler
 12399 ;; This function is called by:
 12400 ;;		i1_USBDeviceTasks
 12401 ;; This function uses a non-reentrant model
 12402 ;;
 12403                           
 12404                           
 12405                           ;psect for function i1_USBCtrlEPService
 12406  16EA                     i1_USBCtrlEPService:	
 12407                           
 12408                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 12409                           
 12410                           ;incstack = 0
 12411 ;; hardware stack exceeded
 12412                           ; Regs used in i1_USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12413  16EA  302D               	movlw	45
 12414  16EB  00B5               	movwf	_USBStatusStageTimeoutCounter^(0+128)	;volatile
 12415                           
 12416                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 12417  16EC  0847               	movf	_USTATcopy^(0+128),w	;volatile
 12418  16ED  39FD               	andlw	253
 12419  16EE  1D03               	btfss	3,2
 12420  16EF  2F24               	goto	i1l8821
 12421                           
 12422                           ;usb_device.c: 2383: {
 12423                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 12424  16F0  3647               	lsrf	_USTATcopy^(0+128),w	;volatile
 12425  16F1  393F               	andlw	63
 12426  16F2  0709               	addwf	9,w
 12427  16F3  0709               	addwf	9,w
 12428  16F4  3E20               	addlw	32
 12429  16F5  00B9               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
 12430                           
 12431                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12432  16F6  00B2               	movwf	_pBDTEntryEP0OutNext^(0+128)
 12433  16F7  39FF               	andlw	255
 12434  16F8  1D03               	skipz
 12435  16F9  3000               	movlw	0
 12436  16FA  00B3               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 12437                           
 12438                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 12439  16FB  3004               	movlw	4
 12440  16FC  0632               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
 12441  16FD  00B2               	movwf	_pBDTEntryEP0OutNext^(0+128)
 12442                           
 12443                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12444  16FE  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12445  16FF  0086               	movwf	6
 12446  1700  0187               	clrf	7
 12447  1701  0C01               	rrf	1,w
 12448  1702  0C89               	rrf	9,f
 12449  1703  390F               	andlw	15
 12450  1704  3A0D               	xorlw	13
 12451  1705  1D03               	skipz
 12452  1706  2F21               	goto	i1l8819
 12453                           
 12454                           ;usb_device.c: 2400: {
 12455                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
 12456  1707  3050               	movlw	80
 12457  1708  0086               	movwf	6
 12458  1709  0021               	movlb	1	; select bank1
 12459  170A  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12460  170B  3E02               	addlw	2
 12461  170C  0084               	movwf	4
 12462  170D  0185               	clrf	5
 12463  170E  3F00               	moviw [0]fsr0
 12464  170F  00CE               	movwf	??i1_USBCtrlEPService^(0+128)
 12465  1710  3F01               	moviw [1]fsr0
 12466  1711  00CF               	movwf	(??i1_USBCtrlEPService^(0+128)+1)
 12467  1712  084E               	movf	??i1_USBCtrlEPService^(0+128),w
 12468  1713  0084               	movwf	4
 12469  1714  084F               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 12470  1715  0085               	movwf	5
 12471  1716  3008               	movlw	8
 12472  1717  00D0               	movwf	(??i1_USBCtrlEPService+2)^(0+128)
 12473  1718  0850               	movf	(??i1_USBCtrlEPService+2)^(0+128),w
 12474  1719  1903               	skipnz
 12475  171A  2F1F               	goto	i1l8817
 12476  171B                     u835_2m0:	
 12477  171B  0012               	moviw fsr0++
 12478  171C  001E               	movwi fsr1++
 12479  171D  0BD0               	decfsz	(??i1_USBCtrlEPService+2)^(0+128),f
 12480  171E  2F1B               	goto	u835_2m0
 12481  171F                     i1l8817:	
 12482                           
 12483                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 12484  171F  242D               	fcall	i1_USBCtrlTrfSetupHandler
 12485                           
 12486                           ;usb_device.c: 2409: }
 12487  1720  0008               	return
 12488  1721                     i1l8819:	
 12489                           
 12490                           ;usb_device.c: 2410: else
 12491                           ;usb_device.c: 2411: {
 12492                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 12493  1721  319E  266F         	fcall	i1_USBCtrlTrfOutHandler
 12494  1723  0008               	return
 12495  1724                     i1l8821:	
 12496                           
 12497                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 12498  1724  30FD               	movlw	253
 12499  1725  0547               	andwf	_USTATcopy^(0+128),w	;volatile
 12500  1726  00CE               	movwf	??i1_USBCtrlEPService^(0+128)
 12501  1727  3A04               	xorlw	4
 12502  1728  1D03               	btfss	3,2
 12503  1729  0008               	return
 12504                           
 12505                           ;usb_device.c: 2417: {
 12506                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 12507  172A  3193  2378         	fcall	i1_USBCtrlTrfInHandler
 12508  172C  0008               	return
 12509  172D                     __end_ofi1_USBCtrlEPService:	
 12510  172D                     __ptext47:	
 12511 ;; *************** function i1_USBDeviceInit *****************
 12512 ;; Defined at:
 12513 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
 12514 ;; Parameters:    Size  Location     Type
 12515 ;;		None
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;  USBDeviceIni    2    0[COMMON] PTR unsigned char 
 12518 ;;		 -> UEP1(1), 
 12519 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
 12520 ;;  USBDeviceIni    1    2[COMMON] unsigned char 
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  1    wreg      void 
 12523 ;; Registers used:
 12524 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12525 ;; Tracked objects:
 12526 ;;		On entry : 1F/1D
 12527 ;;		On exit  : 1F/1
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12533 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12534 ;;Total ram usage:        4 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; This function calls:
 12537 ;;		Nothing
 12538 ;; This function is called by:
 12539 ;;		i1_USBDeviceTasks
 12540 ;; This function uses a non-reentrant model
 12541 ;;
 12542                           
 12543                           
 12544                           ;psect for function i1_USBDeviceInit
 12545  172D                     i1_USBDeviceInit:	
 12546                           
 12547                           ;usb_device.c: 279: uint8_t i;
 12548                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 12549                           
 12550                           ;incstack = 0
 12551                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 12552  172D  0021               	movlb	1	; select bank1
 12553  172E  1112               	bcf	18,2	;volatile
 12554                           
 12555                           ;usb_device.c: 285: ;
 12556                           ;usb_device.c: 288: {UEIR = 0;};
 12557  172F  003D               	movlb	29	; select bank29
 12558  1730  0193               	clrf	19	;volatile
 12559                           
 12560                           ;usb_device.c: 291: {UIR = 0;};
 12561  1731  0190               	clrf	16	;volatile
 12562                           
 12563                           ;usb_device.c: 294: UEP0 = 0;
 12564  1732  0198               	clrf	24	;volatile
 12565                           
 12566                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
 12567  1733  300E               	movlw	14
 12568  1734  00F1               	movwf	i1USBDeviceInit@p+1
 12569  1735  3099               	movlw	153
 12570  1736  00F0               	movwf	i1USBDeviceInit@p
 12571  1737  01F2               	clrf	i1USBDeviceInit@i_1567
 12572  1738                     i1l6071:	
 12573  1738  0870               	movf	i1USBDeviceInit@p,w
 12574  1739  0086               	movwf	6
 12575  173A  0871               	movf	i1USBDeviceInit@p+1,w
 12576  173B  0087               	movwf	7
 12577  173C  0181               	clrf	1
 12578  173D  0AF0               	incf	i1USBDeviceInit@p,f
 12579  173E  1903               	skipnz
 12580  173F  0AF1               	incf	i1USBDeviceInit@p+1,f
 12581  1740  3002               	movlw	2
 12582  1741  0AF2               	incf	i1USBDeviceInit@i_1567,f
 12583  1742  0272               	subwf	i1USBDeviceInit@i_1567,w
 12584  1743  1C03               	skipc
 12585  1744  2F38               	goto	i1l6071
 12586                           
 12587                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12588  1745  3016               	movlw	22
 12589  1746  0091               	movwf	17	;volatile
 12590  1747  309F               	movlw	159
 12591  1748  0097               	movwf	23	;volatile
 12592  1749  307B               	movlw	123
 12593  174A  0092               	movwf	18	;volatile
 12594                           
 12595                           ;usb_device.c: 301: ;
 12596                           ;usb_device.c: 304: ;
 12597                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 12598  174B  01F3               	clrf	i1USBDeviceInit@i
 12599  174C                     i1l6087:	
 12600                           
 12601                           ;usb_device.c: 308: {
 12602                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 12603  174C  0873               	movf	i1USBDeviceInit@i,w
 12604  174D  0709               	addwf	9,w
 12605  174E  0709               	addwf	9,w
 12606  174F  3E20               	addlw	32
 12607  1750  0086               	movwf	6
 12608  1751  3000               	movlw	0
 12609  1752  0187               	clrf	7
 12610  1753  3FC0               	movwi [0]fsr1
 12611  1754  3FC1               	movwi [1]fsr1
 12612  1755  3FC2               	movwi [2]fsr1
 12613  1756  3FC3               	movwi [3]fsr1
 12614  1757  300C               	movlw	12
 12615  1758  0AF3               	incf	i1USBDeviceInit@i,f
 12616  1759  0273               	subwf	i1USBDeviceInit@i,w
 12617  175A  1C03               	skipc
 12618  175B  2F4C               	goto	i1l6087
 12619                           
 12620                           ;usb_device.c: 310: }
 12621                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 12622  175C  170E               	bsf	14,6	;volatile
 12623                           
 12624                           ;usb_device.c: 316: UADDR = 0x00;
 12625  175D  0196               	clrf	22	;volatile
 12626                           
 12627                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 12628  175E  120E               	bcf	14,4	;volatile
 12629                           
 12630                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 12631  175F  130E               	bcf	14,6	;volatile
 12632  1760                     i1l6099:	
 12633                           
 12634                           ;usb_device.c: 326: {
 12635                           ;usb_device.c: 327: (UIR &= 0xF7);
 12636  1760  1190               	bcf	16,3	;volatile
 12637                           
 12638                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 12639  1761  0021               	movlb	1	; select bank1
 12640  1762  01AF               	clrf	(_inPipes^(0+128)+2)	;volatile
 12641                           
 12642                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 12643  1763  01A2               	clrf	(_outPipes^(0+128)+2)	;volatile
 12644                           
 12645                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 12646  1764  01A3               	clrf	(_outPipes^(0+128)+3)	;volatile
 12647  1765  01A4               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
 12648                           
 12649                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 12650  1766  003D               	movlb	29	; select bank29
 12651  1767  1990               	btfsc	16,3	;volatile
 12652  1768  2F60               	goto	i1l6099
 12653                           
 12654                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 12655  1769  3001               	movlw	1
 12656  176A  0022               	movlb	2	; select bank2
 12657  176B  00BE               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12658                           
 12659                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 12660  176C  00BD               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12661                           
 12662                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 12663  176D  01BC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 12664                           
 12665                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 12666  176E  01BB               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 12667                           
 12668                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 12669  176F  01C0               	clrf	_USBBusIsSuspended^(0+256)	;volatile
 12670                           
 12671                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 12672  1770  01F3               	clrf	i1USBDeviceInit@i
 12673  1771                     i1l6115:	
 12674                           
 12675                           ;usb_device.c: 346: {
 12676                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 12677  1771  3573               	lslf	i1USBDeviceInit@i,w
 12678  1772  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 12679  1773  0086               	movwf	6
 12680  1774  3000               	movlw	0
 12681  1775  0187               	clrf	7
 12682  1776  3FC0               	movwi [0]fsr1
 12683  1777  3FC1               	movwi [1]fsr1
 12684                           
 12685                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 12686  1778  3573               	lslf	i1USBDeviceInit@i,w
 12687  1779  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12688  177A  0086               	movwf	6
 12689  177B  3001               	movlw	1	; select bank2/3
 12690  177C  0087               	movwf	7
 12691  177D  3000               	movlw	0
 12692  177E  3FC0               	movwi [0]fsr1
 12693  177F  3FC1               	movwi [1]fsr1
 12694                           
 12695                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 12696  1780  0873               	movf	i1USBDeviceInit@i,w
 12697  1781  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12698  1782  0086               	movwf	6
 12699  1783  0181               	clrf	1
 12700                           
 12701                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 12702  1784  0873               	movf	i1USBDeviceInit@i,w
 12703  1785  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12704  1786  0086               	movwf	6
 12705  1787  3003               	movlw	3
 12706  1788  0181               	clrf	1
 12707  1789  0AF3               	incf	i1USBDeviceInit@i,f
 12708  178A  0273               	subwf	i1USBDeviceInit@i,w
 12709  178B  1C03               	skipc
 12710  178C  2F71               	goto	i1l6115
 12711                           
 12712                           ;usb_device.c: 351: }
 12713                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12714  178D  3028               	movlw	40
 12715  178E  0021               	movlb	1	; select bank1
 12716  178F  00A7               	movwf	_pBDTEntryIn^(0+128)
 12717  1790  3016               	movlw	22
 12718  1791  01A8               	clrf	(_pBDTEntryIn+1)^(0+128)
 12719                           
 12720                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 12721  1792  003D               	movlb	29	; select bank29
 12722  1793  0098               	movwf	24	;volatile
 12723                           
 12724                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 12725  1794  0020               	movlb	0	; select bank0
 12726  1795  01A3               	clrf	35	;volatile
 12727  1796  3050               	movlw	80
 12728  1797  00A2               	movwf	34	;volatile
 12729                           
 12730                           ;usb_device.c: 359: BDT[0].CNT = 16;
 12731  1798  3010               	movlw	16
 12732  1799  00A1               	movwf	33	;volatile
 12733                           
 12734                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 12735  179A  3004               	movlw	4
 12736  179B  00A0               	movwf	32	;volatile
 12737                           
 12738                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 12739  179C  17A0               	bsf	32,7	;volatile
 12740                           
 12741                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 12742  179D  0021               	movlb	1	; select bank1
 12743  179E  01C8               	clrf	_USBActiveConfiguration^(0+128)	;volatile
 12744                           
 12745                           ;usb_device.c: 366: USB1msTickCount = 0;
 12746  179F  0022               	movlb	2	; select bank2
 12747  17A0  01A6               	clrf	_USB1msTickCount^(0+256)	;volatile
 12748  17A1  01A7               	clrf	(_USB1msTickCount+1)^(0+256)	;volatile
 12749  17A2  01A8               	clrf	(_USB1msTickCount+2)^(0+256)	;volatile
 12750  17A3  01A9               	clrf	(_USB1msTickCount+3)^(0+256)	;volatile
 12751                           
 12752                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 12753  17A4  01BA               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
 12754                           
 12755                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 12756  17A5  0021               	movlb	1	; select bank1
 12757  17A6  01C4               	clrf	_USBDeviceState^(0+128)	;volatile
 12758  17A7  0008               	return
 12759  17A8                     __end_ofi1_USBDeviceInit:	
 12760  17A8                     __ptext46:	
 12761 ;; *************** function i1_USBIncrement1msInternalTimers *****************
 12762 ;; Defined at:
 12763 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;		None
 12766 ;; Auto vars:     Size  Location     Type
 12767 ;;		None
 12768 ;; Return value:  Size  Location     Type
 12769 ;;                  1    wreg      void 
 12770 ;; Registers used:
 12771 ;;		wreg, status,2, status,0
 12772 ;; Tracked objects:
 12773 ;;		On entry : 1F/1D
 12774 ;;		On exit  : 1F/2
 12775 ;;		Unchanged: 0/0
 12776 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;Total ram usage:        0 bytes
 12782 ;; Hardware stack levels used:    1
 12783 ;; This function calls:
 12784 ;;		Nothing
 12785 ;; This function is called by:
 12786 ;;		i1_USBDeviceTasks
 12787 ;; This function uses a non-reentrant model
 12788 ;;
 12789                           
 12790                           
 12791                           ;psect for function i1_USBIncrement1msInternalTimers
 12792  17A8                     i1_USBIncrement1msInternalTimers:	
 12793                           
 12794                           ;usb_device.c: 3033: USB1msTickCount++;
 12795                           
 12796                           ;incstack = 0
 12797                           ; Regs used in i1_USBIncrement1msInternalTimers: [wreg+status,2+status,0]
 12798  17A8  3001               	movlw	1
 12799  17A9  0022               	movlb	2	; select bank2
 12800  17AA  07A6               	addwf	_USB1msTickCount^(0+256),f	;volatile
 12801  17AB  3000               	movlw	0
 12802  17AC  3DA7               	addwfc	(_USB1msTickCount+1)^(0+256),f	;volatile
 12803  17AD  3DA8               	addwfc	(_USB1msTickCount+2)^(0+256),f	;volatile
 12804  17AE  3DA9               	addwfc	(_USB1msTickCount+3)^(0+256),f	;volatile
 12805                           
 12806                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 12807  17AF  0840               	movf	_USBBusIsSuspended^(0+256),w	;volatile
 12808  17B0  1D03               	btfss	3,2
 12809  17B1  0008               	return
 12810                           
 12811                           ;usb_device.c: 3035: {
 12812                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 12813  17B2  0ABA               	incf	_USBTicksSinceSuspendEnd^(0+256),f	;volatile
 12814                           
 12815                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 12816  17B3  083A               	movf	_USBTicksSinceSuspendEnd^(0+256),w	;volatile
 12817  17B4  1D03               	btfss	3,2
 12818  17B5  0008               	return
 12819                           
 12820                           ;usb_device.c: 3039: {
 12821                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 12822  17B6  30FF               	movlw	255
 12823  17B7  00BA               	movwf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
 12824  17B8  0008               	return
 12825  17B9                     __end_ofi1_USBIncrement1msInternalTimers:	
 12826  17B9                     __ptext45:	
 12827 ;; *************** function i1_USBStallHandler *****************
 12828 ;; Defined at:
 12829 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
 12830 ;; Parameters:    Size  Location     Type
 12831 ;;		None
 12832 ;; Auto vars:     Size  Location     Type
 12833 ;;		None
 12834 ;; Return value:  Size  Location     Type
 12835 ;;                  1    wreg      void 
 12836 ;; Registers used:
 12837 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12838 ;; Tracked objects:
 12839 ;;		On entry : 1F/1D
 12840 ;;		On exit  : 1F/1D
 12841 ;;		Unchanged: 0/0
 12842 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12847 ;;Total ram usage:        0 bytes
 12848 ;; Hardware stack levels used:    1
 12849 ;; This function calls:
 12850 ;;		Nothing
 12851 ;; This function is called by:
 12852 ;;		i1_USBDeviceTasks
 12853 ;; This function uses a non-reentrant model
 12854 ;;
 12855                           
 12856                           
 12857                           ;psect for function i1_USBStallHandler
 12858  17B9                     i1_USBStallHandler:	
 12859                           
 12860                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 12861                           
 12862                           ;incstack = 0
 12863                           ; Regs used in i1_USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12864  17B9  1C18               	btfss	24,0	;volatile
 12865  17BA  2FD5               	goto	i1l6151
 12866                           
 12867                           ;usb_device.c: 2215: {
 12868                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 12869  17BB  0021               	movlb	1	; select bank1
 12870  17BC  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12871  17BD  0086               	movwf	6
 12872  17BE  3080               	movlw	128
 12873  17BF  0187               	clrf	7
 12874  17C0  0601               	xorwf	1,w
 12875  17C1  1D03               	btfss	3,2
 12876  17C2  2FD3               	goto	i1l6149
 12877  17C3  0827               	movf	_pBDTEntryIn^(0+128),w
 12878  17C4  0086               	movwf	6
 12879  17C5  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 12880  17C6  0087               	movwf	7
 12881  17C7  3084               	movlw	132
 12882  17C8  0601               	xorwf	1,w
 12883  17C9  1D03               	btfss	3,2
 12884  17CA  2FD3               	goto	i1l6149
 12885                           
 12886                           ;usb_device.c: 2218: {
 12887                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12888  17CB  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12889  17CC  0086               	movwf	6
 12890  17CD  300C               	movlw	12
 12891  17CE  0187               	clrf	7
 12892  17CF  0081               	movwf	1
 12893                           
 12894                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12895  17D0  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12896  17D1  0086               	movwf	6
 12897  17D2  1781               	bsf	1,7
 12898  17D3                     i1l6149:	
 12899                           
 12900                           ;usb_device.c: 2222: }
 12901                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 12902  17D3  003D               	movlb	29	; select bank29
 12903  17D4  1018               	bcf	24,0	;volatile
 12904  17D5                     i1l6151:	
 12905                           
 12906                           ;usb_device.c: 2224: }
 12907                           ;usb_device.c: 2226: (UIR &= 0xDF);
 12908  17D5  1290               	bcf	16,5	;volatile
 12909  17D6  0008               	return
 12910  17D7                     __end_ofi1_USBStallHandler:	
 12911  17D7                     __ptext44:	
 12912 ;; *************** function i1_USBSuspend *****************
 12913 ;; Defined at:
 12914 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
 12915 ;; Parameters:    Size  Location     Type
 12916 ;;		None
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;		None
 12919 ;; Return value:  Size  Location     Type
 12920 ;;                  1    wreg      void 
 12921 ;; Registers used:
 12922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12923 ;; Tracked objects:
 12924 ;;		On entry : 1F/1D
 12925 ;;		On exit  : 1E/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12932 ;;Total ram usage:        0 bytes
 12933 ;; Hardware stack levels used:    1
 12934 ;; Hardware stack levels required when called:    4
 12935 ;; This function calls:
 12936 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12937 ;; This function is called by:
 12938 ;;		i1_USBDeviceTasks
 12939 ;; This function uses a non-reentrant model
 12940 ;;
 12941                           
 12942                           
 12943                           ;psect for function i1_USBSuspend
 12944  17D7                     i1_USBSuspend:	
 12945                           
 12946                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 12947                           
 12948                           ;incstack = 0
 12949 ;; hardware stack exceeded
 12950                           ; Regs used in i1_USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12951  17D7  1512               	bsf	18,2	;volatile
 12952                           
 12953                           ;usb_device.c: 2271: (UIR &= 0xEF);
 12954  17D8  1210               	bcf	16,4	;volatile
 12955                           
 12956                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 12957  17D9  148E               	bsf	14,1	;volatile
 12958                           
 12959                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 12960  17DA  3001               	movlw	1
 12961  17DB  0022               	movlb	2	; select bank2
 12962  17DC  00C0               	movwf	_USBBusIsSuspended^(0+256)	;volatile
 12963                           
 12964                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 12965  17DD  01BA               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
 12966                           
 12967                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12968  17DE  3075               	movlw	117
 12969  17DF  0020               	movlb	0	; select bank0
 12970  17E0  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12971  17E1  3000               	movlw	0
 12972  17E2  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12973  17E3  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12974  17E4  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12975  17E5  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12976  17E6  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12977  17E7  2668               	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12978  17E8  0008               	return
 12979  17E9                     __end_ofi1_USBSuspend:	
 12980  17E9                     __ptext43:	
 12981 ;; *************** function i1_USBWakeFromSuspend *****************
 12982 ;; Defined at:
 12983 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;		None
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;		None
 12988 ;; Return value:  Size  Location     Type
 12989 ;;                  1    wreg      void 
 12990 ;; Registers used:
 12991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12992 ;; Tracked objects:
 12993 ;;		On entry : 1F/1D
 12994 ;;		On exit  : 1F/2
 12995 ;;		Unchanged: 0/0
 12996 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13001 ;;Total ram usage:        0 bytes
 13002 ;; Hardware stack levels used:    1
 13003 ;; Hardware stack levels required when called:    4
 13004 ;; This function calls:
 13005 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13006 ;; This function is called by:
 13007 ;;		i1_USBDeviceTasks
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011                           
 13012                           ;psect for function i1_USBWakeFromSuspend
 13013  17E9                     i1_USBWakeFromSuspend:	
 13014                           
 13015                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 13016                           
 13017                           ;incstack = 0
 13018 ;; hardware stack exceeded
 13019                           ; Regs used in i1_USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13020  17E9  0022               	movlb	2	; select bank2
 13021  17EA  01C0               	clrf	_USBBusIsSuspended^(0+256)	;volatile
 13022                           
 13023                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 13024  17EB  3074               	movlw	116
 13025  17EC  0020               	movlb	0	; select bank0
 13026  17ED  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 13027  17EE  3000               	movlw	0
 13028  17EF  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 13029  17F0  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 13030  17F1  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 13031  17F2  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 13032  17F3  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 13033  17F4  2668  3194         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 13034                           
 13035                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 13036  17F6  003D               	movlb	29	; select bank29
 13037  17F7  108E               	bcf	14,1	;volatile
 13038                           
 13039                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 13040  17F8  1112               	bcf	18,2	;volatile
 13041  17F9                     i1l869:	
 13042                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 13043                           
 13044  17F9  1D10               	btfss	16,2	;volatile
 13045  17FA  2FFD               	goto	i1l8801
 13046                           
 13047                           ;usb_device.c: 2343: {
 13048                           ;usb_device.c: 2344: (UIR &= 0xFB);
 13049  17FB  1110               	bcf	16,2	;volatile
 13050  17FC  2FF9               	goto	i1l869
 13051  17FD                     i1l8801:	
 13052                           
 13053                           ;usb_device.c: 2345: }
 13054                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 13055  17FD  0022               	movlb	2	; select bank2
 13056  17FE  01BA               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
 13057  17FF  0008               	return
 13058  1800                     __end_ofi1_USBWakeFromSuspend:	
 13059                           
 13060                           	psect	text50
 13061  12A3                     __ptext50:	
 13062 ;; *************** function i1_USBCtrlEPServiceComplete *****************
 13063 ;; Defined at:
 13064 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
 13065 ;; Parameters:    Size  Location     Type
 13066 ;;		None
 13067 ;; Auto vars:     Size  Location     Type
 13068 ;;		None
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  1    wreg      void 
 13071 ;; Registers used:
 13072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13073 ;; Tracked objects:
 13074 ;;		On entry : 1E/1
 13075 ;;		On exit  : 1C/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13081 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13082 ;;Total ram usage:        2 bytes
 13083 ;; Hardware stack levels used:    1
 13084 ;; Hardware stack levels required when called:    2
 13085 ;; This function calls:
 13086 ;;		i1_USBCtrlEPAllowDataStage
 13087 ;;		i1_USBCtrlEPAllowStatusStage
 13088 ;; This function is called by:
 13089 ;;		i1_USBCtrlTrfSetupHandler
 13090 ;; This function uses a non-reentrant model
 13091 ;;
 13092                           
 13093                           
 13094                           ;psect for function i1_USBCtrlEPServiceComplete
 13095  12A3                     i1_USBCtrlEPServiceComplete:	
 13096                           
 13097                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 13098                           
 13099                           ;incstack = 0
 13100 ;; hardware stack exceeded
 13101                           ; Regs used in i1_USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13102  12A3  003D               	movlb	29	; select bank29
 13103  12A4  120E               	bcf	14,4	;volatile
 13104                           
 13105                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 13106  12A5  0021               	movlb	1	; select bank1
 13107  12A6  1BAF               	btfsc	(_inPipes^(0+128)+2),7	;volatile
 13108  12A7  2AE4               	goto	i1l783
 13109                           
 13110                           ;usb_device.c: 1629: {
 13111                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 13112  12A8  1FA2               	btfss	(_outPipes^(0+128)+2),7	;volatile
 13113  12A9  2AB5               	goto	i1l5461
 13114                           
 13115                           ;usb_device.c: 1631: {
 13116                           ;usb_device.c: 1632: controlTransferState = 2;
 13117  12AA  3002               	movlw	2
 13118  12AB  00B7               	movwf	_controlTransferState^(0+128)	;volatile
 13119                           
 13120                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 13121  12AC  0022               	movlb	2	; select bank2
 13122  12AD  083B               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
 13123  12AE  1D03               	btfss	3,2
 13124  12AF  2AB1               	goto	i1l5457
 13125                           
 13126                           ;usb_device.c: 1644: {
 13127                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 13128  12B0  2321               	fcall	i1_USBCtrlEPAllowDataStage
 13129  12B1                     i1l5457:	
 13130                           
 13131                           ;usb_device.c: 1646: }
 13132                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 13133  12B1  0022               	movlb	2	; select bank2
 13134  12B2  01BD               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 13135                           
 13136                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 13137  12B3  01BE               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 13138                           
 13139                           ;usb_device.c: 1652: }
 13140  12B4  0008               	return
 13141  12B5                     i1l5461:	
 13142                           
 13143                           ;usb_device.c: 1653: else
 13144                           ;usb_device.c: 1654: {
 13145                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 16;
 13146  12B5  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13147  12B6  3E01               	addlw	1
 13148  12B7  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 13149  12B8  3000               	movlw	0
 13150  12B9  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13151  12BA  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 13152  12BB  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 13153  12BC  0086               	movwf	6
 13154  12BD  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 13155  12BE  0087               	movwf	7
 13156  12BF  3010               	movlw	16
 13157  12C0  0081               	movwf	1
 13158                           
 13159                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13160  12C1  3050               	movlw	80
 13161  12C2  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 13162  12C3  01F6               	clrf	??i1_USBCtrlEPServiceComplete+1
 13163  12C4  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13164  12C5  0086               	movwf	6
 13165  12C6  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13166  12C7  0087               	movwf	7
 13167  12C8  3142               	addfsr 1,2
 13168  12C9  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 13169  12CA  3FC0               	movwi [0]fsr1
 13170  12CB  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 13171  12CC  3FC1               	movwi [1]fsr1
 13172                           
 13173                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13174  12CD  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13175  12CE  0086               	movwf	6
 13176  12CF  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13177  12D0  0087               	movwf	7
 13178  12D1  300C               	movlw	12
 13179  12D2  0081               	movwf	1
 13180                           
 13181                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13182  12D3  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13183  12D4  0086               	movwf	6
 13184  12D5  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13185  12D6  0087               	movwf	7
 13186  12D7  1781               	bsf	1,7
 13187                           
 13188                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 13189  12D8  0827               	movf	_pBDTEntryIn^(0+128),w
 13190  12D9  0086               	movwf	6
 13191  12DA  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13192  12DB  0087               	movwf	7
 13193  12DC  3004               	movlw	4
 13194  12DD  0081               	movwf	1
 13195                           
 13196                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13197  12DE  0827               	movf	_pBDTEntryIn^(0+128),w
 13198  12DF  0086               	movwf	6
 13199  12E0  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13200  12E1  0087               	movwf	7
 13201  12E2  1781               	bsf	1,7
 13202  12E3  0008               	return
 13203  12E4                     i1l783:	
 13204                           
 13205                           ;usb_device.c: 1667: else
 13206                           ;usb_device.c: 1668: {
 13207                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 13208  12E4  0020               	movlb	0	; select bank0
 13209  12E5  1FD0               	btfss	80,7	;volatile
 13210  12E6  2AFA               	goto	i1l5487
 13211                           
 13212                           ;usb_device.c: 1670: {
 13213                           ;usb_device.c: 1671: controlTransferState = 1;
 13214  12E7  3001               	movlw	1
 13215  12E8  0021               	movlb	1	; select bank1
 13216  12E9  00B7               	movwf	_controlTransferState^(0+128)	;volatile
 13217                           
 13218                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 13219  12EA  0022               	movlb	2	; select bank2
 13220  12EB  083C               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
 13221  12EC  1D03               	btfss	3,2
 13222  12ED  2AF0               	goto	i1l5479
 13223                           
 13224                           ;usb_device.c: 1686: {
 13225                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 13226  12EE  2321  3192         	fcall	i1_USBCtrlEPAllowDataStage
 13227  12F0                     i1l5479:	
 13228                           
 13229                           ;usb_device.c: 1688: }
 13230                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 13231  12F0  0022               	movlb	2	; select bank2
 13232  12F1  01BD               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 13233                           
 13234                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 13235  12F2  01BE               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 13236                           
 13237                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 13238  12F3  0021               	movlb	1	; select bank1
 13239  12F4  0834               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
 13240  12F5  1D03               	btfss	3,2
 13241  12F6  0008               	return
 13242                           
 13243                           ;usb_device.c: 1713: {
 13244                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 13245  12F7  3196  268A         	fcall	i1_USBCtrlEPAllowStatusStage
 13246  12F9  0008               	return
 13247  12FA                     i1l5487:	
 13248                           
 13249                           ;usb_device.c: 1717: else
 13250                           ;usb_device.c: 1718: {
 13251                           ;usb_device.c: 1729: controlTransferState = 2;
 13252  12FA  3002               	movlw	2
 13253  12FB  0021               	movlb	1	; select bank1
 13254  12FC  00B7               	movwf	_controlTransferState^(0+128)	;volatile
 13255                           
 13256                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 16;
 13257  12FD  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13258  12FE  3E01               	addlw	1
 13259  12FF  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 13260  1300  3000               	movlw	0
 13261  1301  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13262  1302  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 13263  1303  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 13264  1304  0086               	movwf	6
 13265  1305  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 13266  1306  0087               	movwf	7
 13267  1307  3010               	movlw	16
 13268  1308  0081               	movwf	1
 13269                           
 13270                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13271  1309  3050               	movlw	80
 13272  130A  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 13273  130B  01F6               	clrf	??i1_USBCtrlEPServiceComplete+1
 13274  130C  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13275  130D  0086               	movwf	6
 13276  130E  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13277  130F  0087               	movwf	7
 13278  1310  3142               	addfsr 1,2
 13279  1311  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 13280  1312  3FC0               	movwi [0]fsr1
 13281  1313  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 13282  1314  3FC1               	movwi [1]fsr1
 13283                           
 13284                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13285  1315  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13286  1316  0086               	movwf	6
 13287  1317  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13288  1318  0087               	movwf	7
 13289  1319  3004               	movlw	4
 13290  131A  0081               	movwf	1
 13291                           
 13292                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13293  131B  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13294  131C  0086               	movwf	6
 13295  131D  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13296  131E  0087               	movwf	7
 13297  131F  1781               	bsf	1,7
 13298  1320  2AF0               	goto	i1l5479
 13299  1321                     __end_ofi1_USBCtrlEPServiceComplete:	
 13300                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 13301                           
 13302                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 13303                           
 13304                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 13305                           
 13306  1321                     __ptext51:	
 13307 ;; *************** function i1_USBCtrlEPAllowDataStage *****************
 13308 ;; Defined at:
 13309 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
 13310 ;; Parameters:    Size  Location     Type
 13311 ;;		None
 13312 ;; Auto vars:     Size  Location     Type
 13313 ;;		None
 13314 ;; Return value:  Size  Location     Type
 13315 ;;                  1    wreg      void 
 13316 ;; Registers used:
 13317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13318 ;; Tracked objects:
 13319 ;;		On entry : 1F/2
 13320 ;;		On exit  : 1F/1
 13321 ;;		Unchanged: 0/0
 13322 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13327 ;;Total ram usage:        2 bytes
 13328 ;; Hardware stack levels used:    1
 13329 ;; Hardware stack levels required when called:    1
 13330 ;; This function calls:
 13331 ;;		i1_USBCtrlTrfTxService
 13332 ;; This function is called by:
 13333 ;;		i1_USBCtrlEPServiceComplete
 13334 ;; This function uses a non-reentrant model
 13335 ;;
 13336                           
 13337                           
 13338                           ;psect for function i1_USBCtrlEPAllowDataStage
 13339  1321                     i1_USBCtrlEPAllowDataStage:	
 13340                           
 13341                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 13342                           
 13343                           ;incstack = 0
 13344 ;; hardware stack exceeded
 13345                           ; Regs used in i1_USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13346  1321  01BC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 13347                           
 13348                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 13349  1322  01BB               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 13350                           
 13351                           ;usb_device.c: 1493: if(controlTransferState == 2)
 13352  1323  3002               	movlw	2
 13353  1324  0021               	movlb	1	; select bank1
 13354  1325  0637               	xorwf	_controlTransferState^(0+128),w	;volatile
 13355  1326  1D03               	btfss	3,2
 13356  1327  2B4C               	goto	i1l5165
 13357                           
 13358                           ;usb_device.c: 1494: {
 13359                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 16;
 13360  1328  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13361  1329  3E01               	addlw	1
 13362  132A  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 13363  132B  3000               	movlw	0
 13364  132C  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13365  132D  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 13366  132E  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 13367  132F  0086               	movwf	6
 13368  1330  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 13369  1331  0087               	movwf	7
 13370  1332  3010               	movlw	16
 13371  1333  0081               	movwf	1
 13372                           
 13373                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 13374  1334  3060               	movlw	96
 13375  1335  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 13376  1336  01F4               	clrf	??i1_USBCtrlEPAllowDataStage+1
 13377  1337  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13378  1338  0086               	movwf	6
 13379  1339  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13380  133A  0087               	movwf	7
 13381  133B  3142               	addfsr 1,2
 13382  133C  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 13383  133D  3FC0               	movwi [0]fsr1
 13384  133E  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 13385  133F  3FC1               	movwi [1]fsr1
 13386                           
 13387                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13388  1340  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13389  1341  0086               	movwf	6
 13390  1342  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13391  1343  0087               	movwf	7
 13392  1344  3048               	movlw	72
 13393  1345  0081               	movwf	1
 13394                           
 13395                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13396  1346  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13397  1347  0086               	movwf	6
 13398  1348  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13399  1349  0087               	movwf	7
 13400  134A  1781               	bsf	1,7
 13401                           
 13402                           ;usb_device.c: 1500: }
 13403  134B  0008               	return
 13404  134C                     i1l5165:	
 13405                           
 13406                           ;usb_device.c: 1501: else
 13407                           ;usb_device.c: 1502: {
 13408                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 13409  134C  0831               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
 13410  134D  0020               	movlb	0	; select bank0
 13411  134E  0257               	subwf	87,w	;volatile
 13412  134F  1D03               	skipz
 13413  1350  2B55               	goto	u417_25
 13414  1351  0021               	movlb	1	; select bank1
 13415  1352  0830               	movf	(_inPipes^(0+128)+3),w	;volatile
 13416  1353  0020               	movlb	0	; select bank0
 13417  1354  0256               	subwf	86,w	;volatile
 13418  1355                     u417_25:	
 13419  1355  1803               	skipnc
 13420  1356  2B5E               	goto	i1l5169
 13421                           
 13422                           ;usb_device.c: 1506: {
 13423                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 13424  1357  0857               	movf	87,w	;volatile
 13425  1358  0021               	movlb	1	; select bank1
 13426  1359  00B1               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 13427  135A  0020               	movlb	0	; select bank0
 13428  135B  0856               	movf	86,w	;volatile
 13429  135C  0021               	movlb	1	; select bank1
 13430  135D  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
 13431  135E                     i1l5169:	
 13432                           
 13433                           ;usb_device.c: 1508: }
 13434                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 13435  135E  23D7               	fcall	i1_USBCtrlTrfTxService
 13436                           
 13437                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 13438  135F  3060               	movlw	96
 13439  1360  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 13440  1361  01F4               	clrf	??i1_USBCtrlEPAllowDataStage+1
 13441  1362  0021               	movlb	1	; select bank1
 13442  1363  0827               	movf	_pBDTEntryIn^(0+128),w
 13443  1364  0086               	movwf	6
 13444  1365  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13445  1366  0087               	movwf	7
 13446  1367  3142               	addfsr 1,2
 13447  1368  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 13448  1369  3FC0               	movwi [0]fsr1
 13449  136A  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 13450  136B  3FC1               	movwi [1]fsr1
 13451                           
 13452                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13453  136C  0827               	movf	_pBDTEntryIn^(0+128),w
 13454  136D  0086               	movwf	6
 13455  136E  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13456  136F  0087               	movwf	7
 13457  1370  3048               	movlw	72
 13458  1371  0081               	movwf	1
 13459                           
 13460                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13461  1372  0827               	movf	_pBDTEntryIn^(0+128),w
 13462  1373  0086               	movwf	6
 13463  1374  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13464  1375  0087               	movwf	7
 13465  1376  1781               	bsf	1,7
 13466  1377  0008               	return
 13467  1378                     __end_ofi1_USBCtrlEPAllowDataStage:	
 13468  1378                     __ptext67:	
 13469 ;; *************** function i1_USBCtrlTrfInHandler *****************
 13470 ;; Defined at:
 13471 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
 13472 ;; Parameters:    Size  Location     Type
 13473 ;;		None
 13474 ;; Auto vars:     Size  Location     Type
 13475 ;;  USBCtrlTrfIn    1    5[COMMON] unsigned char 
 13476 ;; Return value:  Size  Location     Type
 13477 ;;                  1    wreg      void 
 13478 ;; Registers used:
 13479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13480 ;; Tracked objects:
 13481 ;;		On entry : 1F/1
 13482 ;;		On exit  : 1F/1
 13483 ;;		Unchanged: 0/0
 13484 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13488 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13489 ;;Total ram usage:        3 bytes
 13490 ;; Hardware stack levels used:    1
 13491 ;; Hardware stack levels required when called:    1
 13492 ;; This function calls:
 13493 ;;		i1_USBCtrlTrfTxService
 13494 ;; This function is called by:
 13495 ;;		i1_USBCtrlEPService
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           
 13500                           ;psect for function i1_USBCtrlTrfInHandler
 13501  1378                     i1_USBCtrlTrfInHandler:	
 13502                           
 13503                           ;usb_device.c: 2594: uint8_t lastDTS;
 13504                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13505                           
 13506                           ;incstack = 0
 13507                           ; Regs used in i1_USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13508  1378  0827               	movf	_pBDTEntryIn^(0+128),w
 13509  1379  0086               	movwf	6
 13510  137A  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13511  137B  0087               	movwf	7
 13512  137C  3000               	movlw	0
 13513  137D  1B01               	btfsc	1,6
 13514  137E  3001               	movlw	1
 13515  137F  00F5               	movwf	i1USBCtrlTrfInHandler@lastDTS
 13516                           
 13517                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13518  1380  3004               	movlw	4
 13519  1381  0627               	xorwf	_pBDTEntryIn^(0+128),w
 13520  1382  00A7               	movwf	_pBDTEntryIn^(0+128)
 13521                           
 13522                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 13523  1383  3008               	movlw	8
 13524  1384  0644               	xorwf	_USBDeviceState^(0+128),w	;volatile
 13525  1385  1D03               	btfss	3,2
 13526  1386  2B94               	goto	i1l5787
 13527                           
 13528                           ;usb_device.c: 2605: {
 13529                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 13530  1387  0020               	movlb	0	; select bank0
 13531  1388  0852               	movf	82,w	;volatile
 13532  1389  397F               	andlw	127
 13533  138A  003D               	movlb	29	; select bank29
 13534  138B  0096               	movwf	22	;volatile
 13535                           
 13536                           ;usb_device.c: 2607: if(UADDR != 0u)
 13537  138C  0816               	movf	22,w
 13538  138D  1903               	btfsc	3,2
 13539  138E  2B91               	goto	i1l5785
 13540                           
 13541                           ;usb_device.c: 2608: {
 13542                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 13543  138F  3010               	movlw	16
 13544  1390  2B92               	goto	L36
 13545  1391                     i1l5785:	
 13546                           ;usb_device.c: 2610: }
 13547                           
 13548                           
 13549                           ;usb_device.c: 2611: else
 13550                           ;usb_device.c: 2612: {
 13551                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 13552  1391  3004               	movlw	4
 13553  1392                     L36:	
 13554  1392  0021               	movlb	1	; select bank1
 13555  1393  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
 13556  1394                     i1l5787:	
 13557                           
 13558                           ;usb_device.c: 2614: }
 13559                           ;usb_device.c: 2615: }
 13560                           ;usb_device.c: 2618: if(controlTransferState == 1)
 13561  1394  0B37               	decfsz	_controlTransferState^(0+128),w	;volatile
 13562  1395  2BD0               	goto	i1l896
 13563                           
 13564                           ;usb_device.c: 2619: {
 13565                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 13566  1396  3060               	movlw	96
 13567  1397  00F3               	movwf	??i1_USBCtrlTrfInHandler
 13568  1398  01F4               	clrf	??i1_USBCtrlTrfInHandler+1
 13569  1399  0827               	movf	_pBDTEntryIn^(0+128),w
 13570  139A  0086               	movwf	6
 13571  139B  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13572  139C  0087               	movwf	7
 13573  139D  3142               	addfsr 1,2
 13574  139E  0873               	movf	??i1_USBCtrlTrfInHandler,w
 13575  139F  3FC0               	movwi [0]fsr1
 13576  13A0  0874               	movf	??i1_USBCtrlTrfInHandler+1,w
 13577  13A1  3FC1               	movwi [1]fsr1
 13578                           
 13579                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 13580  13A2  23D7  3192         	fcall	i1_USBCtrlTrfTxService
 13581                           
 13582                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 13583  13A4  3002               	movlw	2
 13584  13A5  0021               	movlb	1	; select bank1
 13585  13A6  0638               	xorwf	_shortPacketStatus^(0+128),w	;volatile
 13586  13A7  1D03               	btfss	3,2
 13587  13A8  2BB5               	goto	i1l5797
 13588                           
 13589                           ;usb_device.c: 2628: {
 13590                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 13591  13A9  0827               	movf	_pBDTEntryIn^(0+128),w
 13592  13AA  0086               	movwf	6
 13593  13AB  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13594  13AC  0087               	movwf	7
 13595  13AD  3004               	movlw	4
 13596  13AE  0081               	movwf	1
 13597                           
 13598                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13599  13AF  0827               	movf	_pBDTEntryIn^(0+128),w
 13600  13B0  0086               	movwf	6
 13601  13B1  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13602  13B2  0087               	movwf	7
 13603  13B3  1781               	bsf	1,7
 13604                           
 13605                           ;usb_device.c: 2633: }
 13606  13B4  0008               	return
 13607  13B5                     i1l5797:	
 13608                           
 13609                           ;usb_device.c: 2634: else
 13610                           ;usb_device.c: 2635: {
 13611                           ;usb_device.c: 2636: if(lastDTS == 0)
 13612  13B5  0875               	movf	i1USBCtrlTrfInHandler@lastDTS,w
 13613  13B6  1D03               	btfss	3,2
 13614  13B7  2BC4               	goto	i1l5801
 13615                           
 13616                           ;usb_device.c: 2637: {
 13617                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13618  13B8  0827               	movf	_pBDTEntryIn^(0+128),w
 13619  13B9  0086               	movwf	6
 13620  13BA  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13621  13BB  0087               	movwf	7
 13622  13BC  3048               	movlw	72
 13623  13BD  0081               	movwf	1
 13624                           
 13625                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13626  13BE  0827               	movf	_pBDTEntryIn^(0+128),w
 13627  13BF  0086               	movwf	6
 13628  13C0  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13629  13C1  0087               	movwf	7
 13630  13C2  1781               	bsf	1,7
 13631                           
 13632                           ;usb_device.c: 2640: }
 13633  13C3  0008               	return
 13634  13C4                     i1l5801:	
 13635                           
 13636                           ;usb_device.c: 2641: else
 13637                           ;usb_device.c: 2642: {
 13638                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13639  13C4  0827               	movf	_pBDTEntryIn^(0+128),w
 13640  13C5  0086               	movwf	6
 13641  13C6  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13642  13C7  0087               	movwf	7
 13643  13C8  3008               	movlw	8
 13644  13C9  0081               	movwf	1
 13645                           
 13646                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13647  13CA  0827               	movf	_pBDTEntryIn^(0+128),w
 13648  13CB  0086               	movwf	6
 13649  13CC  0828               	movf	(_pBDTEntryIn+1)^(0+128),w
 13650  13CD  0087               	movwf	7
 13651  13CE  1781               	bsf	1,7
 13652  13CF  0008               	return
 13653  13D0                     i1l896:	
 13654                           
 13655                           ;usb_device.c: 2648: else
 13656                           ;usb_device.c: 2649: {
 13657                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 13658  13D0  1FA2               	btfss	(_outPipes^(0+128)+2),7	;volatile
 13659  13D1  2BD5               	goto	i1l5805
 13660                           
 13661                           ;usb_device.c: 2656: {
 13662                           ;usb_device.c: 2657: outPipes[0].pFunc();
 13663  13D2  0825               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
 13664  13D3  0826               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
 13665                           
 13666                           ;usb_device.c: 2658: }
 13667                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 13668  13D4  13A2               	bcf	(_outPipes^(0+128)+2),7	;volatile
 13669  13D5                     i1l5805:	
 13670                           
 13671                           ;usb_device.c: 2660: }
 13672                           ;usb_device.c: 2662: controlTransferState = 0;
 13673  13D5  01B7               	clrf	_controlTransferState^(0+128)	;volatile
 13674  13D6  0008               	return
 13675  13D7                     __end_ofi1_USBCtrlTrfInHandler:	
 13676  13D7                     __ptext68:	
 13677 ;; *************** function i1_USBCtrlTrfTxService *****************
 13678 ;; Defined at:
 13679 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
 13680 ;; Parameters:    Size  Location     Type
 13681 ;;		None
 13682 ;; Auto vars:     Size  Location     Type
 13683 ;;  USBCtrlTrfTx    1    2[COMMON] unsigned char 
 13684 ;; Return value:  Size  Location     Type
 13685 ;;                  1    wreg      void 
 13686 ;; Registers used:
 13687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13688 ;; Tracked objects:
 13689 ;;		On entry : 1E/0
 13690 ;;		On exit  : 1C/0
 13691 ;;		Unchanged: 0/0
 13692 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13696 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13697 ;;Total ram usage:        3 bytes
 13698 ;; Hardware stack levels used:    1
 13699 ;; This function calls:
 13700 ;;		Nothing
 13701 ;; This function is called by:
 13702 ;;		i1_USBCtrlEPAllowDataStage
 13703 ;;		i1_USBCtrlTrfInHandler
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707                           
 13708                           ;psect for function i1_USBCtrlTrfTxService
 13709  13D7                     i1_USBCtrlTrfTxService:	
 13710                           
 13711                           ;usb_device.c: 1773: uint8_t byteToSend;
 13712                           ;usb_device.c: 1777: byteToSend = 16;
 13713                           
 13714                           ;incstack = 0
 13715 ;; hardware stack exceeded
 13716                           ; Regs used in i1_USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 13717  13D7  3010               	movlw	16
 13718  13D8  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 13719                           
 13720                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)16)
 13721  13D9  3000               	movlw	0
 13722  13DA  0021               	movlb	1	; select bank1
 13723  13DB  0231               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
 13724  13DC  3010               	movlw	16
 13725  13DD  1903               	skipnz
 13726  13DE  0230               	subwf	(_inPipes^(0+128)+3),w	;volatile
 13727  13DF  1803               	skipnc
 13728  13E0  2BEC               	goto	i1l796
 13729                           
 13730                           ;usb_device.c: 1779: {
 13731                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 13732  13E1  0830               	movf	(_inPipes^(0+128)+3),w	;volatile
 13733  13E2  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 13734                           
 13735                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 13736  13E3  0838               	movf	_shortPacketStatus^(0+128),w	;volatile
 13737  13E4  1D03               	btfss	3,2
 13738  13E5  2BE8               	goto	i1l4935
 13739                           
 13740                           ;usb_device.c: 1788: {
 13741                           ;usb_device.c: 1789: shortPacketStatus = 1;
 13742  13E6  3001               	movlw	1
 13743  13E7  2BEB               	goto	L37
 13744  13E8                     i1l4935:	
 13745                           ;usb_device.c: 1790: }
 13746                           
 13747                           
 13748                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 13749  13E8  0B38               	decfsz	_shortPacketStatus^(0+128),w	;volatile
 13750  13E9  2BEC               	goto	i1l796
 13751                           
 13752                           ;usb_device.c: 1792: {
 13753                           ;usb_device.c: 1793: shortPacketStatus = 2;
 13754  13EA  3002               	movlw	2
 13755  13EB                     L37:	
 13756  13EB  00B8               	movwf	_shortPacketStatus^(0+128)	;volatile
 13757  13EC                     i1l796:	
 13758                           
 13759                           ;usb_device.c: 1794: }
 13760                           ;usb_device.c: 1795: }
 13761                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 13762  13EC  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 13763  13ED  02B0               	subwf	(_inPipes^(0+128)+3),f	;volatile
 13764  13EE  1C03               	skipc
 13765  13EF  03B1               	decf	((_inPipes+1)^(0+128)+3),f	;volatile
 13766                           
 13767                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 13768  13F0  0827               	movf	_pBDTEntryIn^(0+128),w
 13769  13F1  3E01               	addlw	1
 13770  13F2  00F0               	movwf	??i1_USBCtrlTrfTxService
 13771  13F3  3000               	movlw	0
 13772  13F4  3D28               	addwfc	(_pBDTEntryIn+1)^(0+128),w
 13773  13F5  00F1               	movwf	??i1_USBCtrlTrfTxService+1
 13774  13F6  0870               	movf	??i1_USBCtrlTrfTxService,w
 13775  13F7  0086               	movwf	6
 13776  13F8  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 13777  13F9  0087               	movwf	7
 13778  13FA  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 13779  13FB  0081               	movwf	1
 13780                           
 13781                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 13782  13FC  3060               	movlw	96
 13783  13FD  0022               	movlb	2	; select bank2
 13784  13FE  00C2               	movwf	_pDst^(0+256)
 13785                           
 13786                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13787  13FF  0021               	movlb	1	; select bank1
 13788  1400  1C2F               	btfss	(_inPipes^(0+128)+2),0	;volatile
 13789  1401  2C14               	goto	i1l4955
 13790  1402  2C29               	goto	i1l4965
 13791  1403                     i1l4947:	
 13792                           
 13793                           ;usb_device.c: 1812: {
 13794                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 13795  1403  0022               	movlb	2	; select bank2
 13796  1404  0842               	movf	_pDst^(0+256),w
 13797  1405  0086               	movwf	6
 13798  1406  0187               	clrf	7
 13799  1407  0021               	movlb	1	; select bank1
 13800  1408  082D               	movf	_inPipes^(0+128),w	;volatile
 13801  1409  0084               	movwf	4
 13802  140A  082E               	movf	(_inPipes+1)^(0+128),w	;volatile
 13803  140B  0085               	movwf	5
 13804  140C  0800               	movf	0,w	;code access
 13805  140D  0081               	movwf	1
 13806  140E  0AAD               	incf	_inPipes^(0+128),f	;volatile
 13807  140F  1903               	skipnz
 13808  1410  0AAE               	incf	(_inPipes+1)^(0+128),f	;volatile
 13809  1411  0022               	movlb	2	; select bank2
 13810  1412  0AC2               	incf	_pDst^(0+256),f
 13811                           
 13812                           ;usb_device.c: 1814: byteToSend--;
 13813  1413  03F2               	decf	i1USBCtrlTrfTxService@byteToSend,f
 13814  1414                     i1l4955:	
 13815  1414  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 13816  1415  1903               	btfsc	3,2
 13817  1416  0008               	return
 13818  1417  2C03               	goto	i1l4947
 13819  1418                     i1l4957:	
 13820                           
 13821                           ;usb_device.c: 1820: {
 13822                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 13823  1418  0022               	movlb	2	; select bank2
 13824  1419  0842               	movf	_pDst^(0+256),w
 13825  141A  0086               	movwf	6
 13826  141B  0187               	clrf	7
 13827  141C  0021               	movlb	1	; select bank1
 13828  141D  082D               	movf	_inPipes^(0+128),w	;volatile
 13829  141E  0084               	movwf	4
 13830  141F  082E               	movf	(_inPipes+1)^(0+128),w	;volatile
 13831  1420  0085               	movwf	5
 13832  1421  0800               	movf	0,w	;code access
 13833  1422  0081               	movwf	1
 13834  1423  0AAD               	incf	_inPipes^(0+128),f	;volatile
 13835  1424  1903               	skipnz
 13836  1425  0AAE               	incf	(_inPipes+1)^(0+128),f	;volatile
 13837  1426  0022               	movlb	2	; select bank2
 13838  1427  0AC2               	incf	_pDst^(0+256),f
 13839                           
 13840                           ;usb_device.c: 1822: byteToSend--;
 13841  1428  03F2               	decf	i1USBCtrlTrfTxService@byteToSend,f
 13842  1429                     i1l4965:	
 13843  1429  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 13844  142A  1903               	btfsc	3,2
 13845  142B  0008               	return
 13846  142C  2C18               	goto	i1l4957
 13847  142D                     __end_ofi1_USBCtrlTrfTxService:	
 13848  007E                     btemp	set	126	;btemp
 13849  007E                     int$flags	set	126
 13850  007E                     wtemp0	set	126
 13851                           
 13852                           	psect	swtext5
 13853  1900                     __pswtext5:	
 13854  1900                     i1S10009:	
 13855  1900  3194  2C7B         	ljmp	i1l8339
 13856  1902  3194  2C7E         	ljmp	i1l8341
 13857  1904  3194  2CA9         	ljmp	i1l908
 13858  1906  3194  2C7E         	ljmp	i1l8341
 13859  1908  3194  2CA9         	ljmp	i1l908
 13860  190A  3194  2C66         	ljmp	i1l910
 13861  190C  3194  2C6B         	ljmp	i1l8327
 13862  190E  3194  2C95         	ljmp	i1l8353
 13863  1910  3194  2C71         	ljmp	i1l8331
 13864  1912  3194  2C6E         	ljmp	i1l8329
 13865  1914  3194  2C80         	ljmp	i1l8343
 13866  1916  3194  2C8A         	ljmp	i1l919
 13867  1918  3194  2CA9         	ljmp	i1l908
 13868                           
 13869                           	psect	text53
 13870  080D                     __ptext53:	
 13871 ;; *************** function i1_USBStdSetCfgHandler *****************
 13872 ;; Defined at:
 13873 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
 13874 ;; Parameters:    Size  Location     Type
 13875 ;;		None
 13876 ;; Auto vars:     Size  Location     Type
 13877 ;;  USBStdSetCfg    2    0[BANK1 ] PTR unsigned char 
 13878 ;;		 -> UEP1(1), 
 13879 ;;  USBStdSetCfg    1    3[BANK1 ] unsigned char 
 13880 ;;  USBStdSetCfg    1    2[BANK1 ] unsigned char 
 13881 ;; Return value:  Size  Location     Type
 13882 ;;                  1    wreg      void 
 13883 ;; Registers used:
 13884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13885 ;; Tracked objects:
 13886 ;;		On entry : 1E/0
 13887 ;;		On exit  : 1F/1
 13888 ;;		Unchanged: 0/0
 13889 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13891 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13893 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13894 ;;Total ram usage:        4 bytes
 13895 ;; Hardware stack levels used:    1
 13896 ;; Hardware stack levels required when called:    4
 13897 ;; This function calls:
 13898 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13899 ;;		i1_memset
 13900 ;; This function is called by:
 13901 ;;		i1_USBCheckStdRequest
 13902 ;; This function uses a non-reentrant model
 13903 ;;
 13904                           
 13905                           
 13906                           ;psect for function i1_USBStdSetCfgHandler
 13907  080D                     i1_USBStdSetCfgHandler:	
 13908                           
 13909                           ;usb_device.c: 1970: uint8_t i;
 13910                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 13911                           
 13912                           ;incstack = 0
 13913 ;; hardware stack exceeded
 13914                           ; Regs used in i1_USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13915  080D  0021               	movlb	1	; select bank1
 13916  080E  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13917                           
 13918                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
 13919  080F  300E               	movlw	14
 13920  0810  00CA               	movwf	(i1USBStdSetCfgHandler@p+1)^(0+128)
 13921  0811  3099               	movlw	153
 13922  0812  00C9               	movwf	i1USBStdSetCfgHandler@p^(0+128)
 13923  0813  01CB               	clrf	i1USBStdSetCfgHandler@i_2232^(0+128)
 13924  0814                     i1l8117:	
 13925  0814  0849               	movf	i1USBStdSetCfgHandler@p^(0+128),w
 13926  0815  0086               	movwf	6
 13927  0816  084A               	movf	(i1USBStdSetCfgHandler@p+1)^(0+128),w
 13928  0817  0087               	movwf	7
 13929  0818  0181               	clrf	1
 13930  0819  0AC9               	incf	i1USBStdSetCfgHandler@p^(0+128),f
 13931  081A  1903               	skipnz
 13932  081B  0ACA               	incf	(i1USBStdSetCfgHandler@p+1)^(0+128),f
 13933  081C  3002               	movlw	2
 13934  081D  0ACB               	incf	i1USBStdSetCfgHandler@i_2232^(0+128),f
 13935  081E  024B               	subwf	i1USBStdSetCfgHandler@i_2232^(0+128),w
 13936  081F  1C03               	skipc
 13937  0820  2814               	goto	i1l8117
 13938                           
 13939                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13940  0821  3020               	movlw	32
 13941  0822  00F0               	movwf	i1memset@p1
 13942  0823  3030               	movlw	48
 13943  0824  01F1               	clrf	i1memset@p1+1
 13944  0825  01F2               	clrf	i1memset@c
 13945  0826  01F3               	clrf	i1memset@c+1
 13946  0827  00F4               	movwf	i1memset@n
 13947  0828  01F5               	clrf	i1memset@n+1
 13948  0829  2071  3188         	fcall	i1_memset
 13949                           
 13950                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 13951  082B  003D               	movlb	29	; select bank29
 13952  082C  170E               	bsf	14,6	;volatile
 13953                           
 13954                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 13955  082D  0021               	movlb	1	; select bank1
 13956  082E  01CC               	clrf	i1USBStdSetCfgHandler@i^(0+128)
 13957  082F                     i1l8135:	
 13958                           
 13959                           ;usb_device.c: 1988: {
 13960                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 13961  082F  084C               	movf	i1USBStdSetCfgHandler@i^(0+128),w
 13962  0830  3E2D               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 13963  0831  0086               	movwf	6
 13964  0832  3001               	movlw	1	; select bank2/3
 13965  0833  0087               	movwf	7
 13966  0834  0181               	clrf	1
 13967                           
 13968                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 13969  0835  084C               	movf	i1USBStdSetCfgHandler@i^(0+128),w
 13970  0836  3E2A               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 13971  0837  0086               	movwf	6
 13972  0838  3003               	movlw	3
 13973  0839  0181               	clrf	1
 13974  083A  0ACC               	incf	i1USBStdSetCfgHandler@i^(0+128),f
 13975  083B  024C               	subwf	i1USBStdSetCfgHandler@i^(0+128),w
 13976  083C  1C03               	skipc
 13977  083D  282F               	goto	i1l8135
 13978                           
 13979                           ;usb_device.c: 1991: }
 13980                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 13981  083E  3060               	movlw	low _USBAlternateInterface
 13982  083F  00F0               	movwf	i1memset@p1
 13983  0840  3001               	movlw	high _USBAlternateInterface
 13984  0841  00F1               	movwf	i1memset@p1+1
 13985  0842  3002               	movlw	2
 13986  0843  01F2               	clrf	i1memset@c
 13987  0844  01F3               	clrf	i1memset@c+1
 13988  0845  00F4               	movwf	i1memset@n
 13989  0846  01F5               	clrf	i1memset@n+1
 13990  0847  2071  3188         	fcall	i1_memset
 13991                           
 13992                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 13993  0849  003D               	movlb	29	; select bank29
 13994  084A  130E               	bcf	14,6	;volatile
 13995                           
 13996                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13997  084B  3028               	movlw	40
 13998  084C  0021               	movlb	1	; select bank1
 13999  084D  00A7               	movwf	_pBDTEntryIn^(0+128)
 14000  084E  3020               	movlw	32
 14001  084F  01A8               	clrf	(_pBDTEntryIn+1)^(0+128)
 14002                           
 14003                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 14004  0850  00B9               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
 14005                           
 14006                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14007  0851  00B2               	movwf	_pBDTEntryEP0OutNext^(0+128)
 14008  0852  39FF               	andlw	255
 14009  0853  1D03               	skipz
 14010  0854  3000               	movlw	0
 14011  0855  00B3               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 14012                           
 14013                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 14014  0856  0020               	movlb	0	; select bank0
 14015  0857  0852               	movf	82,w	;volatile
 14016  0858  0021               	movlb	1	; select bank1
 14017  0859  00C8               	movwf	_USBActiveConfiguration^(0+128)	;volatile
 14018                           
 14019                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 14020  085A  0848               	movf	_USBActiveConfiguration^(0+128),w	;volatile
 14021  085B  1D03               	btfss	3,2
 14022  085C  2860               	goto	i1l8157
 14023                           
 14024                           ;usb_device.c: 2010: {
 14025                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 14026  085D  3010               	movlw	16
 14027  085E  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
 14028                           
 14029                           ;usb_device.c: 2013: }
 14030  085F  0008               	return
 14031  0860                     i1l8157:	
 14032                           
 14033                           ;usb_device.c: 2014: else
 14034                           ;usb_device.c: 2015: {
 14035                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 14036  0860  0020               	movlb	0	; select bank0
 14037  0861  30C8               	movlw	low _USBActiveConfiguration
 14038  0862  01D8               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 14039  0863  0AD8               	incf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,f
 14040  0864  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 14041  0865  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14042  0866  3000               	movlw	high _USBActiveConfiguration
 14043  0867  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14044  0868  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 14045  0869  0ADC               	incf	i1USER_USB_CALLBACK_EVENT_HANDLER@size,f
 14046  086A  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 14047  086B  3196  2668         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 14048                           
 14049                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 14050  086D  3020               	movlw	32
 14051  086E  0021               	movlb	1	; select bank1
 14052  086F  00C4               	movwf	_USBDeviceState^(0+128)	;volatile
 14053  0870  0008               	return
 14054  0871                     __end_ofi1_USBStdSetCfgHandler:	
 14055  0871                     __ptext54:	
 14056 ;; *************** function i1_memset *****************
 14057 ;; Defined at:
 14058 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 14059 ;; Parameters:    Size  Location     Type
 14060 ;;  p1              2    0[COMMON] PTR void 
 14061 ;;		 -> USBAlternateInterface(2), BDT(48), 
 14062 ;;  c               2    2[COMMON] int 
 14063 ;;  n               2    4[COMMON] unsigned int 
 14064 ;; Auto vars:     Size  Location     Type
 14065 ;;  memset          2    6[COMMON] PTR unsigned char 
 14066 ;;		 -> USBAlternateInterface(2), BDT(48), 
 14067 ;; Return value:  Size  Location     Type
 14068 ;;                  1    wreg      PTR void 
 14069 ;; Registers used:
 14070 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14071 ;; Tracked objects:
 14072 ;;		On entry : 1F/1
 14073 ;;		On exit  : 1F/1
 14074 ;;		Unchanged: 1F/0
 14075 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14076 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14079 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14080 ;;Total ram usage:        8 bytes
 14081 ;; Hardware stack levels used:    1
 14082 ;; This function calls:
 14083 ;;		Nothing
 14084 ;; This function is called by:
 14085 ;;		i1_USBStdSetCfgHandler
 14086 ;; This function uses a non-reentrant model
 14087 ;;
 14088                           
 14089                           
 14090                           ;psect for function i1_memset
 14091  0871                     i1_memset:	
 14092                           
 14093                           ;incstack = 0
 14094 ;; hardware stack exceeded
 14095                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 14096  0871  0871               	movf	i1memset@p1+1,w
 14097  0872  00F7               	movwf	i1memset@p+1
 14098  0873  0870               	movf	i1memset@p1,w
 14099  0874  00F6               	movwf	i1memset@p
 14100  0875                     i1l7965:	
 14101  0875  3001               	movlw	1
 14102  0876  02F4               	subwf	i1memset@n,f
 14103  0877  3000               	movlw	0
 14104  0878  3BF5               	subwfb	i1memset@n+1,f
 14105  0879  0F74               	incfsz	i1memset@n,w
 14106  087A  287E               	goto	i1l7961
 14107  087B  0A75               	incf	i1memset@n+1,w
 14108  087C  1903               	btfsc	3,2
 14109  087D  0008               	return
 14110  087E                     i1l7961:	
 14111  087E  0876               	movf	i1memset@p,w
 14112  087F  0086               	movwf	6
 14113  0880  0877               	movf	i1memset@p+1,w
 14114  0881  0087               	movwf	7
 14115  0882  0872               	movf	i1memset@c,w
 14116  0883  0081               	movwf	1
 14117  0884  0AF6               	incf	i1memset@p,f
 14118  0885  1903               	skipnz
 14119  0886  0AF7               	incf	i1memset@p+1,f
 14120  0887  2875               	goto	i1l7965
 14121  0888                     __end_ofi1_memset:	
 14122                           
 14123                           	psect	text55
 14124  1CEB                     __ptext55:	
 14125 ;; *************** function i1_USBStdGetStatusHandler *****************
 14126 ;; Defined at:
 14127 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;		None
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;  USBStdGetSta    2    0[COMMON] PTR struct __BDT
 14132 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  1    wreg      void 
 14135 ;; Registers used:
 14136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14137 ;; Tracked objects:
 14138 ;;		On entry : 1E/0
 14139 ;;		On exit  : 1F/1
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14146 ;;Total ram usage:        2 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; This function calls:
 14149 ;;		Nothing
 14150 ;; This function is called by:
 14151 ;;		i1_USBCheckStdRequest
 14152 ;; This function uses a non-reentrant model
 14153 ;;
 14154                           
 14155                           
 14156                           ;psect for function i1_USBStdGetStatusHandler
 14157  1CEB                     i1_USBStdGetStatusHandler:	
 14158                           
 14159                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 14160                           
 14161                           ;incstack = 0
 14162                           ; Regs used in i1_USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 14163  1CEB  0020               	movlb	0	; select bank0
 14164  1CEC  01E0               	clrf	96	;volatile
 14165                           
 14166                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 14167  1CED  01E1               	clrf	97	;volatile
 14168                           
 14169                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 14170  1CEE  2D23               	goto	i1l5279
 14171  1CEF                     i1l848:	
 14172                           ;usb_device.c: 2135: {
 14173                           ;usb_device.c: 2136: case (0x00):
 14174                           
 14175                           
 14176                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 14177  1CEF  0021               	movlb	1	; select bank1
 14178  1CF0  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 14179                           
 14180                           ;usb_device.c: 2145: }
 14181                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 14182                           
 14183                           ;usb_device.c: 2142: if(0 == 1)
 14184  1CF1  0022               	movlb	2	; select bank2
 14185  1CF2  0B41               	decfsz	_RemoteWakeup^(0+256),w	;volatile
 14186  1CF3  2D2E               	goto	i1l851
 14187                           
 14188                           ;usb_device.c: 2148: {
 14189                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 14190  1CF4  0020               	movlb	0	; select bank0
 14191  1CF5  14E0               	bsf	96,1	;volatile
 14192  1CF6  2D2E               	goto	i1l851
 14193  1CF7                     i1l852:	
 14194                           ;usb_device.c: 2152: case (0x01):
 14195                           
 14196                           
 14197                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 14198  1CF7  0021               	movlb	1	; select bank1
 14199  1CF8  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 14200                           
 14201                           ;usb_device.c: 2154: break;
 14202  1CF9  2D2E               	goto	i1l851
 14203  1CFA                     i1l853:	
 14204                           ;usb_device.c: 2155: case (0x02):
 14205                           
 14206                           
 14207                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 14208  1CFA  0021               	movlb	1	; select bank1
 14209  1CFB  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 14210                           
 14211                           ;usb_device.c: 2160: {
 14212                           ;usb_device.c: 2161: BDT_ENTRY *p;
 14213                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 14214  1CFC  0020               	movlb	0	; select bank0
 14215  1CFD  1BD4               	btfsc	84,7	;volatile
 14216  1CFE  2D0A               	goto	i1l5269
 14217                           
 14218                           ;usb_device.c: 2164: {
 14219                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14220  1CFF  0854               	movf	84,w	;volatile
 14221  1D00  390F               	andlw	15
 14222  1D01  0709               	addwf	9,w
 14223  1D02  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 14224  1D03  0086               	movwf	6
 14225  1D04  3001               	movlw	1	; select bank2/3
 14226  1D05  0087               	movwf	7
 14227  1D06  3F40               	moviw [0]fsr1
 14228  1D07  00F0               	movwf	i1USBStdGetStatusHandler@p
 14229  1D08  3F41               	moviw [1]fsr1
 14230  1D09  2D13               	goto	L29
 14231  1D0A                     i1l5269:	
 14232                           ;usb_device.c: 2166: }
 14233                           
 14234                           
 14235                           ;usb_device.c: 2167: else
 14236                           ;usb_device.c: 2168: {
 14237                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 14238  1D0A  0854               	movf	84,w	;volatile
 14239  1D0B  390F               	andlw	15
 14240  1D0C  0709               	addwf	9,w
 14241  1D0D  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 14242  1D0E  0086               	movwf	6
 14243  1D0F  0187               	clrf	7
 14244  1D10  3F40               	moviw [0]fsr1
 14245  1D11  00F0               	movwf	i1USBStdGetStatusHandler@p
 14246  1D12  3F41               	moviw [1]fsr1
 14247  1D13                     L29:	
 14248  1D13  00F1               	movwf	i1USBStdGetStatusHandler@p+1
 14249                           
 14250                           ;usb_device.c: 2170: }
 14251                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 14252  1D14  0870               	movf	i1USBStdGetStatusHandler@p,w
 14253  1D15  0086               	movwf	6
 14254  1D16  0871               	movf	i1USBStdGetStatusHandler@p+1,w
 14255  1D17  0087               	movwf	7
 14256  1D18  1F81               	btfss	1,7
 14257  1D19  2D2E               	goto	i1l851
 14258  1D1A  0870               	movf	i1USBStdGetStatusHandler@p,w
 14259  1D1B  0086               	movwf	6
 14260  1D1C  0871               	movf	i1USBStdGetStatusHandler@p+1,w
 14261  1D1D  0087               	movwf	7
 14262  1D1E  1D01               	btfss	1,2
 14263  1D1F  2D2E               	goto	i1l851
 14264                           
 14265                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 14266  1D20  3001               	movlw	1
 14267  1D21  00E0               	movwf	96	;volatile
 14268  1D22  2D2E               	goto	i1l851
 14269  1D23                     i1l5279:	
 14270  1D23  0850               	movf	80,w	;volatile
 14271  1D24  391F               	andlw	31
 14272                           
 14273                           ; Switch size 1, requested type "speed"
 14274                           ; Number of cases is 3, Range of values is 0 to 2
 14275                           ; switch strategies available:
 14276                           ; Name         Instructions Cycles
 14277                           ; simple_byte           10     6 (average)
 14278                           ; direct_byte           12     6 (fixed)
 14279                           ; jumptable            260     6 (fixed)
 14280                           ;	Chosen strategy is simple_byte
 14281  1D25  1903               	skipnz
 14282  1D26  2CEF               	goto	i1l848
 14283  1D27  3A01               	xorlw	1	; case 1
 14284  1D28  1903               	skipnz
 14285  1D29  2CF7               	goto	i1l852
 14286  1D2A  3A03               	xorlw	3	; case 2
 14287  1D2B  1903               	skipnz
 14288  1D2C  2CFA               	goto	i1l853
 14289  1D2D  2D2E               	goto	i1l851
 14290  1D2E                     i1l851:	
 14291                           
 14292                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 14293  1D2E  0021               	movlb	1	; select bank1
 14294  1D2F  1FAF               	btfss	(_inPipes^(0+128)+2),7	;volatile
 14295  1D30  0008               	return
 14296                           
 14297                           ;usb_device.c: 2179: {
 14298                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 14299  1D31  3060               	movlw	96
 14300  1D32  00AD               	movwf	_inPipes^(0+128)	;volatile
 14301  1D33  01AE               	clrf	(_inPipes+1)^(0+128)	;volatile
 14302                           
 14303                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14304  1D34  142F               	bsf	(_inPipes^(0+128)+2),0	;volatile
 14305                           
 14306                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 14307  1D35  3002               	movlw	2
 14308  1D36  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
 14309  1D37  0008               	return
 14310  1D38                     __end_ofi1_USBStdGetStatusHandler:	
 14311                           
 14312                           	psect	text56
 14313  1D88                     __ptext56:	
 14314 ;; *************** function i1_USBStdGetDscHandler *****************
 14315 ;; Defined at:
 14316 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
 14317 ;; Parameters:    Size  Location     Type
 14318 ;;		None
 14319 ;; Auto vars:     Size  Location     Type
 14320 ;;		None
 14321 ;; Return value:  Size  Location     Type
 14322 ;;                  1    wreg      void 
 14323 ;; Registers used:
 14324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 14325 ;; Tracked objects:
 14326 ;;		On entry : 1E/0
 14327 ;;		On exit  : 1E/0
 14328 ;;		Unchanged: 0/0
 14329 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14332 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14333 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14334 ;;Total ram usage:        3 bytes
 14335 ;; Hardware stack levels used:    1
 14336 ;; This function calls:
 14337 ;;		Nothing
 14338 ;; This function is called by:
 14339 ;;		i1_USBCheckStdRequest
 14340 ;; This function uses a non-reentrant model
 14341 ;;
 14342                           
 14343                           
 14344                           ;psect for function i1_USBStdGetDscHandler
 14345  1D88                     i1_USBStdGetDscHandler:	
 14346                           
 14347                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 14348                           
 14349                           ;incstack = 0
 14350                           ; Regs used in i1_USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 14351  1D88  3080               	movlw	128
 14352  1D89  0020               	movlb	0	; select bank0
 14353  1D8A  0650               	xorwf	80,w	;volatile
 14354  1D8B  1D03               	btfss	3,2
 14355  1D8C  0008               	return
 14356                           
 14357                           ;usb_device.c: 2046: {
 14358                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 14359  1D8D  30C0               	movlw	192
 14360  1D8E  0021               	movlb	1	; select bank1
 14361  1D8F  00AF               	movwf	(_inPipes^(0+128)+2)	;volatile
 14362                           
 14363                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 14364  1D90  2DEB               	goto	i1l5257
 14365  1D91                     i1l5233:	
 14366                           
 14367                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 14368  1D91  3042               	movlw	low (_device_dsc| (0+32768))
 14369  1D92  0021               	movlb	1	; select bank1
 14370  1D93  00AD               	movwf	_inPipes^(0+128)	;volatile
 14371  1D94  3099               	movlw	high (_device_dsc| (0+32768))
 14372  1D95  00AE               	movwf	(_inPipes^(0+128)+1)	;volatile
 14373                           
 14374                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 14375  1D96  3012               	movlw	18
 14376  1D97  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
 14377  1D98  01B1               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 14378                           
 14379                           ;usb_device.c: 2058: break;
 14380  1D99  0008               	return
 14381  1D9A                     i1l5235:	
 14382                           
 14383                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 14384  1D9A  0852               	movf	82,w	;volatile
 14385  1D9B  1D03               	btfss	3,2
 14386  1D9C  2DC6               	goto	i1l5243
 14387                           
 14388                           ;usb_device.c: 2064: {
 14389                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 14390  1D9D  0852               	movf	82,w	;volatile
 14391  1D9E  00F0               	movwf	??i1_USBStdGetDscHandler
 14392  1D9F  305E               	movlw	low (_USB_CD_Ptr| (0+32768))
 14393  1DA0  01F1               	clrf	??i1_USBStdGetDscHandler+1
 14394  1DA1  35F0               	lslf	??i1_USBStdGetDscHandler,f
 14395  1DA2  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 14396  1DA3  0770               	addwf	??i1_USBStdGetDscHandler,w
 14397  1DA4  0084               	movwf	4
 14398  1DA5  3099               	movlw	high (_USB_CD_Ptr| (0+32768))
 14399  1DA6  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 14400  1DA7  0085               	movwf	5
 14401  1DA8  3F00               	moviw [0]fsr0
 14402  1DA9  0021               	movlb	1	; select bank1
 14403  1DAA  00AD               	movwf	_inPipes^(0+128)	;volatile
 14404  1DAB  3F01               	moviw [1]fsr0
 14405  1DAC  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
 14406                           
 14407                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 14408  1DAD  082E               	movf	(_inPipes+1)^(0+128),w	;volatile
 14409  1DAE  00F1               	movwf	??i1_USBStdGetDscHandler+1
 14410  1DAF  082D               	movf	_inPipes^(0+128),w	;volatile
 14411  1DB0  00F0               	movwf	??i1_USBStdGetDscHandler
 14412  1DB1  3E02               	addlw	2
 14413  1DB2  0084               	movwf	4
 14414  1DB3  0871               	movf	??i1_USBStdGetDscHandler+1,w
 14415  1DB4  1803               	skipnc
 14416  1DB5  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 14417  1DB6  0085               	movwf	5
 14418  1DB7  0800               	movf	0,w	;code access
 14419  1DB8  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
 14420                           
 14421                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 14422  1DB9  082E               	movf	(_inPipes+1)^(0+128),w	;volatile
 14423  1DBA  00F1               	movwf	??i1_USBStdGetDscHandler+1
 14424  1DBB  082D               	movf	_inPipes^(0+128),w	;volatile
 14425  1DBC  00F0               	movwf	??i1_USBStdGetDscHandler
 14426  1DBD  3E03               	addlw	3
 14427  1DBE  0084               	movwf	4
 14428  1DBF  0871               	movf	??i1_USBStdGetDscHandler+1,w
 14429  1DC0  1803               	skipnc
 14430  1DC1  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 14431  1DC2  0085               	movwf	5
 14432  1DC3  0800               	movf	0,w	;code access
 14433  1DC4  00B1               	movwf	(_inPipes^(0+128)+4)	;volatile
 14434                           
 14435                           ;usb_device.c: 2076: }
 14436  1DC5  0008               	return
 14437  1DC6                     i1l5243:	
 14438                           
 14439                           ;usb_device.c: 2077: else
 14440                           ;usb_device.c: 2078: {
 14441                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 14442  1DC6  0021               	movlb	1	; select bank1
 14443  1DC7  01AF               	clrf	(_inPipes^(0+128)+2)	;volatile
 14444  1DC8  0008               	return
 14445  1DC9                     i1l5245:	
 14446                           
 14447                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 14448  1DC9  3003               	movlw	3
 14449  1DCA  0252               	subwf	82,w	;volatile
 14450  1DCB  1803               	skipnc
 14451  1DCC  2DE5               	goto	i1l5251
 14452                           
 14453                           ;usb_device.c: 2087: {
 14454                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 14455  1DCD  0852               	movf	82,w	;volatile
 14456  1DCE  00F0               	movwf	??i1_USBStdGetDscHandler
 14457  1DCF  3054               	movlw	low (_USB_SD_Ptr| (0+32768))
 14458  1DD0  01F1               	clrf	??i1_USBStdGetDscHandler+1
 14459  1DD1  35F0               	lslf	??i1_USBStdGetDscHandler,f
 14460  1DD2  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 14461  1DD3  0770               	addwf	??i1_USBStdGetDscHandler,w
 14462  1DD4  0084               	movwf	4
 14463  1DD5  3099               	movlw	high (_USB_SD_Ptr| (0+32768))
 14464  1DD6  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 14465  1DD7  0085               	movwf	5
 14466  1DD8  3F00               	moviw [0]fsr0
 14467  1DD9  0021               	movlb	1	; select bank1
 14468  1DDA  00AD               	movwf	_inPipes^(0+128)	;volatile
 14469  1DDB  3F01               	moviw [1]fsr0
 14470  1DDC  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
 14471                           
 14472                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 14473  1DDD  082D               	movf	_inPipes^(0+128),w	;volatile
 14474  1DDE  0084               	movwf	4
 14475  1DDF  082E               	movf	(_inPipes+1)^(0+128),w	;volatile
 14476  1DE0  0085               	movwf	5
 14477  1DE1  0800               	movf	0,w	;code access
 14478  1DE2  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
 14479  1DE3  01B1               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 14480                           
 14481                           ;usb_device.c: 2092: }
 14482  1DE4  0008               	return
 14483  1DE5                     i1l5251:	
 14484                           
 14485                           ;usb_device.c: 2102: else
 14486                           ;usb_device.c: 2103: {
 14487                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 14488  1DE5  0021               	movlb	1	; select bank1
 14489  1DE6  01AF               	clrf	(_inPipes^(0+128)+2)	;volatile
 14490  1DE7  0008               	return
 14491  1DE8                     i1l5253:	
 14492                           
 14493                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 14494  1DE8  0021               	movlb	1	; select bank1
 14495  1DE9  01AF               	clrf	(_inPipes^(0+128)+2)	;volatile
 14496                           
 14497                           ;usb_device.c: 2109: break;
 14498  1DEA  0008               	return
 14499  1DEB                     i1l5257:	
 14500  1DEB  0020               	movlb	0	; select bank0
 14501  1DEC  0853               	movf	83,w	;volatile
 14502                           
 14503                           ; Switch size 1, requested type "speed"
 14504                           ; Number of cases is 3, Range of values is 1 to 3
 14505                           ; switch strategies available:
 14506                           ; Name         Instructions Cycles
 14507                           ; simple_byte           10     6 (average)
 14508                           ; direct_byte           15     9 (fixed)
 14509                           ; jumptable            263     9 (fixed)
 14510                           ;	Chosen strategy is simple_byte
 14511  1DED  3A01               	xorlw	1	; case 1
 14512  1DEE  1903               	skipnz
 14513  1DEF  2D91               	goto	i1l5233
 14514  1DF0  3A03               	xorlw	3	; case 2
 14515  1DF1  1903               	skipnz
 14516  1DF2  2D9A               	goto	i1l5235
 14517  1DF3  3A01               	xorlw	1	; case 3
 14518  1DF4  1903               	skipnz
 14519  1DF5  2DC9               	goto	i1l5245
 14520  1DF6  2DE8               	goto	i1l5253
 14521  1DF7  0008               	return
 14522  1DF8                     __end_ofi1_USBStdGetDscHandler:	
 14523                           
 14524                           	psect	swtext6
 14525  1100                     __pswtext6:	
 14526  1100                     i1S10015:	
 14527  1100  3196  2E69         	ljmp	i1l7939
 14528  1102  3196  2E89         	ljmp	i1l560
 14529  1104  3196  2E6C         	ljmp	i1l7941
 14530  1106  3196  2E89         	ljmp	i1l560
 14531  1108  3196  2E89         	ljmp	i1l560
 14532  110A  3196  2E89         	ljmp	i1l560
 14533  110C  3196  2E89         	ljmp	i1l560
 14534  110E  3196  2E89         	ljmp	i1l560
 14535  1110  3196  2E89         	ljmp	i1l560
 14536  1112  3196  2E89         	ljmp	i1l560
 14537  1114  3196  2E89         	ljmp	i1l560
 14538  1116  3196  2E89         	ljmp	i1l560
 14539  1118  3196  2E89         	ljmp	i1l560
 14540  111A  3196  2E89         	ljmp	i1l560
 14541  111C  3196  2E89         	ljmp	i1l560
 14542  111E  3196  2E89         	ljmp	i1l560
 14543  1120  3196  2E89         	ljmp	i1l560
 14544  1122  3196  2E89         	ljmp	i1l560
 14545  1124  3196  2E89         	ljmp	i1l560
 14546  1126  3196  2E89         	ljmp	i1l560
 14547  1128  3196  2E89         	ljmp	i1l560
 14548  112A  3196  2E89         	ljmp	i1l560
 14549  112C  3196  2E89         	ljmp	i1l560
 14550  112E  3196  2E89         	ljmp	i1l560
 14551  1130  3196  2E89         	ljmp	i1l560
 14552  1132  3196  2E89         	ljmp	i1l560
 14553  1134  3196  2E89         	ljmp	i1l560
 14554  1136  3196  2E89         	ljmp	i1l560
 14555  1138  3196  2E89         	ljmp	i1l560
 14556  113A  3196  2E89         	ljmp	i1l560
 14557  113C  3196  2E89         	ljmp	i1l560
 14558  113E  3196  2E89         	ljmp	i1l560
 14559  1140  3196  2E89         	ljmp	i1l560
 14560  1142  3196  2E89         	ljmp	i1l560
 14561  1144  3196  2E89         	ljmp	i1l560
 14562  1146  3196  2E89         	ljmp	i1l560
 14563  1148  3196  2E89         	ljmp	i1l560
 14564  114A  3196  2E89         	ljmp	i1l560
 14565  114C  3196  2E89         	ljmp	i1l560
 14566  114E  3196  2E89         	ljmp	i1l560
 14567  1150  3196  2E89         	ljmp	i1l560
 14568  1152  3196  2E89         	ljmp	i1l560
 14569  1154  3196  2E89         	ljmp	i1l560
 14570  1156  3196  2E89         	ljmp	i1l560
 14571  1158  3196  2E89         	ljmp	i1l560
 14572  115A  3196  2E89         	ljmp	i1l560
 14573  115C  3196  2E89         	ljmp	i1l560
 14574  115E  3196  2E89         	ljmp	i1l560
 14575  1160  3196  2E89         	ljmp	i1l560
 14576  1162  3196  2E89         	ljmp	i1l560
 14577  1164  3196  2E89         	ljmp	i1l560
 14578  1166  3196  2E89         	ljmp	i1l560
 14579  1168  3196  2E89         	ljmp	i1l560
 14580  116A  3196  2E89         	ljmp	i1l560
 14581  116C  3196  2E89         	ljmp	i1l560
 14582  116E  3196  2E89         	ljmp	i1l560
 14583  1170  3196  2E89         	ljmp	i1l560
 14584  1172  3196  2E89         	ljmp	i1l560
 14585  1174  3196  2E89         	ljmp	i1l560
 14586  1176  3196  2E89         	ljmp	i1l560
 14587  1178  3196  2E89         	ljmp	i1l560
 14588  117A  3196  2E89         	ljmp	i1l560
 14589  117C  3196  2E89         	ljmp	i1l560
 14590  117E  3196  2E89         	ljmp	i1l560
 14591  1180  3196  2E89         	ljmp	i1l560
 14592  1182  3196  2E89         	ljmp	i1l560
 14593  1184  3196  2E89         	ljmp	i1l560
 14594  1186  3196  2E89         	ljmp	i1l560
 14595  1188  3196  2E89         	ljmp	i1l560
 14596  118A  3196  2E89         	ljmp	i1l560
 14597  118C  3196  2E89         	ljmp	i1l560
 14598  118E  3196  2E89         	ljmp	i1l560
 14599  1190  3196  2E89         	ljmp	i1l560
 14600  1192  3196  2E89         	ljmp	i1l560
 14601  1194  3196  2E89         	ljmp	i1l560
 14602  1196  3196  2E89         	ljmp	i1l560
 14603  1198  3196  2E89         	ljmp	i1l560
 14604  119A  3196  2E89         	ljmp	i1l560
 14605  119C  3196  2E89         	ljmp	i1l560
 14606  119E  3196  2E89         	ljmp	i1l560
 14607  11A0  3196  2E89         	ljmp	i1l560
 14608  11A2  3196  2E89         	ljmp	i1l560
 14609  11A4  3196  2E89         	ljmp	i1l560
 14610  11A6  3196  2E89         	ljmp	i1l560
 14611  11A8  3196  2E89         	ljmp	i1l560
 14612  11AA  3196  2E89         	ljmp	i1l560
 14613  11AC  3196  2E89         	ljmp	i1l560
 14614  11AE  3196  2E89         	ljmp	i1l560
 14615  11B0  3196  2E89         	ljmp	i1l560
 14616  11B2  3196  2E89         	ljmp	i1l560
 14617  11B4  3196  2E89         	ljmp	i1l560
 14618  11B6  3196  2E89         	ljmp	i1l560
 14619  11B8  3196  2E89         	ljmp	i1l560
 14620  11BA  3196  2E89         	ljmp	i1l560
 14621  11BC  3196  2E89         	ljmp	i1l560
 14622  11BE  3196  2E89         	ljmp	i1l560
 14623  11C0  3196  2E89         	ljmp	i1l560
 14624  11C2  3196  2E89         	ljmp	i1l560
 14625  11C4  3196  2E89         	ljmp	i1l560
 14626  11C6  3196  2E89         	ljmp	i1l560
 14627  11C8  3196  2E89         	ljmp	i1l560
 14628  11CA  3196  2E89         	ljmp	i1l560
 14629  11CC  3196  2E89         	ljmp	i1l560
 14630  11CE  3196  2E89         	ljmp	i1l560
 14631  11D0  3196  2E89         	ljmp	i1l560
 14632  11D2  3196  2E89         	ljmp	i1l560
 14633  11D4  3196  2E89         	ljmp	i1l560
 14634  11D6  3196  2E89         	ljmp	i1l560
 14635  11D8  3196  2E89         	ljmp	i1l560
 14636  11DA  3196  2E89         	ljmp	i1l560
 14637  11DC  3196  2E89         	ljmp	i1l560
 14638  11DE  3196  2E89         	ljmp	i1l560
 14639  11E0  3196  2E89         	ljmp	i1l560
 14640  11E2  3196  2E89         	ljmp	i1l560
 14641  11E4  3196  2E89         	ljmp	i1l560
 14642  11E6  3196  2E89         	ljmp	i1l560
 14643  11E8  3196  2E89         	ljmp	i1l560
 14644                           
 14645                           	psect	text59
 14646  1C54                     __ptext59:	
 14647 ;; *************** function i1_USBCheckCDCRequest *****************
 14648 ;; Defined at:
 14649 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
 14650 ;; Parameters:    Size  Location     Type
 14651 ;;		None
 14652 ;; Auto vars:     Size  Location     Type
 14653 ;;		None
 14654 ;; Return value:  Size  Location     Type
 14655 ;;                  1    wreg      void 
 14656 ;; Registers used:
 14657 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14658 ;; Tracked objects:
 14659 ;;		On entry : 1F/0
 14660 ;;		On exit  : 1E/0
 14661 ;;		Unchanged: 0/0
 14662 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14667 ;;Total ram usage:        0 bytes
 14668 ;; Hardware stack levels used:    1
 14669 ;; This function calls:
 14670 ;;		Nothing
 14671 ;; This function is called by:
 14672 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676                           
 14677                           ;psect for function i1_USBCheckCDCRequest
 14678  1C54                     i1_USBCheckCDCRequest:	
 14679                           
 14680                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
 14681                           
 14682                           ;incstack = 0
 14683                           ; Regs used in i1_USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 14684  1C54  0850               	movf	80,w	;volatile
 14685  1C55  391F               	andlw	31
 14686  1C56  3A01               	xorlw	1
 14687  1C57  1D03               	btfss	3,2
 14688  1C58  0008               	return
 14689                           
 14690                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
 14691  1C59  0E50               	swapf	80,w	;volatile
 14692  1C5A  0C89               	rrf	9,f
 14693  1C5B  3903               	andlw	3
 14694  1C5C  3A01               	xorlw	1
 14695  1C5D  1D03               	btfss	3,2
 14696  1C5E  0008               	return
 14697                           
 14698                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
 14699                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
 14700  1C5F  0854               	movf	84,w	;volatile
 14701  1C60  1903               	btfsc	3,2
 14702  1C61  2C94               	goto	i1l7661
 14703  1C62  0354               	decf	84,w	;volatile
 14704  1C63  1D03               	btfss	3,2
 14705  1C64  0008               	return
 14706  1C65  2C94               	goto	i1l7661
 14707  1C66                     i1l7631:	
 14708                           
 14709                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 14710  1C66  3051               	movlw	low _dummy_encapsulated_cmd_response
 14711  1C67  0021               	movlb	1	; select bank1
 14712  1C68  00AD               	movwf	_inPipes^(0+128)	;volatile
 14713  1C69  3001               	movlw	high _dummy_encapsulated_cmd_response
 14714  1C6A  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
 14715                           
 14716                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
 14717  1C6B  3008               	movlw	8
 14718  1C6C  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
 14719  1C6D  01B1               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 14720                           
 14721                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14722  1C6E  142F               	bsf	(_inPipes^(0+128)+2),0	;volatile
 14723                           
 14724                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
 14725  1C6F  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 14726                           
 14727                           ;usb_device_cdc.c: 174: break;
 14728  1C70  0008               	return
 14729  1C71                     i1l7639:	
 14730                           
 14731                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 14732  1C71  3051               	movlw	low _dummy_encapsulated_cmd_response
 14733  1C72  0021               	movlb	1	; select bank1
 14734  1C73  00AD               	movwf	_inPipes^(0+128)	;volatile
 14735  1C74  3001               	movlw	high _dummy_encapsulated_cmd_response
 14736  1C75  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
 14737                           
 14738                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
 14739  1C76  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 14740                           
 14741                           ;usb_device_cdc.c: 179: break;
 14742  1C77  0008               	return
 14743  1C78                     i1l7643:	
 14744                           
 14745                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
 14746  1C78  0857               	movf	87,w	;volatile
 14747  1C79  0021               	movlb	1	; select bank1
 14748  1C7A  00A4               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
 14749  1C7B  0020               	movlb	0	; select bank0
 14750  1C7C  0856               	movf	86,w	;volatile
 14751  1C7D  0021               	movlb	1	; select bank1
 14752  1C7E  00A3               	movwf	(_outPipes^(0+128)+3)	;volatile
 14753                           
 14754                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 14755  1C7F  3059               	movlw	(low (_line_coding| (0+256)))& (0+255)
 14756  1C80  00A0               	movwf	_outPipes^(0+128)	;volatile
 14757                           
 14758                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
 14759  1C81  01A5               	clrf	(low ((_outPipes| 0+5)))^(0+128)	;volatile
 14760  1C82  01A6               	clrf	((low ((_outPipes| 0+5))+1))^(0+128)	;volatile
 14761                           
 14762                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
 14763  1C83  17A2               	bsf	(_outPipes^(0+128)+2),7	;volatile
 14764                           
 14765                           ;usb_device_cdc.c: 188: break;
 14766  1C84  0008               	return
 14767  1C85                     i1l7649:	
 14768                           
 14769                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14770  1C85  3059               	movlw	low _line_coding
 14771  1C86  0021               	movlb	1	; select bank1
 14772  1C87  00AD               	movwf	_inPipes^(0+128)	;volatile
 14773  1C88  3001               	movlw	high _line_coding
 14774  1C89  00AE               	movwf	(_inPipes+1)^(0+128)	;volatile
 14775  1C8A  3007               	movlw	7
 14776  1C8B  00B0               	movwf	(_inPipes^(0+128)+3)	;volatile
 14777  1C8C  01B1               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 14778  1C8D  30C1               	movlw	193
 14779  1C8E  00AF               	movwf	(_inPipes^(0+128)+2)	;volatile
 14780                           
 14781                           ;usb_device_cdc.c: 195: break;
 14782  1C8F  0008               	return
 14783  1C90                     i1l7655:	
 14784                           
 14785                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 14786  1C90  0852               	movf	82,w	;volatile
 14787                           
 14788                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
 14789  1C91  0021               	movlb	1	; select bank1
 14790  1C92  17AF               	bsf	(_inPipes^(0+128)+2),7	;volatile
 14791                           
 14792                           ;usb_device_cdc.c: 231: break;
 14793  1C93  0008               	return
 14794  1C94                     i1l7661:	
 14795  1C94  0851               	movf	81,w	;volatile
 14796                           
 14797                           ; Switch size 1, requested type "speed"
 14798                           ; Number of cases is 5, Range of values is 0 to 34
 14799                           ; switch strategies available:
 14800                           ; Name         Instructions Cycles
 14801                           ; direct_byte           76     6 (fixed)
 14802                           ; simple_byte           16     9 (average)
 14803                           ; jumptable            260     6 (fixed)
 14804                           ;	Chosen strategy is direct_byte
 14805  1C95  0084               	movwf	4
 14806  1C96  3023               	movlw	35
 14807  1C97  0204               	subwf	4,w
 14808  1C98  1803               	skipnc
 14809  1C99  0008               	return
 14810  1C9A  3198               	movlp	high i1S10017
 14811  1C9B  3504               	lslf	4,w
 14812  1C9C  3E46               	addlw	low i1S10017
 14813  1C9D  0082               	movwf	2
 14814  1C9E                     i1l46:	
 14815  1C9E  0008               	return
 14816  1C9F                     __end_ofi1_USBCheckCDCRequest:	
 14817                           
 14818                           	psect	swtext7
 14819  1846                     __pswtext7:	
 14820  1846                     i1S10017:	
 14821  1846  319C  2C66         	ljmp	i1l7631
 14822  1848  319C  2C71         	ljmp	i1l7639
 14823  184A  319C  2C9E         	ljmp	i1l46
 14824  184C  319C  2C9E         	ljmp	i1l46
 14825  184E  319C  2C9E         	ljmp	i1l46
 14826  1850  319C  2C9E         	ljmp	i1l46
 14827  1852  319C  2C9E         	ljmp	i1l46
 14828  1854  319C  2C9E         	ljmp	i1l46
 14829  1856  319C  2C9E         	ljmp	i1l46
 14830  1858  319C  2C9E         	ljmp	i1l46
 14831  185A  319C  2C9E         	ljmp	i1l46
 14832  185C  319C  2C9E         	ljmp	i1l46
 14833  185E  319C  2C9E         	ljmp	i1l46
 14834  1860  319C  2C9E         	ljmp	i1l46
 14835  1862  319C  2C9E         	ljmp	i1l46
 14836  1864  319C  2C9E         	ljmp	i1l46
 14837  1866  319C  2C9E         	ljmp	i1l46
 14838  1868  319C  2C9E         	ljmp	i1l46
 14839  186A  319C  2C9E         	ljmp	i1l46
 14840  186C  319C  2C9E         	ljmp	i1l46
 14841  186E  319C  2C9E         	ljmp	i1l46
 14842  1870  319C  2C9E         	ljmp	i1l46
 14843  1872  319C  2C9E         	ljmp	i1l46
 14844  1874  319C  2C9E         	ljmp	i1l46
 14845  1876  319C  2C9E         	ljmp	i1l46
 14846  1878  319C  2C9E         	ljmp	i1l46
 14847  187A  319C  2C9E         	ljmp	i1l46
 14848  187C  319C  2C9E         	ljmp	i1l46
 14849  187E  319C  2C9E         	ljmp	i1l46
 14850  1880  319C  2C9E         	ljmp	i1l46
 14851  1882  319C  2C9E         	ljmp	i1l46
 14852  1884  319C  2C9E         	ljmp	i1l46
 14853  1886  319C  2C78         	ljmp	i1l7643
 14854  1888  319C  2C85         	ljmp	i1l7649
 14855  188A  319C  2C90         	ljmp	i1l7655
 14856                           
 14857                           	psect	text60
 14858  0888                     __ptext60:	
 14859 ;; *************** function i1_CDCInitEP *****************
 14860 ;; Defined at:
 14861 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
 14862 ;; Parameters:    Size  Location     Type
 14863 ;;		None
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;		None
 14866 ;; Return value:  Size  Location     Type
 14867 ;;                  1    wreg      void 
 14868 ;; Registers used:
 14869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14870 ;; Tracked objects:
 14871 ;;		On entry : 1F/0
 14872 ;;		On exit  : 1F/1
 14873 ;;		Unchanged: 0/0
 14874 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14879 ;;Total ram usage:        0 bytes
 14880 ;; Hardware stack levels used:    1
 14881 ;; Hardware stack levels required when called:    2
 14882 ;; This function calls:
 14883 ;;		i1_USBEnableEndpoint
 14884 ;;		i1_USBTransferOnePacket
 14885 ;; This function is called by:
 14886 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 14887 ;; This function uses a non-reentrant model
 14888 ;;
 14889                           
 14890                           
 14891                           ;psect for function i1_CDCInitEP
 14892  0888                     i1_CDCInitEP:	
 14893                           
 14894                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
 14895                           
 14896                           ;incstack = 0
 14897                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14898  0888  0022               	movlb	2	; select bank2
 14899  0889  304B               	movlw	75
 14900  088A  01DC               	clrf	(_line_coding+3)^(0+256)
 14901  088B  01DB               	clrf	(_line_coding+2)^(0+256)
 14902  088C  00DA               	movwf	(_line_coding+1)^(0+256)
 14903  088D  3008               	movlw	8
 14904  088E  01D9               	clrf	_line_coding^(0+256)
 14905                           
 14906                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
 14907  088F  01DD               	clrf	(_line_coding^(0+256)+4)
 14908  0890  01DE               	clrf	(_line_coding^(0+256)+5)
 14909                           
 14910                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
 14911  0891  00DF               	movwf	(_line_coding^(0+256)+6)
 14912                           
 14913                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
 14914  0892  0021               	movlb	1	; select bank1
 14915  0893  301A               	movlw	26
 14916  0894  01C6               	clrf	_cdc_rx_len^(0+128)
 14917                           
 14918                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
 14919  0895  00F4               	movwf	i1USBEnableEndpoint@options
 14920  0896  3001               	movlw	1
 14921  0897  20B1  3188         	fcall	i1_USBEnableEndpoint
 14922                           
 14923                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 14924  0899  301E               	movlw	30
 14925  089A  00F4               	movwf	i1USBEnableEndpoint@options
 14926  089B  3002               	movlw	2
 14927  089C  20B1  3188         	fcall	i1_USBEnableEndpoint
 14928  089E  30A0               	movlw	low _cdc_data_rx
 14929                           
 14930                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 14931  089F  01F0               	clrf	i1USBTransferOnePacket@dir
 14932  08A0  00F1               	movwf	i1USBTransferOnePacket@data
 14933  08A1  3002               	movlw	high _cdc_data_rx
 14934  08A2  00F2               	movwf	i1USBTransferOnePacket@data+1
 14935  08A3  3040               	movlw	64
 14936  08A4  00F3               	movwf	i1USBTransferOnePacket@len
 14937  08A5  3002               	movlw	2
 14938  08A6  20FD               	fcall	i1_USBTransferOnePacket
 14939  08A7  0871               	movf	?i1_USBTransferOnePacket+1,w
 14940  08A8  0022               	movlb	2	; select bank2
 14941  08A9  00B5               	movwf	(_CDCDataOutHandle+1)^(0+256)
 14942  08AA  0870               	movf	?i1_USBTransferOnePacket,w
 14943  08AB  00B4               	movwf	_CDCDataOutHandle^(0+256)
 14944                           
 14945                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
 14946  08AC  01B2               	clrf	_CDCDataInHandle^(0+256)
 14947  08AD  01B3               	clrf	(_CDCDataInHandle+1)^(0+256)
 14948                           
 14949                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
 14950  08AE  0021               	movlb	1	; select bank1
 14951  08AF  01C5               	clrf	_cdc_trf_state^(0+128)
 14952  08B0  0008               	return
 14953  08B1                     __end_ofi1_CDCInitEP:	
 14954  08B1                     __ptext62:	
 14955 ;; *************** function i1_USBEnableEndpoint *****************
 14956 ;; Defined at:
 14957 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
 14958 ;; Parameters:    Size  Location     Type
 14959 ;;  ep              1    wreg     unsigned char 
 14960 ;;  options         1    4[COMMON] unsigned char 
 14961 ;; Auto vars:     Size  Location     Type
 14962 ;;  ep              1    9[COMMON] unsigned char 
 14963 ;;  USBEnableEnd    2    7[COMMON] PTR unsigned char 
 14964 ;;		 -> UEP0(1), 
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  1    wreg      void 
 14967 ;; Registers used:
 14968 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14969 ;; Tracked objects:
 14970 ;;		On entry : 0/1
 14971 ;;		On exit  : 0/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14974 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14975 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14977 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14978 ;;Total ram usage:        6 bytes
 14979 ;; Hardware stack levels used:    1
 14980 ;; Hardware stack levels required when called:    1
 14981 ;; This function calls:
 14982 ;;		i1_USBConfigureEndpoint
 14983 ;; This function is called by:
 14984 ;;		i1_CDCInitEP
 14985 ;; This function uses a non-reentrant model
 14986 ;;
 14987                           
 14988                           
 14989                           ;psect for function i1_USBEnableEndpoint
 14990  08B1                     i1_USBEnableEndpoint:	
 14991                           
 14992                           ;incstack = 0
 14993                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14994                           ;i1USBEnableEndpoint@ep stored from wreg
 14995  08B1  00F9               	movwf	i1USBEnableEndpoint@ep
 14996                           
 14997                           ;usb_device.c: 880: unsigned char* p;
 14998                           ;usb_device.c: 884: if(options & 0x04)
 14999  08B2  1D74               	btfss	i1USBEnableEndpoint@options,2
 15000  08B3  28B7               	goto	i1l7511
 15001                           
 15002                           ;usb_device.c: 885: {
 15003                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 15004  08B4  01F0               	clrf	i1USBConfigureEndpoint@direction
 15005  08B5  20CE  3188         	fcall	i1_USBConfigureEndpoint
 15006  08B7                     i1l7511:	
 15007                           
 15008                           ;usb_device.c: 887: }
 15009                           ;usb_device.c: 888: if(options & 0x02)
 15010  08B7  1CF4               	btfss	i1USBEnableEndpoint@options,1
 15011  08B8  28BD               	goto	i1l7515
 15012                           
 15013                           ;usb_device.c: 889: {
 15014                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 15015  08B9  01F0               	clrf	i1USBConfigureEndpoint@direction
 15016  08BA  0AF0               	incf	i1USBConfigureEndpoint@direction,f
 15017  08BB  0879               	movf	i1USBEnableEndpoint@ep,w
 15018  08BC  20CE               	fcall	i1_USBConfigureEndpoint
 15019  08BD                     i1l7515:	
 15020                           
 15021                           ;usb_device.c: 891: }
 15022                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 15023  08BD  0879               	movf	i1USBEnableEndpoint@ep,w
 15024  08BE  3E98               	addlw	152
 15025  08BF  00F5               	movwf	??i1_USBEnableEndpoint
 15026  08C0  300E               	movlw	14
 15027  08C1  01F6               	clrf	??i1_USBEnableEndpoint+1
 15028  08C2  3DF6               	addwfc	??i1_USBEnableEndpoint+1,f
 15029  08C3  0875               	movf	??i1_USBEnableEndpoint,w
 15030  08C4  00F7               	movwf	i1USBEnableEndpoint@p
 15031  08C5  0876               	movf	??i1_USBEnableEndpoint+1,w
 15032  08C6  00F8               	movwf	i1USBEnableEndpoint@p+1
 15033                           
 15034                           ;usb_device.c: 901: *p = options;
 15035  08C7  0877               	movf	i1USBEnableEndpoint@p,w
 15036  08C8  0086               	movwf	6
 15037  08C9  0878               	movf	i1USBEnableEndpoint@p+1,w
 15038  08CA  0087               	movwf	7
 15039  08CB  0874               	movf	i1USBEnableEndpoint@options,w
 15040  08CC  0081               	movwf	1
 15041  08CD  0008               	return
 15042  08CE                     __end_ofi1_USBEnableEndpoint:	
 15043  08CE                     __ptext63:	
 15044 ;; *************** function i1_USBConfigureEndpoint *****************
 15045 ;; Defined at:
 15046 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
 15047 ;; Parameters:    Size  Location     Type
 15048 ;;  EPNum           1    wreg     unsigned char 
 15049 ;;  direction       1    0[COMMON] unsigned char 
 15050 ;; Auto vars:     Size  Location     Type
 15051 ;;  EPNum           1    2[COMMON] unsigned char 
 15052 ;;  USBConfigure    1    3[COMMON] PTR volatile struct __BD
 15053 ;;		 -> BDT(48), 
 15054 ;; Return value:  Size  Location     Type
 15055 ;;                  1    wreg      void 
 15056 ;; Registers used:
 15057 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15058 ;; Tracked objects:
 15059 ;;		On entry : 0/1
 15060 ;;		On exit  : 0/0
 15061 ;;		Unchanged: 0/0
 15062 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15063 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15066 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15067 ;;Total ram usage:        4 bytes
 15068 ;; Hardware stack levels used:    1
 15069 ;; This function calls:
 15070 ;;		Nothing
 15071 ;; This function is called by:
 15072 ;;		i1_USBEnableEndpoint
 15073 ;; This function uses a non-reentrant model
 15074 ;;
 15075                           
 15076                           
 15077                           ;psect for function i1_USBConfigureEndpoint
 15078  08CE                     i1_USBConfigureEndpoint:	
 15079                           
 15080                           ;incstack = 0
 15081                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 15082                           ;i1USBConfigureEndpoint@EPNum stored from wreg
 15083  08CE  00F2               	movwf	i1USBConfigureEndpoint@EPNum
 15084                           
 15085                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 15086                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 15087  08CF  3020               	movlw	32
 15088  08D0  00F3               	movwf	i1USBConfigureEndpoint@handle
 15089                           
 15090                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 15091  08D1  0870               	movf	i1USBConfigureEndpoint@direction,w
 15092  08D2  00F1               	movwf	??i1_USBConfigureEndpoint
 15093  08D3  35F1               	lslf	??i1_USBConfigureEndpoint,f
 15094  08D4  0872               	movf	i1USBConfigureEndpoint@EPNum,w
 15095  08D5  0709               	addwf	9,w
 15096  08D6  0709               	addwf	9,w
 15097  08D7  0771               	addwf	??i1_USBConfigureEndpoint,w
 15098  08D8  0709               	addwf	9,w
 15099  08D9  0709               	addwf	9,w
 15100  08DA  07F3               	addwf	i1USBConfigureEndpoint@handle,f
 15101                           
 15102                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 15103  08DB  0873               	movf	i1USBConfigureEndpoint@handle,w
 15104  08DC  0086               	movwf	6
 15105  08DD  0187               	clrf	7
 15106  08DE  1381               	bcf	1,7
 15107                           
 15108                           ;usb_device.c: 1557: if(direction == 0)
 15109  08DF  0870               	movf	i1USBConfigureEndpoint@direction,w
 15110  08E0  1D03               	btfss	3,2
 15111  08E1  28EC               	goto	i1l7433
 15112                           
 15113                           ;usb_device.c: 1558: {
 15114                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 15115  08E2  3572               	lslf	i1USBConfigureEndpoint@EPNum,w
 15116  08E3  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 15117  08E4  0086               	movwf	6
 15118  08E5  3001               	movlw	1	; select bank2/3
 15119  08E6  0087               	movwf	7
 15120  08E7  0873               	movf	i1USBConfigureEndpoint@handle,w
 15121  08E8  3FC0               	movwi [0]fsr1
 15122  08E9  3000               	movlw	0
 15123  08EA  3FC1               	movwi [1]fsr1
 15124                           
 15125                           ;usb_device.c: 1560: }
 15126  08EB  28F4               	goto	i1l7435
 15127  08EC                     i1l7433:	
 15128                           
 15129                           ;usb_device.c: 1561: else
 15130                           ;usb_device.c: 1562: {
 15131                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 15132  08EC  3572               	lslf	i1USBConfigureEndpoint@EPNum,w
 15133  08ED  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 15134  08EE  0086               	movwf	6
 15135  08EF  0187               	clrf	7
 15136  08F0  0873               	movf	i1USBConfigureEndpoint@handle,w
 15137  08F1  3FC0               	movwi [0]fsr1
 15138  08F2  3000               	movlw	0
 15139  08F3  3FC1               	movwi [1]fsr1
 15140  08F4                     i1l7435:	
 15141                           
 15142                           ;usb_device.c: 1564: }
 15143                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 15144  08F4  0873               	movf	i1USBConfigureEndpoint@handle,w
 15145  08F5  0086               	movwf	6
 15146  08F6  0187               	clrf	7
 15147  08F7  1301               	bcf	1,6
 15148                           
 15149                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 15150  08F8  0873               	movf	i1USBConfigureEndpoint@handle,w
 15151  08F9  3E04               	addlw	4
 15152  08FA  0086               	movwf	6
 15153  08FB  1701               	bsf	1,6
 15154  08FC  0008               	return
 15155  08FD                     __end_ofi1_USBConfigureEndpoint:	
 15156  08FD                     __ptext61:	
 15157 ;; *************** function i1_USBTransferOnePacket *****************
 15158 ;; Defined at:
 15159 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
 15160 ;; Parameters:    Size  Location     Type
 15161 ;;  ep              1    wreg     unsigned char 
 15162 ;;  dir             1    0[COMMON] unsigned char 
 15163 ;;  data            2    1[COMMON] PTR unsigned char 
 15164 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
 15165 ;;  len             1    3[COMMON] unsigned char 
 15166 ;; Auto vars:     Size  Location     Type
 15167 ;;  ep              1    8[COMMON] unsigned char 
 15168 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
 15169 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 15170 ;; Return value:  Size  Location     Type
 15171 ;;                  2    0[COMMON] PTR void 
 15172 ;; Registers used:
 15173 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15174 ;; Tracked objects:
 15175 ;;		On entry : 0/1
 15176 ;;		On exit  : 0/0
 15177 ;;		Unchanged: 0/0
 15178 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15180 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15181 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15182 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15183 ;;Total ram usage:       11 bytes
 15184 ;; Hardware stack levels used:    1
 15185 ;; This function calls:
 15186 ;;		Nothing
 15187 ;; This function is called by:
 15188 ;;		i1_CDCInitEP
 15189 ;; This function uses a non-reentrant model
 15190 ;;
 15191                           
 15192                           
 15193                           ;psect for function i1_USBTransferOnePacket
 15194  08FD                     i1_USBTransferOnePacket:	
 15195                           
 15196                           ;incstack = 0
 15197                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 15198                           ;i1USBTransferOnePacket@ep stored from wreg
 15199  08FD  00F8               	movwf	i1USBTransferOnePacket@ep
 15200                           
 15201                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 15202                           ;usb_device.c: 1000: if(dir != 0)
 15203  08FE  0870               	movf	i1USBTransferOnePacket@dir,w
 15204  08FF  1903               	btfsc	3,2
 15205  0900  2909               	goto	i1l7523
 15206                           
 15207                           ;usb_device.c: 1001: {
 15208                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 15209  0901  3578               	lslf	i1USBTransferOnePacket@ep,w
 15210  0902  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 15211  0903  0086               	movwf	6
 15212  0904  0187               	clrf	7
 15213  0905  3F40               	moviw [0]fsr1
 15214  0906  00F9               	movwf	i1USBTransferOnePacket@handle
 15215  0907  3F41               	moviw [1]fsr1
 15216  0908  2911               	goto	L34
 15217  0909                     i1l7523:	
 15218                           ;usb_device.c: 1004: }
 15219                           
 15220                           
 15221                           ;usb_device.c: 1005: else
 15222                           ;usb_device.c: 1006: {
 15223                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 15224  0909  3578               	lslf	i1USBTransferOnePacket@ep,w
 15225  090A  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 15226  090B  0086               	movwf	6
 15227  090C  3001               	movlw	1	; select bank2/3
 15228  090D  0087               	movwf	7
 15229  090E  3F40               	moviw [0]fsr1
 15230  090F  00F9               	movwf	i1USBTransferOnePacket@handle
 15231  0910  3F41               	moviw [1]fsr1
 15232  0911                     L34:	
 15233  0911  00FA               	movwf	i1USBTransferOnePacket@handle+1
 15234                           
 15235                           ;usb_device.c: 1009: }
 15236                           ;usb_device.c: 1013: if(handle == 0)
 15237  0912  0479               	iorwf	i1USBTransferOnePacket@handle,w
 15238  0913  1D03               	btfss	3,2
 15239  0914  2918               	goto	i1l7531
 15240                           
 15241                           ;usb_device.c: 1014: {
 15242                           ;usb_device.c: 1015: return 0;
 15243  0915  01F0               	clrf	?i1_USBTransferOnePacket
 15244  0916  01F1               	clrf	?i1_USBTransferOnePacket+1
 15245  0917  0008               	return
 15246  0918                     i1l7531:	
 15247                           
 15248                           ;usb_device.c: 1016: }
 15249                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 15250  0918  0871               	movf	i1USBTransferOnePacket@data,w
 15251  0919  00F4               	movwf	??i1_USBTransferOnePacket
 15252  091A  307F               	movlw	127
 15253  091B  0572               	andwf	i1USBTransferOnePacket@data+1,w
 15254  091C  00F5               	movwf	??i1_USBTransferOnePacket+1
 15255  091D  0879               	movf	i1USBTransferOnePacket@handle,w
 15256  091E  0086               	movwf	6
 15257  091F  087A               	movf	i1USBTransferOnePacket@handle+1,w
 15258  0920  0087               	movwf	7
 15259  0921  3142               	addfsr 1,2
 15260  0922  0874               	movf	??i1_USBTransferOnePacket,w
 15261  0923  3FC0               	movwi [0]fsr1
 15262  0924  0875               	movf	??i1_USBTransferOnePacket+1,w
 15263  0925  3FC1               	movwi [1]fsr1
 15264                           
 15265                           ;usb_device.c: 1030: handle->CNT = len;
 15266  0926  0879               	movf	i1USBTransferOnePacket@handle,w
 15267  0927  3E01               	addlw	1
 15268  0928  00F4               	movwf	??i1_USBTransferOnePacket
 15269  0929  3000               	movlw	0
 15270  092A  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
 15271  092B  00F5               	movwf	??i1_USBTransferOnePacket+1
 15272  092C  0874               	movf	??i1_USBTransferOnePacket,w
 15273  092D  0086               	movwf	6
 15274  092E  0875               	movf	??i1_USBTransferOnePacket+1,w
 15275  092F  0087               	movwf	7
 15276  0930  0873               	movf	i1USBTransferOnePacket@len,w
 15277  0931  0081               	movwf	1
 15278                           
 15279                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 15280  0932  0879               	movf	i1USBTransferOnePacket@handle,w
 15281  0933  0086               	movwf	6
 15282  0934  087A               	movf	i1USBTransferOnePacket@handle+1,w
 15283  0935  0087               	movwf	7
 15284  0936  3040               	movlw	64
 15285  0937  0581               	andwf	1,f
 15286                           
 15287                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 15288  0938  0879               	movf	i1USBTransferOnePacket@handle,w
 15289  0939  0086               	movwf	6
 15290  093A  087A               	movf	i1USBTransferOnePacket@handle+1,w
 15291  093B  0087               	movwf	7
 15292  093C  1581               	bsf	1,3
 15293                           
 15294                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 15295  093D  0879               	movf	i1USBTransferOnePacket@handle,w
 15296  093E  0086               	movwf	6
 15297  093F  087A               	movf	i1USBTransferOnePacket@handle+1,w
 15298  0940  0087               	movwf	7
 15299  0941  1781               	bsf	1,7
 15300                           
 15301                           ;usb_device.c: 1036: if(dir != 0)
 15302  0942  0870               	movf	i1USBTransferOnePacket@dir,w
 15303  0943  1903               	btfsc	3,2
 15304  0944  295A               	goto	i1l7541
 15305                           
 15306                           ;usb_device.c: 1037: {
 15307                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 15308  0945  3578               	lslf	i1USBTransferOnePacket@ep,w
 15309  0946  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 15310  0947  0086               	movwf	6
 15311  0948  0187               	clrf	7
 15312  0949  3F40               	moviw [0]fsr1
 15313  094A  00F4               	movwf	??i1_USBTransferOnePacket
 15314  094B  3F41               	moviw [1]fsr1
 15315  094C  00F5               	movwf	??i1_USBTransferOnePacket+1
 15316  094D  3004               	movlw	4
 15317  094E  0674               	xorwf	??i1_USBTransferOnePacket,w
 15318  094F  00F6               	movwf	??i1_USBTransferOnePacket+2
 15319  0950  0875               	movf	??i1_USBTransferOnePacket+1,w
 15320  0951  00F7               	movwf	??i1_USBTransferOnePacket+3
 15321  0952  3578               	lslf	i1USBTransferOnePacket@ep,w
 15322  0953  3EA7               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 15323  0954  0086               	movwf	6
 15324  0955  0876               	movf	??i1_USBTransferOnePacket+2,w
 15325  0956  3FC0               	movwi [0]fsr1
 15326  0957  0877               	movf	??i1_USBTransferOnePacket+3,w
 15327  0958  3FC1               	movwi [1]fsr1
 15328                           
 15329                           ;usb_device.c: 1040: }
 15330  0959  296F               	goto	i1l7543
 15331  095A                     i1l7541:	
 15332                           
 15333                           ;usb_device.c: 1041: else
 15334                           ;usb_device.c: 1042: {
 15335                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 15336  095A  3578               	lslf	i1USBTransferOnePacket@ep,w
 15337  095B  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 15338  095C  0086               	movwf	6
 15339  095D  3001               	movlw	1	; select bank2/3
 15340  095E  0087               	movwf	7
 15341  095F  3F40               	moviw [0]fsr1
 15342  0960  00F4               	movwf	??i1_USBTransferOnePacket
 15343  0961  3F41               	moviw [1]fsr1
 15344  0962  00F5               	movwf	??i1_USBTransferOnePacket+1
 15345  0963  3004               	movlw	4
 15346  0964  0674               	xorwf	??i1_USBTransferOnePacket,w
 15347  0965  00F6               	movwf	??i1_USBTransferOnePacket+2
 15348  0966  0875               	movf	??i1_USBTransferOnePacket+1,w
 15349  0967  00F7               	movwf	??i1_USBTransferOnePacket+3
 15350  0968  3578               	lslf	i1USBTransferOnePacket@ep,w
 15351  0969  3E20               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 15352  096A  0086               	movwf	6
 15353  096B  0876               	movf	??i1_USBTransferOnePacket+2,w
 15354  096C  3FC0               	movwi [0]fsr1
 15355  096D  0877               	movf	??i1_USBTransferOnePacket+3,w
 15356  096E  3FC1               	movwi [1]fsr1
 15357  096F                     i1l7543:	
 15358                           
 15359                           ;usb_device.c: 1045: }
 15360                           ;usb_device.c: 1046: return (void*)handle;
 15361  096F  087A               	movf	i1USBTransferOnePacket@handle+1,w
 15362  0970  00F1               	movwf	?i1_USBTransferOnePacket+1
 15363  0971  0879               	movf	i1USBTransferOnePacket@handle,w
 15364  0972  00F0               	movwf	?i1_USBTransferOnePacket
 15365  0973  0008               	return
 15366  0974                     __end_ofi1_USBTransferOnePacket:	
 15367                           
 15368                           	psect	text64
 15369  1E6F                     __ptext64:	
 15370 ;; *************** function i1_USBCtrlTrfOutHandler *****************
 15371 ;; Defined at:
 15372 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
 15373 ;; Parameters:    Size  Location     Type
 15374 ;;		None
 15375 ;; Auto vars:     Size  Location     Type
 15376 ;;		None
 15377 ;; Return value:  Size  Location     Type
 15378 ;;                  1    wreg      void 
 15379 ;; Registers used:
 15380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15381 ;; Tracked objects:
 15382 ;;		On entry : 1F/1
 15383 ;;		On exit  : 1C/0
 15384 ;;		Unchanged: 0/0
 15385 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15390 ;;Total ram usage:        2 bytes
 15391 ;; Hardware stack levels used:    1
 15392 ;; Hardware stack levels required when called:    2
 15393 ;; This function calls:
 15394 ;;		i1_USBCtrlTrfRxService
 15395 ;; This function is called by:
 15396 ;;		i1_USBCtrlEPService
 15397 ;; This function uses a non-reentrant model
 15398 ;;
 15399                           
 15400                           
 15401                           ;psect for function i1_USBCtrlTrfOutHandler
 15402  1E6F                     i1_USBCtrlTrfOutHandler:	
 15403                           
 15404                           ;usb_device.c: 2540: if(controlTransferState == 2)
 15405                           
 15406                           ;incstack = 0
 15407                           ; Regs used in i1_USBCtrlTrfOutHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15408  1E6F  3002               	movlw	2
 15409  1E70  0637               	xorwf	_controlTransferState^(0+128),w	;volatile
 15410  1E71  1D03               	btfss	3,2
 15411  1E72  2E75               	goto	i1l5759
 15412                           
 15413                           ;usb_device.c: 2541: {
 15414                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 15415  1E73  26A1               	fcall	i1_USBCtrlTrfRxService
 15416                           
 15417                           ;usb_device.c: 2543: }
 15418  1E74  0008               	return
 15419  1E75                     i1l5759:	
 15420                           
 15421                           ;usb_device.c: 2544: else
 15422                           ;usb_device.c: 2545: {
 15423                           ;usb_device.c: 2548: controlTransferState = 0;
 15424  1E75  01B7               	clrf	_controlTransferState^(0+128)	;volatile
 15425                           
 15426                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 15427  1E76  0022               	movlb	2	; select bank2
 15428  1E77  083F               	movf	_BothEP0OutUOWNsSet^(0+256),w	;volatile
 15429  1E78  1D03               	btfss	3,2
 15430  1E79  2E9F               	goto	i1l5771
 15431                           
 15432                           ;usb_device.c: 2556: {
 15433                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 16;
 15434  1E7A  0021               	movlb	1	; select bank1
 15435  1E7B  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15436  1E7C  3E01               	addlw	1
 15437  1E7D  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 15438  1E7E  3000               	movlw	0
 15439  1E7F  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15440  1E80  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 15441  1E81  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 15442  1E82  0086               	movwf	6
 15443  1E83  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 15444  1E84  0087               	movwf	7
 15445  1E85  3010               	movlw	16
 15446  1E86  0081               	movwf	1
 15447                           
 15448                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15449  1E87  3050               	movlw	80
 15450  1E88  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 15451  1E89  01F7               	clrf	??i1_USBCtrlTrfOutHandler+1
 15452  1E8A  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15453  1E8B  0086               	movwf	6
 15454  1E8C  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15455  1E8D  0087               	movwf	7
 15456  1E8E  3142               	addfsr 1,2
 15457  1E8F  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 15458  1E90  3FC0               	movwi [0]fsr1
 15459  1E91  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 15460  1E92  3FC1               	movwi [1]fsr1
 15461                           
 15462                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15463  1E93  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15464  1E94  0086               	movwf	6
 15465  1E95  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15466  1E96  0087               	movwf	7
 15467  1E97  300C               	movlw	12
 15468  1E98  0081               	movwf	1
 15469                           
 15470                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15471  1E99  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15472  1E9A  0086               	movwf	6
 15473  1E9B  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15474  1E9C  0087               	movwf	7
 15475  1E9D  1781               	bsf	1,7
 15476                           
 15477                           ;usb_device.c: 2561: }
 15478  1E9E  0008               	return
 15479  1E9F                     i1l5771:	
 15480                           
 15481                           ;usb_device.c: 2562: else
 15482                           ;usb_device.c: 2563: {
 15483                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 15484  1E9F  01BF               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 15485  1EA0  0008               	return
 15486  1EA1                     __end_ofi1_USBCtrlTrfOutHandler:	
 15487  1EA1                     __ptext65:	
 15488 ;; *************** function i1_USBCtrlTrfRxService *****************
 15489 ;; Defined at:
 15490 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
 15491 ;; Parameters:    Size  Location     Type
 15492 ;;		None
 15493 ;; Auto vars:     Size  Location     Type
 15494 ;;  USBCtrlTrfRx    1    5[COMMON] unsigned char 
 15495 ;;  USBCtrlTrfRx    1    4[COMMON] unsigned char 
 15496 ;; Return value:  Size  Location     Type
 15497 ;;                  1    wreg      void 
 15498 ;; Registers used:
 15499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15500 ;; Tracked objects:
 15501 ;;		On entry : 1F/1
 15502 ;;		On exit  : 1C/0
 15503 ;;		Unchanged: 0/0
 15504 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15508 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15509 ;;Total ram usage:        4 bytes
 15510 ;; Hardware stack levels used:    1
 15511 ;; Hardware stack levels required when called:    1
 15512 ;; This function calls:
 15513 ;;		i1_USBCtrlEPAllowStatusStage
 15514 ;; This function is called by:
 15515 ;;		i1_USBCtrlTrfOutHandler
 15516 ;; This function uses a non-reentrant model
 15517 ;;
 15518                           
 15519                           
 15520                           ;psect for function i1_USBCtrlTrfRxService
 15521  1EA1                     i1_USBCtrlTrfRxService:	
 15522                           
 15523                           ;usb_device.c: 1854: uint8_t byteToRead;
 15524                           ;usb_device.c: 1855: uint8_t i;
 15525                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 15526                           
 15527                           ;incstack = 0
 15528                           ; Regs used in i1_USBCtrlTrfRxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15529  1EA1  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 15530  1EA2  0086               	movwf	6
 15531  1EA3  0187               	clrf	7
 15532  1EA4  3F41               	moviw [1]fsr1
 15533  1EA5  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 15534                           
 15535                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 15536  1EA6  00F2               	movwf	??i1_USBCtrlTrfRxService
 15537  1EA7  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 15538  1EA8  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 15539  1EA9  0224               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
 15540  1EAA  1D03               	skipz
 15541  1EAB  2EAE               	goto	u462_25
 15542  1EAC  0872               	movf	??i1_USBCtrlTrfRxService,w
 15543  1EAD  0223               	subwf	(_outPipes^(0+128)+3),w	;volatile
 15544  1EAE                     u462_25:	
 15545  1EAE  1803               	skipnc
 15546  1EAF  2EB2               	goto	i1l811
 15547                           
 15548                           ;usb_device.c: 1866: {
 15549                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 15550  1EB0  0823               	movf	(_outPipes^(0+128)+3),w	;volatile
 15551  1EB1  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 15552  1EB2                     i1l811:	
 15553                           
 15554                           ;usb_device.c: 1868: }
 15555                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 15556  1EB2  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 15557  1EB3  02A3               	subwf	(_outPipes^(0+128)+3),f	;volatile
 15558  1EB4  1C03               	skipc
 15559  1EB5  03A4               	decf	((_outPipes+1)^(0+128)+3),f	;volatile
 15560                           
 15561                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 15562  1EB6  01F4               	clrf	i1USBCtrlTrfRxService@i
 15563  1EB7                     i1l5517:	
 15564  1EB7  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 15565  1EB8  0274               	subwf	i1USBCtrlTrfRxService@i,w
 15566  1EB9  1803               	btfsc	3,0
 15567  1EBA  2EC8               	goto	i1l5519
 15568                           
 15569                           ;usb_device.c: 1875: {
 15570                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 15571  1EBB  0820               	movf	_outPipes^(0+128),w	;volatile
 15572  1EBC  0086               	movwf	6
 15573  1EBD  3001               	movlw	1	; select bank2/3
 15574  1EBE  0087               	movwf	7
 15575  1EBF  0874               	movf	i1USBCtrlTrfRxService@i,w
 15576  1EC0  3E60               	addlw	96
 15577  1EC1  0084               	movwf	4
 15578  1EC2  0185               	clrf	5
 15579  1EC3  0800               	movf	0,w
 15580  1EC4  0081               	movwf	1
 15581  1EC5  0AA0               	incf	_outPipes^(0+128),f	;volatile
 15582  1EC6  0AF4               	incf	i1USBCtrlTrfRxService@i,f
 15583  1EC7  2EB7               	goto	i1l5517
 15584  1EC8                     i1l5519:	
 15585                           
 15586                           ;usb_device.c: 1877: }
 15587                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 15588  1EC8  0823               	movf	(_outPipes^(0+128)+3),w	;volatile
 15589  1EC9  0424               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
 15590  1ECA  1903               	btfsc	3,2
 15591  1ECB  2F00               	goto	i1l5531
 15592                           
 15593                           ;usb_device.c: 1882: {
 15594                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 16;
 15595  1ECC  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15596  1ECD  3E01               	addlw	1
 15597  1ECE  00F2               	movwf	??i1_USBCtrlTrfRxService
 15598  1ECF  3000               	movlw	0
 15599  1ED0  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15600  1ED1  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 15601  1ED2  0872               	movf	??i1_USBCtrlTrfRxService,w
 15602  1ED3  0086               	movwf	6
 15603  1ED4  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 15604  1ED5  0087               	movwf	7
 15605  1ED6  3010               	movlw	16
 15606  1ED7  0081               	movwf	1
 15607                           
 15608                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 15609  1ED8  3060               	movlw	96
 15610  1ED9  00F2               	movwf	??i1_USBCtrlTrfRxService
 15611  1EDA  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 15612  1EDB  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15613  1EDC  0086               	movwf	6
 15614  1EDD  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15615  1EDE  0087               	movwf	7
 15616  1EDF  3142               	addfsr 1,2
 15617  1EE0  0872               	movf	??i1_USBCtrlTrfRxService,w
 15618  1EE1  3FC0               	movwi [0]fsr1
 15619  1EE2  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 15620  1EE3  3FC1               	movwi [1]fsr1
 15621                           
 15622                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 15623  1EE4  0839               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 15624  1EE5  0086               	movwf	6
 15625  1EE6  0187               	clrf	7
 15626                           
 15627                           ;usb_device.c: 1886: {
 15628                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 15629  1EE7  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15630  1EE8  1B01               	btfsc	1,6
 15631  1EE9  2EF5               	goto	L35
 15632  1EEA  0086               	movwf	6
 15633  1EEB  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15634  1EEC  0087               	movwf	7
 15635  1EED  3048               	movlw	72
 15636  1EEE  0081               	movwf	1
 15637                           
 15638                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15639  1EEF  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15640  1EF0  0086               	movwf	6
 15641  1EF1  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15642  1EF2  0087               	movwf	7
 15643  1EF3  1781               	bsf	1,7
 15644                           
 15645                           ;usb_device.c: 1889: }
 15646  1EF4  0008               	return
 15647  1EF5                     L35:	
 15648                           ;usb_device.c: 1890: else
 15649                           ;usb_device.c: 1891: {
 15650                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 15651                           
 15652  1EF5  0086               	movwf	6
 15653  1EF6  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15654  1EF7  0087               	movwf	7
 15655  1EF8  3008               	movlw	8
 15656  1EF9  0081               	movwf	1
 15657                           
 15658                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15659  1EFA  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15660  1EFB  0086               	movwf	6
 15661  1EFC  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15662  1EFD  0087               	movwf	7
 15663  1EFE  1781               	bsf	1,7
 15664  1EFF  0008               	return
 15665  1F00                     i1l5531:	
 15666                           
 15667                           ;usb_device.c: 1896: else
 15668                           ;usb_device.c: 1897: {
 15669                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 16;
 15670  1F00  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15671  1F01  3E01               	addlw	1
 15672  1F02  00F2               	movwf	??i1_USBCtrlTrfRxService
 15673  1F03  3000               	movlw	0
 15674  1F04  3D33               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15675  1F05  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 15676  1F06  0872               	movf	??i1_USBCtrlTrfRxService,w
 15677  1F07  0086               	movwf	6
 15678  1F08  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 15679  1F09  0087               	movwf	7
 15680  1F0A  3010               	movlw	16
 15681  1F0B  0081               	movwf	1
 15682                           
 15683                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15684  1F0C  3050               	movlw	80
 15685  1F0D  00F2               	movwf	??i1_USBCtrlTrfRxService
 15686  1F0E  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 15687  1F0F  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15688  1F10  0086               	movwf	6
 15689  1F11  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15690  1F12  0087               	movwf	7
 15691  1F13  3142               	addfsr 1,2
 15692  1F14  0872               	movf	??i1_USBCtrlTrfRxService,w
 15693  1F15  3FC0               	movwi [0]fsr1
 15694  1F16  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 15695  1F17  3FC1               	movwi [1]fsr1
 15696                           
 15697                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15698  1F18  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15699  1F19  0086               	movwf	6
 15700  1F1A  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15701  1F1B  0087               	movwf	7
 15702  1F1C  3004               	movlw	4
 15703  1F1D  0081               	movwf	1
 15704                           
 15705                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15706  1F1E  0832               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15707  1F1F  0086               	movwf	6
 15708  1F20  0833               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15709  1F21  0087               	movwf	7
 15710  1F22  1781               	bsf	1,7
 15711                           
 15712                           ;usb_device.c: 1915: {
 15713                           ;usb_device.c: 1921: outPipes[0].pFunc();
 15714  1F23  0825               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
 15715  1F24  0826               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
 15716                           
 15717                           ;usb_device.c: 1926: }
 15718                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 15719  1F25  13A2               	bcf	(_outPipes^(0+128)+2),7	;volatile
 15720                           
 15721                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 15722  1F26  0834               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
 15723  1F27  1D03               	btfss	3,2
 15724  1F28  0008               	return
 15725                           
 15726                           ;usb_device.c: 1942: {
 15727                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 15728  1F29  3196  268A         	fcall	i1_USBCtrlEPAllowStatusStage
 15729  1F2B  0008               	return
 15730  1F2C                     __end_ofi1_USBCtrlTrfRxService:	


Data Sizes:
    Strings     0
    Constant    137
    Data        67
    BSS         363
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0h            8      7       7
    BANK1            80     30      72
    BANK2            80     11      79
    BANK3            80      0      64
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0      64
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0h[16]), RAM(DATA[4096]), SetupPkt(ABS[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(ABS[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), BDT(ABS[48]), 
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 16
		 -> CtrlTrfData(BANK0h[16]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), NULL(NULL[0]), cdc_data_rx(BANK5[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 22
		 -> sd002(CODE[22]), sd001(CODE[18]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    cmd_task@pt	PTR struct pt size(1) Largest target is 2
		 -> main@cmd_pt(BANK2[2]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> usb_tx_buf(BANK6[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> usb_rx_buf(BANK3[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    S304$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S294$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S294$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S269$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S269$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S269$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S269$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S36_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S36_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S36_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S36_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBCtrlEPServiceComplete->i1_USBCtrlEPAllowDataStage
    i1_USBCtrlEPAllowDataStage->i1_USBCtrlTrfTxService
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler
    i1_CDCInitEP->i1_USBTransferOnePacket
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    i1_USBCtrlTrfOutHandler->i1_USBCtrlTrfRxService
    i1_USBCtrlTrfRxService->i1_USBCtrlEPAllowStatusStage
    i1_USBCtrlTrfInHandler->i1_USBCtrlTrfTxService

Critical Paths under _main in BANK0h

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0h

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBDeviceTasks->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBWakeFromSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBCtrlTrfSetupHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBCheckStdRequest->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBStdSetCfgHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBStdFeatureReqHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _usb_task->_USBDeviceTasks
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBTransferOnePacket
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _cmd_tx_buffer_task->_putUSBUSART
    _cmd_rx_buffer_task->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _SYSTEM_Initialize->_USBDeviceInit

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    i1_USBDeviceTasks->i1_USBCtrlEPService
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler

Critical Paths under _main in BANK2

    _usb_task->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBCheckStdRequest->_USBStdFeatureReqHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   53009
                                              9 BANK2      2     2      0
                  _SYSTEM_Initialize
                      _USBDeviceInit
                 _cmd_rx_buffer_task
                           _cmd_task
                 _cmd_tx_buffer_task
                          _gpio_init
                           _usb_task
 ---------------------------------------------------------------------------------
 (1) _usb_task                                             0     0      0   47743
                       _CDCTxService
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (2) _USBDeviceTasks                                       2     2      0   45509
                                             29 BANK1      1     1      0
                                              8 BANK2      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   0     0      0    6136
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           0     0      0    6136
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBStallHandler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlEPService                                     3     3      0   26637
                                              5 BANK2      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfSetupHandler                               0     0      0   26300
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPServiceComplete                             2     2      0     136
                                             13 BANK1      2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowDataStage                              2     2      0     136
                                             11 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCheckStdRequest                                   0     0      0   20028
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStdSetCfgHandler                                  4     4      0    7010
                                             25 BANK1      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (7) _memset                                               8     2      6     639
                                              8 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (6) _USBStdGetStatusHandler                               2     2      0      68
                                              8 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (6) _USBStdGetDscHandler                                  3     3      0       0
                                              8 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (6) _USBStdFeatureReqHandler                              7     7      0    6814
                                             25 BANK1      2     2      0
                                              0 BANK2      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    6136
                                             19 BANK1      6     0      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CDCInitEP                                            0     0      0    2985
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBEnableEndpoint                                    6     5      1     952
                                             12 BANK1      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (6) _USBConfigureEndpoint                                 4     3      1     524
                                              8 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfOutHandler                                 2     2      0     167
                                             14 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfRxService                                  4     4      0     167
                                             10 BANK1      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              8 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfInHandler                                  3     3      0     170
                                             11 BANK1      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfTxService                                  3     3      0     136
                                              8 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    2234
                                             19 BANK1      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cmd_tx_buffer_task                                   0     0      0     205
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          2     1      1     205
                                              8 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _cmd_task                                            14    14      0    1795
                                              8 BANK1     14    14      0
 ---------------------------------------------------------------------------------
 (1) _cmd_rx_buffer_task                                   0     0      0    2272
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         3     2      1    2272
                                             19 BANK1      3     2      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBTransferOnePacket                                11     7      4    2033
                                              8 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     396
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        4     4      0     396
                                              8 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0   18670
                   i1_USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) i1_USBDeviceTasks                                    2     2      0   18670
                                             13 COMMON     1     1      0
                                              6 BANK0h     1     1      0
        i1_USBCtrlEPAllowStatusStage
                 i1_USBCtrlEPService
                    i1_USBDeviceInit
    i1_USBIncrement1msInternalTimers
                  i1_USBStallHandler
                       i1_USBSuspend
               i1_USBWakeFromSuspend
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBWakeFromSuspend                                0     0      0    2395
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBSuspend                                        0     0      0    2395
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBStallHandler                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_USBIncrement1msInternalTimers                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_USBDeviceInit                                     4     4      0     272
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlEPService                                  3     3      0   11145
                                              5 BANK1      3     3      0
              i1_USBCtrlTrfInHandler
             i1_USBCtrlTrfOutHandler
           i1_USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfSetupHandler                            0     0      0   10916
               i1_USBCheckStdRequest
         i1_USBCtrlEPServiceComplete
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPServiceComplete                          2     2      0      92
                                              5 COMMON     2     2      0
          i1_USBCtrlEPAllowDataStage
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlEPAllowDataStage                           2     2      0      92
                                              3 COMMON     2     2      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) i1_USBCheckStdRequest                                0     0      0    8429
          i1_USBStdFeatureReqHandler
              i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
              i1_USBStdSetCfgHandler
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) i1_USBStdSetCfgHandler                               4     4      0    2915
                                              0 BANK1      4     4      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (17) i1_memset                                            8     2      6     285
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (16) i1_USBStdGetStatusHandler                            2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (16) i1_USBStdGetDscHandler                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (16) i1_USBStdFeatureReqHandler                           7     7      0    3073
                                             11 COMMON     2     2      0
                                              0 BANK1      5     5      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USER_USB_CALLBACK_EVENT_HANDLER                   6     0      6    2395
                                              0 BANK0h     6     0      6
                        i1_CDCInitEP
               i1_USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) i1_USBCheckCDCRequest                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_CDCInitEP                                         0     0      0    1314
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i1_USBTransferOnePacket                             11     7      4     638
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (15) i1_USBEnableEndpoint                                 6     5      1     676
                                              4 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) i1_USBConfigureEndpoint                              4     3      1     386
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfOutHandler                              2     2      0     114
                                              6 COMMON     2     2      0
              i1_USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlTrfRxService                               4     4      0     114
                                              2 COMMON     4     4      0
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlEPAllowStatusStage                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfInHandler                               3     3      0     115
                                              3 COMMON     3     3      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) i1_USBCtrlTrfTxService                               3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _USBDeviceAttach
     _USBDeviceInit
     _WDT_Initialize
   _USBDeviceInit
   _cmd_rx_buffer_task
     _getsUSBUSART
       _USBTransferOnePacket
   _cmd_task
   _cmd_tx_buffer_task
     _putUSBUSART
   _gpio_init
   _usb_task
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
               _memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _USBDeviceInit
       _USBIncrement1msInternalTimers
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest

 _INTERRUPT_InterruptManager (ROOT)
   i1_USBDeviceTasks
     i1_USBCtrlEPAllowStatusStage
     i1_USBCtrlEPService
       i1_USBCtrlTrfInHandler
         i1_USBCtrlTrfTxService
       i1_USBCtrlTrfOutHandler
         i1_USBCtrlTrfRxService
           i1_USBCtrlEPAllowStatusStage
       i1_USBCtrlTrfSetupHandler
         i1_USBCheckStdRequest
           i1_USBStdFeatureReqHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
           i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
           i1_USBStdSetCfgHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
             i1_memset
           i1_USER_USB_CALLBACK_EVENT_HANDLER
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_USBCheckCDCRequest
         i1_USBCtrlEPServiceComplete
           i1_USBCtrlEPAllowDataStage
             i1_USBCtrlTrfTxService
           i1_USBCtrlEPAllowStatusStage
         i1_USER_USB_CALLBACK_EVENT_HANDLER
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_USBCheckCDCRequest
     i1_USBDeviceInit
     i1_USBIncrement1msInternalTimers
     i1_USBStallHandler
     i1_USBSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USBWakeFromSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USER_USB_CALLBACK_EVENT_HANDLER
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_USBCheckCDCRequest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0h            8      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0h               8      7       7       5       87.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1E      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      B      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      40      19       80.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1EC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1EC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Sep 04 12:02:35 2017

                                _USB_SD_Ptr 1954                                           pc 0002  
                               __CFG_CP$OFF 0000                                          l46 1CEA  
                             _USBDeviceInit 009B                          __size_of_CDCInitEP 002B  
                               __CFG_LVP$ON 0000      i1USER_USB_CALLBACK_EVENT_HANDLER@event 0058  
      USER_USB_CALLBACK_EVENT_HANDLER@event 00DC      i1USER_USB_CALLBACK_EVENT_HANDLER@pdata 005A  
      USER_USB_CALLBACK_EVENT_HANDLER@pdata 00DE                                         l232 0011  
                                       l235 0002                                         l342 0AFE  
               __end_of_USBStdGetDscHandler 0611                                         l183 0129  
                                       l515 000E                                         l519 0010  
                                       l560 0365                                         l720 0344  
                                       l721 0341                                         l386 0C64  
                                       l811 0779                                         l709 02C2  
                                       l910 0447                                         l719 030D  
                                       l851 1D7E                                         l852 1D44  
                                       l908 0446                                         _BDT 0020  
                                       l853 1D47                                         l758 0677  
                                       l919 0466                                         l783 1F6D  
                                       l944 055E                                         l848 1D3C  
                                       l796 06F4                                         l869 0660  
                                       l896 06D8                                         _UIE 0E92  
                                       _UIR 0E90                    i1_USBStdGetStatusHandler 1CEB  
                                _USBSuspend 0640                        USBStdSetCfgHandler@i 00E5  
                      USBStdSetCfgHandler@p 00E2                                __CFG_BORV$LO 0000  
                                       wreg 0009                              _USBDeviceTasks 02A8  
                              __CFG_IESO$ON 0000                              _USBDeviceState 00C4  
                     ??_USBCtrlTrfRxService 00D3                                        S9991 18CF  
                                      S9997 1000                                        S9999 1800  
                            ??_getsUSBUSART 00DD                    USBEnableEndpoint@options 00D5  
                USBConfigureEndpoint@handle 00D4                                        l8023 0768  
                                      l8007 1F82                                        l9011 0A33  
                                      l8051 07C7                                        l9101 0BD2  
                                      l9013 0AF8                                        l8301 069D  
                                      l8037 077E                                        l7407 024C  
                                      l9023 0B21                                        l8311 06BD  
                                      l8039 078F                                        l8071 044C  
                                      l7417 028E                                        l9113 0BF2  
                                      l9009 0AF5                                        l8073 044D  
                                      l8403 00D2                                        l7419 02A3  
                                      l9211 0CF7                                        l9131 0C22  
                                      l9107 0BE2                                        l9027 0B25  
                                      l8315 06CC                                        l7611 125A  
                                      l8083 0459                                        l8075 044F  
                                      l8243 0406                                        l9125 0C12  
                                      l9061 0B7B                                        l9037 0B41  
                                      l7701 0388                                        l7461 1CBD  
                                      l7453 1CB2                                        l8085 045B  
                                      l8501 03FE                                        l9311 0E2F  
                                      l9223 0D17                                        l9143 0C42  
                                      l9119 0C02                                        l9039 0B4A  
                                      l7607 0733                                        l8319 06DD  
                                      l7391 1E2F                                        l7471 1CD1  
                                      l7439 1C9F                                        l7551 0351  
                                      l7615 1251                                        l8087 045C  
                                      l9305 0E13                                        l9241 0D47  
                                      l9217 0D07                                        l9145 0C4B  
                                      l9137 0C32                                        l9081 0BA4  
                                      l9065 0B82                                        l9049 0B5E  
                                      l8273 073C                                        l7377 1E5E  
                                      l7465 1CC4                                        l7801 05AA  
                                      l8097 0471                                        l8419 00E4  
                                      l9323 0E45                                        l9235 0D37  
                                      l9171 0C8B                                        l9155 0BBA  
                                      l9075 0B96                                        l9067 0B85  
                                      l9307 0E23                                        l7379 1E66  
                                      l7387 1E29                                        l7483 1CE0  
                                      l7547 0347                                        l7811 05DF  
                                      l7803 05B3                                        l8541 0165  
                                      l9261 0D75                                        l9253 0D67  
                                      l9229 0D27                                        l9181 0CA7  
                                      l9157 0C5E                                        l9085 0BAA  
                                      l8285 0766                                        l8269 0737  
                                      l7477 1CDC                                        l7549 034F  
                                      l7821 0601                                        l7813 05E2  
                                      l7733 1FD4                                        l8453 0664  
                                      l8391 00BD                                        l8375 00A7  
                                      l7399 023D                                        l8551 0189  
                                      l9503 0000                                        l9351 0E83  
                                      l9335 0E5F                                        l9247 0D57  
                                      l9183 0CB0                                        l9167 0C87  
                                      l9191 0CBF                                        l9511 0005  
                                      l8607 01E8                                        l8615 01F7  
                                      l8287 0680                                        l7903 0516  
                                      l8711 0305                                        l8703 02F4  
                                      l8537 0152                                        l9505 0007  
                                      l9441 0F66                                        l9409 0F11  
                                      l9345 0E73                                        l9361 0E93  
                                      l9281 0DA8                                        l9273 0D9D  
                                      l9257 0CD5                                        l9513 000A  
                                      l8633 021A                                        l8617 01FC  
                                      l8625 020B                                        l7577 06F0  
                                      l7489 1DF8                                        l7905 051D  
                                      l7825 0604                                        l7753 11F1  
                                      l7745 11EA                                        l7737 1FE6  
                                      l8481 063E                                        l8721 0313  
                                      l8547 0166                                        l9507 000D  
                                      l9419 0F2D                                        l9515 000F  
                                      l8635 021C                                        l8627 020F  
                                      l8299 069A                                        l7931 0585  
                                      l7819 05FE                                        l7827 1D38  
                                      l7771 120C                                        l8731 0324  
                                      l8651 02B5                                        l8549 0179  
                                      l9445 0F72                                        l9429 0F49  
                                      l9437 0F5E                                        l8565 019D  
                                      l9509 0000                                        l8637 022E  
                                      l7589 070B                                        l7597 071D  
                                      l7685 0366                                        l7933 058B  
                                      l7909 0529                                        l7837 1D58  
                                      l9455 0F82                                        l9287 0DBC  
                                      l9279 0D82                                        l9199 0CE3  
                                      l9471 0F9E                                        l8583 01B9  
                                      l8575 01AF                                        l7599 0721  
                                      l7927 0565                                        l7919 0552  
                                      l7855 047A                                        l7847 1D73  
                                      l8479 063C                                        l8831 0000  
                                      l9473 0FF8                                        l9457 0F8A  
                                      l9369 0EA2                                        l9297 0DCA  
                                      l9289 0DC5                                        l7881 04BD  
                                      l7865 048C                                        l7793 123D  
                                      l8497 03FC                                        l8737 0330  
                                      l8673 02CC                                        l8833 0003  
                                      l9475 0FF8                                        l9379 0EBD  
                                      l9299 0E12                                        l8843 0978  
                                      l8595 01D9                                        l7867 048E  
                                      l8499 03FD                                        l8739 033B  
                                      l8659 02BC                                        l8835 000A  
                                      l9389 0ED9                                        l8909 09F8  
                                      l8853 098D                                        l8589 01D0  
                                      l7893 04F8                                        l7797 05A1  
                                      l7981 1F3E                                        l8685 02E1  
                                      l8837 000F                                        l8783 067C  
                                      l8767 0667                                        l9399 0EF5  
                                      l8943 0A4B                                        l8847 0982  
                                      l8839 0000                                        l7895 0503  
                                      l7887 04E5                                        l7967 1F2C  
                                      l8679 02D1                                        l8961 0A7B  
                                      l7889 04E8                                        l7977 1F3A  
                                      l8697 02EE                                        l8955 0A6B  
                                      l8973 0A9B                                        l8949 0A5B  
                                      l8869 09A5                                        l8967 0A8B  
                                      l8879 09BD                                        l8887 09CF  
                                      l7999 1F79                                        l8985 0ABB  
                                      l8987 0AC4                                        l8979 0AAB  
                                      l8899 09E4                                        l8997 0AD8  
                                      l9993 0353                                        l9995 0360  
                                      _LATA 010C                                        _LATC 010E  
                                      u7015 1FDD                                        i1l46 1C9E  
                     ??_USBCtrlTrfTxService 00D1                                        u9035 0D92  
                                      u9300 0007                                        u9301 0006  
                                      u9310 0005                                        u9311 0004  
                                      _UCFG 0E91                                        u9320 000A  
                                      u9321 0009                                        u8370 000A  
                                      u7395 0775                                        u8371 0009  
                                      u8380 000F                                        _UEP0 0E98  
                                      u8381 000E                                        _UEP1 0E99  
                                      u8625 0B0E                                        _UEIE 0E97  
                                      _UEIR 0E93                                        _UCON 0E8E  
                                      u8865 0C74                                ?i1_CDCInitEP 0070  
                                      _WPUA 020C             i1USBCtrlTrfTxService@byteToSend 0072  
                              __CFG_WRT$OFF 0000                               __CFG_FCMEN$ON 0000  
                           _CDCDataInHandle 0132    i1USBStdFeatureReqHandler@current_ep_data 00CB  
    USBStdFeatureReqHandler@current_ep_data 0164                                        _pDst 0142  
                                      _main 005B                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                             _USBDeviceAttach 0667  
                                      btemp 007E                               __CFG_BOREN$ON 0000  
                   ?i1_USBCtrlTrfOutHandler 0070                                        start 0012  
            __size_ofi1_USBCtrlTrfRxService 008B               __end_ofi1_USBCtrlTrfRxService 1F2C  
                __end_of_USBCheckStdRequest 047A                      ??_USBCtrlTrfOutHandler 00D7  
                             __CFG_MCLRE$ON 0000                         USBDeviceInit@i_1567 00D3  
                 ??_USBStdFeatureReqHandler 00E2                                       S10007 1264  
            __size_ofi1_USBCtrlTrfTxService 0056                       i1_USBStdGetDscHandler 1D88  
             __end_ofi1_USBCtrlTrfTxService 142D                    ??_USBStdGetStatusHandler 00D1  
                            ?_USBDeviceInit 0070              __size_of_OSCILLATOR_Initialize 000A  
             __end_of_OSCILLATOR_Initialize 012D                                       l10001 0FB1  
                                     l10003 0FCB                                       l10005 0FEB  
                                     ?_main 0070                  i1USBEnableEndpoint@options 0074  
                             __CFG_WDTE$OFF 0000           __size_of_USBCtrlEPServiceComplete 007D  
              cmd_task@compare_data_matches 016D                      __end_of_USBDeviceTasks 0347  
                 ?_USBCtrlEPServiceComplete 0070                        i1_USBCheckStdRequest 145F  
                                     i1l133 0010                                       i1l560 1689  
                                     i1l720 1665                                       i1l811 1EB2  
                                     i1l709 15E2                                       i1l910 1466  
                                     i1l719 162D                                       i1l851 1D2E  
                                     i1l852 1CF7                                       i1l908 14A9  
                                     i1l853 1CFA                                       i1l919 148A  
                                     i1l783 12E4                                       i1l944 1588  
                                     i1l848 1CEF                                       i1l796 13EC  
                                     i1l869 17F9                                       i1l896 13D0  
                                     _UADDR 0E96                                       _PORTC 000E  
                                     u787m0 03F8                                       _TRISA 008C  
                                     _TRISC 008E                                       _USTAT 0E8F  
                                i1memset@p1 0070          __size_of_USBCtrlEPAllowStatusStage 0060  
           __end_of_USBCtrlEPAllowDataStage 2000                                       _sd000 195A  
                                     _sd001 1930                                       _sd002 191A  
   __end_ofi1_USBIncrement1msInternalTimers 17B9    __size_ofi1_USBIncrement1msInternalTimers 0011  
         ??i1_USBIncrement1msInternalTimers 0070            ?i1_USBIncrement1msInternalTimers 0070  
            ?_USBIncrement1msInternalTimers 0070             i1_USBIncrement1msInternalTimers 17A8  
                            _WDT_Initialize 0142            __end_ofi1_USBCtrlTrfSetupHandler 145F  
                         __end_of_CDCInitEP 1E23              __end_ofi1_USBCtrlTrfOutHandler 1EA1  
                                     status 0003                                       wtemp0 007E  
               __size_of_cmd_tx_buffer_task 0000                            __end_ofi1_memset 0888  
        __size_ofi1_USBCtrlEPAllowDataStage 0057                   __size_ofi1_USBDeviceTasks 00A0  
                ?i1_USBCtrlEPAllowDataStage 0070                             putUSBUSART@data 00D2  
              __size_of_USBStdSetCfgHandler 0063                             __initialization 0014  
                              __end_of_main 009B                              __CFG_LPBOR$OFF 0000  
               ?_INTERRUPT_InterruptManager 0070                   __size_of_USBCtrlEPService 0040  
                                    ??_main 00E7                       ?i1_USBCheckStdRequest 0070  
                           ?_USBDeviceTasks 0070                                 ?_USBSuspend 0070  
                       __CFG_USBLSCLK$48MHz 0000                             i1_USBDeviceInit 172D  
                    __end_of_WDT_Initialize 0145                                _cdc_mem_type 014F  
                   __end_of_USBDeviceAttach 0680                            _CDCDataOutHandle 0134  
                                    _ACTCON 039B                  __end_of_cmd_rx_buffer_task 0000  
                                    _APFCON 011D                                      _ANSELA 018C  
                                    _ANSELC 018E                             getsUSBUSART@len 00DC  
                     __size_of_CDCTxService 0092                                      i1l5133 16AC  
                                    i1l5233 1D91                                      i1l5251 1DE5  
                                    i1l5243 1DC6                                      i1l5235 1D9A  
                                    i1l6115 1771                                      i1l5253 1DE8  
                                    i1l5245 1DC9                                      i1l5165 134C  
                                    i1l6071 1738                                      i1l6151 17D5  
                                    i1l5257 1DEB                                      i1l5169 135E  
                                    i1l5531 1F00                                      i1l5517 1EB7  
                                    i1l5269 1D0A                                      i1l5461 12B5  
                                    i1l6149 17D3                                      i1l5519 1EC8  
                                    i1l5279 1D23                                      i1l6087 174C  
                                    i1l5801 13C4                                      i1l8201 152D  
                                    i1l5457 12B1                                      i1l8211 1547  
                                    i1l6099 1760                                      i1l5805 13D5  
                                    i1l8117 0814                                      i1l4935 13E8  
                                    i1l7511 08B7                                      i1l8215 1553  
                                    i1l8135 082F                                      i1l5479 12F0  
                                    i1l5487 12FA                                      i1l7433 08EC  
                                    i1l8233 158F                                      i1l8225 157C  
                                    i1l8209 1540                                      i1l4947 1403  
                                    i1l4955 1414                                      i1l5771 1E9F  
                                    i1l7435 08F4                                      i1l7515 08BD  
                                    i1l7531 0918                                      i1l7523 0909  
                                    i1l8171 14BC                                      i1l8331 1471  
                                    i1l4957 1418                                      i1l4965 1429  
                                    i1l7541 095A                                      i1l8237 15AF  
                                    i1l8173 14BE                                      i1l8157 0860  
                                    i1l8341 147E                                      i1l5759 1E75  
                                    i1l7543 096F                                      i1l7631 1C66  
                                    i1l8239 15B5                                      i1l8343 1480  
                                    i1l8327 146B                                      i1l5785 1391  
                                    i1l8193 150F                                      i1l8353 1495  
                                    i1l8329 146E                                      i1l5787 1394  
                                    i1l7643 1C78                                      i1l8195 1512  
                                    i1l8187 14ED                                      i1l8339 147B  
                                    i1l5797 13B5                                      i1l7661 1C94  
                                    i1l8357 149F                                      i1l7655 1C90  
                                    i1l7639 1C71                                      i1l8199 1522  
                                    i1l7649 1C85                                      i1l8801 17FD  
                                    i1l7941 166C                                      i1l8821 1724  
                                    i1l9615 1656                                      i1l9551 15EC  
                                    i1l7945 166F                                      i1l7961 087E  
                                    i1l8817 171F                                      i1l9617 1662  
                                    i1l9609 164A                                      i1l9537 15DC  
                                    i1l9529 15D5                                      i1l7939 1669  
                                    i1l8819 1721                                      i1l9563 1601  
                                    i1l7965 0875                                      i1l9581 1614  
                                    i1l9557 15F1                                      i1l9575 160E  
                                    i1l9595 1632                                      i1l9589 1625  
                                    u417_25 1355                                      u462_25 1EAE  
                                    _OSCCON 0099                                      _PLLRDY 04D6  
                             CDCTxService@i 00DC                                      _WDTCON 0097  
              i1USBTransferOnePacket@handle 0079                            __end_of_cmd_task 1000  
                            __CFG_PWRTE$OFF 0000                           _shortPacketStatus 00B8  
         __end_ofi1_USBCtrlEPAllowDataStage 1378                      ?i1_USBStdGetDscHandler 0070  
                           USBDeviceTasks@i 016A                 USBStdFeatureReqHandler@pUEP 0162  
                  USBTransferOnePacket@data 00D2                  USBCtrlTrfInHandler@lastDTS 00D6  
                           ??_USBDeviceInit 00D1                                ?_putUSBUSART 00D1  
                            __CFG_STVREN$ON 0000                        __end_of_getsUSBUSART 018C  
             __size_ofi1_USBWakeFromSuspend 0017                           _USBEnableEndpoint 1E23  
           __size_of_USBStdGetStatusHandler 0050                     ??i1_USBStdSetCfgHandler 007B  
                                    _memset 124D               __size_ofi1_USBCheckCDCRequest 004B  
                      i1USBEnableEndpoint@p 0077                          ?_USBEnableEndpoint 00D5  
             __size_of_USBTransferOnePacket 0077                                _CDCTxService 019F  
                           ?_WDT_Initialize 0070                         ??_USBEnableEndpoint 00D6  
                          __end_of_usb_task 0000                i1USBConfigureEndpoint@handle 0073  
                __end_ofi1_USBCtrlEPService 172D                                 _CtrlTrfData 0060  
                         i1_USBStallHandler 17B9                        _controlTransferState 00B7  
                            cmd_task@status 0144                           _SYSTEM_Initialize 011A  
                    cmd_task@bit_to_set_901 00D9                     __end_of__initialization 0058  
                i1USBTransferOnePacket@data 0071                          ?i1_USBStallHandler 0070  
                  i1_USBCtrlTrfSetupHandler 142D                        __size_ofi1_CDCInitEP 0029  
                        ?_SYSTEM_Initialize 0070                    __size_of_USBStallHandler 001E  
                            __pcstackBANK0h 0058                      i1USBCtrlTrfRxService@i 0074  
                       __size_of_USBSuspend 0010                              __pcstackCOMMON 0070  
                 __end_of_USBEnableEndpoint 1E40                         ??i1_USBStallHandler 0070  
                             __end_of_sd000 195E                               __end_of_sd001 1942  
                             __end_of_sd002 1930                  ??i1_USBStdGetStatusHandler 0070  
                              __pidataBANK1 0000                                __pidataBANK2 0000  
                              __pidataBANK3 1C14                         ??_SYSTEM_Initialize 00D5  
          __size_of_USBCtrlEPAllowDataStage 0057               __size_of_USBConfigureEndpoint 002F  
                   __end_ofi1_USBDeviceInit 17A8                 __end_of_USBCtrlTrfInHandler 06DF  
                    ??i1_USBCheckStdRequest 007D                              _OPTION_REGbits 0095  
                cmd_task@last_phase_overlay 00D5                                   ?i1_memset 0070  
                                _cdc_rx_len 00C6                                  _cdc_tx_len 0150  
                 __end_ofi1_USBStallHandler 17D7                    ??_USBCtrlTrfSetupHandler 00E6  
                   _USBTicksSinceSuspendEnd 013A                            ?_USBDeviceAttach 0070  
                 __end_of_SYSTEM_Initialize 0123                      _USBStdGetStatusHandler 1D38  
                                __pbssBANK1 00A0                                  __pbssBANK2 0120  
                                __pbssBANK4 0220                                  __pbssBANK5 02A0  
                                __pbssBANK6 0320                                  __pbssBANK7 03A0  
                        __size_of_gpio_init 0000                        cmd_task@byte_to_send 0146  
                          i1_USBDeviceTasks 15C8                 __size_of_USBWakeFromSuspend 0017  
                             ?i1_USBSuspend 0070                                 _pBDTEntryIn 00A7  
          __end_of_USBCtrlEPServiceComplete 1FA9                       i1_USBCtrlTrfInHandler 1378  
              ??i1_USBCtrlEPServiceComplete 0075                 __size_of_USBCheckCDCRequest 004C  
                                __pmaintext 005B                        USBCtrlTrfRxService@i 00D5  
                           __CFG_PLLMULT$3x 0000                                  __pintentry 0004  
              __size_ofi1_USBEnableEndpoint 001D                                     i1S10015 1100  
                                   i1S10017 1846                                     i1S10009 1900  
                                   ?_memset 00D1                                  _device_dsc 1942  
                          _USBCtrlEPService 03C6                                  _ep_data_in 012D  
               __end_of_USBCtrlTrfRxService 07F1                          _USBCheckStdRequest 0436  
                                   i1l10011 1677                                     i1l10013 1684  
                         _configDescriptor1 188C                                  ??i1_memset 0076  
               __end_of_USBCtrlTrfTxService 0737                         _USBStdSetCfgHandler 11EA  
                                 ?_cmd_task 0070                                     _OSCTUNE 0098  
                                   u835_2m0 171B                         ?_USBCheckStdRequest 0070  
              __size_of_USBStdGetDscHandler 0070                                     _UIEbits 0E92  
       __size_ofi1_USBCtrlEPServiceComplete 007E                                     _UIRbits 0E90  
                             _cdc_trf_state 00C5                    ??i1_USBTransferOnePacket 0074  
                            ??i1_USBSuspend 007B                                     _pCDCDst 0136  
                                   _pCDCSrc 0138                       __size_of_getsUSBUSART 0047  
               ??i1_USBCtrlEPAllowDataStage 0073             ??_USBIncrement1msInternalTimers 00D1  
                      ?_USBStdSetCfgHandler 0070                                   _CDCInitEP 1DF8  
              i1USBCtrlTrfInHandler@lastDTS 0075                  __size_of_USBEnableEndpoint 001D  
                      ??_USBCheckStdRequest 00E6                       i1_USBCtrlTrfRxService 1EA1  
             __size_of_USBCtrlTrfOutHandler 0031                            ??_USBDeviceTasks 00E6  
                         ??_USBStallHandler 00D1                                   ?_usb_task 0070  
                          ?i1_USBDeviceInit 0070                       i1_USBCtrlTrfTxService 13D7  
                      __size_of_putUSBUSART 0013                          getsUSBUSART@buffer 00DE  
                           __size_of_memset 0017                   __end_of_configDescriptor1 18CF  
                                   __ptext1 0000                                     __ptext2 02A8  
                                   __ptext3 0650                                     __ptext4 0640  
                                   __ptext5 0622                                     __ptext6 0611  
                                   __ptext7 03C6                                     __ptext8 0406  
                                   __ptext9 1F2C                                     _inPipes 00AD  
                         __end_of_gpio_init 0000                 _USBDeferOUTDataStagePackets 013B  
                     _OSCILLATOR_Initialize 0123                                ??_USBSuspend 00E2  
                  ??_PIN_MANAGER_Initialize 00D1                                  ??_cmd_task 00D1  
                     i1USBEnableEndpoint@ep 0079                  __size_ofi1_USBStallHandler 001E  
                        __end_of_USB_CD_Ptr 1960                  __size_of_SYSTEM_Initialize 0009  
           __size_of_USBCtrlTrfSetupHandler 0030                                     clrloop0 07F8  
                  ??i1_USBConfigureEndpoint 0071                        end_of_initialization 0058  
                              _getsUSBUSART 0145                  __end_of_cmd_tx_buffer_task 0000  
                        __end_of_USB_SD_Ptr 195A                         _pBDTEntryEP0OutNext 00B2  
                                   init_ram 07F1                                     memset@c 00D3  
                                   memset@n 00D5                                     memset@p 00D7  
                                cmd_task@pt 00DE                                     initloop 07F2  
                           _USB1msTickCount 0126             _dummy_encapsulated_cmd_response 0151  
                   ??i1_USBStdGetDscHandler 0070                    ?_USBStdFeatureReqHandler 0070  
                    ?i1_USBCtrlTrfInHandler 0070                       ??_USBStdSetCfgHandler 00E2  
                                ?_CDCInitEP 0070                       cmd_task@PT_YIELD_FLAG 00D4  
                        _cmd_rx_buffer_task 0000                          __end_of_USBSuspend 0650  
                   _USBCtrlEPAllowDataStage 1FA9                                  ??_usb_task 00E7  
                  _USBCtrlEPServiceComplete 1F2C                  _USBStatusStageEnabledFlag1 013E  
                _USBStatusStageEnabledFlag2 013D                         ?_cmd_rx_buffer_task 0070  
                          ??_WDT_Initialize 00D1                          USBEnableEndpoint@p 00D8  
            __size_ofi1_USBStdSetCfgHandler 0064                         cmd_task@actual_data 0149  
             __end_ofi1_USBStdSetCfgHandler 0871                   i1_USBCtrlEPAllowDataStage 1321  
                          __CFG_FOSC$INTOSC 0000                          _BothEP0OutUOWNsSet 013F  
                ??i1_USBCtrlTrfSetupHandler 007D                   USBStdSetCfgHandler@i_2232 00E4  
              __end_ofi1_USBWakeFromSuspend 1800                   USBConfigureEndpoint@EPNum 00D3  
              ?i1_USBCtrlEPAllowStatusStage 0070                  ?_USBCtrlEPAllowStatusStage 0070  
              __end_ofi1_USBCheckCDCRequest 1C9F                                  _usb_rx_buf 01A0  
     i1USER_USB_CALLBACK_EVENT_HANDLER@size 005C         USER_USB_CALLBACK_EVENT_HANDLER@size 00E0  
                                _usb_tx_buf 0320                                  _usb_rx_ptr 00C3  
                                 _USTATcopy 00C7                                  _usb_tx_ptr 00C2  
                      ??_cmd_rx_buffer_task 00DF                    i1USBTransferOnePacket@ep 0078  
                                main@cmd_pt 016B                __end_of_USBTransferOnePacket 02A8  
           __size_ofi1_USBTransferOnePacket 0077          __end_ofi1_USBCtrlEPServiceComplete 1321  
                i1_USBCtrlEPServiceComplete 12A3                           putUSBUSART@length 00D1  
                        i1_USBCtrlEPService 16EA                          __CFG_PLLEN$ENABLED 0000  
                     i1USBDeviceInit@i_1567 0072                      ?i1_USBCtrlTrfRxService 0070  
                    _USBCtrlTrfSetupHandler 0406                      ?i1_USBCtrlTrfTxService 0070  
                     __end_of_USBDeviceInit 011A       __end_of_USBIncrement1msInternalTimers 0622  
    __size_of_USBIncrement1msInternalTimers 0011               _USBIncrement1msInternalTimers 0611  
                                 i1memset@c 0072                                   i1memset@n 0074  
                                 i1memset@p 0076                         ?i1_USBCtrlEPService 0070  
                    ?_OSCILLATOR_Initialize 0070                              __end_of_memset 1264  
                         _USBBusIsSuspended 0140                        __end_ofi1_USBSuspend 17E9  
                  __end_ofi1_USBDeviceTasks 1668                         start_initialization 0014  
                   ?_USBStdGetStatusHandler 0070               USBCtrlTrfRxService@byteToRead 00D6  
           __size_of_PIN_MANAGER_Initialize 0015                    ??i1_USBCtrlTrfOutHandler 0076  
                         __size_ofi1_memset 0017                                 _cdc_data_rx 02A0  
                               _cdc_data_tx 03A0                __end_of_USBConfigureEndpoint 1E6F  
           __end_of_USBStdFeatureReqHandler 05A1                         i1_USBEnableEndpoint 08B1  
           __size_ofi1_USBConfigureEndpoint 002F                               ??i1_CDCInitEP 007B  
         __end_of_USBCtrlEPAllowStatusStage 03C6                        ??i1_USBCtrlEPService 00CE  
             ??i1_USBCtrlEPAllowStatusStage 0070                    __end_of_USBCtrlEPService 0406  
             i1USBStdFeatureReqHandler@pUEP 00C9                   ??_USBCtrlEPAllowDataStage 00D4  
                               ??_CDCInitEP 00DC                              USBDeviceInit@i 00D4  
                            USBDeviceInit@p 00D1                 i1USBStdSetCfgHandler@i_2232 00CB  
                    _pBDTEntryEP0OutCurrent 00B9          __size_ofi1_USBStdFeatureReqHandler 011E  
                   USBTransferOnePacket@dir 00D1                     USBTransferOnePacket@len 00D4  
                ?i1_USBStdFeatureReqHandler 0070                 i1USBConfigureEndpoint@EPNum 0072  
                       _USBStdGetDscHandler 05A1                        ?i1_USBEnableEndpoint 0074  
                               __pdataBANK1 00E7                                 __pdataBANK2 016D  
                               __pdataBANK3 01A0                                    ??_memset 00D7  
                             cmd_task@do0p0 00BE                               cmd_task@do0p1 00BD  
                             cmd_task@do1p0 00BC                               cmd_task@do1p1 00BB  
                    i1_USBTransferOnePacket 08FD               __size_ofi1_USBCheckStdRequest 004B  
                    _USBActiveConfiguration 00C8              __end_of_USBStdGetStatusHandler 1D88  
                 i1USBTransferOnePacket@dir 0070                   i1USBTransferOnePacket@len 0073  
                                 ___latbits 0002                               __pcstackBANK1 00C9  
                             __pcstackBANK2 0162                __size_of_USBCtrlTrfInHandler 005F  
         __size_ofi1_USBStdGetStatusHandler 004D                   ?i1_USBStdGetStatusHandler 0070  
                      ?_USBStdGetDscHandler 0070                           __size_of_cmd_task 068C  
                __end_of_USBWakeFromSuspend 0667                             _USBStallHandler 0622  
                              _pBDTEntryOut 0120                  __end_of_USBCheckCDCRequest 1CEB  
                  __size_of_USBDeviceAttach 0019                         __end_ofi1_CDCInitEP 08B1  
                    _PIN_MANAGER_Initialize 012D                       ??i1_USBEnableEndpoint 0075  
                    i1_USBConfigureEndpoint 08CE           __end_ofi1_USBStdFeatureReqHandler 15C8  
                      i1_USBWakeFromSuspend 17E9        __size_ofi1_USBCtrlEPAllowStatusStage 0060  
                      i1_USBCheckCDCRequest 1C54                ??_INTERRUPT_InterruptManager 007E  
                                 __pswtext1 18CF                                   __pswtext2 1000  
                                 __pswtext3 1800                                   __pswtext4 1264  
                                 __pswtext5 1900                                   __pswtext6 1100  
                                 __pswtext7 1846                           __size_of_usb_task 0000  
                      _USBTransferOnePacket 0231                                   _gpio_init 0000  
              __end_of_USBCtrlTrfOutHandler 0768                       ??_USBStdGetDscHandler 00D1  
                               _ep_data_out 012A             __size_ofi1_USBCtrlTrfOutHandler 0032  
              __size_of_USBCtrlTrfRxService 0089               USBConfigureEndpoint@direction 00D1  
           i1USBCtrlTrfRxService@byteToRead 0075                     ??i1_USBCtrlTrfInHandler 0073  
              __size_of_USBCtrlTrfTxService 0058                  ??_USBCtrlEPServiceComplete 00D6  
                                 clear_ram0 07F7                                    _PIE2bits 0092  
                                 cmd_task@i 00BA              __size_ofi1_USBStdGetDscHandler 0070  
             __end_ofi1_USBStdGetDscHandler 1DF8         __size_of_INTERRUPT_InterruptManager 000E  
                                  _PIR2bits 0012                               ??_putUSBUSART 00D2  
                                  _UEP0bits 0E98                          _cmd_tx_buffer_task 0000  
                _USBDeferINDataStagePackets 013C                       ?i1_USBWakeFromSuspend 0070  
               __size_of_USBCheckStdRequest 0044                                    _UCONbits 0E8E  
                     ?i1_USBCheckCDCRequest 0070                        _USBConfigureEndpoint 1E40  
                     __size_ofi1_USBSuspend 0012            __size_of_USBStdFeatureReqHandler 0127  
                     ?_USBTransferOnePacket 00D1                         ?_cmd_tx_buffer_task 0070  
                     cmd_task@expected_data 0148                               ?_CDCTxService 0070  
                                  i1_memset 0871                                _RemoteWakeup 0141  
                        cmd_task@bit_to_set 00D8                                  ?_gpio_init 0070  
                  __size_ofi1_USBDeviceInit 007B                     __end_of_USBStallHandler 0640  
               ??_USBCtrlEPAllowStatusStage 00D1                 __end_of_USBStdSetCfgHandler 124D  
                               i1_CDCInitEP 0888                        ??_cmd_tx_buffer_task 00D3  
                        __end_of_device_dsc 1954                     ??i1_USBCtrlTrfRxService 0072  
                         i1USBDeviceTasks@i 005E                     ?_USBCtrlTrfSetupHandler 0070  
               ?i1_USBCtrlEPServiceComplete 0070                                i1_USBSuspend 17D7  
                   USBStdGetStatusHandler@p 00D1                     ??i1_USBCtrlTrfTxService 0070  
                    USBTransferOnePacket@ep 00D9                      i1_USBCtrlTrfOutHandler 1E6F  
                                  _SetupPkt 0050                                cmd_task@data 0145  
                   ??_OSCILLATOR_Initialize 00D1                       ?_USBConfigureEndpoint 00D1  
                              cmd_task@mask 0147                           ??_USBDeviceAttach 00D1  
                 i1USBStdGetStatusHandler@p 0070                         __end_of_putUSBUSART 019F  
                               _line_coding 0159                              ??_CDCTxService 00DC  
                     i1_USBStdSetCfgHandler 080D                           ?i1_USBDeviceTasks 0070  
                   __size_of_USBDeviceTasks 009F                                    _cmd_task 0974  
                                  __ptext10 1FA9                                    __ptext11 0436  
                                  __ptext20 1E23                                    __ptext12 11EA  
                                  __ptext21 1E40                                    __ptext13 124D  
                                  __ptext30 018C                                    __ptext22 0737  
                                  __ptext14 1D38                                    __ptext31 0974  
                                  __ptext23 0768                                    __ptext15 05A1  
                                  __ptext40 0123                                    __ptext32 0000  
                                  __ptext24 0366                                    __ptext16 047A  
                                  __ptext33 0145                                    __ptext25 0680  
                                  __ptext17 0347                                    __ptext50 12A3  
                                  __ptext42 15C8                                    __ptext34 0231  
                                  __ptext26 06DF                                    __ptext18 1C9F  
                                  __ptext51 1321                                    __ptext43 17E9  
                                  __ptext35 011A                                    __ptext27 019F  
                                  __ptext19 1DF8                                    __ptext60 0888  
                                  __ptext52 145F                                    __ptext44 17D7  
                                  __ptext36 0142                                    __ptext28 0000  
                                  __ptext61 08FD                                    __ptext53 080D  
                                  __ptext45 17B9                                    __ptext37 009B  
                                  __ptext29 0000                                    __ptext62 08B1  
                                  __ptext54 0871                                    __ptext46 17A8  
                                  __ptext38 0667                                    __ptext63 08CE  
                                  __ptext55 1CEB                                    __ptext47 172D  
                                  __ptext39 012D                                    __ptext64 1E6F  
                                  __ptext56 1D88                                    __ptext48 16EA  
                                  __ptext65 1EA1                                    __ptext57 14AA  
                                  __ptext49 142D                                    __ptext66 168A  
                                  __ptext58 1668                                    __ptext67 1378  
                                  __ptext59 1C54                                    __ptext68 13D7  
                        ??i1_USBDeviceTasks 007D                 __size_of_cmd_rx_buffer_task 0000  
            __end_of_USBCtrlTrfSetupHandler 0436                               __size_of_main 0040  
                         ?_USBCtrlEPService 0070             i1USBConfigureEndpoint@direction 0070  
                        cmd_task@input_mask 00BF                          ??_USBCtrlEPService 0167  
                       _USBCtrlTrfInHandler 0680           __size_ofi1_USBCtrlTrfSetupHandler 0032  
                    ??i1_USBWakeFromSuspend 007B                   ?i1_USBCtrlTrfSetupHandler 0070  
                                  _outPipes 00A0                          cmd_task@loop_count 0130  
               ??i1_USBStdFeatureReqHandler 007B                      ??i1_USBCheckCDCRequest 0070  
                      _USBCtrlTrfOutHandler 0737                                    int$flags 007E  
                   ?i1_USBTransferOnePacket 0070                   _USBCtrlEPAllowStatusStage 0366  
                                  _usb_task 0000            __end_ofi1_USBStdGetStatusHandler 1D38  
        __end_of_INTERRUPT_InterruptManager 0012                  _INTERRUPT_InterruptManager 0004  
                       cmd_task@status_sent 0143                      ??_USBTransferOnePacket 00D5  
            cmd_task@last_phase_overlay_902 00D6              cmd_task@last_phase_overlay_905 00DC  
                 _USBDeferStatusStagePacket 00B4                    CDCTxService@byte_to_send 00DD  
                          i1USBDeviceInit@i 0073                            i1USBDeviceInit@p 0070  
                                _INTCONbits 000B                        ?_USBCtrlTrfInHandler 0070  
                               ??_gpio_init 00D1                                 _sie_configs 0220  
             USBCtrlTrfTxService@byteToSend 00D3                                    memset@p1 00D1  
                               cmd_task@cmd 00C1                                 cmd_task@op0 014E  
                               cmd_task@op1 00D7                                 cmd_task@sie 00C0  
                               cmd_task@tmp 00DB                            ?_USBStallHandler 0070  
                  USBStdFeatureReqHandler@p 0165                     __size_of_WDT_Initialize 0003  
                                  intlevel1 0000                      __size_of_USBDeviceInit 007F  
               __size_ofi1_USBCtrlEPService 0043   __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 168A  
__size_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 0022     __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0366  
  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 001F          ?i1_USER_USB_CALLBACK_EVENT_HANDLER 0058  
       ??i1_USER_USB_CALLBACK_EVENT_HANDLER 007B           ??_USER_USB_CALLBACK_EVENT_HANDLER 00E2  
          ?_USER_USB_CALLBACK_EVENT_HANDLER 00DC           i1_USER_USB_CALLBACK_EVENT_HANDLER 1668  
           _USER_USB_CALLBACK_EVENT_HANDLER 0347                           ??i1_USBDeviceInit 0070  
              __end_ofi1_USBCheckStdRequest 14AA                     ?_PIN_MANAGER_Initialize 0070  
                         __CFG_CLKOUTEN$OFF 0000                           cmd_task@inout_cfg 014B  
                          cmd_task@data_903 00DD                            cmd_task@data_904 00DA  
                   ?i1_USBConfigureEndpoint 0070              __end_ofi1_USBTransferOnePacket 0974  
                    ??_USBConfigureEndpoint 00D2                       ?_USBCtrlTrfOutHandler 0070  
                               _putUSBUSART 018C                        __CFG_CPUDIV$NOCLKDIV 0000  
                       _USBCtrlTrfRxService 0768                          _USBWakeFromSuspend 0650  
                   _USBStdFeatureReqHandler 047A                      cmd_task@loop_is_active 014A  
                        _USBCheckCDCRequest 1C9F                           cmd_task@num_bytes 014C  
                       _USBCtrlTrfTxService 06DF                               __pstringtext1 1954  
                             __pstringtext2 195E                               __pstringtext3 188C  
                             __pstringtext4 191A                               __pstringtext5 1930  
                             __pstringtext6 1942                               __pstringtext7 195A  
                          cmd_task@gpio_dir 016E                  i1USBStdFeatureReqHandler@p 00CC  
                    ?i1_USBStdSetCfgHandler 0070                      i1USBStdSetCfgHandler@i 00CC  
                    i1USBStdSetCfgHandler@p 00C9                         ?_USBWakeFromSuspend 0070  
                     ??_USBCtrlTrfInHandler 00D4                       _USBAlternateInterface 0160  
                       ?_USBCheckCDCRequest 0070                         USBEnableEndpoint@ep 00DA  
                 i1_USBStdFeatureReqHandler 14AA                             _endpoint_number 00B6  
       __end_ofi1_USBCtrlEPAllowStatusStage 16EA                 i1_USBCtrlEPAllowStatusStage 168A  
                      ?_USBCtrlTrfRxService 0070                            cmd_task@num_bits 014D  
                             ?_getsUSBUSART 00DC              __end_of_PIN_MANAGER_Initialize 0142  
                  ?_USBCtrlEPAllowDataStage 0070                          _usb_rx_bytes_avail 00E7  
                      ?_USBCtrlTrfTxService 0070              __size_ofi1_USBCtrlTrfInHandler 005F  
              _USBStatusStageTimeoutCounter 00B5               __end_ofi1_USBCtrlTrfInHandler 13D7  
            __end_ofi1_USBConfigureEndpoint 08FD                        ??_USBWakeFromSuspend 00E2  
               __end_ofi1_USBEnableEndpoint 08CE                  USBTransferOnePacket@handle 00DA  
                      __end_of_CDCTxService 0231                        ??_USBCheckCDCRequest 00D1  
                                _USB_CD_Ptr 195E  
