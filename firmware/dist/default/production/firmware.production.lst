

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Aug 02 19:10:39 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext1,local,class=CONST,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	intentry,global,class=CODE,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	swtext2,local,class=CONST,delta=2
    78                           	psect	text52,local,class=CODE,merge=1,delta=2
    79                           	psect	text53,local,class=CODE,merge=1,delta=2
    80                           	psect	text54,local,class=CODE,merge=1,delta=2
    81                           	psect	text55,local,class=CODE,merge=1,delta=2
    82                           	psect	text56,local,class=CODE,merge=1,delta=2
    83                           	psect	text57,local,class=CODE,merge=1,delta=2
    84                           	psect	text58,local,class=CODE,merge=1,delta=2
    85                           	psect	text59,local,class=CODE,merge=1,delta=2
    86                           	psect	text60,local,class=CODE,merge=1,delta=2
    87                           	psect	text61,local,class=CODE,merge=1,delta=2
    88                           	psect	text62,local,class=CODE,merge=1,delta=2
    89                           	psect	text63,local,class=CODE,merge=1,delta=2
    90                           	psect	text64,local,class=CODE,merge=1,delta=2
    91                           	psect	text65,local,class=CODE,merge=1,delta=2
    92                           	psect	text66,local,class=CODE,merge=1,delta=2
    93                           	psect	text67,local,class=CODE,merge=1,delta=2
    94                           	dabs	1,0x20,48,_BDT
    95                           	dabs	1,0x50,8,_SetupPkt
    96                           	dabs	1,0x60,16,_CtrlTrfData
    97                           	dabs	1,0x7E,2
    98  0000                     
    99                           ; Version 1.42
   100                           ; Generated 13/04/2017 GMT
   101                           ; 
   102                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC16F1455 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000E                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  008C                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0095                     	;# 
   163  0096                     	;# 
   164  0097                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010E                     	;# 
   176  0111                     	;# 
   177  0112                     	;# 
   178  0113                     	;# 
   179  0114                     	;# 
   180  0115                     	;# 
   181  0116                     	;# 
   182  0117                     	;# 
   183  0118                     	;# 
   184  0119                     	;# 
   185  011D                     	;# 
   186  018C                     	;# 
   187  018E                     	;# 
   188  0191                     	;# 
   189  0191                     	;# 
   190  0192                     	;# 
   191  0193                     	;# 
   192  0193                     	;# 
   193  0194                     	;# 
   194  0195                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0199                     	;# 
   198  019A                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019C                     	;# 
   202  019D                     	;# 
   203  019E                     	;# 
   204  019F                     	;# 
   205  020C                     	;# 
   206  0211                     	;# 
   207  0211                     	;# 
   208  0212                     	;# 
   209  0212                     	;# 
   210  0213                     	;# 
   211  0213                     	;# 
   212  0214                     	;# 
   213  0214                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0216                     	;# 
   218  0216                     	;# 
   219  0217                     	;# 
   220  0217                     	;# 
   221  0391                     	;# 
   222  0392                     	;# 
   223  0393                     	;# 
   224  039A                     	;# 
   225  039B                     	;# 
   226  0611                     	;# 
   227  0612                     	;# 
   228  0613                     	;# 
   229  0613                     	;# 
   230  0614                     	;# 
   231  0615                     	;# 
   232  0616                     	;# 
   233  0616                     	;# 
   234  0691                     	;# 
   235  0692                     	;# 
   236  0693                     	;# 
   237  0694                     	;# 
   238  0695                     	;# 
   239  0E8E                     	;# 
   240  0E8F                     	;# 
   241  0E90                     	;# 
   242  0E91                     	;# 
   243  0E92                     	;# 
   244  0E93                     	;# 
   245  0E94                     	;# 
   246  0E94                     	;# 
   247  0E95                     	;# 
   248  0E96                     	;# 
   249  0E97                     	;# 
   250  0E98                     	;# 
   251  0E99                     	;# 
   252  0E9A                     	;# 
   253  0E9B                     	;# 
   254  0E9C                     	;# 
   255  0E9D                     	;# 
   256  0E9E                     	;# 
   257  0E9F                     	;# 
   258  0FE4                     	;# 
   259  0FE5                     	;# 
   260  0FE6                     	;# 
   261  0FE7                     	;# 
   262  0FE8                     	;# 
   263  0FE9                     	;# 
   264  0FEA                     	;# 
   265  0FEB                     	;# 
   266  0FED                     	;# 
   267  0FEE                     	;# 
   268  0FEF                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000E                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  008C                     	;# 
   295  008E                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009B                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  010C                     	;# 
   311  010E                     	;# 
   312  0111                     	;# 
   313  0112                     	;# 
   314  0113                     	;# 
   315  0114                     	;# 
   316  0115                     	;# 
   317  0116                     	;# 
   318  0117                     	;# 
   319  0118                     	;# 
   320  0119                     	;# 
   321  011D                     	;# 
   322  018C                     	;# 
   323  018E                     	;# 
   324  0191                     	;# 
   325  0191                     	;# 
   326  0192                     	;# 
   327  0193                     	;# 
   328  0193                     	;# 
   329  0194                     	;# 
   330  0195                     	;# 
   331  0196                     	;# 
   332  0197                     	;# 
   333  0199                     	;# 
   334  019A                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019C                     	;# 
   338  019D                     	;# 
   339  019E                     	;# 
   340  019F                     	;# 
   341  020C                     	;# 
   342  0211                     	;# 
   343  0211                     	;# 
   344  0212                     	;# 
   345  0212                     	;# 
   346  0213                     	;# 
   347  0213                     	;# 
   348  0214                     	;# 
   349  0214                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0215                     	;# 
   353  0216                     	;# 
   354  0216                     	;# 
   355  0217                     	;# 
   356  0217                     	;# 
   357  0391                     	;# 
   358  0392                     	;# 
   359  0393                     	;# 
   360  039A                     	;# 
   361  039B                     	;# 
   362  0611                     	;# 
   363  0612                     	;# 
   364  0613                     	;# 
   365  0613                     	;# 
   366  0614                     	;# 
   367  0615                     	;# 
   368  0616                     	;# 
   369  0616                     	;# 
   370  0691                     	;# 
   371  0692                     	;# 
   372  0693                     	;# 
   373  0694                     	;# 
   374  0695                     	;# 
   375  0E8E                     	;# 
   376  0E8F                     	;# 
   377  0E90                     	;# 
   378  0E91                     	;# 
   379  0E92                     	;# 
   380  0E93                     	;# 
   381  0E94                     	;# 
   382  0E94                     	;# 
   383  0E95                     	;# 
   384  0E96                     	;# 
   385  0E97                     	;# 
   386  0E98                     	;# 
   387  0E99                     	;# 
   388  0E9A                     	;# 
   389  0E9B                     	;# 
   390  0E9C                     	;# 
   391  0E9D                     	;# 
   392  0E9E                     	;# 
   393  0E9F                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000E                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  008C                     	;# 
   431  008E                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  010C                     	;# 
   447  010E                     	;# 
   448  0111                     	;# 
   449  0112                     	;# 
   450  0113                     	;# 
   451  0114                     	;# 
   452  0115                     	;# 
   453  0116                     	;# 
   454  0117                     	;# 
   455  0118                     	;# 
   456  0119                     	;# 
   457  011D                     	;# 
   458  018C                     	;# 
   459  018E                     	;# 
   460  0191                     	;# 
   461  0191                     	;# 
   462  0192                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0197                     	;# 
   469  0199                     	;# 
   470  019A                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019D                     	;# 
   475  019E                     	;# 
   476  019F                     	;# 
   477  020C                     	;# 
   478  0211                     	;# 
   479  0211                     	;# 
   480  0212                     	;# 
   481  0212                     	;# 
   482  0213                     	;# 
   483  0213                     	;# 
   484  0214                     	;# 
   485  0214                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0216                     	;# 
   490  0216                     	;# 
   491  0217                     	;# 
   492  0217                     	;# 
   493  0391                     	;# 
   494  0392                     	;# 
   495  0393                     	;# 
   496  039A                     	;# 
   497  039B                     	;# 
   498  0611                     	;# 
   499  0612                     	;# 
   500  0613                     	;# 
   501  0613                     	;# 
   502  0614                     	;# 
   503  0615                     	;# 
   504  0616                     	;# 
   505  0616                     	;# 
   506  0691                     	;# 
   507  0692                     	;# 
   508  0693                     	;# 
   509  0694                     	;# 
   510  0695                     	;# 
   511  0E8E                     	;# 
   512  0E8F                     	;# 
   513  0E90                     	;# 
   514  0E91                     	;# 
   515  0E92                     	;# 
   516  0E93                     	;# 
   517  0E94                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E96                     	;# 
   521  0E97                     	;# 
   522  0E98                     	;# 
   523  0E99                     	;# 
   524  0E9A                     	;# 
   525  0E9B                     	;# 
   526  0E9C                     	;# 
   527  0E9D                     	;# 
   528  0E9E                     	;# 
   529  0E9F                     	;# 
   530  0FE4                     	;# 
   531  0FE5                     	;# 
   532  0FE6                     	;# 
   533  0FE7                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEB                     	;# 
   538  0FED                     	;# 
   539  0FEE                     	;# 
   540  0FEF                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000E                     	;# 
   555  0011                     	;# 
   556  0012                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  001A                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  008C                     	;# 
   567  008E                     	;# 
   568  0091                     	;# 
   569  0092                     	;# 
   570  0095                     	;# 
   571  0096                     	;# 
   572  0097                     	;# 
   573  0098                     	;# 
   574  0099                     	;# 
   575  009A                     	;# 
   576  009B                     	;# 
   577  009B                     	;# 
   578  009C                     	;# 
   579  009D                     	;# 
   580  009E                     	;# 
   581  009F                     	;# 
   582  010C                     	;# 
   583  010E                     	;# 
   584  0111                     	;# 
   585  0112                     	;# 
   586  0113                     	;# 
   587  0114                     	;# 
   588  0115                     	;# 
   589  0116                     	;# 
   590  0117                     	;# 
   591  0118                     	;# 
   592  0119                     	;# 
   593  011D                     	;# 
   594  018C                     	;# 
   595  018E                     	;# 
   596  0191                     	;# 
   597  0191                     	;# 
   598  0192                     	;# 
   599  0193                     	;# 
   600  0193                     	;# 
   601  0194                     	;# 
   602  0195                     	;# 
   603  0196                     	;# 
   604  0197                     	;# 
   605  0199                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019D                     	;# 
   611  019E                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  0211                     	;# 
   615  0211                     	;# 
   616  0212                     	;# 
   617  0212                     	;# 
   618  0213                     	;# 
   619  0213                     	;# 
   620  0214                     	;# 
   621  0214                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0215                     	;# 
   625  0216                     	;# 
   626  0216                     	;# 
   627  0217                     	;# 
   628  0217                     	;# 
   629  0391                     	;# 
   630  0392                     	;# 
   631  0393                     	;# 
   632  039A                     	;# 
   633  039B                     	;# 
   634  0611                     	;# 
   635  0612                     	;# 
   636  0613                     	;# 
   637  0613                     	;# 
   638  0614                     	;# 
   639  0615                     	;# 
   640  0616                     	;# 
   641  0616                     	;# 
   642  0691                     	;# 
   643  0692                     	;# 
   644  0693                     	;# 
   645  0694                     	;# 
   646  0695                     	;# 
   647  0E8E                     	;# 
   648  0E8F                     	;# 
   649  0E90                     	;# 
   650  0E91                     	;# 
   651  0E92                     	;# 
   652  0E93                     	;# 
   653  0E94                     	;# 
   654  0E94                     	;# 
   655  0E95                     	;# 
   656  0E96                     	;# 
   657  0E97                     	;# 
   658  0E98                     	;# 
   659  0E99                     	;# 
   660  0E9A                     	;# 
   661  0E9B                     	;# 
   662  0E9C                     	;# 
   663  0E9D                     	;# 
   664  0E9E                     	;# 
   665  0E9F                     	;# 
   666  0FE4                     	;# 
   667  0FE5                     	;# 
   668  0FE6                     	;# 
   669  0FE7                     	;# 
   670  0FE8                     	;# 
   671  0FE9                     	;# 
   672  0FEA                     	;# 
   673  0FEB                     	;# 
   674  0FED                     	;# 
   675  0FEE                     	;# 
   676  0FEF                     	;# 
   677  0000                     	;# 
   678  0001                     	;# 
   679  0002                     	;# 
   680  0003                     	;# 
   681  0004                     	;# 
   682  0005                     	;# 
   683  0006                     	;# 
   684  0007                     	;# 
   685  0008                     	;# 
   686  0009                     	;# 
   687  000A                     	;# 
   688  000B                     	;# 
   689  000C                     	;# 
   690  000E                     	;# 
   691  0011                     	;# 
   692  0012                     	;# 
   693  0015                     	;# 
   694  0016                     	;# 
   695  0016                     	;# 
   696  0017                     	;# 
   697  0018                     	;# 
   698  0019                     	;# 
   699  001A                     	;# 
   700  001B                     	;# 
   701  001C                     	;# 
   702  008C                     	;# 
   703  008E                     	;# 
   704  0091                     	;# 
   705  0092                     	;# 
   706  0095                     	;# 
   707  0096                     	;# 
   708  0097                     	;# 
   709  0098                     	;# 
   710  0099                     	;# 
   711  009A                     	;# 
   712  009B                     	;# 
   713  009B                     	;# 
   714  009C                     	;# 
   715  009D                     	;# 
   716  009E                     	;# 
   717  009F                     	;# 
   718  010C                     	;# 
   719  010E                     	;# 
   720  0111                     	;# 
   721  0112                     	;# 
   722  0113                     	;# 
   723  0114                     	;# 
   724  0115                     	;# 
   725  0116                     	;# 
   726  0117                     	;# 
   727  0118                     	;# 
   728  0119                     	;# 
   729  011D                     	;# 
   730  018C                     	;# 
   731  018E                     	;# 
   732  0191                     	;# 
   733  0191                     	;# 
   734  0192                     	;# 
   735  0193                     	;# 
   736  0193                     	;# 
   737  0194                     	;# 
   738  0195                     	;# 
   739  0196                     	;# 
   740  0197                     	;# 
   741  0199                     	;# 
   742  019A                     	;# 
   743  019B                     	;# 
   744  019B                     	;# 
   745  019C                     	;# 
   746  019D                     	;# 
   747  019E                     	;# 
   748  019F                     	;# 
   749  020C                     	;# 
   750  0211                     	;# 
   751  0211                     	;# 
   752  0212                     	;# 
   753  0212                     	;# 
   754  0213                     	;# 
   755  0213                     	;# 
   756  0214                     	;# 
   757  0214                     	;# 
   758  0215                     	;# 
   759  0215                     	;# 
   760  0215                     	;# 
   761  0216                     	;# 
   762  0216                     	;# 
   763  0217                     	;# 
   764  0217                     	;# 
   765  0391                     	;# 
   766  0392                     	;# 
   767  0393                     	;# 
   768  039A                     	;# 
   769  039B                     	;# 
   770  0611                     	;# 
   771  0612                     	;# 
   772  0613                     	;# 
   773  0613                     	;# 
   774  0614                     	;# 
   775  0615                     	;# 
   776  0616                     	;# 
   777  0616                     	;# 
   778  0691                     	;# 
   779  0692                     	;# 
   780  0693                     	;# 
   781  0694                     	;# 
   782  0695                     	;# 
   783  0E8E                     	;# 
   784  0E8F                     	;# 
   785  0E90                     	;# 
   786  0E91                     	;# 
   787  0E92                     	;# 
   788  0E93                     	;# 
   789  0E94                     	;# 
   790  0E94                     	;# 
   791  0E95                     	;# 
   792  0E96                     	;# 
   793  0E97                     	;# 
   794  0E98                     	;# 
   795  0E99                     	;# 
   796  0E9A                     	;# 
   797  0E9B                     	;# 
   798  0E9C                     	;# 
   799  0E9D                     	;# 
   800  0E9E                     	;# 
   801  0E9F                     	;# 
   802  0FE4                     	;# 
   803  0FE5                     	;# 
   804  0FE6                     	;# 
   805  0FE7                     	;# 
   806  0FE8                     	;# 
   807  0FE9                     	;# 
   808  0FEA                     	;# 
   809  0FEB                     	;# 
   810  0FED                     	;# 
   811  0FEE                     	;# 
   812  0FEF                     	;# 
   813  0000                     	;# 
   814  0001                     	;# 
   815  0002                     	;# 
   816  0003                     	;# 
   817  0004                     	;# 
   818  0005                     	;# 
   819  0006                     	;# 
   820  0007                     	;# 
   821  0008                     	;# 
   822  0009                     	;# 
   823  000A                     	;# 
   824  000B                     	;# 
   825  000C                     	;# 
   826  000E                     	;# 
   827  0011                     	;# 
   828  0012                     	;# 
   829  0015                     	;# 
   830  0016                     	;# 
   831  0016                     	;# 
   832  0017                     	;# 
   833  0018                     	;# 
   834  0019                     	;# 
   835  001A                     	;# 
   836  001B                     	;# 
   837  001C                     	;# 
   838  008C                     	;# 
   839  008E                     	;# 
   840  0091                     	;# 
   841  0092                     	;# 
   842  0095                     	;# 
   843  0096                     	;# 
   844  0097                     	;# 
   845  0098                     	;# 
   846  0099                     	;# 
   847  009A                     	;# 
   848  009B                     	;# 
   849  009B                     	;# 
   850  009C                     	;# 
   851  009D                     	;# 
   852  009E                     	;# 
   853  009F                     	;# 
   854  010C                     	;# 
   855  010E                     	;# 
   856  0111                     	;# 
   857  0112                     	;# 
   858  0113                     	;# 
   859  0114                     	;# 
   860  0115                     	;# 
   861  0116                     	;# 
   862  0117                     	;# 
   863  0118                     	;# 
   864  0119                     	;# 
   865  011D                     	;# 
   866  018C                     	;# 
   867  018E                     	;# 
   868  0191                     	;# 
   869  0191                     	;# 
   870  0192                     	;# 
   871  0193                     	;# 
   872  0193                     	;# 
   873  0194                     	;# 
   874  0195                     	;# 
   875  0196                     	;# 
   876  0197                     	;# 
   877  0199                     	;# 
   878  019A                     	;# 
   879  019B                     	;# 
   880  019B                     	;# 
   881  019C                     	;# 
   882  019D                     	;# 
   883  019E                     	;# 
   884  019F                     	;# 
   885  020C                     	;# 
   886  0211                     	;# 
   887  0211                     	;# 
   888  0212                     	;# 
   889  0212                     	;# 
   890  0213                     	;# 
   891  0213                     	;# 
   892  0214                     	;# 
   893  0214                     	;# 
   894  0215                     	;# 
   895  0215                     	;# 
   896  0215                     	;# 
   897  0216                     	;# 
   898  0216                     	;# 
   899  0217                     	;# 
   900  0217                     	;# 
   901  0391                     	;# 
   902  0392                     	;# 
   903  0393                     	;# 
   904  039A                     	;# 
   905  039B                     	;# 
   906  0611                     	;# 
   907  0612                     	;# 
   908  0613                     	;# 
   909  0613                     	;# 
   910  0614                     	;# 
   911  0615                     	;# 
   912  0616                     	;# 
   913  0616                     	;# 
   914  0691                     	;# 
   915  0692                     	;# 
   916  0693                     	;# 
   917  0694                     	;# 
   918  0695                     	;# 
   919  0E8E                     	;# 
   920  0E8F                     	;# 
   921  0E90                     	;# 
   922  0E91                     	;# 
   923  0E92                     	;# 
   924  0E93                     	;# 
   925  0E94                     	;# 
   926  0E94                     	;# 
   927  0E95                     	;# 
   928  0E96                     	;# 
   929  0E97                     	;# 
   930  0E98                     	;# 
   931  0E99                     	;# 
   932  0E9A                     	;# 
   933  0E9B                     	;# 
   934  0E9C                     	;# 
   935  0E9D                     	;# 
   936  0E9E                     	;# 
   937  0E9F                     	;# 
   938  0FE4                     	;# 
   939  0FE5                     	;# 
   940  0FE6                     	;# 
   941  0FE7                     	;# 
   942  0FE8                     	;# 
   943  0FE9                     	;# 
   944  0FEA                     	;# 
   945  0FEB                     	;# 
   946  0FED                     	;# 
   947  0FEE                     	;# 
   948  0FEF                     	;# 
   949  0000                     	;# 
   950  0001                     	;# 
   951  0002                     	;# 
   952  0003                     	;# 
   953  0004                     	;# 
   954  0005                     	;# 
   955  0006                     	;# 
   956  0007                     	;# 
   957  0008                     	;# 
   958  0009                     	;# 
   959  000A                     	;# 
   960  000B                     	;# 
   961  000C                     	;# 
   962  000E                     	;# 
   963  0011                     	;# 
   964  0012                     	;# 
   965  0015                     	;# 
   966  0016                     	;# 
   967  0016                     	;# 
   968  0017                     	;# 
   969  0018                     	;# 
   970  0019                     	;# 
   971  001A                     	;# 
   972  001B                     	;# 
   973  001C                     	;# 
   974  008C                     	;# 
   975  008E                     	;# 
   976  0091                     	;# 
   977  0092                     	;# 
   978  0095                     	;# 
   979  0096                     	;# 
   980  0097                     	;# 
   981  0098                     	;# 
   982  0099                     	;# 
   983  009A                     	;# 
   984  009B                     	;# 
   985  009B                     	;# 
   986  009C                     	;# 
   987  009D                     	;# 
   988  009E                     	;# 
   989  009F                     	;# 
   990  010C                     	;# 
   991  010E                     	;# 
   992  0111                     	;# 
   993  0112                     	;# 
   994  0113                     	;# 
   995  0114                     	;# 
   996  0115                     	;# 
   997  0116                     	;# 
   998  0117                     	;# 
   999  0118                     	;# 
  1000  0119                     	;# 
  1001  011D                     	;# 
  1002  018C                     	;# 
  1003  018E                     	;# 
  1004  0191                     	;# 
  1005  0191                     	;# 
  1006  0192                     	;# 
  1007  0193                     	;# 
  1008  0193                     	;# 
  1009  0194                     	;# 
  1010  0195                     	;# 
  1011  0196                     	;# 
  1012  0197                     	;# 
  1013  0199                     	;# 
  1014  019A                     	;# 
  1015  019B                     	;# 
  1016  019B                     	;# 
  1017  019C                     	;# 
  1018  019D                     	;# 
  1019  019E                     	;# 
  1020  019F                     	;# 
  1021  020C                     	;# 
  1022  0211                     	;# 
  1023  0211                     	;# 
  1024  0212                     	;# 
  1025  0212                     	;# 
  1026  0213                     	;# 
  1027  0213                     	;# 
  1028  0214                     	;# 
  1029  0214                     	;# 
  1030  0215                     	;# 
  1031  0215                     	;# 
  1032  0215                     	;# 
  1033  0216                     	;# 
  1034  0216                     	;# 
  1035  0217                     	;# 
  1036  0217                     	;# 
  1037  0391                     	;# 
  1038  0392                     	;# 
  1039  0393                     	;# 
  1040  039A                     	;# 
  1041  039B                     	;# 
  1042  0611                     	;# 
  1043  0612                     	;# 
  1044  0613                     	;# 
  1045  0613                     	;# 
  1046  0614                     	;# 
  1047  0615                     	;# 
  1048  0616                     	;# 
  1049  0616                     	;# 
  1050  0691                     	;# 
  1051  0692                     	;# 
  1052  0693                     	;# 
  1053  0694                     	;# 
  1054  0695                     	;# 
  1055  0E8E                     	;# 
  1056  0E8F                     	;# 
  1057  0E90                     	;# 
  1058  0E91                     	;# 
  1059  0E92                     	;# 
  1060  0E93                     	;# 
  1061  0E94                     	;# 
  1062  0E94                     	;# 
  1063  0E95                     	;# 
  1064  0E96                     	;# 
  1065  0E97                     	;# 
  1066  0E98                     	;# 
  1067  0E99                     	;# 
  1068  0E9A                     	;# 
  1069  0E9B                     	;# 
  1070  0E9C                     	;# 
  1071  0E9D                     	;# 
  1072  0E9E                     	;# 
  1073  0E9F                     	;# 
  1074  0FE4                     	;# 
  1075  0FE5                     	;# 
  1076  0FE6                     	;# 
  1077  0FE7                     	;# 
  1078  0FE8                     	;# 
  1079  0FE9                     	;# 
  1080  0FEA                     	;# 
  1081  0FEB                     	;# 
  1082  0FED                     	;# 
  1083  0FEE                     	;# 
  1084  0FEF                     	;# 
  1085  0000                     	;# 
  1086  0001                     	;# 
  1087  0002                     	;# 
  1088  0003                     	;# 
  1089  0004                     	;# 
  1090  0005                     	;# 
  1091  0006                     	;# 
  1092  0007                     	;# 
  1093  0008                     	;# 
  1094  0009                     	;# 
  1095  000A                     	;# 
  1096  000B                     	;# 
  1097  000C                     	;# 
  1098  000E                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008E                     	;# 
  1112  0091                     	;# 
  1113  0092                     	;# 
  1114  0095                     	;# 
  1115  0096                     	;# 
  1116  0097                     	;# 
  1117  0098                     	;# 
  1118  0099                     	;# 
  1119  009A                     	;# 
  1120  009B                     	;# 
  1121  009B                     	;# 
  1122  009C                     	;# 
  1123  009D                     	;# 
  1124  009E                     	;# 
  1125  009F                     	;# 
  1126  010C                     	;# 
  1127  010E                     	;# 
  1128  0111                     	;# 
  1129  0112                     	;# 
  1130  0113                     	;# 
  1131  0114                     	;# 
  1132  0115                     	;# 
  1133  0116                     	;# 
  1134  0117                     	;# 
  1135  0118                     	;# 
  1136  0119                     	;# 
  1137  011D                     	;# 
  1138  018C                     	;# 
  1139  018E                     	;# 
  1140  0191                     	;# 
  1141  0191                     	;# 
  1142  0192                     	;# 
  1143  0193                     	;# 
  1144  0193                     	;# 
  1145  0194                     	;# 
  1146  0195                     	;# 
  1147  0196                     	;# 
  1148  0197                     	;# 
  1149  0199                     	;# 
  1150  019A                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019C                     	;# 
  1154  019D                     	;# 
  1155  019E                     	;# 
  1156  019F                     	;# 
  1157  020C                     	;# 
  1158  0211                     	;# 
  1159  0211                     	;# 
  1160  0212                     	;# 
  1161  0212                     	;# 
  1162  0213                     	;# 
  1163  0213                     	;# 
  1164  0214                     	;# 
  1165  0214                     	;# 
  1166  0215                     	;# 
  1167  0215                     	;# 
  1168  0215                     	;# 
  1169  0216                     	;# 
  1170  0216                     	;# 
  1171  0217                     	;# 
  1172  0217                     	;# 
  1173  0391                     	;# 
  1174  0392                     	;# 
  1175  0393                     	;# 
  1176  039A                     	;# 
  1177  039B                     	;# 
  1178  0611                     	;# 
  1179  0612                     	;# 
  1180  0613                     	;# 
  1181  0613                     	;# 
  1182  0614                     	;# 
  1183  0615                     	;# 
  1184  0616                     	;# 
  1185  0616                     	;# 
  1186  0691                     	;# 
  1187  0692                     	;# 
  1188  0693                     	;# 
  1189  0694                     	;# 
  1190  0695                     	;# 
  1191  0E8E                     	;# 
  1192  0E8F                     	;# 
  1193  0E90                     	;# 
  1194  0E91                     	;# 
  1195  0E92                     	;# 
  1196  0E93                     	;# 
  1197  0E94                     	;# 
  1198  0E94                     	;# 
  1199  0E95                     	;# 
  1200  0E96                     	;# 
  1201  0E97                     	;# 
  1202  0E98                     	;# 
  1203  0E99                     	;# 
  1204  0E9A                     	;# 
  1205  0E9B                     	;# 
  1206  0E9C                     	;# 
  1207  0E9D                     	;# 
  1208  0E9E                     	;# 
  1209  0E9F                     	;# 
  1210  0FE4                     	;# 
  1211  0FE5                     	;# 
  1212  0FE6                     	;# 
  1213  0FE7                     	;# 
  1214  0FE8                     	;# 
  1215  0FE9                     	;# 
  1216  0FEA                     	;# 
  1217  0FEB                     	;# 
  1218  0FED                     	;# 
  1219  0FEE                     	;# 
  1220  0FEF                     	;# 
  1221                           
  1222                           	psect	stringtext1
  1223  18A3                     __pstringtext1:	
  1224  18A3                     _USB_SD_Ptr:	
  1225  18A3  34A9               	retlw	low (_sd000| (0+32768))
  1226  18A4  3498               	retlw	high (_sd000| (0+32768))
  1227  18A5  3443               	retlw	low (_sd001| (0+32768))
  1228  18A6  3498               	retlw	high (_sd001| (0+32768))
  1229  18A7  3477               	retlw	low (_sd002| (0+32768))
  1230  18A8  3498               	retlw	high (_sd002| (0+32768))
  1231  18A9                     __end_of_USB_SD_Ptr:	
  1232                           
  1233                           	psect	stringtext2
  1234  18AD                     __pstringtext2:	
  1235  18AD                     _USB_CD_Ptr:	
  1236  18AD  3400               	retlw	low (_configDescriptor1| (0+32768))
  1237  18AE  3498               	retlw	high (_configDescriptor1| (0+32768))
  1238  18AF                     __end_of_USB_CD_Ptr:	
  1239                           
  1240                           	psect	stringtext3
  1241  1800                     __pstringtext3:	
  1242  1800                     _configDescriptor1:	
  1243  1800  3409               	retlw	9
  1244  1801  3402               	retlw	2
  1245  1802  3443               	retlw	67
  1246  1803  3400               	retlw	0
  1247  1804  3402               	retlw	2
  1248  1805  3401               	retlw	1
  1249  1806  3400               	retlw	0
  1250  1807  34C0               	retlw	192
  1251  1808  3432               	retlw	50
  1252  1809  3409               	retlw	9
  1253  180A  3404               	retlw	4
  1254  180B  3400               	retlw	0
  1255  180C  3400               	retlw	0
  1256  180D  3401               	retlw	1
  1257  180E  3402               	retlw	2
  1258  180F  3402               	retlw	2
  1259  1810  3401               	retlw	1
  1260  1811  3400               	retlw	0
  1261  1812  3405               	retlw	5
  1262  1813  3424               	retlw	36
  1263  1814  3400               	retlw	0
  1264  1815  3410               	retlw	16
  1265  1816  3401               	retlw	1
  1266  1817  3404               	retlw	4
  1267  1818  3424               	retlw	36
  1268  1819  3402               	retlw	2
  1269  181A  3402               	retlw	2
  1270  181B  3405               	retlw	5
  1271  181C  3424               	retlw	36
  1272  181D  3406               	retlw	6
  1273  181E  3400               	retlw	0
  1274  181F  3401               	retlw	1
  1275  1820  3405               	retlw	5
  1276  1821  3424               	retlw	36
  1277  1822  3401               	retlw	1
  1278  1823  3400               	retlw	0
  1279  1824  3401               	retlw	1
  1280  1825  3407               	retlw	7
  1281  1826  3405               	retlw	5
  1282  1827  3481               	retlw	129
  1283  1828  3403               	retlw	3
  1284  1829  3408               	retlw	8
  1285  182A  3400               	retlw	0
  1286  182B  3402               	retlw	2
  1287  182C  3409               	retlw	9
  1288  182D  3404               	retlw	4
  1289  182E  3401               	retlw	1
  1290  182F  3400               	retlw	0
  1291  1830  3402               	retlw	2
  1292  1831  340A               	retlw	10
  1293  1832  3400               	retlw	0
  1294  1833  3400               	retlw	0
  1295  1834  3400               	retlw	0
  1296  1835  3407               	retlw	7
  1297  1836  3405               	retlw	5
  1298  1837  3402               	retlw	2
  1299  1838  3402               	retlw	2
  1300  1839  3440               	retlw	64
  1301  183A  3400               	retlw	0
  1302  183B  3400               	retlw	0
  1303  183C  3407               	retlw	7
  1304  183D  3405               	retlw	5
  1305  183E  3482               	retlw	130
  1306  183F  3402               	retlw	2
  1307  1840  3440               	retlw	64
  1308  1841  3400               	retlw	0
  1309  1842  3400               	retlw	0
  1310  1843                     __end_of_configDescriptor1:	
  1311                           
  1312                           	psect	stringtext4
  1313  1843                     __pstringtext4:	
  1314  1843                     _sd001:	
  1315  1843  3434               	retlw	52
  1316  1844  3403               	retlw	3
  1317  1845  344D               	retlw	77
  1318  1846  3400               	retlw	0
  1319  1847  3469               	retlw	105
  1320  1848  3400               	retlw	0
  1321  1849  3463               	retlw	99
  1322  184A  3400               	retlw	0
  1323  184B  3472               	retlw	114
  1324  184C  3400               	retlw	0
  1325  184D  346F               	retlw	111
  1326  184E  3400               	retlw	0
  1327  184F  3463               	retlw	99
  1328  1850  3400               	retlw	0
  1329  1851  3468               	retlw	104
  1330  1852  3400               	retlw	0
  1331  1853  3469               	retlw	105
  1332  1854  3400               	retlw	0
  1333  1855  3470               	retlw	112
  1334  1856  3400               	retlw	0
  1335  1857  3420               	retlw	32
  1336  1858  3400               	retlw	0
  1337  1859  3454               	retlw	84
  1338  185A  3400               	retlw	0
  1339  185B  3465               	retlw	101
  1340  185C  3400               	retlw	0
  1341  185D  3463               	retlw	99
  1342  185E  3400               	retlw	0
  1343  185F  3468               	retlw	104
  1344  1860  3400               	retlw	0
  1345  1861  346E               	retlw	110
  1346  1862  3400               	retlw	0
  1347  1863  346F               	retlw	111
  1348  1864  3400               	retlw	0
  1349  1865  346C               	retlw	108
  1350  1866  3400               	retlw	0
  1351  1867  346F               	retlw	111
  1352  1868  3400               	retlw	0
  1353  1869  3467               	retlw	103
  1354  186A  3400               	retlw	0
  1355  186B  3479               	retlw	121
  1356  186C  3400               	retlw	0
  1357  186D  3420               	retlw	32
  1358  186E  3400               	retlw	0
  1359  186F  3449               	retlw	73
  1360  1870  3400               	retlw	0
  1361  1871  346E               	retlw	110
  1362  1872  3400               	retlw	0
  1363  1873  3463               	retlw	99
  1364  1874  3400               	retlw	0
  1365  1875  342E               	retlw	46
  1366  1876  3400               	retlw	0
  1367  1877                     __end_of_sd001:	
  1368                           
  1369                           	psect	stringtext5
  1370  1877                     __pstringtext5:	
  1371  1877                     _sd002:	
  1372  1877  341A               	retlw	26
  1373  1878  3403               	retlw	3
  1374  1879  3450               	retlw	80
  1375  187A  3400               	retlw	0
  1376  187B  3472               	retlw	114
  1377  187C  3400               	retlw	0
  1378  187D  346F               	retlw	111
  1379  187E  3400               	retlw	0
  1380  187F  3464               	retlw	100
  1381  1880  3400               	retlw	0
  1382  1881  3475               	retlw	117
  1383  1882  3400               	retlw	0
  1384  1883  3463               	retlw	99
  1385  1884  3400               	retlw	0
  1386  1885  3474               	retlw	116
  1387  1886  3400               	retlw	0
  1388  1887  3420               	retlw	32
  1389  1888  3400               	retlw	0
  1390  1889  344E               	retlw	78
  1391  188A  3400               	retlw	0
  1392  188B  3461               	retlw	97
  1393  188C  3400               	retlw	0
  1394  188D  346D               	retlw	109
  1395  188E  3400               	retlw	0
  1396  188F  3465               	retlw	101
  1397  1890  3400               	retlw	0
  1398  1891                     __end_of_sd002:	
  1399                           
  1400                           	psect	stringtext6
  1401  1891                     __pstringtext6:	
  1402  1891                     _device_dsc:	
  1403  1891  3412               	retlw	18
  1404  1892  3401               	retlw	1
  1405  1893  3400               	retlw	0
  1406  1894  3402               	retlw	2
  1407  1895  3402               	retlw	2
  1408  1896  3400               	retlw	0
  1409  1897  3400               	retlw	0
  1410  1898  3410               	retlw	16
  1411  1899  3409               	retlw	9
  1412  189A  3412               	retlw	18
  1413  189B  3401               	retlw	1
  1414  189C  3421               	retlw	33
  1415  189D  3400               	retlw	0
  1416  189E  3401               	retlw	1
  1417  189F  3401               	retlw	1
  1418  18A0  3402               	retlw	2
  1419  18A1  3400               	retlw	0
  1420  18A2  3401               	retlw	1
  1421  18A3                     __end_of_device_dsc:	
  1422                           
  1423                           	psect	stringtext7
  1424  18A9                     __pstringtext7:	
  1425  18A9                     _sd000:	
  1426  18A9  3404               	retlw	4
  1427  18AA  3403               	retlw	3
  1428  18AB  3409               	retlw	9
  1429  18AC  3404               	retlw	4
  1430  18AD                     __end_of_sd000:	
  1431  000E                     _PORTC	set	14
  1432  0012                     _PIR2bits	set	18
  1433  000B                     _INTCONbits	set	11
  1434  0097                     _WDTCON	set	151
  1435  0098                     _OSCTUNE	set	152
  1436  0099                     _OSCCON	set	153
  1437  0095                     _OPTION_REGbits	set	149
  1438  008E                     _TRISC	set	142
  1439  008C                     _TRISA	set	140
  1440  0092                     _PIE2bits	set	146
  1441  04D6                     _PLLRDY	set	1238
  1442  011D                     _APFCON	set	285
  1443  010E                     _LATC	set	270
  1444  010C                     _LATA	set	268
  1445  018C                     _ANSELA	set	396
  1446  018E                     _ANSELC	set	398
  1447  020C                     _WPUA	set	524
  1448  039B                     _ACTCON	set	923
  1449  0E98                     _UEP0bits	set	3736
  1450  0E8E                     _UCON	set	3726
  1451  0E8F                     _USTAT	set	3727
  1452  0E92                     _UIEbits	set	3730
  1453  0E90                     _UIRbits	set	3728
  1454  0E96                     _UADDR	set	3734
  1455  0E92                     _UIE	set	3730
  1456  0E97                     _UEIE	set	3735
  1457  0E91                     _UCFG	set	3729
  1458  0E90                     _UIR	set	3728
  1459  0E93                     _UEIR	set	3731
  1460  0E8E                     _UCONbits	set	3726
  1461  0E99                     _UEP1	set	3737
  1462  0E98                     _UEP0	set	3736
  1463                           
  1464                           ; #config settings
  1465  0000                     
  1466                           	psect	cinit
  1467  001A                     start_initialization:	
  1468  001A                     __initialization:	
  1469                           
  1470                           ; Clear objects allocated to BANK1
  1471  001A  30C6               	movlw	low __pbssBANK1
  1472  001B  0084               	movwf	4
  1473  001C  3000               	movlw	high __pbssBANK1
  1474  001D  0085               	movwf	5
  1475  001E  301C               	movlw	28
  1476  001F  3190  203C  3180   	fcall	clear_ram0
  1477                           
  1478                           ; Clear objects allocated to BANK2
  1479  0022  3020               	movlw	low __pbssBANK2
  1480  0023  0084               	movwf	4
  1481  0024  3001               	movlw	high __pbssBANK2
  1482  0025  0085               	movwf	5
  1483  0026  3047               	movlw	71
  1484  0027  3190  203C  3180   	fcall	clear_ram0
  1485                           
  1486                           ; Clear objects allocated to BANK3
  1487  002A  30A0               	movlw	low __pbssBANK3
  1488  002B  0084               	movwf	4
  1489  002C  3001               	movlw	high __pbssBANK3
  1490  002D  0085               	movwf	5
  1491  002E  3040               	movlw	64
  1492  002F  3190  203C  3180   	fcall	clear_ram0
  1493                           
  1494                           ; Clear objects allocated to BANK4
  1495  0032  3020               	movlw	low __pbssBANK4
  1496  0033  0084               	movwf	4
  1497  0034  3002               	movlw	high __pbssBANK4
  1498  0035  0085               	movwf	5
  1499  0036  3040               	movlw	64
  1500  0037  3190  203C  3180   	fcall	clear_ram0
  1501                           
  1502                           ; Clear objects allocated to BANK5
  1503  003A  30A0               	movlw	low __pbssBANK5
  1504  003B  0084               	movwf	4
  1505  003C  3002               	movlw	high __pbssBANK5
  1506  003D  0085               	movwf	5
  1507  003E  3040               	movlw	64
  1508  003F  3190  203C  3180   	fcall	clear_ram0
  1509                           
  1510                           ; Clear objects allocated to BANK6
  1511  0042  3020               	movlw	low __pbssBANK6
  1512  0043  0084               	movwf	4
  1513  0044  3003               	movlw	high __pbssBANK6
  1514  0045  0085               	movwf	5
  1515  0046  3040               	movlw	64
  1516  0047  3190  203C         	fcall	clear_ram0
  1517  0049                     end_of_initialization:	
  1518                           ;End of C runtime variable initialization code
  1519                           
  1520  0049                     __end_of__initialization:	
  1521  0049  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1522  004A  0020               	movlb	0
  1523  004B  3190  2869         	ljmp	_main	;jump to C main() function
  1524                           
  1525                           	psect	bssBANK1
  1526  00C6                     __pbssBANK1:	
  1527  00C6                     _outPipes:	
  1528  00C6                     	ds	7
  1529  00CD                     _pBDTEntryIn:	
  1530  00CD                     	ds	6
  1531  00D3                     _inPipes:	
  1532  00D3                     	ds	5
  1533  00D8                     _pBDTEntryEP0OutNext:	
  1534  00D8                     	ds	2
  1535  00DA                     _USBDeferStatusStagePacket:	
  1536  00DA                     	ds	1
  1537  00DB                     _endpoint_number:	
  1538  00DB                     	ds	1
  1539  00DC                     _controlTransferState:	
  1540  00DC                     	ds	1
  1541  00DD                     _shortPacketStatus:	
  1542  00DD                     	ds	1
  1543  00DE                     _pBDTEntryEP0OutCurrent:	
  1544  00DE                     	ds	1
  1545  00DF                     _USBDeviceState:	
  1546  00DF                     	ds	1
  1547  00E0                     _USTATcopy:	
  1548  00E0                     	ds	1
  1549  00E1                     _USBActiveConfiguration:	
  1550  00E1                     	ds	1
  1551                           
  1552                           	psect	bssBANK2
  1553  0120                     __pbssBANK2:	
  1554  0120                     _cdc_notice:	
  1555  0120                     	ds	10
  1556  012A                     _pBDTEntryOut:	
  1557  012A                     	ds	6
  1558  0130                     _USB1msTickCount:	
  1559  0130                     	ds	4
  1560  0134                     _BaudRateGen:	
  1561  0134                     	ds	4
  1562  0138                     _ep_data_out:	
  1563  0138                     	ds	3
  1564  013B                     _ep_data_in:	
  1565  013B                     	ds	3
  1566  013E                     _CDCDataInHandle:	
  1567  013E                     	ds	2
  1568  0140                     _CDCDataOutHandle:	
  1569  0140                     	ds	2
  1570  0142                     _pCDCDst:	
  1571  0142                     	ds	2
  1572  0144                     _pCDCSrc:	
  1573  0144                     	ds	2
  1574  0146                     _USBTicksSinceSuspendEnd:	
  1575  0146                     	ds	1
  1576  0147                     _USBDeferOUTDataStagePackets:	
  1577  0147                     	ds	1
  1578  0148                     _USBDeferINDataStagePackets:	
  1579  0148                     	ds	1
  1580  0149                     _USBStatusStageEnabledFlag2:	
  1581  0149                     	ds	1
  1582  014A                     _USBStatusStageEnabledFlag1:	
  1583  014A                     	ds	1
  1584  014B                     _USBStatusStageTimeoutCounter:	
  1585  014B                     	ds	1
  1586  014C                     _BothEP0OutUOWNsSet:	
  1587  014C                     	ds	1
  1588  014D                     _USBBusIsSuspended:	
  1589  014D                     	ds	1
  1590  014E                     _RemoteWakeup:	
  1591  014E                     	ds	1
  1592  014F                     _pDst:	
  1593  014F                     	ds	1
  1594  0150                     process_gpio_cmd@gpio_dir:	
  1595  0150                     	ds	1
  1596  0151                     _control_signal_bitmap:	
  1597  0151                     	ds	1
  1598  0152                     _cdc_mem_type:	
  1599  0152                     	ds	1
  1600  0153                     _cdc_tx_len:	
  1601  0153                     	ds	1
  1602  0154                     _cdc_trf_state:	
  1603  0154                     	ds	1
  1604  0155                     _cdc_rx_len:	
  1605  0155                     	ds	1
  1606  0156                     _dummy_encapsulated_cmd_response:	
  1607  0156                     	ds	8
  1608  015E                     _line_coding:	
  1609  015E                     	ds	7
  1610  0165                     _USBAlternateInterface:	
  1611  0165                     	ds	2
  1612                           
  1613                           	psect	bssBANK3
  1614  01A0                     __pbssBANK3:	
  1615  01A0                     _cdc_data_rx:	
  1616  01A0                     	ds	64
  1617                           
  1618                           	psect	bssBANK4
  1619  0220                     __pbssBANK4:	
  1620  0220                     _cdc_data_tx:	
  1621  0220                     	ds	64
  1622                           
  1623                           	psect	bssBANK5
  1624  02A0                     __pbssBANK5:	
  1625  02A0                     gpio_task@usb_rx_buf:	
  1626  02A0                     	ds	64
  1627                           
  1628                           	psect	bssBANK6
  1629  0320                     __pbssBANK6:	
  1630  0320                     gpio_task@usb_tx_buf:	
  1631  0320                     	ds	64
  1632                           
  1633                           	psect	clrtext
  1634  103C                     clear_ram0:	
  1635                           ;	Called with FSR0 containing the base address, and
  1636                           ;	WREG with the size to clear
  1637                           
  1638  103C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1639  103D                     clrloop0:	
  1640  103D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1641  103E  3101               	addfsr 0,1
  1642  103F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1643  1040  283D               	goto	clrloop0	;have we reached the end yet?
  1644  1041  3400               	retlw	0	;all done for this memory range, return
  1645                           
  1646                           	psect	cstackBANK3
  1647  01E0                     __pcstackBANK3:	
  1648  01E0                     ??_USBDeviceTasks:	
  1649                           
  1650                           ; 1 bytes @ 0x0
  1651  01E0                     	ds	2
  1652                           
  1653                           	psect	cstackBANK2
  1654  0167                     __pcstackBANK2:	
  1655  0167                     USBStdSetCfgHandler@p:	
  1656  0167                     USBStdFeatureReqHandler@pUEP:	
  1657                           ; 2 bytes @ 0x0
  1658                           
  1659                           
  1660                           ; 2 bytes @ 0x0
  1661  0167                     	ds	2
  1662  0169                     USBStdSetCfgHandler@i_2173:	
  1663  0169                     USBStdFeatureReqHandler@current_ep_data:	
  1664                           ; 1 bytes @ 0x2
  1665                           
  1666                           
  1667                           ; 1 bytes @ 0x2
  1668  0169                     	ds	1
  1669  016A                     USBStdSetCfgHandler@i:	
  1670  016A                     USBStdFeatureReqHandler@p:	
  1671                           ; 1 bytes @ 0x3
  1672                           
  1673                           
  1674                           ; 2 bytes @ 0x3
  1675  016A                     	ds	2
  1676  016C                     ??_USBCtrlEPService:	
  1677                           
  1678                           ; 1 bytes @ 0x5
  1679  016C                     	ds	3
  1680  016F                     USBDeviceTasks@i:	
  1681                           
  1682                           ; 1 bytes @ 0x8
  1683  016F                     	ds	1
  1684                           
  1685                           	psect	cstackBANK1
  1686  00A0                     __pcstackBANK1:	
  1687  00A0                     i1USBStdSetCfgHandler@p:	
  1688  00A0                     i1USBStdFeatureReqHandler@pUEP:	
  1689                           ; 2 bytes @ 0x0
  1690                           
  1691                           
  1692                           ; 2 bytes @ 0x0
  1693  00A0                     	ds	2
  1694  00A2                     i1USBStdSetCfgHandler@i_2173:	
  1695  00A2                     i1USBStdFeatureReqHandler@current_ep_data:	
  1696                           ; 1 bytes @ 0x2
  1697                           
  1698                           
  1699                           ; 1 bytes @ 0x2
  1700  00A2                     	ds	1
  1701  00A3                     i1USBStdSetCfgHandler@i:	
  1702  00A3                     i1USBStdFeatureReqHandler@p:	
  1703                           ; 1 bytes @ 0x3
  1704                           
  1705                           
  1706                           ; 2 bytes @ 0x3
  1707  00A3                     	ds	2
  1708  00A5                     ??i1_USBCheckStdRequest:	
  1709                           
  1710                           ; 1 bytes @ 0x5
  1711  00A5                     	ds	1
  1712  00A6                     ??i1_USBCtrlTrfSetupHandler:	
  1713                           
  1714                           ; 1 bytes @ 0x6
  1715  00A6                     	ds	1
  1716  00A7                     ??i1_USBCtrlEPService:	
  1717                           
  1718                           ; 1 bytes @ 0x7
  1719  00A7                     	ds	3
  1720  00AA                     ??i1_USBDeviceTasks:	
  1721                           
  1722                           ; 1 bytes @ 0xA
  1723  00AA                     	ds	2
  1724  00AC                     i1USBDeviceTasks@i:	
  1725                           
  1726                           ; 1 bytes @ 0xC
  1727  00AC                     	ds	1
  1728  00AD                     ??_INTERRUPT_InterruptManager:	
  1729                           
  1730                           ; 1 bytes @ 0xD
  1731  00AD                     	ds	1
  1732  00AE                     ??_OSCILLATOR_Initialize:	
  1733  00AE                     ??_WDT_Initialize:	
  1734                           ; 1 bytes @ 0xE
  1735                           
  1736  00AE                     ??_USBDeviceInit:	
  1737                           ; 1 bytes @ 0xE
  1738                           
  1739  00AE                     ??_USBDeviceAttach:	
  1740                           ; 1 bytes @ 0xE
  1741                           
  1742  00AE                     ??_USBIncrement1msInternalTimers:	
  1743                           ; 1 bytes @ 0xE
  1744                           
  1745  00AE                     ??_USBCtrlEPAllowStatusStage:	
  1746                           ; 1 bytes @ 0xE
  1747                           
  1748  00AE                     ??_USBStallHandler:	
  1749                           ; 1 bytes @ 0xE
  1750                           
  1751  00AE                     ?_USBConfigureEndpoint:	
  1752                           ; 1 bytes @ 0xE
  1753                           
  1754  00AE                     ??_USBCtrlTrfTxService:	
  1755                           ; 1 bytes @ 0xE
  1756                           
  1757  00AE                     ??_USBCheckCDCRequest:	
  1758                           ; 1 bytes @ 0xE
  1759                           
  1760  00AE                     ?_putUSBUSART:	
  1761                           ; 1 bytes @ 0xE
  1762                           
  1763  00AE                     ??_PIN_MANAGER_Initialize:	
  1764                           ; 1 bytes @ 0xE
  1765                           
  1766  00AE                     ?_process_gpio_cmd:	
  1767                           ; 1 bytes @ 0xE
  1768                           
  1769  00AE                     ??_gpio_init:	
  1770                           ; 1 bytes @ 0xE
  1771                           
  1772  00AE                     ??_USBStdGetDscHandler:	
  1773                           ; 1 bytes @ 0xE
  1774                           
  1775  00AE                     ??_USBStdGetStatusHandler:	
  1776                           ; 1 bytes @ 0xE
  1777                           
  1778  00AE                     ?_USBTransferOnePacket:	
  1779                           ; 1 bytes @ 0xE
  1780                           
  1781  00AE                     ?_memset:	
  1782                           ; 2 bytes @ 0xE
  1783                           
  1784  00AE                     putUSBUSART@length:	
  1785                           ; 2 bytes @ 0xE
  1786                           
  1787  00AE                     process_gpio_cmd@rsp:	
  1788                           ; 1 bytes @ 0xE
  1789                           
  1790  00AE                     USBTransferOnePacket@dir:	
  1791                           ; 1 bytes @ 0xE
  1792                           
  1793  00AE                     USBConfigureEndpoint@direction:	
  1794                           ; 1 bytes @ 0xE
  1795                           
  1796  00AE                     memset@p1:	
  1797                           ; 1 bytes @ 0xE
  1798                           
  1799                           
  1800                           ; 2 bytes @ 0xE
  1801  00AE                     	ds	1
  1802  00AF                     ??_USBConfigureEndpoint:	
  1803  00AF                     ??_putUSBUSART:	
  1804                           ; 1 bytes @ 0xF
  1805                           
  1806  00AF                     ??_process_gpio_cmd:	
  1807                           ; 1 bytes @ 0xF
  1808                           
  1809  00AF                     USBDeviceInit@p:	
  1810                           ; 1 bytes @ 0xF
  1811                           
  1812  00AF                     USBTransferOnePacket@data:	
  1813                           ; 2 bytes @ 0xF
  1814                           
  1815  00AF                     USBStdGetStatusHandler@p:	
  1816                           ; 2 bytes @ 0xF
  1817                           
  1818                           
  1819                           ; 2 bytes @ 0xF
  1820  00AF                     	ds	1
  1821  00B0                     ??_USBCtrlTrfRxService:	
  1822  00B0                     putUSBUSART@data:	
  1823                           ; 1 bytes @ 0x10
  1824                           
  1825  00B0                     process_gpio_cmd@cmd_type:	
  1826                           ; 1 bytes @ 0x10
  1827                           
  1828  00B0                     USBCtrlTrfTxService@byteToSend:	
  1829                           ; 1 bytes @ 0x10
  1830                           
  1831  00B0                     memset@c:	
  1832                           ; 1 bytes @ 0x10
  1833                           
  1834                           
  1835                           ; 2 bytes @ 0x10
  1836  00B0                     	ds	1
  1837  00B1                     ??_USBCtrlTrfInHandler:	
  1838  00B1                     ??_USBCtrlEPAllowDataStage:	
  1839                           ; 1 bytes @ 0x11
  1840                           
  1841  00B1                     process_gpio_cmd@cmd:	
  1842                           ; 1 bytes @ 0x11
  1843                           
  1844  00B1                     USBDeviceInit@i_1508:	
  1845                           ; 1 bytes @ 0x11
  1846                           
  1847  00B1                     USBTransferOnePacket@len:	
  1848                           ; 1 bytes @ 0x11
  1849                           
  1850                           
  1851                           ; 1 bytes @ 0x11
  1852  00B1                     	ds	1
  1853  00B2                     ??_USBTransferOnePacket:	
  1854  00B2                     USBDeviceInit@i:	
  1855                           ; 1 bytes @ 0x12
  1856                           
  1857  00B2                     USBCtrlTrfRxService@i:	
  1858                           ; 1 bytes @ 0x12
  1859                           
  1860  00B2                     memset@n:	
  1861                           ; 1 bytes @ 0x12
  1862                           
  1863                           
  1864                           ; 2 bytes @ 0x12
  1865  00B2                     	ds	1
  1866  00B3                     ??_SYSTEM_Initialize:	
  1867  00B3                     ??_USBCtrlEPServiceComplete:	
  1868                           ; 1 bytes @ 0x13
  1869                           
  1870  00B3                     USBConfigureEndpoint@EPNum:	
  1871                           ; 1 bytes @ 0x13
  1872                           
  1873  00B3                     USBCtrlTrfRxService@byteToRead:	
  1874                           ; 1 bytes @ 0x13
  1875                           
  1876  00B3                     USBCtrlTrfInHandler@lastDTS:	
  1877                           ; 1 bytes @ 0x13
  1878                           
  1879                           
  1880                           ; 1 bytes @ 0x13
  1881  00B3                     	ds	1
  1882  00B4                     ??_memset:	
  1883  00B4                     ??_USBCtrlTrfOutHandler:	
  1884                           ; 1 bytes @ 0x14
  1885                           
  1886  00B4                     USBConfigureEndpoint@handle:	
  1887                           ; 1 bytes @ 0x14
  1888                           
  1889  00B4                     memset@p:	
  1890                           ; 1 bytes @ 0x14
  1891                           
  1892                           
  1893                           ; 2 bytes @ 0x14
  1894  00B4                     	ds	1
  1895  00B5                     ?_USBEnableEndpoint:	
  1896  00B5                     USBEnableEndpoint@options:	
  1897                           ; 1 bytes @ 0x15
  1898                           
  1899                           
  1900                           ; 1 bytes @ 0x15
  1901  00B5                     	ds	1
  1902  00B6                     ??_USBEnableEndpoint:	
  1903  00B6                     USBTransferOnePacket@ep:	
  1904                           ; 1 bytes @ 0x16
  1905                           
  1906                           
  1907                           ; 1 bytes @ 0x16
  1908  00B6                     	ds	1
  1909  00B7                     USBTransferOnePacket@handle:	
  1910                           
  1911                           ; 2 bytes @ 0x17
  1912  00B7                     	ds	1
  1913  00B8                     USBEnableEndpoint@p:	
  1914                           
  1915                           ; 2 bytes @ 0x18
  1916  00B8                     	ds	1
  1917  00B9                     ?_getsUSBUSART:	
  1918  00B9                     ??_CDCTxService:	
  1919                           ; 1 bytes @ 0x19
  1920                           
  1921  00B9                     getsUSBUSART@len:	
  1922                           ; 1 bytes @ 0x19
  1923                           
  1924                           
  1925                           ; 1 bytes @ 0x19
  1926  00B9                     	ds	1
  1927  00BA                     ??_getsUSBUSART:	
  1928  00BA                     CDCTxService@i:	
  1929                           ; 1 bytes @ 0x1A
  1930                           
  1931  00BA                     USBEnableEndpoint@ep:	
  1932                           ; 1 bytes @ 0x1A
  1933                           
  1934                           
  1935                           ; 1 bytes @ 0x1A
  1936  00BA                     	ds	1
  1937  00BB                     ??_CDCInitEP:	
  1938  00BB                     CDCTxService@byte_to_send:	
  1939                           ; 1 bytes @ 0x1B
  1940                           
  1941                           
  1942                           ; 1 bytes @ 0x1B
  1943  00BB                     	ds	1
  1944  00BC                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1945  00BC                     getsUSBUSART@buffer:	
  1946                           ; 1 bytes @ 0x1C
  1947                           
  1948  00BC                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1949                           ; 1 bytes @ 0x1C
  1950                           
  1951                           
  1952                           ; 2 bytes @ 0x1C
  1953  00BC                     	ds	1
  1954  00BD                     ??_gpio_task:	
  1955                           
  1956                           ; 1 bytes @ 0x1D
  1957  00BD                     	ds	1
  1958  00BE                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1959                           
  1960                           ; 2 bytes @ 0x1E
  1961  00BE                     	ds	1
  1962  00BF                     gpio_task@bytes_rcvd:	
  1963                           
  1964                           ; 1 bytes @ 0x1F
  1965  00BF                     	ds	1
  1966  00C0                     gpio_task@has_output:	
  1967  00C0                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1968                           ; 1 bytes @ 0x20
  1969                           
  1970                           
  1971                           ; 2 bytes @ 0x20
  1972  00C0                     	ds	1
  1973  00C1                     gpio_task@rx_ptr:	
  1974                           
  1975                           ; 1 bytes @ 0x21
  1976  00C1                     	ds	1
  1977  00C2                     ??_USBWakeFromSuspend:	
  1978  00C2                     ??_USBSuspend:	
  1979                           ; 1 bytes @ 0x22
  1980                           
  1981  00C2                     ??_USBStdFeatureReqHandler:	
  1982                           ; 1 bytes @ 0x22
  1983                           
  1984  00C2                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  1985                           ; 1 bytes @ 0x22
  1986                           
  1987  00C2                     ??_USBStdSetCfgHandler:	
  1988                           ; 1 bytes @ 0x22
  1989                           
  1990  00C2                     gpio_task@tx_ptr:	
  1991                           ; 1 bytes @ 0x22
  1992                           
  1993                           
  1994                           ; 1 bytes @ 0x22
  1995  00C2                     	ds	2
  1996  00C4                     ??_USBCheckStdRequest:	
  1997                           
  1998                           ; 1 bytes @ 0x24
  1999  00C4                     	ds	1
  2000  00C5                     ??_USBCtrlTrfSetupHandler:	
  2001                           
  2002                           ; 1 bytes @ 0x25
  2003  00C5                     	ds	1
  2004  00C6                     ??_usb_task:	
  2005  00C6                     ??_main:	
  2006                           ; 1 bytes @ 0x26
  2007                           
  2008                           
  2009                           	psect	cstackCOMMON
  2010  0070                     __pcstackCOMMON:	
  2011                           ; 1 bytes @ 0x26
  2012                           
  2013  0070                     ?_USBDeviceTasks:	
  2014  0070                     ?_OSCILLATOR_Initialize:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017  0070                     ?_WDT_Initialize:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0070                     ?_USBDeviceInit:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0070                     ?_USBDeviceAttach:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0070                     ?_USBWakeFromSuspend:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0070                     ?_USBSuspend:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032  0070                     ?_USBIncrement1msInternalTimers:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035  0070                     ?_USBCtrlEPAllowStatusStage:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038  0070                     ?_USBStallHandler:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041  0070                     ?_USBCtrlEPService:	
  2042                           ; 1 bytes @ 0x0
  2043                           
  2044  0070                     ?_USBCtrlTrfTxService:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047  0070                     ?_USBCtrlTrfSetupHandler:	
  2048                           ; 1 bytes @ 0x0
  2049                           
  2050  0070                     ?_USBCtrlTrfOutHandler:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053  0070                     ?_USBCtrlTrfInHandler:	
  2054                           ; 1 bytes @ 0x0
  2055                           
  2056  0070                     ?_USBCheckStdRequest:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059  0070                     ?_USBStdFeatureReqHandler:	
  2060                           ; 1 bytes @ 0x0
  2061                           
  2062  0070                     ?_USBCheckCDCRequest:	
  2063                           ; 1 bytes @ 0x0
  2064                           
  2065  0070                     ?_CDCInitEP:	
  2066                           ; 1 bytes @ 0x0
  2067                           
  2068  0070                     ?_CDCTxService:	
  2069                           ; 1 bytes @ 0x0
  2070                           
  2071  0070                     ?_INTERRUPT_InterruptManager:	
  2072                           ; 1 bytes @ 0x0
  2073                           
  2074  0070                     ?_PIN_MANAGER_Initialize:	
  2075                           ; 1 bytes @ 0x0
  2076                           
  2077  0070                     ?_SYSTEM_Initialize:	
  2078                           ; 1 bytes @ 0x0
  2079                           
  2080  0070                     ?_usb_task:	
  2081                           ; 1 bytes @ 0x0
  2082                           
  2083  0070                     ?_gpio_init:	
  2084                           ; 1 bytes @ 0x0
  2085                           
  2086  0070                     ?_gpio_task:	
  2087                           ; 1 bytes @ 0x0
  2088                           
  2089  0070                     ?_main:	
  2090                           ; 1 bytes @ 0x0
  2091                           
  2092  0070                     ?_USBCtrlEPAllowDataStage:	
  2093                           ; 1 bytes @ 0x0
  2094                           
  2095  0070                     ?_USBCtrlEPServiceComplete:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098  0070                     ?_USBCtrlTrfRxService:	
  2099                           ; 1 bytes @ 0x0
  2100                           
  2101  0070                     ?_USBStdSetCfgHandler:	
  2102                           ; 1 bytes @ 0x0
  2103                           
  2104  0070                     ?_USBStdGetDscHandler:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107  0070                     ?_USBStdGetStatusHandler:	
  2108                           ; 1 bytes @ 0x0
  2109                           
  2110  0070                     ?i1_USBCheckCDCRequest:	
  2111                           ; 1 bytes @ 0x0
  2112                           
  2113  0070                     ??i1_USBCheckCDCRequest:	
  2114                           ; 1 bytes @ 0x0
  2115                           
  2116  0070                     ?i1_CDCInitEP:	
  2117                           ; 1 bytes @ 0x0
  2118                           
  2119  0070                     ?i1_USBDeviceInit:	
  2120                           ; 1 bytes @ 0x0
  2121                           
  2122  0070                     ??i1_USBDeviceInit:	
  2123                           ; 1 bytes @ 0x0
  2124                           
  2125  0070                     ?i1_USBDeviceTasks:	
  2126                           ; 1 bytes @ 0x0
  2127                           
  2128  0070                     ?i1_USBCtrlEPAllowStatusStage:	
  2129                           ; 1 bytes @ 0x0
  2130                           
  2131  0070                     ??i1_USBCtrlEPAllowStatusStage:	
  2132                           ; 1 bytes @ 0x0
  2133                           
  2134  0070                     ?i1_USBCtrlEPAllowDataStage:	
  2135                           ; 1 bytes @ 0x0
  2136                           
  2137  0070                     ?i1_USBConfigureEndpoint:	
  2138                           ; 1 bytes @ 0x0
  2139                           
  2140  0070                     ?i1_USBCtrlEPServiceComplete:	
  2141                           ; 1 bytes @ 0x0
  2142                           
  2143  0070                     ?i1_USBCtrlTrfTxService:	
  2144                           ; 1 bytes @ 0x0
  2145                           
  2146  0070                     ??i1_USBCtrlTrfTxService:	
  2147                           ; 1 bytes @ 0x0
  2148                           
  2149  0070                     ?i1_USBCtrlTrfRxService:	
  2150                           ; 1 bytes @ 0x0
  2151                           
  2152  0070                     ?i1_USBStdSetCfgHandler:	
  2153                           ; 1 bytes @ 0x0
  2154                           
  2155  0070                     ?i1_USBStdGetDscHandler:	
  2156                           ; 1 bytes @ 0x0
  2157                           
  2158  0070                     ??i1_USBStdGetDscHandler:	
  2159                           ; 1 bytes @ 0x0
  2160                           
  2161  0070                     ?i1_USBStdGetStatusHandler:	
  2162                           ; 1 bytes @ 0x0
  2163                           
  2164  0070                     ??i1_USBStdGetStatusHandler:	
  2165                           ; 1 bytes @ 0x0
  2166                           
  2167  0070                     ?i1_USBStallHandler:	
  2168                           ; 1 bytes @ 0x0
  2169                           
  2170  0070                     ??i1_USBStallHandler:	
  2171                           ; 1 bytes @ 0x0
  2172                           
  2173  0070                     ?i1_USBSuspend:	
  2174                           ; 1 bytes @ 0x0
  2175                           
  2176  0070                     ?i1_USBWakeFromSuspend:	
  2177                           ; 1 bytes @ 0x0
  2178                           
  2179  0070                     ?i1_USBCtrlEPService:	
  2180                           ; 1 bytes @ 0x0
  2181                           
  2182  0070                     ?i1_USBCtrlTrfSetupHandler:	
  2183                           ; 1 bytes @ 0x0
  2184                           
  2185  0070                     ?i1_USBCtrlTrfOutHandler:	
  2186                           ; 1 bytes @ 0x0
  2187                           
  2188  0070                     ?i1_USBCtrlTrfInHandler:	
  2189                           ; 1 bytes @ 0x0
  2190                           
  2191  0070                     ?i1_USBCheckStdRequest:	
  2192                           ; 1 bytes @ 0x0
  2193                           
  2194  0070                     ?i1_USBStdFeatureReqHandler:	
  2195                           ; 1 bytes @ 0x0
  2196                           
  2197  0070                     ?i1_USBIncrement1msInternalTimers:	
  2198                           ; 1 bytes @ 0x0
  2199                           
  2200  0070                     ??i1_USBIncrement1msInternalTimers:	
  2201                           ; 1 bytes @ 0x0
  2202                           
  2203  0070                     ?i1_memset:	
  2204                           ; 1 bytes @ 0x0
  2205                           
  2206  0070                     ?i1_USBTransferOnePacket:	
  2207                           ; 1 bytes @ 0x0
  2208                           
  2209  0070                     i1USBTransferOnePacket@dir:	
  2210                           ; 2 bytes @ 0x0
  2211                           
  2212  0070                     i1USBConfigureEndpoint@direction:	
  2213                           ; 1 bytes @ 0x0
  2214                           
  2215  0070                     i1memset@p1:	
  2216                           ; 1 bytes @ 0x0
  2217                           
  2218                           
  2219                           ; 2 bytes @ 0x0
  2220  0070                     	ds	1
  2221  0071                     ??i1_USBConfigureEndpoint:	
  2222  0071                     i1USBDeviceInit@p:	
  2223                           ; 1 bytes @ 0x1
  2224                           
  2225  0071                     i1USBTransferOnePacket@data:	
  2226                           ; 2 bytes @ 0x1
  2227                           
  2228  0071                     i1USBStdGetStatusHandler@p:	
  2229                           ; 2 bytes @ 0x1
  2230                           
  2231                           
  2232                           ; 2 bytes @ 0x1
  2233  0071                     	ds	1
  2234  0072                     ??i1_USBCtrlTrfRxService:	
  2235  0072                     i1USBCtrlTrfTxService@byteToSend:	
  2236                           ; 1 bytes @ 0x2
  2237                           
  2238  0072                     i1memset@c:	
  2239                           ; 1 bytes @ 0x2
  2240                           
  2241                           
  2242                           ; 2 bytes @ 0x2
  2243  0072                     	ds	1
  2244  0073                     ??i1_USBCtrlEPAllowDataStage:	
  2245  0073                     ??i1_USBCtrlTrfInHandler:	
  2246                           ; 1 bytes @ 0x3
  2247                           
  2248  0073                     i1USBDeviceInit@i_1508:	
  2249                           ; 1 bytes @ 0x3
  2250                           
  2251  0073                     i1USBTransferOnePacket@len:	
  2252                           ; 1 bytes @ 0x3
  2253                           
  2254                           
  2255                           ; 1 bytes @ 0x3
  2256  0073                     	ds	1
  2257  0074                     ??i1_USBTransferOnePacket:	
  2258  0074                     i1USBDeviceInit@i:	
  2259                           ; 1 bytes @ 0x4
  2260                           
  2261  0074                     i1USBCtrlTrfRxService@i:	
  2262                           ; 1 bytes @ 0x4
  2263                           
  2264  0074                     i1memset@n:	
  2265                           ; 1 bytes @ 0x4
  2266                           
  2267                           
  2268                           ; 2 bytes @ 0x4
  2269  0074                     	ds	1
  2270  0075                     ??i1_USBCtrlEPServiceComplete:	
  2271  0075                     i1USBConfigureEndpoint@EPNum:	
  2272                           ; 1 bytes @ 0x5
  2273                           
  2274  0075                     i1USBCtrlTrfRxService@byteToRead:	
  2275                           ; 1 bytes @ 0x5
  2276                           
  2277  0075                     i1USBCtrlTrfInHandler@lastDTS:	
  2278                           ; 1 bytes @ 0x5
  2279                           
  2280                           
  2281                           ; 1 bytes @ 0x5
  2282  0075                     	ds	1
  2283  0076                     ??i1_USBCtrlTrfOutHandler:	
  2284  0076                     ??i1_memset:	
  2285                           ; 1 bytes @ 0x6
  2286                           
  2287  0076                     i1USBConfigureEndpoint@handle:	
  2288                           ; 1 bytes @ 0x6
  2289                           
  2290  0076                     i1memset@p:	
  2291                           ; 1 bytes @ 0x6
  2292                           
  2293                           
  2294                           ; 2 bytes @ 0x6
  2295  0076                     	ds	1
  2296  0077                     ?i1_USBEnableEndpoint:	
  2297  0077                     i1USBEnableEndpoint@options:	
  2298                           ; 1 bytes @ 0x7
  2299                           
  2300                           
  2301                           ; 1 bytes @ 0x7
  2302  0077                     	ds	1
  2303  0078                     ??i1_USBEnableEndpoint:	
  2304  0078                     i1USBTransferOnePacket@ep:	
  2305                           ; 1 bytes @ 0x8
  2306                           
  2307                           
  2308                           ; 1 bytes @ 0x8
  2309  0078                     	ds	1
  2310  0079                     i1USBTransferOnePacket@handle:	
  2311                           
  2312                           ; 2 bytes @ 0x9
  2313  0079                     	ds	1
  2314  007A                     i1USBEnableEndpoint@p:	
  2315                           
  2316                           ; 2 bytes @ 0xA
  2317  007A                     	ds	2
  2318  007C                     i1USBEnableEndpoint@ep:	
  2319                           
  2320                           ; 1 bytes @ 0xC
  2321  007C                     	ds	1
  2322  007D                     ??i1_CDCInitEP:	
  2323                           
  2324                           ; 1 bytes @ 0xD
  2325  007D                     	ds	1
  2326  007E                     ??i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2327                           
  2328                           	psect	cstackBANK0h
  2329  0058                     __pcstackBANK0h:	
  2330                           ; 1 bytes @ 0xE
  2331                           
  2332  0058                     ?i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2333  0058                     i1USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336                           
  2337                           ; 2 bytes @ 0x0
  2338  0058                     	ds	2
  2339  005A                     i1USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2340                           
  2341                           ; 2 bytes @ 0x2
  2342  005A                     	ds	2
  2343  005C                     i1USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2344                           
  2345                           ; 2 bytes @ 0x4
  2346  005C                     	ds	2
  2347  005E                     ??i1_USBStdSetCfgHandler:	
  2348  005E                     ??i1_USBSuspend:	
  2349                           ; 1 bytes @ 0x6
  2350                           
  2351  005E                     ??i1_USBWakeFromSuspend:	
  2352                           ; 1 bytes @ 0x6
  2353                           
  2354  005E                     ??i1_USBStdFeatureReqHandler:	
  2355                           ; 1 bytes @ 0x6
  2356                           
  2357                           
  2358                           ; 1 bytes @ 0x6
  2359  005E                     	ds	2
  2360                           
  2361                           	psect	maintext
  2362  1069                     __pmaintext:	
  2363 ;;
  2364 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2365 ;;
  2366 ;; *************** function _main *****************
  2367 ;; Defined at:
  2368 ;;		line 122 in file "main.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : B1F/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels required when called:   20
  2388 ;; This function calls:
  2389 ;;		_SYSTEM_Initialize
  2390 ;;		_USBDeviceInit
  2391 ;;		_gpio_init
  2392 ;;		_gpio_task
  2393 ;;		_usb_task
  2394 ;; This function is called by:
  2395 ;;		Startup code after reset
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function _main
  2401  1069                     _main:	
  2402                           
  2403                           ;main.c: 123: SYSTEM_Initialize();
  2404                           
  2405                           ;incstack = 0
  2406 ;; hardware stack exceeded
  2407                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2408  1069  3190  205A  3190   	fcall	_SYSTEM_Initialize
  2409                           
  2410                           ;main.c: 124: USBDeviceInit();
  2411  106C  3185  258F  3190   	fcall	_USBDeviceInit
  2412                           
  2413                           ;main.c: 125: gpio_init();
  2414  106F  3190  2038  3190   	fcall	_gpio_init
  2415  1072                     l7091:	
  2416                           ;main.c: 127: while (1) {
  2417                           
  2418                           
  2419                           ;main.c: 128: usb_task();
  2420  1072  3190  204C  3190   	fcall	_usb_task
  2421                           
  2422                           ;main.c: 129: gpio_task();
  2423  1075  3193  237F  3190   	fcall	_gpio_task
  2424  1078  2872               	goto	l7091
  2425  1079                     __end_of_main:	
  2426                           
  2427                           	psect	text1
  2428  104C                     __ptext1:	
  2429 ;; *************** function _usb_task *****************
  2430 ;; Defined at:
  2431 ;;		line 28 in file "main.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2449 ;;Total ram usage:        0 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:   19
  2452 ;; This function calls:
  2453 ;;		_CDCTxService
  2454 ;;		_USBDeviceTasks
  2455 ;; This function is called by:
  2456 ;;		_main
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           
  2461                           ;psect for function _usb_task
  2462  104C                     _usb_task:	
  2463                           
  2464                           ;main.c: 29: USBDeviceTasks();
  2465                           
  2466                           ;incstack = 0
  2467 ;; hardware stack exceeded
  2468                           ; Regs used in _usb_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2469  104C  3182  22F7  3190   	fcall	_USBDeviceTasks
  2470                           
  2471                           ;main.c: 31: if (
  2472                           ;main.c: 32: (USBDeviceState >= CONFIGURED_STATE) &&
  2473                           ;main.c: 33: (UCONbits.SUSPND == 0)
  2474                           ;main.c: 34: ) {
  2475  104F  3020               	movlw	32
  2476  1050  0021               	movlb	1	; select bank1
  2477  1051  025F               	subwf	_USBDeviceState^(0+128),w	;volatile
  2478  1052  1C03               	skipc
  2479  1053  0008               	return
  2480  1054  003D               	movlb	29	; select bank29
  2481  1055  188E               	btfsc	14,1	;volatile
  2482  1056  0008               	return
  2483                           
  2484                           ;main.c: 35: CDCTxService();
  2485  1057  3184  24BD         	fcall	_CDCTxService
  2486  1059  0008               	return
  2487  105A                     __end_of_usb_task:	
  2488                           
  2489                           	psect	text2
  2490  02F7                     __ptext2:	
  2491 ;; *************** function _USBDeviceTasks *****************
  2492 ;; Defined at:
  2493 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  i               1    8[BANK2 ] unsigned char 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2508 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2509 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  2510 ;;      Totals:         0       0       0       1       2       0       0       0       0       0       0       0       
      +0       0
  2511 ;;Total ram usage:        3 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:   18
  2514 ;; This function calls:
  2515 ;;		_USBCtrlEPAllowStatusStage
  2516 ;;		_USBCtrlEPService
  2517 ;;		_USBDeviceInit
  2518 ;;		_USBIncrement1msInternalTimers
  2519 ;;		_USBStallHandler
  2520 ;;		_USBSuspend
  2521 ;;		_USBWakeFromSuspend
  2522 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2523 ;; This function is called by:
  2524 ;;		_usb_task
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function _USBDeviceTasks
  2530  02F7                     _USBDeviceTasks:	
  2531                           
  2532                           ;usb_device.c: 479: uint8_t i;
  2533                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  2534                           
  2535                           ;incstack = 0
  2536 ;; hardware stack exceeded
  2537                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2538  02F7  0021               	movlb	1	; select bank1
  2539  02F8  035F               	decf	_USBDeviceState^(0+128),w	;volatile
  2540  02F9  1D03               	btfss	3,2
  2541  02FA  2B07               	goto	l6787
  2542                           
  2543                           ;usb_device.c: 591: {
  2544                           ;usb_device.c: 601: if(!UCONbits.SE0)
  2545  02FB  003D               	movlb	29	; select bank29
  2546  02FC  1A8E               	btfsc	14,5	;volatile
  2547  02FD  2B07               	goto	l6787
  2548                           
  2549                           ;usb_device.c: 602: {
  2550                           ;usb_device.c: 608: {UIR = 0;};
  2551  02FE  0190               	clrf	16	;volatile
  2552                           
  2553                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  2554  02FF  1412               	bsf	18,0	;volatile
  2555                           
  2556                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  2557  0300  1612               	bsf	18,4	;volatile
  2558                           
  2559                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  2560  0301  3002               	movlw	2
  2561  0302  0023               	movlb	3	; select bank3
  2562  0303  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2563  0304  0860               	movf	??_USBDeviceTasks^(0+384),w
  2564  0305  0021               	movlb	1	; select bank1
  2565  0306  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  2566  0307                     l6787:	
  2567                           
  2568                           ;usb_device.c: 617: }
  2569                           ;usb_device.c: 618: }
  2570                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  2571  0307  003D               	movlb	29	; select bank29
  2572  0308  1910               	btfsc	16,2	;volatile
  2573  0309  1D12               	btfss	18,2	;volatile
  2574  030A  2B14               	goto	l6795
  2575                           
  2576                           ;usb_device.c: 635: {
  2577                           ;usb_device.c: 636: (UIR &= 0xFB);
  2578  030B  30FB               	movlw	251
  2579  030C  0023               	movlb	3	; select bank3
  2580  030D  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2581  030E  0860               	movf	??_USBDeviceTasks^(0+384),w
  2582  030F  003D               	movlb	29	; select bank29
  2583  0310  0590               	andwf	16,f	;volatile
  2584                           
  2585                           ;usb_device.c: 640: USBWakeFromSuspend();
  2586  0311  3191  21A7  3182   	fcall	_USBWakeFromSuspend
  2587  0314                     l6795:	
  2588                           
  2589                           ;usb_device.c: 642: }
  2590                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  2591  0314  003D               	movlb	29	; select bank29
  2592  0315  1C8E               	btfss	14,1	;volatile
  2593  0316  2B1A               	goto	l434
  2594                           
  2595                           ;usb_device.c: 648: {
  2596                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  2597  0317  0020               	movlb	0	; select bank0
  2598  0318  1112               	bcf	18,2	;volatile
  2599                           
  2600                           ;usb_device.c: 650: return;
  2601  0319  0008               	return
  2602  031A                     l434:	
  2603                           
  2604                           ;usb_device.c: 651: }
  2605                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  2606  031A  1810               	btfsc	16,0	;volatile
  2607  031B  1C12               	btfss	18,0	;volatile
  2608  031C  2B2E               	goto	l6809
  2609                           
  2610                           ;usb_device.c: 664: {
  2611                           ;usb_device.c: 665: USBDeviceInit();
  2612  031D  3185  258F  3182   	fcall	_USBDeviceInit
  2613                           
  2614                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  2615  0320  0021               	movlb	1	; select bank1
  2616  0321  1512               	bsf	18,2	;volatile
  2617                           
  2618                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  2619  0322  3004               	movlw	4
  2620  0323  0023               	movlb	3	; select bank3
  2621  0324  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2622  0325  0860               	movf	??_USBDeviceTasks^(0+384),w
  2623  0326  0021               	movlb	1	; select bank1
  2624  0327  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  2625                           
  2626                           ;usb_device.c: 681: (UIR &= 0xFE);
  2627  0328  30FE               	movlw	254
  2628  0329  0023               	movlb	3	; select bank3
  2629  032A  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2630  032B  0860               	movf	??_USBDeviceTasks^(0+384),w
  2631  032C  003D               	movlb	29	; select bank29
  2632  032D  0590               	andwf	16,f	;volatile
  2633  032E                     l6809:	
  2634                           
  2635                           ;usb_device.c: 682: }
  2636                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  2637  032E  1A10               	btfsc	16,4	;volatile
  2638  032F  1E12               	btfss	18,4	;volatile
  2639  0330  2B34               	goto	l6815
  2640                           
  2641                           ;usb_device.c: 688: {
  2642                           ;usb_device.c: 694: USBSuspend();
  2643  0331  3191  2148  3182   	fcall	_USBSuspend
  2644  0334                     l6815:	
  2645                           
  2646                           ;usb_device.c: 696: }
  2647                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  2648  0334  003D               	movlb	29	; select bank29
  2649  0335  1F10               	btfss	16,6	;volatile
  2650  0336  2B5E               	goto	l6831
  2651                           
  2652                           ;usb_device.c: 709: {
  2653                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  2654  0337  1F12               	btfss	18,6	;volatile
  2655  0338  2B49               	goto	l6821
  2656                           
  2657                           ;usb_device.c: 712: {
  2658                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  2659  0339  3073               	movlw	115
  2660  033A  0021               	movlb	1	; select bank1
  2661  033B  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2662  033C  3000               	movlw	0
  2663  033D  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2664  033E  3000               	movlw	0
  2665  033F  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2666  0340  3000               	movlw	0
  2667  0341  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2668  0342  3001               	movlw	1
  2669  0343  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2670  0344  3000               	movlw	0
  2671  0345  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  2672  0346  3192  2266  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2673  0349                     l6821:	
  2674                           
  2675                           ;usb_device.c: 714: }
  2676                           ;usb_device.c: 715: (UIR &= 0xBF);
  2677  0349  30BF               	movlw	191
  2678  034A  0023               	movlb	3	; select bank3
  2679  034B  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2680  034C  0860               	movf	??_USBDeviceTasks^(0+384),w
  2681  034D  003D               	movlb	29	; select bank29
  2682  034E  0590               	andwf	16,f	;volatile
  2683                           
  2684                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  2685  034F  3191  210D  3182   	fcall	_USBIncrement1msInternalTimers
  2686                           
  2687                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  2688  0352  0022               	movlb	2	; select bank2
  2689  0353  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  2690  0354  1903               	btfsc	3,2
  2691  0355  2B58               	goto	l440
  2692                           
  2693                           ;usb_device.c: 736: {
  2694                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  2695  0356  3001               	movlw	1
  2696  0357  02CB               	subwf	_USBStatusStageTimeoutCounter^(0+256),f	;volatile
  2697  0358                     l440:	
  2698                           
  2699                           ;usb_device.c: 738: }
  2700                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  2701  0358  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  2702  0359  1D03               	btfss	3,2
  2703  035A  2B5E               	goto	l6831
  2704                           
  2705                           ;usb_device.c: 745: {
  2706                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  2707  035B  318A  22AD  3182   	fcall	_USBCtrlEPAllowStatusStage
  2708  035E                     l6831:	
  2709                           
  2710                           ;usb_device.c: 747: }
  2711                           ;usb_device.c: 749: }
  2712                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  2713  035E  003D               	movlb	29	; select bank29
  2714  035F  1A90               	btfsc	16,5	;volatile
  2715  0360  1E92               	btfss	18,5	;volatile
  2716  0361  2B65               	goto	l6837
  2717                           
  2718                           ;usb_device.c: 752: {
  2719                           ;usb_device.c: 753: USBStallHandler();
  2720  0362  3192  220F  3182   	fcall	_USBStallHandler
  2721  0365                     l6837:	
  2722                           
  2723                           ;usb_device.c: 754: }
  2724                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  2725  0365  003D               	movlb	29	; select bank29
  2726  0366  1890               	btfsc	16,1	;volatile
  2727  0367  1C92               	btfss	18,1	;volatile
  2728  0368  2B7B               	goto	l6845
  2729                           
  2730                           ;usb_device.c: 757: {
  2731                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  2732  0369  30FF               	movlw	255
  2733  036A  0021               	movlb	1	; select bank1
  2734  036B  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2735  036C  307F               	movlw	127
  2736  036D  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2737  036E  3000               	movlw	0
  2738  036F  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2739  0370  3000               	movlw	0
  2740  0371  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2741  0372  3001               	movlw	1
  2742  0373  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2743  0374  3000               	movlw	0
  2744  0375  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  2745  0376  3192  2266  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2746                           
  2747                           ;usb_device.c: 759: {UEIR = 0;};
  2748  0379  003D               	movlb	29	; select bank29
  2749  037A  0193               	clrf	19	;volatile
  2750  037B                     l6845:	
  2751                           
  2752                           ;usb_device.c: 767: }
  2753                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  2754  037B  3004               	movlw	4
  2755  037C  0021               	movlb	1	; select bank1
  2756  037D  025F               	subwf	_USBDeviceState^(0+128),w	;volatile
  2757  037E  1803               	skipnc
  2758  037F  2B83               	goto	l444
  2759                           
  2760                           ;usb_device.c: 775: {
  2761                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  2762  0380  0020               	movlb	0	; select bank0
  2763  0381  1112               	bcf	18,2	;volatile
  2764                           
  2765                           ;usb_device.c: 777: return;
  2766  0382  0008               	return
  2767  0383                     l444:	
  2768                           
  2769                           ;usb_device.c: 778: }
  2770                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  2771  0383  003D               	movlb	29	; select bank29
  2772  0384  1D92               	btfss	18,3	;volatile
  2773  0385  2BDD               	goto	l445
  2774                           
  2775                           ;usb_device.c: 784: {
  2776                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  2777  0386  0022               	movlb	2	; select bank2
  2778  0387  01EF               	clrf	USBDeviceTasks@i^(0+256)
  2779  0388  3004               	movlw	4
  2780  0389  026F               	subwf	USBDeviceTasks@i^(0+256),w
  2781  038A  1803               	btfsc	3,0
  2782  038B  2BDD               	goto	l445
  2783  038C                     l446:	
  2784                           
  2785                           ;usb_device.c: 786: {
  2786                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  2787  038C  003D               	movlb	29	; select bank29
  2788  038D  1D90               	btfss	16,3	;volatile
  2789  038E  2BDD               	goto	l445
  2790                           
  2791                           ;usb_device.c: 788: {
  2792                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  2793  038F  080F               	movf	15,w	;volatile
  2794  0390  0023               	movlb	3	; select bank3
  2795  0391  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2796  0392  0860               	movf	??_USBDeviceTasks^(0+384),w
  2797  0393  0021               	movlb	1	; select bank1
  2798  0394  00E0               	movwf	_USTATcopy^(0+128)	;volatile
  2799                           
  2800                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  2801  0395  0C60               	rrf	_USTATcopy^(0+128),w	;volatile
  2802  0396  0023               	movlb	3	; select bank3
  2803  0397  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2804  0398  0CE0               	rrf	??_USBDeviceTasks^(0+384),f
  2805  0399  0C60               	rrf	??_USBDeviceTasks^(0+384),w
  2806  039A  390F               	andlw	15
  2807  039B  00E1               	movwf	(??_USBDeviceTasks+1)^(0+384)
  2808  039C  0861               	movf	(??_USBDeviceTasks+1)^(0+384),w
  2809  039D  0021               	movlb	1	; select bank1
  2810  039E  00DB               	movwf	_endpoint_number^(0+128)	;volatile
  2811                           
  2812                           ;usb_device.c: 793: (UIR &= 0xF7);
  2813  039F  30F7               	movlw	247
  2814  03A0  0023               	movlb	3	; select bank3
  2815  03A1  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2816  03A2  0860               	movf	??_USBDeviceTasks^(0+384),w
  2817  03A3  003D               	movlb	29	; select bank29
  2818  03A4  0590               	andwf	16,f	;volatile
  2819                           
  2820                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  2821  03A5  0021               	movlb	1	; select bank1
  2822  03A6  1960               	btfsc	_USTATcopy^(0+128),2	;volatile
  2823  03A7  2BAB               	goto	l6865
  2824                           
  2825                           ;usb_device.c: 799: {
  2826                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  2827  03A8  085B               	movf	_endpoint_number^(0+128),w	;volatile
  2828  03A9  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  2829  03AA  2BAE               	goto	L1
  2830  03AB                     l6865:	
  2831                           ;usb_device.c: 801: }
  2832                           
  2833                           
  2834                           ;usb_device.c: 802: else
  2835                           ;usb_device.c: 803: {
  2836                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  2837  03AB  0021               	movlb	1	; select bank1
  2838  03AC  085B               	movf	_endpoint_number^(0+128),w	;volatile
  2839  03AD  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  2840  03AE                     L1:	
  2841  03AE  0086               	movwf	6
  2842  03AF  3001               	movlw	1	; select bank2/3
  2843  03B0  0087               	movwf	7
  2844  03B1  0801               	movf	1,w
  2845  03B2  3901               	andlw	1
  2846  03B3  0023               	movlb	3	; select bank3
  2847  03B4  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2848  03B5  3001               	movlw	1
  2849  03B6  06E0               	xorwf	??_USBDeviceTasks^(0+384),f
  2850  03B7  0801               	movf	1,w
  2851  03B8  0660               	xorwf	??_USBDeviceTasks^(0+384),w
  2852  03B9  39FE               	andlw	-2
  2853  03BA  0660               	xorwf	??_USBDeviceTasks^(0+384),w
  2854  03BB  0081               	movwf	1
  2855                           
  2856                           ;usb_device.c: 805: }
  2857                           ;usb_device.c: 810: if(endpoint_number == 0)
  2858  03BC  0021               	movlb	1	; select bank1
  2859  03BD  085B               	movf	_endpoint_number^(0+128),w	;volatile
  2860  03BE  1D03               	btfss	3,2
  2861  03BF  2BC4               	goto	l6871
  2862                           
  2863                           ;usb_device.c: 811: {
  2864                           ;usb_device.c: 812: USBCtrlEPService();
  2865  03C0  3195  25D5  3182   	fcall	_USBCtrlEPService
  2866                           
  2867                           ;usb_device.c: 813: }
  2868  03C3  2BD3               	goto	l6873
  2869  03C4                     l6871:	
  2870                           
  2871                           ;usb_device.c: 814: else
  2872                           ;usb_device.c: 815: {
  2873                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  2874  03C4  3072               	movlw	114
  2875  03C5  0021               	movlb	1	; select bank1
  2876  03C6  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2877  03C7  3000               	movlw	0
  2878  03C8  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2879  03C9  30E0               	movlw	low _USTATcopy
  2880  03CA  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2881  03CB  3000               	movlw	high _USTATcopy
  2882  03CC  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2883  03CD  3000               	movlw	0
  2884  03CE  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2885  03CF  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  2886  03D0  3192  2266  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2887  03D3                     l6873:	
  2888                           ;usb_device.c: 819: else
  2889                           ;usb_device.c: 820: {
  2890                           ;usb_device.c: 821: break;
  2891                           
  2892                           ;usb_device.c: 817: }
  2893                           ;usb_device.c: 818: }
  2894                           
  2895  03D3  3001               	movlw	1
  2896  03D4  0023               	movlb	3	; select bank3
  2897  03D5  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2898  03D6  0860               	movf	??_USBDeviceTasks^(0+384),w
  2899  03D7  0022               	movlb	2	; select bank2
  2900  03D8  07EF               	addwf	USBDeviceTasks@i^(0+256),f
  2901  03D9  3004               	movlw	4
  2902  03DA  026F               	subwf	USBDeviceTasks@i^(0+256),w
  2903  03DB  1C03               	skipc
  2904  03DC  2B8C               	goto	l446
  2905  03DD                     l445:	
  2906                           
  2907                           ;usb_device.c: 822: }
  2908                           ;usb_device.c: 823: }
  2909                           ;usb_device.c: 824: }
  2910                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  2911  03DD  0020               	movlb	0	; select bank0
  2912  03DE  1112               	bcf	18,2	;volatile
  2913  03DF  0008               	return
  2914  03E0                     __end_of_USBDeviceTasks:	
  2915                           
  2916                           	psect	text3
  2917  11A7                     __ptext3:	
  2918 ;; *************** function _USBWakeFromSuspend *****************
  2919 ;; Defined at:
  2920 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;Total ram usage:        1 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:   14
  2941 ;; This function calls:
  2942 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2943 ;; This function is called by:
  2944 ;;		_USBDeviceTasks
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _USBWakeFromSuspend
  2950  11A7                     _USBWakeFromSuspend:	
  2951                           
  2952                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  2953                           
  2954                           ;incstack = 0
  2955 ;; hardware stack exceeded
  2956                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2957  11A7  0022               	movlb	2	; select bank2
  2958  11A8  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
  2959                           
  2960                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  2961  11A9  3074               	movlw	116
  2962  11AA  0021               	movlb	1	; select bank1
  2963  11AB  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2964  11AC  3000               	movlw	0
  2965  11AD  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2966  11AE  3000               	movlw	0
  2967  11AF  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2968  11B0  3000               	movlw	0
  2969  11B1  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2970  11B2  3000               	movlw	0
  2971  11B3  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2972  11B4  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  2973  11B5  3192  2266  3191   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2974                           
  2975                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  2976  11B8  003D               	movlb	29	; select bank29
  2977  11B9  108E               	bcf	14,1	;volatile
  2978                           
  2979                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  2980  11BA  1112               	bcf	18,2	;volatile
  2981  11BB                     l6595:	
  2982                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  2983                           
  2984  11BB  1D10               	btfss	16,2	;volatile
  2985  11BC  29C4               	goto	l6597
  2986                           
  2987                           ;usb_device.c: 2343: {
  2988                           ;usb_device.c: 2344: (UIR &= 0xFB);
  2989  11BD  30FB               	movlw	251
  2990  11BE  0021               	movlb	1	; select bank1
  2991  11BF  00C2               	movwf	??_USBWakeFromSuspend^(0+128)
  2992  11C0  0842               	movf	??_USBWakeFromSuspend^(0+128),w
  2993  11C1  003D               	movlb	29	; select bank29
  2994  11C2  0590               	andwf	16,f	;volatile
  2995  11C3  29BB               	goto	l6595
  2996  11C4                     l6597:	
  2997                           
  2998                           ;usb_device.c: 2345: }
  2999                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  3000  11C4  0022               	movlb	2	; select bank2
  3001  11C5  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  3002  11C6  0008               	return
  3003  11C7                     __end_of_USBWakeFromSuspend:	
  3004                           
  3005                           	psect	text4
  3006  1148                     __ptext4:	
  3007 ;; *************** function _USBSuspend *****************
  3008 ;; Defined at:
  3009 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3025 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3026 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3027 ;;Total ram usage:        1 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:   14
  3030 ;; This function calls:
  3031 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3032 ;; This function is called by:
  3033 ;;		_USBDeviceTasks
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function _USBSuspend
  3039  1148                     _USBSuspend:	
  3040                           
  3041                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  3042                           
  3043                           ;incstack = 0
  3044 ;; hardware stack exceeded
  3045                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3046  1148  003D               	movlb	29	; select bank29
  3047  1149  1512               	bsf	18,2	;volatile
  3048                           
  3049                           ;usb_device.c: 2271: (UIR &= 0xEF);
  3050  114A  30EF               	movlw	239
  3051  114B  0021               	movlb	1	; select bank1
  3052  114C  00C2               	movwf	??_USBSuspend^(0+128)
  3053  114D  0842               	movf	??_USBSuspend^(0+128),w
  3054  114E  003D               	movlb	29	; select bank29
  3055  114F  0590               	andwf	16,f	;volatile
  3056                           
  3057                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  3058  1150  148E               	bsf	14,1	;volatile
  3059                           
  3060                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  3061  1151  3001               	movlw	1
  3062  1152  0021               	movlb	1	; select bank1
  3063  1153  00C2               	movwf	??_USBSuspend^(0+128)
  3064  1154  0842               	movf	??_USBSuspend^(0+128),w
  3065  1155  0022               	movlb	2	; select bank2
  3066  1156  00CD               	movwf	_USBBusIsSuspended^(0+256)	;volatile
  3067                           
  3068                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  3069  1157  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  3070                           
  3071                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  3072  1158  3075               	movlw	117
  3073  1159  0021               	movlb	1	; select bank1
  3074  115A  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3075  115B  3000               	movlw	0
  3076  115C  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  3077  115D  3000               	movlw	0
  3078  115E  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3079  115F  3000               	movlw	0
  3080  1160  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3081  1161  3000               	movlw	0
  3082  1162  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3083  1163  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3084  1164  3192  2266         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3085  1166  0008               	return
  3086  1167                     __end_of_USBSuspend:	
  3087                           
  3088                           	psect	text5
  3089  120F                     __ptext5:	
  3090 ;; *************** function _USBStallHandler *****************
  3091 ;; Defined at:
  3092 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3108 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3109 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3110 ;;Total ram usage:        1 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:   10
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_USBDeviceTasks
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           
  3121                           ;psect for function _USBStallHandler
  3122  120F                     _USBStallHandler:	
  3123                           
  3124                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  3125                           
  3126                           ;incstack = 0
  3127                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  3128  120F  003D               	movlb	29	; select bank29
  3129  1210  1C18               	btfss	24,0	;volatile
  3130  1211  2A2F               	goto	l6629
  3131                           
  3132                           ;usb_device.c: 2215: {
  3133                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  3134  1212  0021               	movlb	1	; select bank1
  3135  1213  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3136  1214  0086               	movwf	6
  3137  1215  0187               	clrf	7
  3138  1216  3080               	movlw	128
  3139  1217  0601               	xorwf	1,w
  3140  1218  1D03               	btfss	3,2
  3141  1219  2A2D               	goto	l6627
  3142  121A  084D               	movf	_pBDTEntryIn^(0+128),w
  3143  121B  0086               	movwf	6
  3144  121C  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3145  121D  0087               	movwf	7
  3146  121E  3084               	movlw	132
  3147  121F  0601               	xorwf	1,w
  3148  1220  1D03               	btfss	3,2
  3149  1221  2A2D               	goto	l6627
  3150                           
  3151                           ;usb_device.c: 2218: {
  3152                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3153  1222  300C               	movlw	12
  3154  1223  00AE               	movwf	??_USBStallHandler^(0+128)
  3155  1224  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3156  1225  0086               	movwf	6
  3157  1226  0187               	clrf	7
  3158  1227  082E               	movf	??_USBStallHandler^(0+128),w
  3159  1228  0081               	movwf	1
  3160                           
  3161                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  3162  1229  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3163  122A  0086               	movwf	6
  3164  122B  0187               	clrf	7
  3165  122C  1781               	bsf	1,7
  3166  122D                     l6627:	
  3167                           
  3168                           ;usb_device.c: 2222: }
  3169                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  3170  122D  003D               	movlb	29	; select bank29
  3171  122E  1018               	bcf	24,0	;volatile
  3172  122F                     l6629:	
  3173                           
  3174                           ;usb_device.c: 2224: }
  3175                           ;usb_device.c: 2226: (UIR &= 0xDF);
  3176  122F  30DF               	movlw	223
  3177  1230  0021               	movlb	1	; select bank1
  3178  1231  00AE               	movwf	??_USBStallHandler^(0+128)
  3179  1232  082E               	movf	??_USBStallHandler^(0+128),w
  3180  1233  003D               	movlb	29	; select bank29
  3181  1234  0590               	andwf	16,f	;volatile
  3182  1235  0008               	return
  3183  1236                     __end_of_USBStallHandler:	
  3184                           
  3185                           	psect	text6
  3186  110D                     __ptext6:	
  3187 ;; *************** function _USBIncrement1msInternalTimers *****************
  3188 ;; Defined at:
  3189 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, status,0
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3205 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3206 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3207 ;;Total ram usage:        1 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:   10
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_USBDeviceTasks
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _USBIncrement1msInternalTimers
  3219  110D                     _USBIncrement1msInternalTimers:	
  3220                           
  3221                           ;usb_device.c: 3033: USB1msTickCount++;
  3222                           
  3223                           ;incstack = 0
  3224                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  3225  110D  3001               	movlw	1
  3226  110E  0022               	movlb	2	; select bank2
  3227  110F  07B0               	addwf	_USB1msTickCount^(0+256),f	;volatile
  3228  1110  3000               	movlw	0
  3229  1111  3DB1               	addwfc	(_USB1msTickCount+1)^(0+256),f	;volatile
  3230  1112  3000               	movlw	0
  3231  1113  3DB2               	addwfc	(_USB1msTickCount+2)^(0+256),f	;volatile
  3232  1114  3000               	movlw	0
  3233  1115  3DB3               	addwfc	(_USB1msTickCount+3)^(0+256),f	;volatile
  3234                           
  3235                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  3236  1116  084D               	movf	_USBBusIsSuspended^(0+256),w	;volatile
  3237  1117  1D03               	btfss	3,2
  3238  1118  0008               	return
  3239                           
  3240                           ;usb_device.c: 3035: {
  3241                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  3242  1119  3001               	movlw	1
  3243  111A  0021               	movlb	1	; select bank1
  3244  111B  00AE               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  3245  111C  082E               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  3246  111D  0022               	movlb	2	; select bank2
  3247  111E  07C6               	addwf	_USBTicksSinceSuspendEnd^(0+256),f	;volatile
  3248                           
  3249                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  3250  111F  0846               	movf	_USBTicksSinceSuspendEnd^(0+256),w	;volatile
  3251  1120  1D03               	btfss	3,2
  3252  1121  0008               	return
  3253                           
  3254                           ;usb_device.c: 3039: {
  3255                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  3256  1122  30FF               	movlw	255
  3257  1123  0021               	movlb	1	; select bank1
  3258  1124  00AE               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  3259  1125  082E               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  3260  1126  0022               	movlb	2	; select bank2
  3261  1127  00C6               	movwf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  3262  1128  0008               	return
  3263  1129                     __end_of_USBIncrement1msInternalTimers:	
  3264                           
  3265                           	psect	text7
  3266  15D5                     __ptext7:	
  3267 ;; *************** function _USBCtrlEPService *****************
  3268 ;; Defined at:
  3269 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3285 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;Total ram usage:        3 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:   17
  3290 ;; This function calls:
  3291 ;;		_USBCtrlTrfInHandler
  3292 ;;		_USBCtrlTrfOutHandler
  3293 ;;		_USBCtrlTrfSetupHandler
  3294 ;; This function is called by:
  3295 ;;		_USBDeviceTasks
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           
  3300                           ;psect for function _USBCtrlEPService
  3301  15D5                     _USBCtrlEPService:	
  3302                           
  3303                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  3304                           
  3305                           ;incstack = 0
  3306 ;; hardware stack exceeded
  3307                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3308  15D5  302D               	movlw	45
  3309  15D6  0022               	movlb	2	; select bank2
  3310  15D7  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3311  15D8  086C               	movf	??_USBCtrlEPService^(0+256),w
  3312  15D9  00CB               	movwf	_USBStatusStageTimeoutCounter^(0+256)	;volatile
  3313                           
  3314                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  3315  15DA  0021               	movlb	1	; select bank1
  3316  15DB  0860               	movf	_USTATcopy^(0+128),w	;volatile
  3317  15DC  39FD               	andlw	253
  3318  15DD  1D03               	btfss	3,2
  3319  15DE  2E23               	goto	l6649
  3320                           
  3321                           ;usb_device.c: 2383: {
  3322                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  3323  15DF  3660               	lsrf	_USTATcopy^(0+128),w	;volatile
  3324  15E0  393F               	andlw	63
  3325  15E1  0022               	movlb	2	; select bank2
  3326  15E2  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3327  15E3  3001               	movlw	1
  3328  15E4                     u6845:	
  3329  15E4  35EC               	lslf	??_USBCtrlEPService^(0+256),f
  3330  15E5  3EFF               	addlw	-1
  3331  15E6  1D03               	skipz
  3332  15E7  2DE4               	goto	u6845
  3333  15E8  356C               	lslf	??_USBCtrlEPService^(0+256),w
  3334  15E9  3E20               	addlw	32
  3335  15EA  00ED               	movwf	(??_USBCtrlEPService+1)^(0+256)
  3336  15EB  086D               	movf	(??_USBCtrlEPService+1)^(0+256),w
  3337  15EC  0021               	movlb	1	; select bank1
  3338  15ED  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  3339                           
  3340                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  3341  15EE  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3342  15EF  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  3343  15F0  39FF               	andlw	255
  3344  15F1  1D03               	skipz
  3345  15F2  3000               	movlw	0
  3346  15F3  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  3347                           
  3348                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  3349  15F4  3004               	movlw	4
  3350  15F5  0658               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  3351  15F6  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  3352  15F7  3000               	movlw	0
  3353  15F8  0659               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3354  15F9  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  3355                           
  3356                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  3357  15FA  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3358  15FB  0086               	movwf	6
  3359  15FC  0187               	clrf	7
  3360  15FD  0C01               	rrf	1,w
  3361  15FE  0C89               	rrf	9,f
  3362  15FF  390F               	andlw	15
  3363  1600  3A0D               	xorlw	13
  3364  1601  1D03               	skipz
  3365  1602  2E20               	goto	l6647
  3366                           
  3367                           ;usb_device.c: 2400: {
  3368                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  3369  1603  3050               	movlw	80
  3370  1604  0086               	movwf	6
  3371  1605  0187               	clrf	7
  3372  1606  0021               	movlb	1	; select bank1
  3373  1607  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3374  1608  3E02               	addlw	2
  3375  1609  0084               	movwf	4
  3376  160A  0185               	clrf	5
  3377  160B  3F00               	moviw [0]fsr0
  3378  160C  0022               	movlb	2	; select bank2
  3379  160D  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3380  160E  3F01               	moviw [1]fsr0
  3381  160F  00ED               	movwf	(??_USBCtrlEPService^(0+256)+1)
  3382  1610  086C               	movf	??_USBCtrlEPService^(0+256),w
  3383  1611  0084               	movwf	4
  3384  1612  086D               	movf	(??_USBCtrlEPService+1)^(0+256),w
  3385  1613  0085               	movwf	5
  3386  1614  3008               	movlw	8
  3387  1615  00EE               	movwf	(??_USBCtrlEPService+2)^(0+256)
  3388  1616  086E               	movf	(??_USBCtrlEPService+2)^(0+256),w
  3389  1617  1903               	skipnz
  3390  1618  2E1D               	goto	l6645
  3391  1619                     u686m0:	
  3392  1619  0012               	moviw fsr0++
  3393  161A  001E               	movwi fsr1++
  3394  161B  0BEE               	decfsz	(??_USBCtrlEPService+2)^(0+256),f
  3395  161C  2E19               	goto	u686m0
  3396  161D                     l6645:	
  3397                           
  3398                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  3399  161D  3194  248A         	fcall	_USBCtrlTrfSetupHandler
  3400                           
  3401                           ;usb_device.c: 2409: }
  3402  161F  0008               	return
  3403  1620                     l6647:	
  3404                           
  3405                           ;usb_device.c: 2410: else
  3406                           ;usb_device.c: 2411: {
  3407                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  3408  1620  3188  2001         	fcall	_USBCtrlTrfOutHandler
  3409                           
  3410                           ;usb_device.c: 2414: }
  3411                           ;usb_device.c: 2415: }
  3412  1622  0008               	return
  3413  1623                     l6649:	
  3414                           
  3415                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  3416  1623  30FD               	movlw	253
  3417  1624  0021               	movlb	1	; select bank1
  3418  1625  0560               	andwf	_USTATcopy^(0+128),w	;volatile
  3419  1626  0022               	movlb	2	; select bank2
  3420  1627  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3421  1628  3004               	movlw	4
  3422  1629  066C               	xorwf	??_USBCtrlEPService^(0+256),w
  3423  162A  1D03               	btfss	3,2
  3424  162B  0008               	return
  3425                           
  3426                           ;usb_device.c: 2417: {
  3427                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  3428  162C  3189  2161         	fcall	_USBCtrlTrfInHandler
  3429  162E  0008               	return
  3430  162F                     __end_of_USBCtrlEPService:	
  3431                           
  3432                           	psect	text8
  3433  148A                     __ptext8:	
  3434 ;; *************** function _USBCtrlTrfSetupHandler *****************
  3435 ;; Defined at:
  3436 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3452 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;Total ram usage:        1 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:   16
  3457 ;; This function calls:
  3458 ;;		_USBCheckStdRequest
  3459 ;;		_USBCtrlEPServiceComplete
  3460 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3461 ;; This function is called by:
  3462 ;;		_USBCtrlEPService
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           
  3467                           ;psect for function _USBCtrlTrfSetupHandler
  3468  148A                     _USBCtrlTrfSetupHandler:	
  3469                           
  3470                           ;usb_device.c: 2470: shortPacketStatus = 0;
  3471                           
  3472                           ;incstack = 0
  3473 ;; hardware stack exceeded
  3474                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3475  148A  0021               	movlb	1	; select bank1
  3476  148B  01DD               	clrf	_shortPacketStatus^(0+128)	;volatile
  3477                           
  3478                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  3479  148C  01DA               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
  3480                           
  3481                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  3482  148D  0022               	movlb	2	; select bank2
  3483  148E  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3484                           
  3485                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  3486  148F  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3487                           
  3488                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  3489  1490  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  3490                           
  3491                           ;usb_device.c: 2475: controlTransferState = 0;
  3492  1491  0021               	movlb	1	; select bank1
  3493  1492  01DC               	clrf	_controlTransferState^(0+128)	;volatile
  3494                           
  3495                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  3496  1493  307F               	movlw	127
  3497  1494  00C5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  3498  1495  084D               	movf	_pBDTEntryIn^(0+128),w
  3499  1496  0086               	movwf	6
  3500  1497  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3501  1498  0087               	movwf	7
  3502  1499  0845               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  3503  149A  0581               	andwf	1,f
  3504                           
  3505                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  3506  149B  3004               	movlw	4
  3507  149C  064D               	xorwf	_pBDTEntryIn^(0+128),w
  3508  149D  00CD               	movwf	_pBDTEntryIn^(0+128)
  3509  149E  3000               	movlw	0
  3510  149F  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
  3511  14A0  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  3512                           
  3513                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  3514  14A1  307F               	movlw	127
  3515  14A2  00C5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  3516  14A3  084D               	movf	_pBDTEntryIn^(0+128),w
  3517  14A4  0086               	movwf	6
  3518  14A5  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3519  14A6  0087               	movwf	7
  3520  14A7  0845               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  3521  14A8  0581               	andwf	1,f
  3522                           
  3523                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  3524  14A9  3004               	movlw	4
  3525  14AA  064D               	xorwf	_pBDTEntryIn^(0+128),w
  3526  14AB  00CD               	movwf	_pBDTEntryIn^(0+128)
  3527  14AC  3000               	movlw	0
  3528  14AD  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
  3529  14AE  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  3530                           
  3531                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  3532  14AF  307F               	movlw	127
  3533  14B0  00C5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  3534  14B1  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3535  14B2  0086               	movwf	6
  3536  14B3  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3537  14B4  0087               	movwf	7
  3538  14B5  0845               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  3539  14B6  0581               	andwf	1,f
  3540                           
  3541                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  3542  14B7  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  3543                           
  3544                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  3545  14B8  01D6               	clrf	(_inPipes^(0+128)+3)	;volatile
  3546  14B9  01D7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  3547                           
  3548                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  3549  14BA  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
  3550                           
  3551                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  3552  14BB  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
  3553  14BC  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  3554                           
  3555                           ;usb_device.c: 2500: USBCheckStdRequest();
  3556  14BD  3188  2038  3194   	fcall	_USBCheckStdRequest
  3557                           
  3558                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  3559  14C0  3000               	movlw	0
  3560  14C1  0021               	movlb	1	; select bank1
  3561  14C2  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  3562  14C3  3003               	movlw	3
  3563  14C4  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3564  14C5  3000               	movlw	0
  3565  14C6  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3566  14C7  3000               	movlw	0
  3567  14C8  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3568  14C9  3000               	movlw	0
  3569  14CA  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3570  14CB  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3571  14CC  3192  2266  3194   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3572                           
  3573                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  3574  14CF  318E  26D1         	fcall	_USBCtrlEPServiceComplete
  3575  14D1  0008               	return
  3576  14D2                     __end_of_USBCtrlTrfSetupHandler:	
  3577                           
  3578                           	psect	text9
  3579  0ED1                     __ptext9:	
  3580 ;; *************** function _USBCtrlEPServiceComplete *****************
  3581 ;; Defined at:
  3582 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3598 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3599 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3600 ;;Total ram usage:        2 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:   12
  3603 ;; This function calls:
  3604 ;;		_USBCtrlEPAllowDataStage
  3605 ;;		_USBCtrlEPAllowStatusStage
  3606 ;; This function is called by:
  3607 ;;		_USBCtrlTrfSetupHandler
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           
  3612                           ;psect for function _USBCtrlEPServiceComplete
  3613  0ED1                     _USBCtrlEPServiceComplete:	
  3614                           
  3615                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  3616                           
  3617                           ;incstack = 0
  3618 ;; hardware stack exceeded
  3619                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3620  0ED1  003D               	movlb	29	; select bank29
  3621  0ED2  120E               	bcf	14,4	;volatile
  3622                           
  3623                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  3624  0ED3  0021               	movlb	1	; select bank1
  3625  0ED4  1BD5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  3626  0ED5  2F17               	goto	l508
  3627                           
  3628                           ;usb_device.c: 1629: {
  3629                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  3630  0ED6  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
  3631  0ED7  2EE6               	goto	l6117
  3632                           
  3633                           ;usb_device.c: 1631: {
  3634                           ;usb_device.c: 1632: controlTransferState = 2;
  3635  0ED8  3002               	movlw	2
  3636  0ED9  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3637  0EDA  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3638  0EDB  00DC               	movwf	_controlTransferState^(0+128)	;volatile
  3639                           
  3640                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  3641  0EDC  0022               	movlb	2	; select bank2
  3642  0EDD  0847               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
  3643  0EDE  1D03               	btfss	3,2
  3644  0EDF  2EE2               	goto	l6113
  3645                           
  3646                           ;usb_device.c: 1644: {
  3647                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  3648  0EE0  3196  26E5         	fcall	_USBCtrlEPAllowDataStage
  3649  0EE2                     l6113:	
  3650                           
  3651                           ;usb_device.c: 1646: }
  3652                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  3653  0EE2  0022               	movlb	2	; select bank2
  3654  0EE3  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3655                           
  3656                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  3657  0EE4  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3658                           
  3659                           ;usb_device.c: 1652: }
  3660  0EE5  0008               	return
  3661  0EE6                     l6117:	
  3662                           
  3663                           ;usb_device.c: 1653: else
  3664                           ;usb_device.c: 1654: {
  3665                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 16;
  3666  0EE6  0021               	movlb	1	; select bank1
  3667  0EE7  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3668  0EE8  3E01               	addlw	1
  3669  0EE9  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3670  0EEA  3000               	movlw	0
  3671  0EEB  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3672  0EEC  00B4               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  3673  0EED  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3674  0EEE  0086               	movwf	6
  3675  0EEF  0834               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  3676  0EF0  0087               	movwf	7
  3677  0EF1  3010               	movlw	16
  3678  0EF2  0081               	movwf	1
  3679                           
  3680                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3681  0EF3  3050               	movlw	80
  3682  0EF4  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3683  0EF5  3000               	movlw	0
  3684  0EF6  00B4               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  3685  0EF7  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3686  0EF8  0086               	movwf	6
  3687  0EF9  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3688  0EFA  0087               	movwf	7
  3689  0EFB  3142               	addfsr 1,2
  3690  0EFC  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3691  0EFD  3FC0               	movwi [0]fsr1
  3692  0EFE  0834               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  3693  0EFF  3FC1               	movwi [1]fsr1
  3694                           
  3695                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3696  0F00  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3697  0F01  0086               	movwf	6
  3698  0F02  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3699  0F03  0087               	movwf	7
  3700  0F04  300C               	movlw	12
  3701  0F05  0081               	movwf	1
  3702                           
  3703                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3704  0F06  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3705  0F07  0086               	movwf	6
  3706  0F08  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3707  0F09  0087               	movwf	7
  3708  0F0A  1781               	bsf	1,7
  3709                           
  3710                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  3711  0F0B  084D               	movf	_pBDTEntryIn^(0+128),w
  3712  0F0C  0086               	movwf	6
  3713  0F0D  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3714  0F0E  0087               	movwf	7
  3715  0F0F  3004               	movlw	4
  3716  0F10  0081               	movwf	1
  3717                           
  3718                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3719  0F11  084D               	movf	_pBDTEntryIn^(0+128),w
  3720  0F12  0086               	movwf	6
  3721  0F13  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3722  0F14  0087               	movwf	7
  3723  0F15  1781               	bsf	1,7
  3724                           
  3725                           ;usb_device.c: 1665: }
  3726                           ;usb_device.c: 1666: }
  3727  0F16  0008               	return
  3728  0F17                     l508:	
  3729                           
  3730                           ;usb_device.c: 1667: else
  3731                           ;usb_device.c: 1668: {
  3732                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  3733  0F17  0020               	movlb	0	; select bank0
  3734  0F18  1FD0               	btfss	80,7	;volatile
  3735  0F19  2F30               	goto	l6143
  3736                           
  3737                           ;usb_device.c: 1670: {
  3738                           ;usb_device.c: 1671: controlTransferState = 1;
  3739  0F1A  3001               	movlw	1
  3740  0F1B  0021               	movlb	1	; select bank1
  3741  0F1C  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3742  0F1D  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3743  0F1E  00DC               	movwf	_controlTransferState^(0+128)	;volatile
  3744                           
  3745                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  3746  0F1F  0022               	movlb	2	; select bank2
  3747  0F20  0848               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
  3748  0F21  1D03               	btfss	3,2
  3749  0F22  2F26               	goto	l6135
  3750                           
  3751                           ;usb_device.c: 1686: {
  3752                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  3753  0F23  3196  26E5  318E   	fcall	_USBCtrlEPAllowDataStage
  3754  0F26                     l6135:	
  3755                           
  3756                           ;usb_device.c: 1688: }
  3757                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  3758  0F26  0022               	movlb	2	; select bank2
  3759  0F27  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3760                           
  3761                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  3762  0F28  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3763                           
  3764                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  3765  0F29  0021               	movlb	1	; select bank1
  3766  0F2A  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  3767  0F2B  1D03               	btfss	3,2
  3768  0F2C  0008               	return
  3769                           
  3770                           ;usb_device.c: 1713: {
  3771                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  3772  0F2D  318A  22AD         	fcall	_USBCtrlEPAllowStatusStage
  3773                           
  3774                           ;usb_device.c: 1715: }
  3775                           ;usb_device.c: 1716: }
  3776  0F2F  0008               	return
  3777  0F30                     l6143:	
  3778                           
  3779                           ;usb_device.c: 1717: else
  3780                           ;usb_device.c: 1718: {
  3781                           ;usb_device.c: 1729: controlTransferState = 2;
  3782  0F30  3002               	movlw	2
  3783  0F31  0021               	movlb	1	; select bank1
  3784  0F32  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3785  0F33  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3786  0F34  00DC               	movwf	_controlTransferState^(0+128)	;volatile
  3787                           
  3788                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 16;
  3789  0F35  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3790  0F36  3E01               	addlw	1
  3791  0F37  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3792  0F38  3000               	movlw	0
  3793  0F39  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3794  0F3A  00B4               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  3795  0F3B  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3796  0F3C  0086               	movwf	6
  3797  0F3D  0834               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  3798  0F3E  0087               	movwf	7
  3799  0F3F  3010               	movlw	16
  3800  0F40  0081               	movwf	1
  3801                           
  3802                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3803  0F41  3050               	movlw	80
  3804  0F42  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3805  0F43  3000               	movlw	0
  3806  0F44  00B4               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  3807  0F45  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3808  0F46  0086               	movwf	6
  3809  0F47  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3810  0F48  0087               	movwf	7
  3811  0F49  3142               	addfsr 1,2
  3812  0F4A  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3813  0F4B  3FC0               	movwi [0]fsr1
  3814  0F4C  0834               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  3815  0F4D  3FC1               	movwi [1]fsr1
  3816                           
  3817                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  3818  0F4E  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3819  0F4F  0086               	movwf	6
  3820  0F50  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3821  0F51  0087               	movwf	7
  3822  0F52  3004               	movlw	4
  3823  0F53  0081               	movwf	1
  3824                           
  3825                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3826  0F54  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3827  0F55  0086               	movwf	6
  3828  0F56  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3829  0F57  0087               	movwf	7
  3830  0F58  1781               	bsf	1,7
  3831                           
  3832                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  3833  0F59  0022               	movlb	2	; select bank2
  3834  0F5A  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3835                           
  3836                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  3837  0F5B  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3838                           
  3839                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  3840  0F5C  0021               	movlb	1	; select bank1
  3841  0F5D  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  3842  0F5E  1D03               	btfss	3,2
  3843  0F5F  0008               	return
  3844                           
  3845                           ;usb_device.c: 1741: {
  3846                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  3847  0F60  318A  22AD         	fcall	_USBCtrlEPAllowStatusStage
  3848  0F62  0008               	return
  3849  0F63                     __end_of_USBCtrlEPServiceComplete:	
  3850                           
  3851                           	psect	text10
  3852  16E5                     __ptext10:	
  3853 ;; *************** function _USBCtrlEPAllowDataStage *****************
  3854 ;; Defined at:
  3855 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;		None
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3871 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3872 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3873 ;;Total ram usage:        2 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:   11
  3876 ;; This function calls:
  3877 ;;		_USBCtrlTrfTxService
  3878 ;; This function is called by:
  3879 ;;		_USBCtrlEPServiceComplete
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           
  3884                           ;psect for function _USBCtrlEPAllowDataStage
  3885  16E5                     _USBCtrlEPAllowDataStage:	
  3886                           
  3887                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  3888                           
  3889                           ;incstack = 0
  3890 ;; hardware stack exceeded
  3891                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3892  16E5  0022               	movlb	2	; select bank2
  3893  16E6  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3894                           
  3895                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  3896  16E7  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3897                           
  3898                           ;usb_device.c: 1493: if(controlTransferState == 2)
  3899  16E8  3002               	movlw	2
  3900  16E9  0021               	movlb	1	; select bank1
  3901  16EA  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
  3902  16EB  1D03               	btfss	3,2
  3903  16EC  2F12               	goto	l5877
  3904                           
  3905                           ;usb_device.c: 1494: {
  3906                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 16;
  3907  16ED  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3908  16EE  3E01               	addlw	1
  3909  16EF  00B1               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  3910  16F0  3000               	movlw	0
  3911  16F1  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3912  16F2  00B2               	movwf	(??_USBCtrlEPAllowDataStage+1)^(0+128)
  3913  16F3  0831               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  3914  16F4  0086               	movwf	6
  3915  16F5  0832               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
  3916  16F6  0087               	movwf	7
  3917  16F7  3010               	movlw	16
  3918  16F8  0081               	movwf	1
  3919                           
  3920                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3921  16F9  3060               	movlw	96
  3922  16FA  00B1               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  3923  16FB  3000               	movlw	0
  3924  16FC  00B2               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  3925  16FD  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3926  16FE  0086               	movwf	6
  3927  16FF  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3928  1700  0087               	movwf	7
  3929  1701  3142               	addfsr 1,2
  3930  1702  0831               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  3931  1703  3FC0               	movwi [0]fsr1
  3932  1704  0832               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  3933  1705  3FC1               	movwi [1]fsr1
  3934                           
  3935                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  3936  1706  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3937  1707  0086               	movwf	6
  3938  1708  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3939  1709  0087               	movwf	7
  3940  170A  3048               	movlw	72
  3941  170B  0081               	movwf	1
  3942                           
  3943                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3944  170C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3945  170D  0086               	movwf	6
  3946  170E  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3947  170F  0087               	movwf	7
  3948  1710  1781               	bsf	1,7
  3949                           
  3950                           ;usb_device.c: 1500: }
  3951  1711  0008               	return
  3952  1712                     l5877:	
  3953                           
  3954                           ;usb_device.c: 1501: else
  3955                           ;usb_device.c: 1502: {
  3956                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  3957  1712  0857               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  3958  1713  0020               	movlb	0	; select bank0
  3959  1714  0257               	subwf	87,w	;volatile
  3960  1715  1D03               	skipz
  3961  1716  2F1B               	goto	u5925
  3962  1717  0021               	movlb	1	; select bank1
  3963  1718  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
  3964  1719  0020               	movlb	0	; select bank0
  3965  171A  0256               	subwf	86,w	;volatile
  3966  171B                     u5925:	
  3967  171B  1803               	skipnc
  3968  171C  2F24               	goto	l5881
  3969                           
  3970                           ;usb_device.c: 1506: {
  3971                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  3972  171D  0857               	movf	87,w	;volatile
  3973  171E  0021               	movlb	1	; select bank1
  3974  171F  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  3975  1720  0020               	movlb	0	; select bank0
  3976  1721  0856               	movf	86,w	;volatile
  3977  1722  0021               	movlb	1	; select bank1
  3978  1723  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  3979  1724                     l5881:	
  3980                           
  3981                           ;usb_device.c: 1508: }
  3982                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  3983  1724  318A  223B         	fcall	_USBCtrlTrfTxService
  3984                           
  3985                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3986  1726  3060               	movlw	96
  3987  1727  0021               	movlb	1	; select bank1
  3988  1728  00B1               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  3989  1729  3000               	movlw	0
  3990  172A  00B2               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  3991  172B  084D               	movf	_pBDTEntryIn^(0+128),w
  3992  172C  0086               	movwf	6
  3993  172D  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3994  172E  0087               	movwf	7
  3995  172F  3142               	addfsr 1,2
  3996  1730  0831               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  3997  1731  3FC0               	movwi [0]fsr1
  3998  1732  0832               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  3999  1733  3FC1               	movwi [1]fsr1
  4000                           
  4001                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  4002  1734  084D               	movf	_pBDTEntryIn^(0+128),w
  4003  1735  0086               	movwf	6
  4004  1736  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  4005  1737  0087               	movwf	7
  4006  1738  3048               	movlw	72
  4007  1739  0081               	movwf	1
  4008                           
  4009                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4010  173A  084D               	movf	_pBDTEntryIn^(0+128),w
  4011  173B  0086               	movwf	6
  4012  173C  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  4013  173D  0087               	movwf	7
  4014  173E  1781               	bsf	1,7
  4015  173F  0008               	return
  4016  1740                     __end_of_USBCtrlEPAllowDataStage:	
  4017                           
  4018                           	psect	text11
  4019  0838                     __ptext11:	
  4020 ;; *************** function _USBCheckStdRequest *****************
  4021 ;; Defined at:
  4022 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4038 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4039 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4040 ;;Total ram usage:        1 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:   15
  4043 ;; This function calls:
  4044 ;;		_USBStdFeatureReqHandler
  4045 ;;		_USBStdGetDscHandler
  4046 ;;		_USBStdGetStatusHandler
  4047 ;;		_USBStdSetCfgHandler
  4048 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4049 ;; This function is called by:
  4050 ;;		_USBCtrlTrfSetupHandler
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           
  4055                           ;psect for function _USBCheckStdRequest
  4056  0838                     _USBCheckStdRequest:	
  4057                           
  4058                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  4059                           
  4060                           ;incstack = 0
  4061 ;; hardware stack exceeded
  4062                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4063  0838  0020               	movlb	0	; select bank0
  4064  0839  0E50               	swapf	80,w	;volatile
  4065  083A  0C89               	rrf	9,f
  4066  083B  3903               	andlw	3
  4067  083C  3A00               	xorlw	0
  4068  083D  1D03               	btfss	3,2
  4069  083E  0008               	return
  4070  083F  288C               	goto	l6237
  4071  0840                     l635:	
  4072                           ;usb_device.c: 2691: {
  4073                           ;usb_device.c: 2692: case 5:
  4074                           
  4075                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  4076                           
  4077                           
  4078                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  4079  0840  0021               	movlb	1	; select bank1
  4080  0841  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4081                           
  4082                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  4083  0842  3008               	movlw	8
  4084  0843  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4085  0844  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4086  0845  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  4087                           
  4088                           ;usb_device.c: 2696: break;
  4089  0846  0008               	return
  4090  0847                     l6207:	
  4091                           ;usb_device.c: 2697: case 6:
  4092                           
  4093                           
  4094                           ;usb_device.c: 2698: USBStdGetDscHandler();
  4095  0847  318B  23A0         	fcall	_USBStdGetDscHandler
  4096                           
  4097                           ;usb_device.c: 2699: break;
  4098  0849  0008               	return
  4099  084A                     l6209:	
  4100                           ;usb_device.c: 2700: case 9:
  4101                           
  4102                           
  4103                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  4104  084A  318D  2520         	fcall	_USBStdSetCfgHandler
  4105                           
  4106                           ;usb_device.c: 2702: break;
  4107  084C  0008               	return
  4108  084D                     l6211:	
  4109                           ;usb_device.c: 2703: case 8:
  4110                           
  4111                           
  4112                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  4113  084D  30E1               	movlw	low _USBActiveConfiguration
  4114  084E  0021               	movlb	1	; select bank1
  4115  084F  00D3               	movwf	_inPipes^(0+128)	;volatile
  4116  0850  3000               	movlw	high _USBActiveConfiguration
  4117  0851  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4118                           
  4119                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4120  0852  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4121                           
  4122                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  4123  0853  3001               	movlw	1
  4124  0854  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4125  0855  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4126  0856  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4127                           
  4128                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  4129  0857  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4130                           
  4131                           ;usb_device.c: 2708: break;
  4132  0858  0008               	return
  4133  0859                     l6219:	
  4134                           ;usb_device.c: 2709: case 0:
  4135                           
  4136                           
  4137                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  4138  0859  3195  257D         	fcall	_USBStdGetStatusHandler
  4139                           
  4140                           ;usb_device.c: 2711: break;
  4141  085B  0008               	return
  4142  085C                     l6221:	
  4143                           ;usb_device.c: 2712: case 1:
  4144                           
  4145                           
  4146                           ;usb_device.c: 2713: case 3:
  4147                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  4148  085C  3180  204D         	fcall	_USBStdFeatureReqHandler
  4149                           
  4150                           ;usb_device.c: 2715: break;
  4151  085E  0008               	return
  4152  085F                     l6223:	
  4153                           ;usb_device.c: 2716: case 10:
  4154                           
  4155                           
  4156                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  4157  085F  0020               	movlb	0	; select bank0
  4158  0860  0854               	movf	84,w	;volatile
  4159  0861  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  4160  0862  0021               	movlb	1	; select bank1
  4161  0863  00D3               	movwf	_inPipes^(0+128)	;volatile
  4162  0864  3001               	movlw	1
  4163  0865  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4164                           
  4165                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4166  0866  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4167                           
  4168                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  4169  0867  3001               	movlw	1
  4170  0868  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4171  0869  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4172  086A  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4173                           
  4174                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  4175  086B  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4176                           
  4177                           ;usb_device.c: 2721: break;
  4178  086C  0008               	return
  4179  086D                     l644:	
  4180                           ;usb_device.c: 2722: case 11:
  4181                           
  4182                           
  4183                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  4184  086D  0021               	movlb	1	; select bank1
  4185  086E  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4186                           
  4187                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  4188  086F  0020               	movlb	0	; select bank0
  4189  0870  0852               	movf	82,w	;volatile
  4190  0871  0021               	movlb	1	; select bank1
  4191  0872  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4192  0873  0020               	movlb	0	; select bank0
  4193  0874  0854               	movf	84,w	;volatile
  4194  0875  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  4195  0876  0086               	movwf	6
  4196  0877  3001               	movlw	1	; select bank2/3
  4197  0878  0087               	movwf	7
  4198  0879  0021               	movlb	1	; select bank1
  4199  087A  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4200  087B  0081               	movwf	1
  4201                           
  4202                           ;usb_device.c: 2725: break;
  4203  087C  0008               	return
  4204  087D                     l6233:	
  4205                           ;usb_device.c: 2726: case 7:
  4206                           
  4207                           
  4208                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  4209  087D  3000               	movlw	0
  4210  087E  0021               	movlb	1	; select bank1
  4211  087F  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4212  0880  3002               	movlw	2
  4213  0881  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4214  0882  3000               	movlw	0
  4215  0883  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4216  0884  3000               	movlw	0
  4217  0885  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4218  0886  3000               	movlw	0
  4219  0887  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4220  0888  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4221  0889  3192  2266         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4222                           
  4223                           ;usb_device.c: 2732: }
  4224                           
  4225                           ;usb_device.c: 2731: break;
  4226                           
  4227                           ;usb_device.c: 2730: default:
  4228                           
  4229                           ;usb_device.c: 2729: case 12:
  4230                           
  4231                           ;usb_device.c: 2728: break;
  4232  088B  0008               	return
  4233  088C                     l6237:	
  4234  088C  0020               	movlb	0	; select bank0
  4235  088D  0851               	movf	81,w	;volatile
  4236                           
  4237                           ; Switch size 1, requested type "space"
  4238                           ; Number of cases is 11, Range of values is 0 to 12
  4239                           ; switch strategies available:
  4240                           ; Name         Instructions Cycles
  4241                           ; direct_byte           32     6 (fixed)
  4242                           ; simple_byte           34    18 (average)
  4243                           ; jumptable            260     6 (fixed)
  4244                           ;	Chosen strategy is direct_byte
  4245  088E  0084               	movwf	4
  4246  088F  300D               	movlw	13
  4247  0890  0204               	subwf	4,w
  4248  0891  1803               	skipnc
  4249  0892  0008               	return
  4250  0893  3190               	movlp	high S7215
  4251  0894  3504               	lslf	4,w
  4252  0895  3E00               	addlw	low S7215
  4253  0896  0082               	movwf	2
  4254  0897                     l633:	
  4255  0897  0008               	return
  4256  0898                     __end_of_USBCheckStdRequest:	
  4257                           
  4258                           	psect	swtext1
  4259  1000                     __pswtext1:	
  4260  1000                     S7215:	
  4261  1000  3188  2859         	ljmp	l6219
  4262  1002  3188  285C         	ljmp	l6221
  4263  1004  3188  2897         	ljmp	l633
  4264  1006  3188  285C         	ljmp	l6221
  4265  1008  3188  2897         	ljmp	l633
  4266  100A  3188  2840         	ljmp	l635
  4267  100C  3188  2847         	ljmp	l6207
  4268  100E  3188  287D         	ljmp	l6233
  4269  1010  3188  284D         	ljmp	l6211
  4270  1012  3188  284A         	ljmp	l6209
  4271  1014  3188  285F         	ljmp	l6223
  4272  1016  3188  286D         	ljmp	l644
  4273  1018  3188  2897         	ljmp	l633
  4274                           
  4275                           	psect	text12
  4276  0D20                     __ptext12:	
  4277 ;; *************** function _USBStdSetCfgHandler *****************
  4278 ;; Defined at:
  4279 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;		None
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  p               2    0[BANK2 ] PTR unsigned char 
  4284 ;;		 -> UEP1(1), 
  4285 ;;  i               1    2[BANK2 ] unsigned char 
  4286 ;;  i               1    3[BANK2 ] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4297 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Totals:         0       0       1       4       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;Total ram usage:        5 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:   14
  4303 ;; This function calls:
  4304 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4305 ;;		_memset
  4306 ;; This function is called by:
  4307 ;;		_USBCheckStdRequest
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           
  4312                           ;psect for function _USBStdSetCfgHandler
  4313  0D20                     _USBStdSetCfgHandler:	
  4314                           
  4315                           ;usb_device.c: 1970: uint8_t i;
  4316                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  4317                           
  4318                           ;incstack = 0
  4319 ;; hardware stack exceeded
  4320                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4321  0D20  0021               	movlb	1	; select bank1
  4322  0D21  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4323                           
  4324                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  4325  0D22  300E               	movlw	14
  4326  0D23  0022               	movlb	2	; select bank2
  4327  0D24  00E8               	movwf	(USBStdSetCfgHandler@p+1)^(0+256)
  4328  0D25  3099               	movlw	153
  4329  0D26  00E7               	movwf	USBStdSetCfgHandler@p^(0+256)
  4330  0D27  01E9               	clrf	USBStdSetCfgHandler@i_2173^(0+256)
  4331  0D28  3002               	movlw	2
  4332  0D29  0269               	subwf	USBStdSetCfgHandler@i_2173^(0+256),w
  4333  0D2A  1803               	btfsc	3,0
  4334  0D2B  2D3F               	goto	l5905
  4335  0D2C                     l5897:	
  4336  0D2C  0867               	movf	USBStdSetCfgHandler@p^(0+256),w
  4337  0D2D  0086               	movwf	6
  4338  0D2E  0868               	movf	(USBStdSetCfgHandler@p+1)^(0+256),w
  4339  0D2F  0087               	movwf	7
  4340  0D30  0181               	clrf	1
  4341  0D31  3001               	movlw	1
  4342  0D32  07E7               	addwf	USBStdSetCfgHandler@p^(0+256),f
  4343  0D33  3000               	movlw	0
  4344  0D34  3DE8               	addwfc	(USBStdSetCfgHandler@p+1)^(0+256),f
  4345  0D35  3001               	movlw	1
  4346  0D36  0021               	movlb	1	; select bank1
  4347  0D37  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4348  0D38  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4349  0D39  0022               	movlb	2	; select bank2
  4350  0D3A  07E9               	addwf	USBStdSetCfgHandler@i_2173^(0+256),f
  4351  0D3B  3002               	movlw	2
  4352  0D3C  0269               	subwf	USBStdSetCfgHandler@i_2173^(0+256),w
  4353  0D3D  1C03               	skipc
  4354  0D3E  2D2C               	goto	l5897
  4355  0D3F                     l5905:	
  4356                           
  4357                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  4358  0D3F  3020               	movlw	32
  4359  0D40  0021               	movlb	1	; select bank1
  4360  0D41  00AE               	movwf	memset@p1^(0+128)
  4361  0D42  3000               	movlw	0
  4362  0D43  00AF               	movwf	(memset@p1+1)^(0+128)
  4363  0D44  3000               	movlw	0
  4364  0D45  00B0               	movwf	memset@c^(0+128)
  4365  0D46  00B1               	movwf	(memset@c+1)^(0+128)
  4366  0D47  3030               	movlw	48
  4367  0D48  00B2               	movwf	memset@n^(0+128)
  4368  0D49  3000               	movlw	0
  4369  0D4A  00B3               	movwf	(memset@n^(0+128)+1)
  4370  0D4B  3190  20BE  318D   	fcall	_memset
  4371                           
  4372                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  4373  0D4E  003D               	movlb	29	; select bank29
  4374  0D4F  170E               	bsf	14,6	;volatile
  4375                           
  4376                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  4377  0D50  0022               	movlb	2	; select bank2
  4378  0D51  01EA               	clrf	USBStdSetCfgHandler@i^(0+256)
  4379  0D52  3003               	movlw	3
  4380  0D53  026A               	subwf	USBStdSetCfgHandler@i^(0+256),w
  4381  0D54  1803               	btfsc	3,0
  4382  0D55  2D6C               	goto	l5921
  4383  0D56                     l5915:	
  4384                           
  4385                           ;usb_device.c: 1988: {
  4386                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  4387  0D56  086A               	movf	USBStdSetCfgHandler@i^(0+256),w
  4388  0D57  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4389  0D58  0086               	movwf	6
  4390  0D59  3001               	movlw	1	; select bank2/3
  4391  0D5A  0087               	movwf	7
  4392  0D5B  0181               	clrf	1
  4393                           
  4394                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  4395  0D5C  086A               	movf	USBStdSetCfgHandler@i^(0+256),w
  4396  0D5D  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4397  0D5E  0086               	movwf	6
  4398  0D5F  3001               	movlw	1	; select bank2/3
  4399  0D60  0087               	movwf	7
  4400  0D61  0181               	clrf	1
  4401  0D62  3001               	movlw	1
  4402  0D63  0021               	movlb	1	; select bank1
  4403  0D64  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4404  0D65  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4405  0D66  0022               	movlb	2	; select bank2
  4406  0D67  07EA               	addwf	USBStdSetCfgHandler@i^(0+256),f
  4407  0D68  3003               	movlw	3
  4408  0D69  026A               	subwf	USBStdSetCfgHandler@i^(0+256),w
  4409  0D6A  1C03               	skipc
  4410  0D6B  2D56               	goto	l5915
  4411  0D6C                     l5921:	
  4412                           
  4413                           ;usb_device.c: 1991: }
  4414                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  4415  0D6C  3065               	movlw	low _USBAlternateInterface
  4416  0D6D  0021               	movlb	1	; select bank1
  4417  0D6E  00AE               	movwf	memset@p1^(0+128)
  4418  0D6F  3001               	movlw	high _USBAlternateInterface
  4419  0D70  00AF               	movwf	(memset@p1+1)^(0+128)
  4420  0D71  3000               	movlw	0
  4421  0D72  00B0               	movwf	memset@c^(0+128)
  4422  0D73  00B1               	movwf	(memset@c+1)^(0+128)
  4423  0D74  3002               	movlw	2
  4424  0D75  00B2               	movwf	memset@n^(0+128)
  4425  0D76  3000               	movlw	0
  4426  0D77  00B3               	movwf	(memset@n^(0+128)+1)
  4427  0D78  3190  20BE  318D   	fcall	_memset
  4428                           
  4429                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  4430  0D7B  003D               	movlb	29	; select bank29
  4431  0D7C  130E               	bcf	14,6	;volatile
  4432                           
  4433                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4434  0D7D  3028               	movlw	40
  4435  0D7E  0021               	movlb	1	; select bank1
  4436  0D7F  00CD               	movwf	_pBDTEntryIn^(0+128)
  4437  0D80  3000               	movlw	0
  4438  0D81  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  4439                           
  4440                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  4441  0D82  3020               	movlw	32
  4442  0D83  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4443  0D84  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4444  0D85  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  4445                           
  4446                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4447  0D86  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4448  0D87  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4449  0D88  39FF               	andlw	255
  4450  0D89  1D03               	skipz
  4451  0D8A  3000               	movlw	0
  4452  0D8B  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4453                           
  4454                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  4455  0D8C  0020               	movlb	0	; select bank0
  4456  0D8D  0852               	movf	82,w	;volatile
  4457  0D8E  0021               	movlb	1	; select bank1
  4458  0D8F  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4459  0D90  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4460  0D91  00E1               	movwf	_USBActiveConfiguration^(0+128)	;volatile
  4461                           
  4462                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  4463  0D92  0861               	movf	_USBActiveConfiguration^(0+128),w	;volatile
  4464  0D93  1D03               	btfss	3,2
  4465  0D94  2D9A               	goto	l5937
  4466                           
  4467                           ;usb_device.c: 2010: {
  4468                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  4469  0D95  3010               	movlw	16
  4470  0D96  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4471  0D97  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4472  0D98  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  4473                           
  4474                           ;usb_device.c: 2013: }
  4475  0D99  0008               	return
  4476  0D9A                     l5937:	
  4477                           
  4478                           ;usb_device.c: 2014: else
  4479                           ;usb_device.c: 2015: {
  4480                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  4481  0D9A  3000               	movlw	0
  4482  0D9B  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4483  0D9C  3001               	movlw	1
  4484  0D9D  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4485  0D9E  30E1               	movlw	low _USBActiveConfiguration
  4486  0D9F  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4487  0DA0  3000               	movlw	high _USBActiveConfiguration
  4488  0DA1  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4489  0DA2  3001               	movlw	1
  4490  0DA3  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4491  0DA4  3000               	movlw	0
  4492  0DA5  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  4493  0DA6  3192  2266         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4494                           
  4495                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  4496  0DA8  3020               	movlw	32
  4497  0DA9  0021               	movlb	1	; select bank1
  4498  0DAA  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4499  0DAB  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4500  0DAC  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  4501  0DAD  0008               	return
  4502  0DAE                     __end_of_USBStdSetCfgHandler:	
  4503                           
  4504                           	psect	text13
  4505  10BE                     __ptext13:	
  4506 ;; *************** function _memset *****************
  4507 ;; Defined at:
  4508 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  p1              2   14[BANK1 ] PTR void 
  4511 ;;		 -> USBAlternateInterface(2), BDT(48), 
  4512 ;;  c               2   16[BANK1 ] int 
  4513 ;;  n               2   18[BANK1 ] unsigned int 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  p               2   20[BANK1 ] PTR unsigned char 
  4516 ;;		 -> USBAlternateInterface(2), BDT(48), 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  2   14[BANK1 ] PTR void 
  4519 ;; Registers used:
  4520 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4526 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4527 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;Total ram usage:        8 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:   10
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_USBStdSetCfgHandler
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _memset
  4542  10BE                     _memset:	
  4543                           
  4544                           ;incstack = 0
  4545 ;; hardware stack exceeded
  4546                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4547  10BE  0021               	movlb	1	; select bank1
  4548  10BF  082F               	movf	(memset@p1+1)^(0+128),w
  4549  10C0  00B5               	movwf	(memset@p+1)^(0+128)
  4550  10C1  082E               	movf	memset@p1^(0+128),w
  4551  10C2  00B4               	movwf	memset@p^(0+128)
  4552  10C3                     l5809:	
  4553  10C3  3001               	movlw	1
  4554  10C4  02B2               	subwf	memset@n^(0+128),f
  4555  10C5  3000               	movlw	0
  4556  10C6  3BB3               	subwfb	(memset@n+1)^(0+128),f
  4557  10C7  0A32               	incf	memset@n^(0+128),w
  4558  10C8  1903               	btfsc	3,2
  4559  10C9  0A33               	incf	(memset@n+1)^(0+128),w
  4560  10CA  1903               	btfsc	3,2
  4561  10CB  0008               	return
  4562  10CC  0834               	movf	memset@p^(0+128),w
  4563  10CD  0086               	movwf	6
  4564  10CE  0835               	movf	(memset@p+1)^(0+128),w
  4565  10CF  0087               	movwf	7
  4566  10D0  0830               	movf	memset@c^(0+128),w
  4567  10D1  0081               	movwf	1
  4568  10D2  3001               	movlw	1
  4569  10D3  07B4               	addwf	memset@p^(0+128),f
  4570  10D4  3000               	movlw	0
  4571  10D5  3DB5               	addwfc	(memset@p+1)^(0+128),f
  4572  10D6  28C3               	goto	l5809
  4573  10D7                     __end_of_memset:	
  4574                           ;	Return value of _memset is never used
  4575                           
  4576                           
  4577                           	psect	text14
  4578  157D                     __ptext14:	
  4579 ;; *************** function _USBStdGetStatusHandler *****************
  4580 ;; Defined at:
  4581 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;		None
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  p               2   15[BANK1 ] PTR struct __BDT
  4586 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      void 
  4589 ;; Registers used:
  4590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;Total ram usage:        3 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:   10
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_USBCheckStdRequest
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           
  4611                           ;psect for function _USBStdGetStatusHandler
  4612  157D                     _USBStdGetStatusHandler:	
  4613                           
  4614                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  4615                           
  4616                           ;incstack = 0
  4617                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  4618  157D  0020               	movlb	0	; select bank0
  4619  157E  01E0               	clrf	96	;volatile
  4620                           
  4621                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  4622  157F  01E1               	clrf	97	;volatile
  4623                           
  4624                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  4625  1580  2DBC               	goto	l5993
  4626  1581                     l573:	
  4627                           ;usb_device.c: 2135: {
  4628                           ;usb_device.c: 2136: case (0x00):
  4629                           
  4630                           
  4631                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  4632  1581  0021               	movlb	1	; select bank1
  4633  1582  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4634                           
  4635                           ;usb_device.c: 2145: }
  4636                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  4637                           
  4638                           ;usb_device.c: 2143: {
  4639                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  4640                           
  4641                           ;usb_device.c: 2142: if(0 == 1)
  4642  1583  0022               	movlb	2	; select bank2
  4643  1584  034E               	decf	_RemoteWakeup^(0+256),w	;volatile
  4644  1585  1D03               	btfss	3,2
  4645  1586  2DC8               	goto	l576
  4646                           
  4647                           ;usb_device.c: 2148: {
  4648                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  4649  1587  0020               	movlb	0	; select bank0
  4650  1588  14E0               	bsf	96,1	;volatile
  4651                           
  4652                           ;usb_device.c: 2150: }
  4653                           ;usb_device.c: 2151: break;
  4654  1589  2DC8               	goto	l576
  4655  158A                     l577:	
  4656                           ;usb_device.c: 2152: case (0x01):
  4657                           
  4658                           
  4659                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  4660  158A  0021               	movlb	1	; select bank1
  4661  158B  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4662                           
  4663                           ;usb_device.c: 2154: break;
  4664  158C  2DC8               	goto	l576
  4665  158D                     l578:	
  4666                           ;usb_device.c: 2155: case (0x02):
  4667                           
  4668                           
  4669                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  4670  158D  0021               	movlb	1	; select bank1
  4671  158E  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4672                           
  4673                           ;usb_device.c: 2160: {
  4674                           ;usb_device.c: 2161: BDT_ENTRY *p;
  4675                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  4676  158F  0020               	movlb	0	; select bank0
  4677  1590  1BD4               	btfsc	84,7	;volatile
  4678  1591  2D9E               	goto	l5983
  4679                           
  4680                           ;usb_device.c: 2164: {
  4681                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  4682  1592  0854               	movf	84,w	;volatile
  4683  1593  390F               	andlw	15
  4684  1594  0709               	addwf	9,w
  4685  1595  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4686  1596  0086               	movwf	6
  4687  1597  3001               	movlw	1	; select bank2/3
  4688  1598  0087               	movwf	7
  4689  1599  3F40               	moviw [0]fsr1
  4690  159A  0021               	movlb	1	; select bank1
  4691  159B  00AF               	movwf	USBStdGetStatusHandler@p^(0+128)
  4692  159C  3F41               	moviw [1]fsr1
  4693  159D  2DA9               	goto	L2
  4694  159E                     l5983:	
  4695                           ;usb_device.c: 2166: }
  4696                           
  4697                           
  4698                           ;usb_device.c: 2167: else
  4699                           ;usb_device.c: 2168: {
  4700                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  4701  159E  0020               	movlb	0	; select bank0
  4702  159F  0854               	movf	84,w	;volatile
  4703  15A0  390F               	andlw	15
  4704  15A1  0709               	addwf	9,w
  4705  15A2  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  4706  15A3  0086               	movwf	6
  4707  15A4  0187               	clrf	7
  4708  15A5  3F40               	moviw [0]fsr1
  4709  15A6  0021               	movlb	1	; select bank1
  4710  15A7  00AF               	movwf	USBStdGetStatusHandler@p^(0+128)
  4711  15A8  3F41               	moviw [1]fsr1
  4712  15A9                     L2:	
  4713  15A9  00B0               	movwf	(USBStdGetStatusHandler@p+1)^(0+128)
  4714                           
  4715                           ;usb_device.c: 2170: }
  4716                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  4717  15AA  082F               	movf	USBStdGetStatusHandler@p^(0+128),w
  4718  15AB  0086               	movwf	6
  4719  15AC  0830               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  4720  15AD  0087               	movwf	7
  4721  15AE  1F81               	btfss	1,7
  4722  15AF  2DC8               	goto	l576
  4723  15B0  082F               	movf	USBStdGetStatusHandler@p^(0+128),w
  4724  15B1  0086               	movwf	6
  4725  15B2  0830               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  4726  15B3  0087               	movwf	7
  4727  15B4  1D01               	btfss	1,2
  4728  15B5  2DC8               	goto	l576
  4729                           
  4730                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  4731  15B6  3001               	movlw	1
  4732  15B7  00AE               	movwf	??_USBStdGetStatusHandler^(0+128)
  4733  15B8  082E               	movf	??_USBStdGetStatusHandler^(0+128),w
  4734  15B9  0020               	movlb	0	; select bank0
  4735  15BA  00E0               	movwf	96	;volatile
  4736                           
  4737                           ;usb_device.c: 2175: }
  4738                           ;usb_device.c: 2176: }
  4739                           
  4740                           ;usb_device.c: 2174: break;
  4741  15BB  2DC8               	goto	l576
  4742  15BC                     l5993:	
  4743  15BC  0850               	movf	80,w	;volatile
  4744  15BD  391F               	andlw	31
  4745                           
  4746                           ; Switch size 1, requested type "space"
  4747                           ; Number of cases is 3, Range of values is 0 to 2
  4748                           ; switch strategies available:
  4749                           ; Name         Instructions Cycles
  4750                           ; simple_byte           10     6 (average)
  4751                           ; direct_byte           12     6 (fixed)
  4752                           ; jumptable            260     6 (fixed)
  4753                           ;	Chosen strategy is simple_byte
  4754  15BE  3A00               	xorlw	0	; case 0
  4755  15BF  1903               	skipnz
  4756  15C0  2D81               	goto	l573
  4757  15C1  3A01               	xorlw	1	; case 1
  4758  15C2  1903               	skipnz
  4759  15C3  2D8A               	goto	l577
  4760  15C4  3A03               	xorlw	3	; case 2
  4761  15C5  1903               	skipnz
  4762  15C6  2D8D               	goto	l578
  4763  15C7  2DC8               	goto	l576
  4764  15C8                     l576:	
  4765                           
  4766                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  4767  15C8  0021               	movlb	1	; select bank1
  4768  15C9  1FD5               	btfss	(_inPipes^(0+128)+2),7	;volatile
  4769  15CA  0008               	return
  4770                           
  4771                           ;usb_device.c: 2179: {
  4772                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  4773  15CB  3060               	movlw	96
  4774  15CC  00D3               	movwf	_inPipes^(0+128)	;volatile
  4775  15CD  3000               	movlw	0
  4776  15CE  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4777                           
  4778                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4779  15CF  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4780                           
  4781                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  4782  15D0  3002               	movlw	2
  4783  15D1  00AE               	movwf	??_USBStdGetStatusHandler^(0+128)
  4784  15D2  082E               	movf	??_USBStdGetStatusHandler^(0+128),w
  4785  15D3  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4786  15D4  0008               	return
  4787  15D5                     __end_of_USBStdGetStatusHandler:	
  4788                           
  4789                           	psect	text15
  4790  0BA0                     __ptext15:	
  4791 ;; *************** function _USBStdGetDscHandler *****************
  4792 ;; Defined at:
  4793 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4810 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;Total ram usage:        3 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:   10
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_USBCheckStdRequest
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           
  4822                           ;psect for function _USBStdGetDscHandler
  4823  0BA0                     _USBStdGetDscHandler:	
  4824                           
  4825                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  4826                           
  4827                           ;incstack = 0
  4828                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  4829  0BA0  3080               	movlw	128
  4830  0BA1  0020               	movlb	0	; select bank0
  4831  0BA2  0650               	xorwf	80,w	;volatile
  4832  0BA3  1D03               	btfss	3,2
  4833  0BA4  0008               	return
  4834                           
  4835                           ;usb_device.c: 2046: {
  4836                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  4837  0BA5  30C0               	movlw	192
  4838  0BA6  0021               	movlb	1	; select bank1
  4839  0BA7  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4840  0BA8  082E               	movf	??_USBStdGetDscHandler^(0+128),w
  4841  0BA9  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
  4842                           
  4843                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  4844  0BAA  2C12               	goto	l5971
  4845  0BAB                     l5945:	
  4846                           ;usb_device.c: 2050: {
  4847                           ;usb_device.c: 2051: case 0x01:
  4848                           
  4849                           
  4850                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  4851  0BAB  3091               	movlw	low (_device_dsc| (0+32768))
  4852  0BAC  0021               	movlb	1	; select bank1
  4853  0BAD  00D3               	movwf	_inPipes^(0+128)	;volatile
  4854  0BAE  3098               	movlw	high (_device_dsc| (0+32768))
  4855  0BAF  00D4               	movwf	(_inPipes^(0+128)+1)	;volatile
  4856                           
  4857                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  4858  0BB0  3000               	movlw	0
  4859  0BB1  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  4860  0BB2  3012               	movlw	18
  4861  0BB3  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4862                           
  4863                           ;usb_device.c: 2058: break;
  4864  0BB4  0008               	return
  4865  0BB5                     l5949:	
  4866                           ;usb_device.c: 2059: case 0x02:
  4867                           
  4868                           
  4869                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  4870  0BB5  0020               	movlb	0	; select bank0
  4871  0BB6  0852               	movf	82,w	;volatile
  4872  0BB7  1D03               	btfss	3,2
  4873  0BB8  2BE8               	goto	l5957
  4874                           
  4875                           ;usb_device.c: 2064: {
  4876                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  4877  0BB9  0852               	movf	82,w	;volatile
  4878  0BBA  0021               	movlb	1	; select bank1
  4879  0BBB  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4880  0BBC  01AF               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  4881  0BBD  35AE               	lslf	??_USBStdGetDscHandler^(0+128),f
  4882  0BBE  0DAF               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  4883  0BBF  30AD               	movlw	low (_USB_CD_Ptr| (0+32768))
  4884  0BC0  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4885  0BC1  0084               	movwf	4
  4886  0BC2  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
  4887  0BC3  3D2F               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  4888  0BC4  0085               	movwf	5
  4889  0BC5  3F00               	moviw [0]fsr0
  4890  0BC6  00D3               	movwf	_inPipes^(0+128)	;volatile
  4891  0BC7  3F01               	moviw [1]fsr0
  4892  0BC8  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4893                           
  4894                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  4895  0BC9  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  4896  0BCA  00AF               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  4897  0BCB  0853               	movf	_inPipes^(0+128),w	;volatile
  4898  0BCC  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4899  0BCD  3002               	movlw	2
  4900  0BCE  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4901  0BCF  0084               	movwf	4
  4902  0BD0  082F               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  4903  0BD1  1803               	skipnc
  4904  0BD2  0A2F               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  4905  0BD3  0085               	movwf	5
  4906  0BD4  0800               	movf	0,w	;code access
  4907  0BD5  00B0               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  4908  0BD6  0830               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  4909  0BD7  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4910                           
  4911                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  4912  0BD8  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  4913  0BD9  00AF               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  4914  0BDA  0853               	movf	_inPipes^(0+128),w	;volatile
  4915  0BDB  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4916  0BDC  3003               	movlw	3
  4917  0BDD  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4918  0BDE  0084               	movwf	4
  4919  0BDF  082F               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  4920  0BE0  1803               	skipnc
  4921  0BE1  0A2F               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  4922  0BE2  0085               	movwf	5
  4923  0BE3  0800               	movf	0,w	;code access
  4924  0BE4  00B0               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  4925  0BE5  0830               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  4926  0BE6  00D7               	movwf	(_inPipes^(0+128)+4)	;volatile
  4927                           
  4928                           ;usb_device.c: 2076: }
  4929  0BE7  0008               	return
  4930  0BE8                     l5957:	
  4931                           
  4932                           ;usb_device.c: 2077: else
  4933                           ;usb_device.c: 2078: {
  4934                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  4935  0BE8  0021               	movlb	1	; select bank1
  4936  0BE9  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4937                           
  4938                           ;usb_device.c: 2080: }
  4939                           ;usb_device.c: 2081: break;
  4940  0BEA  0008               	return
  4941  0BEB                     l5959:	
  4942                           ;usb_device.c: 2082: case 0x03:
  4943                           
  4944                           
  4945                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  4946  0BEB  3003               	movlw	3
  4947  0BEC  0020               	movlb	0	; select bank0
  4948  0BED  0252               	subwf	82,w	;volatile
  4949  0BEE  1803               	skipnc
  4950  0BEF  2C0C               	goto	l5965
  4951                           
  4952                           ;usb_device.c: 2087: {
  4953                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  4954  0BF0  0852               	movf	82,w	;volatile
  4955  0BF1  0021               	movlb	1	; select bank1
  4956  0BF2  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4957  0BF3  01AF               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  4958  0BF4  35AE               	lslf	??_USBStdGetDscHandler^(0+128),f
  4959  0BF5  0DAF               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  4960  0BF6  30A3               	movlw	low (_USB_SD_Ptr| (0+32768))
  4961  0BF7  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4962  0BF8  0084               	movwf	4
  4963  0BF9  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
  4964  0BFA  3D2F               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  4965  0BFB  0085               	movwf	5
  4966  0BFC  3F00               	moviw [0]fsr0
  4967  0BFD  00D3               	movwf	_inPipes^(0+128)	;volatile
  4968  0BFE  3F01               	moviw [1]fsr0
  4969  0BFF  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4970                           
  4971                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  4972  0C00  0853               	movf	_inPipes^(0+128),w	;volatile
  4973  0C01  0084               	movwf	4
  4974  0C02  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  4975  0C03  0085               	movwf	5
  4976  0C04  0800               	movf	0,w	;code access
  4977  0C05  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4978  0C06  01AF               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  4979  0C07  082E               	movf	??_USBStdGetDscHandler^(0+128),w
  4980  0C08  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4981  0C09  082F               	movf	(??_USBStdGetDscHandler+1)^(0+128),w
  4982  0C0A  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  4983                           
  4984                           ;usb_device.c: 2092: }
  4985  0C0B  0008               	return
  4986  0C0C                     l5965:	
  4987                           
  4988                           ;usb_device.c: 2102: else
  4989                           ;usb_device.c: 2103: {
  4990                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  4991  0C0C  0021               	movlb	1	; select bank1
  4992  0C0D  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4993                           
  4994                           ;usb_device.c: 2105: }
  4995                           ;usb_device.c: 2106: break;
  4996  0C0E  0008               	return
  4997  0C0F                     l5967:	
  4998                           ;usb_device.c: 2107: default:
  4999                           
  5000                           
  5001                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  5002  0C0F  0021               	movlb	1	; select bank1
  5003  0C10  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  5004                           
  5005                           ;usb_device.c: 2110: }
  5006                           
  5007                           ;usb_device.c: 2109: break;
  5008  0C11  0008               	return
  5009  0C12                     l5971:	
  5010  0C12  0020               	movlb	0	; select bank0
  5011  0C13  0853               	movf	83,w	;volatile
  5012                           
  5013                           ; Switch size 1, requested type "space"
  5014                           ; Number of cases is 3, Range of values is 1 to 3
  5015                           ; switch strategies available:
  5016                           ; Name         Instructions Cycles
  5017                           ; simple_byte           10     6 (average)
  5018                           ; direct_byte           15     9 (fixed)
  5019                           ; jumptable            263     9 (fixed)
  5020                           ;	Chosen strategy is simple_byte
  5021  0C14  3A01               	xorlw	1	; case 1
  5022  0C15  1903               	skipnz
  5023  0C16  2BAB               	goto	l5945
  5024  0C17  3A03               	xorlw	3	; case 2
  5025  0C18  1903               	skipnz
  5026  0C19  2BB5               	goto	l5949
  5027  0C1A  3A01               	xorlw	1	; case 3
  5028  0C1B  1903               	skipnz
  5029  0C1C  2BEB               	goto	l5959
  5030  0C1D  2C0F               	goto	l5967
  5031  0C1E  0008               	return
  5032  0C1F                     __end_of_USBStdGetDscHandler:	
  5033                           
  5034                           	psect	text16
  5035  004D                     __ptext16:	
  5036 ;; *************** function _USBStdFeatureReqHandler *****************
  5037 ;; Defined at:
  5038 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  p               2    3[BANK2 ] PTR struct __BDT
  5043 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  5044 ;;  pUEP            2    0[BANK2 ] PTR unsigned char 
  5045 ;;		 -> UEP0(1), 
  5046 ;;  current_ep_d    1    2[BANK2 ] struct .
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5059 ;;      Totals:         0       0       2       5       0       0       0       0       0       0       0       0       
      +0       0
  5060 ;;Total ram usage:        7 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:   14
  5063 ;; This function calls:
  5064 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5065 ;; This function is called by:
  5066 ;;		_USBCheckStdRequest
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           
  5071                           ;psect for function _USBStdFeatureReqHandler
  5072  004D                     _USBStdFeatureReqHandler:	
  5073                           
  5074                           ;usb_device.c: 2756: BDT_ENTRY *p;
  5075                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  5076                           ;usb_device.c: 2761: unsigned char* pUEP;
  5077                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  5078                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  5079                           
  5080                           ;incstack = 0
  5081 ;; hardware stack exceeded
  5082                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5083  004D  0020               	movlb	0	; select bank0
  5084  004E  0352               	decf	82,w	;volatile
  5085  004F  1D03               	btfss	3,2
  5086  0050  2866               	goto	l6013
  5087  0051  0850               	movf	80,w	;volatile
  5088  0052  391F               	andlw	31
  5089  0053  3A00               	xorlw	0
  5090  0054  1D03               	skipz
  5091  0055  2866               	goto	l6013
  5092                           
  5093                           ;usb_device.c: 2801: {
  5094                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  5095  0056  0021               	movlb	1	; select bank1
  5096  0057  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5097                           
  5098                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  5099  0058  3003               	movlw	3
  5100  0059  0020               	movlb	0	; select bank0
  5101  005A  0651               	xorwf	81,w	;volatile
  5102  005B  1D03               	btfss	3,2
  5103  005C  2864               	goto	l6011
  5104                           
  5105                           ;usb_device.c: 2804: RemoteWakeup = 1;
  5106  005D  3001               	movlw	1
  5107  005E  0021               	movlb	1	; select bank1
  5108  005F  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5109  0060  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5110  0061  0022               	movlb	2	; select bank2
  5111  0062  00CE               	movwf	_RemoteWakeup^(0+256)	;volatile
  5112  0063  2866               	goto	l6013
  5113  0064                     l6011:	
  5114                           
  5115                           ;usb_device.c: 2805: else
  5116                           ;usb_device.c: 2806: RemoteWakeup = 0;
  5117  0064  0022               	movlb	2	; select bank2
  5118  0065  01CE               	clrf	_RemoteWakeup^(0+256)	;volatile
  5119  0066                     l6013:	
  5120                           
  5121                           ;usb_device.c: 2807: }
  5122                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  5123                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  5124                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  5125                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  5126  0066  0020               	movlb	0	; select bank0
  5127  0067  0852               	movf	82,w	;volatile
  5128  0068  1D03               	btfss	3,2
  5129  0069  0008               	return
  5130  006A  0850               	movf	80,w	;volatile
  5131  006B  391F               	andlw	31
  5132  006C  3A02               	xorlw	2
  5133  006D  1D03               	skipz
  5134  006E  0008               	return
  5135  006F  0854               	movf	84,w	;volatile
  5136  0070  390F               	andlw	15
  5137  0071  3A00               	xorlw	0
  5138  0072  1903               	skipnz
  5139  0073  0008               	return
  5140  0074  0854               	movf	84,w	;volatile
  5141  0075  390F               	andlw	15
  5142  0076  0021               	movlb	1	; select bank1
  5143  0077  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5144  0078  3003               	movlw	3
  5145  0079  0242               	subwf	??_USBStdFeatureReqHandler^(0+128),w
  5146  007A  1803               	skipnc
  5147  007B  0008               	return
  5148  007C  3020               	movlw	32
  5149  007D  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
  5150  007E  1D03               	btfss	3,2
  5151  007F  0008               	return
  5152                           
  5153                           ;usb_device.c: 2814: {
  5154                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  5155  0080  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5156                           
  5157                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  5158  0081  0020               	movlb	0	; select bank0
  5159  0082  1BD4               	btfsc	84,7	;volatile
  5160  0083  2895               	goto	l6027
  5161                           
  5162                           ;usb_device.c: 2821: {
  5163                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5164  0084  0854               	movf	84,w	;volatile
  5165  0085  390F               	andlw	15
  5166  0086  0709               	addwf	9,w
  5167  0087  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5168  0088  0086               	movwf	6
  5169  0089  3001               	movlw	1	; select bank2/3
  5170  008A  0087               	movwf	7
  5171  008B  3F40               	moviw [0]fsr1
  5172  008C  0022               	movlb	2	; select bank2
  5173  008D  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5174  008E  3F41               	moviw [1]fsr1
  5175  008F  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5176                           
  5177                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  5178  0090  0020               	movlb	0	; select bank0
  5179  0091  0854               	movf	84,w	;volatile
  5180  0092  390F               	andlw	15
  5181  0093  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5182  0094  28A5               	goto	L3
  5183  0095                     l6027:	
  5184                           ;usb_device.c: 2824: }
  5185                           
  5186                           
  5187                           ;usb_device.c: 2825: else
  5188                           ;usb_device.c: 2826: {
  5189                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5190  0095  0020               	movlb	0	; select bank0
  5191  0096  0854               	movf	84,w	;volatile
  5192  0097  390F               	andlw	15
  5193  0098  0709               	addwf	9,w
  5194  0099  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5195  009A  0086               	movwf	6
  5196  009B  0187               	clrf	7
  5197  009C  3F40               	moviw [0]fsr1
  5198  009D  0022               	movlb	2	; select bank2
  5199  009E  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5200  009F  3F41               	moviw [1]fsr1
  5201  00A0  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5202                           
  5203                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  5204  00A1  0020               	movlb	0	; select bank0
  5205  00A2  0854               	movf	84,w	;volatile
  5206  00A3  390F               	andlw	15
  5207  00A4  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5208  00A5                     L3:	
  5209  00A5  0086               	movwf	6
  5210  00A6  3001               	movlw	1	; select bank2/3
  5211  00A7  0087               	movwf	7
  5212  00A8  0801               	movf	1,w
  5213  00A9  0021               	movlb	1	; select bank1
  5214  00AA  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5215  00AB  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5216  00AC  0022               	movlb	2	; select bank2
  5217  00AD  00E9               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+256)
  5218                           
  5219                           ;usb_device.c: 2829: }
  5220                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  5221  00AE  1869               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+256),0
  5222  00AF  28C0               	goto	l6033
  5223                           
  5224                           ;usb_device.c: 2836: {
  5225                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  5226  00B0  30FB               	movlw	251
  5227  00B1  0021               	movlb	1	; select bank1
  5228  00B2  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5229  00B3  30FF               	movlw	255
  5230  00B4  00C3               	movwf	(??_USBStdFeatureReqHandler^(0+128)+1)
  5231  00B5  0022               	movlb	2	; select bank2
  5232  00B6  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5233  00B7  0021               	movlb	1	; select bank1
  5234  00B8  0542               	andwf	??_USBStdFeatureReqHandler^(0+128),w
  5235  00B9  0022               	movlb	2	; select bank2
  5236  00BA  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5237  00BB  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5238  00BC  0021               	movlb	1	; select bank1
  5239  00BD  0543               	andwf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  5240  00BE  0022               	movlb	2	; select bank2
  5241  00BF  28C5               	goto	L4
  5242  00C0                     l6033:	
  5243                           ;usb_device.c: 2838: }
  5244                           
  5245                           
  5246                           ;usb_device.c: 2839: else
  5247                           ;usb_device.c: 2840: {
  5248                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  5249  00C0  3004               	movlw	4
  5250  00C1  046A               	iorwf	USBStdFeatureReqHandler@p^(0+256),w
  5251  00C2  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5252  00C3  3000               	movlw	0
  5253  00C4  046B               	iorwf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5254  00C5                     L4:	
  5255  00C5  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5256                           
  5257                           ;usb_device.c: 2842: }
  5258                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  5259  00C6  0020               	movlb	0	; select bank0
  5260  00C7  1BD4               	btfsc	84,7	;volatile
  5261  00C8  28D6               	goto	l6039
  5262                           
  5263                           ;usb_device.c: 2848: {
  5264                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5265  00C9  0854               	movf	84,w	;volatile
  5266  00CA  390F               	andlw	15
  5267  00CB  0709               	addwf	9,w
  5268  00CC  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5269  00CD  0086               	movwf	6
  5270  00CE  3001               	movlw	1	; select bank2/3
  5271  00CF  0087               	movwf	7
  5272  00D0  0022               	movlb	2	; select bank2
  5273  00D1  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5274  00D2  3FC0               	movwi [0]fsr1
  5275  00D3  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5276  00D4  3FC1               	movwi [1]fsr1
  5277                           
  5278                           ;usb_device.c: 2850: }
  5279  00D5  28E2               	goto	l6041
  5280  00D6                     l6039:	
  5281                           
  5282                           ;usb_device.c: 2851: else
  5283                           ;usb_device.c: 2852: {
  5284                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5285  00D6  0020               	movlb	0	; select bank0
  5286  00D7  0854               	movf	84,w	;volatile
  5287  00D8  390F               	andlw	15
  5288  00D9  0709               	addwf	9,w
  5289  00DA  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5290  00DB  0086               	movwf	6
  5291  00DC  0187               	clrf	7
  5292  00DD  0022               	movlb	2	; select bank2
  5293  00DE  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5294  00DF  3FC0               	movwi [0]fsr1
  5295  00E0  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5296  00E1  3FC1               	movwi [1]fsr1
  5297  00E2                     l6041:	
  5298                           
  5299                           ;usb_device.c: 2854: }
  5300                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  5301  00E2  3003               	movlw	3
  5302  00E3  0020               	movlb	0	; select bank0
  5303  00E4  0651               	xorwf	81,w	;volatile
  5304  00E5  1D03               	btfss	3,2
  5305  00E6  2908               	goto	l6055
  5306                           
  5307                           ;usb_device.c: 2858: {
  5308                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  5309  00E7  0022               	movlb	2	; select bank2
  5310  00E8  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5311  00E9  0086               	movwf	6
  5312  00EA  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5313  00EB  0087               	movwf	7
  5314  00EC  1F81               	btfss	1,7
  5315  00ED  28FC               	goto	l6051
  5316                           
  5317                           ;usb_device.c: 2860: {
  5318                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  5319  00EE  0020               	movlb	0	; select bank0
  5320  00EF  1BD4               	btfsc	84,7	;volatile
  5321  00F0  28F5               	goto	l6049
  5322                           
  5323                           ;usb_device.c: 2864: {
  5324                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5325  00F1  0854               	movf	84,w	;volatile
  5326  00F2  390F               	andlw	15
  5327  00F3  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5328  00F4  28F8               	goto	L5
  5329  00F5                     l6049:	
  5330                           ;usb_device.c: 2866: }
  5331                           
  5332                           
  5333                           ;usb_device.c: 2867: else
  5334                           ;usb_device.c: 2868: {
  5335                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5336  00F5  0854               	movf	84,w	;volatile
  5337  00F6  390F               	andlw	15
  5338  00F7  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5339  00F8                     L5:	
  5340  00F8  0086               	movwf	6
  5341  00F9  3001               	movlw	1	; select bank2/3
  5342  00FA  0087               	movwf	7
  5343  00FB  1481               	bsf	1,1
  5344  00FC                     l6051:	
  5345                           
  5346                           ;usb_device.c: 2870: }
  5347                           ;usb_device.c: 2871: }
  5348                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  5349  00FC  0022               	movlb	2	; select bank2
  5350  00FD  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5351  00FE  0086               	movwf	6
  5352  00FF  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5353  0100  0087               	movwf	7
  5354  0101  1501               	bsf	1,2
  5355                           
  5356                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  5357  0102  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5358  0103  0086               	movwf	6
  5359  0104  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5360  0105  0087               	movwf	7
  5361  0106  1781               	bsf	1,7
  5362                           
  5363                           ;usb_device.c: 2876: }
  5364  0107  0008               	return
  5365  0108                     l6055:	
  5366                           
  5367                           ;usb_device.c: 2877: else
  5368                           ;usb_device.c: 2878: {
  5369                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  5370  0108  3004               	movlw	4
  5371  0109  0022               	movlb	2	; select bank2
  5372  010A  066A               	xorwf	USBStdFeatureReqHandler@p^(0+256),w
  5373  010B  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5374  010C  3000               	movlw	0
  5375  010D  066B               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5376  010E  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5377                           
  5378                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  5379  010F  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5380  0110  0086               	movwf	6
  5381  0111  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5382  0112  0087               	movwf	7
  5383  0113  1F81               	btfss	1,7
  5384  0114  293B               	goto	l6065
  5385                           
  5386                           ;usb_device.c: 2885: {
  5387                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  5388  0115  307F               	movlw	127
  5389  0116  0021               	movlb	1	; select bank1
  5390  0117  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5391  0118  0022               	movlb	2	; select bank2
  5392  0119  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5393  011A  0086               	movwf	6
  5394  011B  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5395  011C  0087               	movwf	7
  5396  011D  0021               	movlb	1	; select bank1
  5397  011E  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5398  011F  0581               	andwf	1,f
  5399                           
  5400                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  5401  0120  0022               	movlb	2	; select bank2
  5402  0121  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5403  0122  0086               	movwf	6
  5404  0123  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5405  0124  0087               	movwf	7
  5406  0125  1701               	bsf	1,6
  5407                           
  5408                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5409  0126  3000               	movlw	0
  5410  0127  0021               	movlb	1	; select bank1
  5411  0128  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5412  0129  3005               	movlw	5
  5413  012A  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5414  012B  0022               	movlb	2	; select bank2
  5415  012C  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5416  012D  0021               	movlb	1	; select bank1
  5417  012E  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5418  012F  0022               	movlb	2	; select bank2
  5419  0130  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5420  0131  0021               	movlb	1	; select bank1
  5421  0132  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5422  0133  3002               	movlw	2
  5423  0134  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5424  0135  3000               	movlw	0
  5425  0136  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  5426  0137  3192  2266  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5427                           
  5428                           ;usb_device.c: 2891: }
  5429  013A  2941               	goto	l6067
  5430  013B                     l6065:	
  5431                           
  5432                           ;usb_device.c: 2892: else
  5433                           ;usb_device.c: 2893: {
  5434                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  5435  013B  0022               	movlb	2	; select bank2
  5436  013C  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5437  013D  0086               	movwf	6
  5438  013E  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5439  013F  0087               	movwf	7
  5440  0140  1701               	bsf	1,6
  5441  0141                     l6067:	
  5442                           
  5443                           ;usb_device.c: 2896: }
  5444                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  5445  0141  3004               	movlw	4
  5446  0142  0022               	movlb	2	; select bank2
  5447  0143  066A               	xorwf	USBStdFeatureReqHandler@p^(0+256),w
  5448  0144  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5449  0145  3000               	movlw	0
  5450  0146  066B               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5451  0147  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5452                           
  5453                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  5454  0148  18E9               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+256),1
  5455  0149  2950               	goto	l669
  5456  014A  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5457  014B  0086               	movwf	6
  5458  014C  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5459  014D  0087               	movwf	7
  5460  014E  1F81               	btfss	1,7
  5461  014F  297D               	goto	l6079
  5462  0150                     l669:	
  5463                           
  5464                           ;usb_device.c: 2907: {
  5465                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  5466  0150  0020               	movlb	0	; select bank0
  5467  0151  1BD4               	btfsc	84,7	;volatile
  5468  0152  2957               	goto	l6075
  5469                           
  5470                           ;usb_device.c: 2909: {
  5471                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5472  0153  0854               	movf	84,w	;volatile
  5473  0154  390F               	andlw	15
  5474  0155  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5475  0156  295A               	goto	L6
  5476  0157                     l6075:	
  5477                           ;usb_device.c: 2911: }
  5478                           
  5479                           
  5480                           ;usb_device.c: 2912: else
  5481                           ;usb_device.c: 2913: {
  5482                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5483  0157  0854               	movf	84,w	;volatile
  5484  0158  390F               	andlw	15
  5485  0159  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5486  015A                     L6:	
  5487  015A  0086               	movwf	6
  5488  015B  3001               	movlw	1	; select bank2/3
  5489  015C  0087               	movwf	7
  5490  015D  1081               	bcf	1,1
  5491                           
  5492                           ;usb_device.c: 2915: }
  5493                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5494  015E  303B               	movlw	59
  5495  015F  0021               	movlb	1	; select bank1
  5496  0160  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5497  0161  0022               	movlb	2	; select bank2
  5498  0162  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5499  0163  0086               	movwf	6
  5500  0164  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5501  0165  0087               	movwf	7
  5502  0166  0021               	movlb	1	; select bank1
  5503  0167  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5504  0168  0581               	andwf	1,f
  5505                           
  5506                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5507  0169  3000               	movlw	0
  5508  016A  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5509  016B  3005               	movlw	5
  5510  016C  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5511  016D  0022               	movlb	2	; select bank2
  5512  016E  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5513  016F  0021               	movlb	1	; select bank1
  5514  0170  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5515  0171  0022               	movlb	2	; select bank2
  5516  0172  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5517  0173  0021               	movlb	1	; select bank1
  5518  0174  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5519  0175  3002               	movlw	2
  5520  0176  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5521  0177  3000               	movlw	0
  5522  0178  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  5523  0179  3192  2266  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5524                           
  5525                           ;usb_device.c: 2921: }
  5526  017C  2988               	goto	l6081
  5527  017D                     l6079:	
  5528                           
  5529                           ;usb_device.c: 2922: else
  5530                           ;usb_device.c: 2923: {
  5531                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5532  017D  303B               	movlw	59
  5533  017E  0021               	movlb	1	; select bank1
  5534  017F  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5535  0180  0022               	movlb	2	; select bank2
  5536  0181  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5537  0182  0086               	movwf	6
  5538  0183  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5539  0184  0087               	movwf	7
  5540  0185  0021               	movlb	1	; select bank1
  5541  0186  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5542  0187  0581               	andwf	1,f
  5543  0188                     l6081:	
  5544                           
  5545                           ;usb_device.c: 2926: }
  5546                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  5547  0188  0020               	movlb	0	; select bank0
  5548  0189  0854               	movf	84,w	;volatile
  5549  018A  390F               	andlw	15
  5550  018B  3E98               	addlw	152
  5551  018C  0021               	movlb	1	; select bank1
  5552  018D  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5553  018E  01C3               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
  5554  018F  300E               	movlw	14
  5555  0190  3DC3               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
  5556  0191  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5557  0192  0022               	movlb	2	; select bank2
  5558  0193  00E7               	movwf	USBStdFeatureReqHandler@pUEP^(0+256)
  5559  0194  0021               	movlb	1	; select bank1
  5560  0195  0843               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  5561  0196  0022               	movlb	2	; select bank2
  5562  0197  00E8               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+256)
  5563                           
  5564                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  5565  0198  30FE               	movlw	254
  5566  0199  0021               	movlb	1	; select bank1
  5567  019A  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5568  019B  0022               	movlb	2	; select bank2
  5569  019C  0867               	movf	USBStdFeatureReqHandler@pUEP^(0+256),w
  5570  019D  0086               	movwf	6
  5571  019E  0868               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+256),w
  5572  019F  0087               	movwf	7
  5573  01A0  0021               	movlb	1	; select bank1
  5574  01A1  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5575  01A2  0581               	andwf	1,f
  5576  01A3  0008               	return
  5577  01A4                     __end_of_USBStdFeatureReqHandler:	
  5578                           
  5579                           	psect	text17
  5580  1266                     __ptext17:	
  5581 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  5582 ;; Defined at:
  5583 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  event           2   28[BANK1 ] enum E34
  5586 ;;  pdata           2   30[BANK1 ] PTR void 
  5587 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
  5588 ;;		 -> NULL(0), 
  5589 ;;  size            2   32[BANK1 ] unsigned int 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  1    wreg      unsigned char 
  5594 ;; Registers used:
  5595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5601 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;Total ram usage:        6 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:   13
  5608 ;; This function calls:
  5609 ;;		_CDCInitEP
  5610 ;;		_USBCheckCDCRequest
  5611 ;; This function is called by:
  5612 ;;		_USBDeviceTasks
  5613 ;;		_USBStdSetCfgHandler
  5614 ;;		_USBSuspend
  5615 ;;		_USBWakeFromSuspend
  5616 ;;		_USBCtrlTrfSetupHandler
  5617 ;;		_USBCheckStdRequest
  5618 ;;		_USBStdFeatureReqHandler
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           
  5623                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  5624  1266                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  5625                           
  5626                           ;usb_device_events.c: 51: switch( (int) event )
  5627                           
  5628                           ;incstack = 0
  5629                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5630  1266  2A6D               	goto	l5753
  5631  1267                     l5747:	
  5632                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
  5633                           
  5634                           ;usb_device_events.c: 73: break;
  5635                           
  5636                           ;usb_device_events.c: 68: case EVENT_RESUME:
  5637                           
  5638                           ;usb_device_events.c: 66: break;
  5639                           
  5640                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
  5641                           
  5642                           ;usb_device_events.c: 57: break;
  5643                           
  5644                           ;usb_device_events.c: 56: case EVENT_SOF:
  5645                           
  5646                           ;usb_device_events.c: 54: break;
  5647                           
  5648                           ;usb_device_events.c: 52: {
  5649                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
  5650                           
  5651                           
  5652                           ;usb_device_events.c: 76: CDCInitEP();
  5653  1267  3193  2302         	fcall	_CDCInitEP
  5654                           
  5655                           ;usb_device_events.c: 80: break;
  5656                           
  5657                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
  5658                           
  5659                           ;usb_device_events.c: 77: break;
  5660  1269  0008               	return
  5661  126A                     l5749:	
  5662                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
  5663                           
  5664                           
  5665                           ;usb_device_events.c: 85: USBCheckCDCRequest();
  5666  126A  3188  2098         	fcall	_USBCheckCDCRequest
  5667                           
  5668                           ;usb_device_events.c: 96: }
  5669                           
  5670                           ;usb_device_events.c: 95: break;
  5671                           
  5672                           ;usb_device_events.c: 94: default:
  5673                           
  5674                           ;usb_device_events.c: 92: break;
  5675                           
  5676                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
  5677                           
  5678                           ;usb_device_events.c: 89: break;
  5679                           
  5680                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
  5681                           
  5682                           ;usb_device_events.c: 86: break;
  5683  126C  0008               	return
  5684  126D                     l5753:	
  5685                           
  5686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5687                           ; Switch size 1, requested type "space"
  5688                           ; Number of cases is 2, Range of values is 0 to 127
  5689                           ; switch strategies available:
  5690                           ; Name         Instructions Cycles
  5691                           ; simple_byte            7     4 (average)
  5692                           ; direct_byte          262     6 (fixed)
  5693                           ; jumptable            260     6 (fixed)
  5694                           ;	Chosen strategy is simple_byte
  5695  126D  0021               	movlb	1	; select bank1
  5696  126E  083D               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
  5697  126F  3A00               	xorlw	0	; case 0
  5698  1270  1903               	skipnz
  5699  1271  2A76               	goto	l7217
  5700  1272  3A7F               	xorlw	127	; case 127
  5701  1273  1903               	skipnz
  5702  1274  2A90               	goto	l7219
  5703  1275  2A95               	goto	l285
  5704  1276                     l7217:	
  5705                           
  5706                           ; Switch size 1, requested type "space"
  5707                           ; Number of cases is 8, Range of values is 1 to 117
  5708                           ; switch strategies available:
  5709                           ; Name         Instructions Cycles
  5710                           ; simple_byte           25    13 (average)
  5711                           ; direct_byte          243     9 (fixed)
  5712                           ; jumptable            263     9 (fixed)
  5713                           ;	Chosen strategy is simple_byte
  5714  1276  083C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  5715  1277  3A01               	xorlw	1	; case 1
  5716  1278  1903               	skipnz
  5717  1279  2A67               	goto	l5747
  5718  127A  3A03               	xorlw	3	; case 2
  5719  127B  1903               	skipnz
  5720  127C  2A95               	goto	l285
  5721  127D  3A01               	xorlw	1	; case 3
  5722  127E  1903               	skipnz
  5723  127F  2A6A               	goto	l5749
  5724  1280  3A06               	xorlw	6	; case 5
  5725  1281  1903               	skipnz
  5726  1282  2A95               	goto	l285
  5727  1283  3A77               	xorlw	119	; case 114
  5728  1284  1903               	skipnz
  5729  1285  2A95               	goto	l285
  5730  1286  3A01               	xorlw	1	; case 115
  5731  1287  1903               	skipnz
  5732  1288  2A95               	goto	l285
  5733  1289  3A07               	xorlw	7	; case 116
  5734  128A  1903               	skipnz
  5735  128B  2A95               	goto	l285
  5736  128C  3A01               	xorlw	1	; case 117
  5737  128D  1903               	skipnz
  5738  128E  2A95               	goto	l285
  5739  128F  2A95               	goto	l285
  5740  1290                     l7219:	
  5741                           
  5742                           ; Switch size 1, requested type "space"
  5743                           ; Number of cases is 1, Range of values is 255 to 255
  5744                           ; switch strategies available:
  5745                           ; Name         Instructions Cycles
  5746                           ; simple_byte            4     3 (average)
  5747                           ; direct_byte            7     5 (fixed)
  5748                           ; jumptable            263     9 (fixed)
  5749                           ;	Chosen strategy is simple_byte
  5750  1290  083C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  5751  1291  3AFF               	xorlw	255	; case 255
  5752  1292  1903               	skipnz
  5753  1293  2A95               	goto	l285
  5754  1294  2A95               	goto	l285
  5755  1295                     l285:	
  5756                           ;usb_device_events.c: 97: return 1;
  5757                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  5758                           
  5759  1295  0008               	return
  5760  1296                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  5761                           
  5762                           	psect	text18
  5763  0898                     __ptext18:	
  5764 ;; *************** function _USBCheckCDCRequest *****************
  5765 ;; Defined at:
  5766 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;		None
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  1    wreg      void 
  5773 ;; Registers used:
  5774 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5782 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5783 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;Total ram usage:        1 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:   10
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _USBCheckCDCRequest
  5796  0898                     _USBCheckCDCRequest:	
  5797                           
  5798                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
  5799                           
  5800                           ;incstack = 0
  5801                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  5802  0898  0020               	movlb	0	; select bank0
  5803  0899  0850               	movf	80,w	;volatile
  5804  089A  391F               	andlw	31
  5805  089B  3A01               	xorlw	1
  5806  089C  1D03               	btfss	3,2
  5807  089D  0008               	return
  5808                           
  5809                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
  5810  089E  0E50               	swapf	80,w	;volatile
  5811  089F  0C89               	rrf	9,f
  5812  08A0  3903               	andlw	3
  5813  08A1  3A01               	xorlw	1
  5814  08A2  1D03               	btfss	3,2
  5815  08A3  0008               	return
  5816                           
  5817                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
  5818                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
  5819  08A4  0854               	movf	84,w	;volatile
  5820  08A5  1903               	btfsc	3,2
  5821  08A6  28E6               	goto	l5725
  5822  08A7  0354               	decf	84,w	;volatile
  5823  08A8  1D03               	btfss	3,2
  5824  08A9  0008               	return
  5825  08AA  28E6               	goto	l5725
  5826  08AB                     l5695:	
  5827                           ;usb_device_cdc.c: 166: {
  5828                           ;usb_device_cdc.c: 168: case 0x00:
  5829                           
  5830                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
  5831                           
  5832                           
  5833                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  5834  08AB  3056               	movlw	low _dummy_encapsulated_cmd_response
  5835  08AC  0021               	movlb	1	; select bank1
  5836  08AD  00D3               	movwf	_inPipes^(0+128)	;volatile
  5837  08AE  3001               	movlw	high _dummy_encapsulated_cmd_response
  5838  08AF  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5839                           
  5840                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
  5841  08B0  3000               	movlw	0
  5842  08B1  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5843  08B2  3008               	movlw	8
  5844  08B3  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5845                           
  5846                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5847  08B4  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5848                           
  5849                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
  5850  08B5  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5851                           
  5852                           ;usb_device_cdc.c: 174: break;
  5853  08B6  0008               	return
  5854  08B7                     l5703:	
  5855                           ;usb_device_cdc.c: 175: case 0x01:
  5856                           
  5857                           
  5858                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  5859  08B7  3056               	movlw	low _dummy_encapsulated_cmd_response
  5860  08B8  0021               	movlb	1	; select bank1
  5861  08B9  00D3               	movwf	_inPipes^(0+128)	;volatile
  5862  08BA  3001               	movlw	high _dummy_encapsulated_cmd_response
  5863  08BB  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5864                           
  5865                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
  5866  08BC  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5867                           
  5868                           ;usb_device_cdc.c: 179: break;
  5869  08BD  0008               	return
  5870  08BE                     l5707:	
  5871                           ;usb_device_cdc.c: 183: case 0x20:
  5872                           
  5873                           
  5874                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
  5875  08BE  0020               	movlb	0	; select bank0
  5876  08BF  0857               	movf	87,w	;volatile
  5877  08C0  0021               	movlb	1	; select bank1
  5878  08C1  00CA               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
  5879  08C2  0020               	movlb	0	; select bank0
  5880  08C3  0856               	movf	86,w	;volatile
  5881  08C4  0021               	movlb	1	; select bank1
  5882  08C5  00C9               	movwf	(_outPipes^(0+128)+3)	;volatile
  5883                           
  5884                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  5885  08C6  305E               	movlw	(low (_line_coding| (0+256)))& (0+255)
  5886  08C7  00AE               	movwf	??_USBCheckCDCRequest^(0+128)
  5887  08C8  082E               	movf	??_USBCheckCDCRequest^(0+128),w
  5888  08C9  00C6               	movwf	_outPipes^(0+128)	;volatile
  5889                           
  5890                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
  5891  08CA  01CB               	clrf	(low ((_outPipes| 0+5)))^(0+128)	;volatile
  5892  08CB  01CC               	clrf	((low ((_outPipes| 0+5))+1))^(0+128)	;volatile
  5893                           
  5894                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
  5895  08CC  17C8               	bsf	(_outPipes^(0+128)+2),7	;volatile
  5896                           
  5897                           ;usb_device_cdc.c: 188: break;
  5898  08CD  0008               	return
  5899  08CE                     l5713:	
  5900                           ;usb_device_cdc.c: 190: case 0x21:
  5901                           
  5902                           
  5903                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  5904  08CE  305E               	movlw	low _line_coding
  5905  08CF  0021               	movlb	1	; select bank1
  5906  08D0  00D3               	movwf	_inPipes^(0+128)	;volatile
  5907  08D1  3001               	movlw	high _line_coding
  5908  08D2  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5909  08D3  3000               	movlw	0
  5910  08D4  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5911  08D5  3007               	movlw	7
  5912  08D6  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5913  08D7  30C1               	movlw	193
  5914  08D8  00AE               	movwf	??_USBCheckCDCRequest^(0+128)
  5915  08D9  082E               	movf	??_USBCheckCDCRequest^(0+128),w
  5916  08DA  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
  5917                           
  5918                           ;usb_device_cdc.c: 195: break;
  5919  08DB  0008               	return
  5920  08DC                     l5719:	
  5921                           ;usb_device_cdc.c: 197: case 0x22:
  5922                           
  5923                           
  5924                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  5925  08DC  0020               	movlb	0	; select bank0
  5926  08DD  0852               	movf	82,w	;volatile
  5927  08DE  0021               	movlb	1	; select bank1
  5928  08DF  00AE               	movwf	??_USBCheckCDCRequest^(0+128)
  5929  08E0  082E               	movf	??_USBCheckCDCRequest^(0+128),w
  5930  08E1  0022               	movlb	2	; select bank2
  5931  08E2  00D1               	movwf	_control_signal_bitmap^(0+256)
  5932                           
  5933                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
  5934  08E3  0021               	movlb	1	; select bank1
  5935  08E4  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5936                           
  5937                           ;usb_device_cdc.c: 257: }
  5938                           
  5939                           ;usb_device_cdc.c: 256: break;
  5940                           
  5941                           ;usb_device_cdc.c: 255: default:
  5942                           
  5943                           ;usb_device_cdc.c: 231: break;
  5944  08E5  0008               	return
  5945  08E6                     l5725:	
  5946  08E6  0020               	movlb	0	; select bank0
  5947  08E7  0851               	movf	81,w	;volatile
  5948                           
  5949                           ; Switch size 1, requested type "space"
  5950                           ; Number of cases is 5, Range of values is 0 to 34
  5951                           ; switch strategies available:
  5952                           ; Name         Instructions Cycles
  5953                           ; simple_byte           16     9 (average)
  5954                           ; direct_byte           76     6 (fixed)
  5955                           ; jumptable            260     6 (fixed)
  5956                           ;	Chosen strategy is simple_byte
  5957  08E8  3A00               	xorlw	0	; case 0
  5958  08E9  1903               	skipnz
  5959  08EA  28AB               	goto	l5695
  5960  08EB  3A01               	xorlw	1	; case 1
  5961  08EC  1903               	skipnz
  5962  08ED  28B7               	goto	l5703
  5963  08EE  3A21               	xorlw	33	; case 32
  5964  08EF  1903               	skipnz
  5965  08F0  28BE               	goto	l5707
  5966  08F1  3A01               	xorlw	1	; case 33
  5967  08F2  1903               	skipnz
  5968  08F3  28CE               	goto	l5713
  5969  08F4  3A03               	xorlw	3	; case 34
  5970  08F5  1903               	skipnz
  5971  08F6  28DC               	goto	l5719
  5972  08F7  28F8               	goto	l46
  5973  08F8                     l46:	
  5974  08F8  0008               	return
  5975  08F9                     __end_of_USBCheckCDCRequest:	
  5976                           
  5977                           	psect	text19
  5978  1302                     __ptext19:	
  5979 ;; *************** function _CDCInitEP *****************
  5980 ;; Defined at:
  5981 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5998 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5999 ;;Total ram usage:        1 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:   12
  6002 ;; This function calls:
  6003 ;;		_USBEnableEndpoint
  6004 ;;		_USBTransferOnePacket
  6005 ;; This function is called by:
  6006 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           
  6011                           ;psect for function _CDCInitEP
  6012  1302                     _CDCInitEP:	
  6013                           
  6014                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
  6015                           
  6016                           ;incstack = 0
  6017                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6018  1302  3000               	movlw	0
  6019  1303  0022               	movlb	2	; select bank2
  6020  1304  00E1               	movwf	(_line_coding+3)^(0+256)
  6021  1305  3000               	movlw	0
  6022  1306  00E0               	movwf	(_line_coding+2)^(0+256)
  6023  1307  304B               	movlw	75
  6024  1308  00DF               	movwf	(_line_coding+1)^(0+256)
  6025  1309  3000               	movlw	0
  6026  130A  00DE               	movwf	_line_coding^(0+256)
  6027                           
  6028                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
  6029  130B  01E2               	clrf	(_line_coding^(0+256)+4)
  6030                           
  6031                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
  6032  130C  01E3               	clrf	(_line_coding^(0+256)+5)
  6033                           
  6034                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
  6035  130D  3008               	movlw	8
  6036  130E  0021               	movlb	1	; select bank1
  6037  130F  00BB               	movwf	??_CDCInitEP^(0+128)
  6038  1310  083B               	movf	??_CDCInitEP^(0+128),w
  6039  1311  0022               	movlb	2	; select bank2
  6040  1312  00E4               	movwf	(_line_coding^(0+256)+6)
  6041                           
  6042                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
  6043  1313  01D5               	clrf	_cdc_rx_len^(0+256)
  6044                           
  6045                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
  6046  1314  301A               	movlw	26
  6047  1315  0021               	movlb	1	; select bank1
  6048  1316  00BB               	movwf	??_CDCInitEP^(0+128)
  6049  1317  083B               	movf	??_CDCInitEP^(0+128),w
  6050  1318  00B5               	movwf	USBEnableEndpoint@options^(0+128)
  6051  1319  3001               	movlw	1
  6052  131A  3191  21C7  3193   	fcall	_USBEnableEndpoint
  6053                           
  6054                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  6055  131D  301E               	movlw	30
  6056  131E  0021               	movlb	1	; select bank1
  6057  131F  00BB               	movwf	??_CDCInitEP^(0+128)
  6058  1320  083B               	movf	??_CDCInitEP^(0+128),w
  6059  1321  00B5               	movwf	USBEnableEndpoint@options^(0+128)
  6060  1322  3002               	movlw	2
  6061  1323  3191  21C7  3193   	fcall	_USBEnableEndpoint
  6062                           
  6063                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  6064  1326  0021               	movlb	1	; select bank1
  6065  1327  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  6066  1328  30A0               	movlw	low _cdc_data_rx
  6067  1329  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  6068  132A  3001               	movlw	high _cdc_data_rx
  6069  132B  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  6070  132C  3040               	movlw	64
  6071  132D  00BB               	movwf	??_CDCInitEP^(0+128)
  6072  132E  083B               	movf	??_CDCInitEP^(0+128),w
  6073  132F  00B1               	movwf	USBTransferOnePacket@len^(0+128)
  6074  1330  3002               	movlw	2
  6075  1331  318C  249F         	fcall	_USBTransferOnePacket
  6076  1333  0021               	movlb	1	; select bank1
  6077  1334  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  6078  1335  0022               	movlb	2	; select bank2
  6079  1336  00C1               	movwf	(_CDCDataOutHandle+1)^(0+256)
  6080  1337  0021               	movlb	1	; select bank1
  6081  1338  082E               	movf	?_USBTransferOnePacket^(0+128),w
  6082  1339  0022               	movlb	2	; select bank2
  6083  133A  00C0               	movwf	_CDCDataOutHandle^(0+256)
  6084                           
  6085                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
  6086  133B  01BE               	clrf	_CDCDataInHandle^(0+256)
  6087  133C  01BF               	clrf	(_CDCDataInHandle+1)^(0+256)
  6088                           
  6089                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
  6090  133D  01D4               	clrf	_cdc_trf_state^(0+256)
  6091  133E  0008               	return
  6092  133F                     __end_of_CDCInitEP:	
  6093                           
  6094                           	psect	text20
  6095  11C7                     __ptext20:	
  6096 ;; *************** function _USBEnableEndpoint *****************
  6097 ;; Defined at:
  6098 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  ep              1    wreg     unsigned char 
  6101 ;;  options         1   21[BANK1 ] unsigned char 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  ep              1   26[BANK1 ] unsigned char 
  6104 ;;  p               2   24[BANK1 ] PTR unsigned char 
  6105 ;;		 -> UEP0(1), 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6115 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6116 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;Total ram usage:        6 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:   11
  6122 ;; This function calls:
  6123 ;;		_USBConfigureEndpoint
  6124 ;; This function is called by:
  6125 ;;		_CDCInitEP
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           
  6130                           ;psect for function _USBEnableEndpoint
  6131  11C7                     _USBEnableEndpoint:	
  6132                           
  6133                           ;incstack = 0
  6134                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6135                           ;USBEnableEndpoint@ep stored from wreg
  6136  11C7  0021               	movlb	1	; select bank1
  6137  11C8  00BA               	movwf	USBEnableEndpoint@ep^(0+128)
  6138                           
  6139                           ;usb_device.c: 880: unsigned char* p;
  6140                           ;usb_device.c: 884: if(options & 0x04)
  6141  11C9  1D35               	btfss	USBEnableEndpoint@options^(0+128),2
  6142  11CA  29D0               	goto	l5645
  6143                           
  6144                           ;usb_device.c: 885: {
  6145                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  6146  11CB  01AE               	clrf	USBConfigureEndpoint@direction^(0+128)
  6147  11CC  083A               	movf	USBEnableEndpoint@ep^(0+128),w
  6148  11CD  3194  2400  3191   	fcall	_USBConfigureEndpoint
  6149  11D0                     l5645:	
  6150                           
  6151                           ;usb_device.c: 887: }
  6152                           ;usb_device.c: 888: if(options & 0x02)
  6153  11D0  0021               	movlb	1	; select bank1
  6154  11D1  1CB5               	btfss	USBEnableEndpoint@options^(0+128),1
  6155  11D2  29D8               	goto	l5649
  6156                           
  6157                           ;usb_device.c: 889: {
  6158                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  6159  11D3  01AE               	clrf	USBConfigureEndpoint@direction^(0+128)
  6160  11D4  0AAE               	incf	USBConfigureEndpoint@direction^(0+128),f
  6161  11D5  083A               	movf	USBEnableEndpoint@ep^(0+128),w
  6162  11D6  3194  2400         	fcall	_USBConfigureEndpoint
  6163  11D8                     l5649:	
  6164                           
  6165                           ;usb_device.c: 891: }
  6166                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  6167  11D8  0021               	movlb	1	; select bank1
  6168  11D9  083A               	movf	USBEnableEndpoint@ep^(0+128),w
  6169  11DA  3E98               	addlw	152
  6170  11DB  00B6               	movwf	??_USBEnableEndpoint^(0+128)
  6171  11DC  01B7               	clrf	(??_USBEnableEndpoint^(0+128)+1)
  6172  11DD  300E               	movlw	14
  6173  11DE  3DB7               	addwfc	(??_USBEnableEndpoint^(0+128)+1),f
  6174  11DF  0836               	movf	??_USBEnableEndpoint^(0+128),w
  6175  11E0  00B8               	movwf	USBEnableEndpoint@p^(0+128)
  6176  11E1  0837               	movf	(??_USBEnableEndpoint+1)^(0+128),w
  6177  11E2  00B9               	movwf	(USBEnableEndpoint@p+1)^(0+128)
  6178                           
  6179                           ;usb_device.c: 901: *p = options;
  6180  11E3  0838               	movf	USBEnableEndpoint@p^(0+128),w
  6181  11E4  0086               	movwf	6
  6182  11E5  0839               	movf	(USBEnableEndpoint@p+1)^(0+128),w
  6183  11E6  0087               	movwf	7
  6184  11E7  0835               	movf	USBEnableEndpoint@options^(0+128),w
  6185  11E8  0081               	movwf	1
  6186  11E9  0008               	return
  6187  11EA                     __end_of_USBEnableEndpoint:	
  6188                           
  6189                           	psect	text21
  6190  1400                     __ptext21:	
  6191 ;; *************** function _USBConfigureEndpoint *****************
  6192 ;; Defined at:
  6193 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  EPNum           1    wreg     unsigned char 
  6196 ;;  direction       1   14[BANK1 ] unsigned char 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  EPNum           1   19[BANK1 ] unsigned char 
  6199 ;;  handle          1   20[BANK1 ] PTR volatile struct __BD
  6200 ;;		 -> BDT(48), 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6210 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6211 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;Total ram usage:        7 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:   10
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_USBEnableEndpoint
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           
  6225                           ;psect for function _USBConfigureEndpoint
  6226  1400                     _USBConfigureEndpoint:	
  6227                           
  6228                           ;incstack = 0
  6229                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  6230                           ;USBConfigureEndpoint@EPNum stored from wreg
  6231  1400  0021               	movlb	1	; select bank1
  6232  1401  00B3               	movwf	USBConfigureEndpoint@EPNum^(0+128)
  6233                           
  6234                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  6235                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  6236  1402  3020               	movlw	32
  6237  1403  00AF               	movwf	??_USBConfigureEndpoint^(0+128)
  6238  1404  082F               	movf	??_USBConfigureEndpoint^(0+128),w
  6239  1405  00B4               	movwf	USBConfigureEndpoint@handle^(0+128)
  6240                           
  6241                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  6242  1406  082E               	movf	USBConfigureEndpoint@direction^(0+128),w
  6243  1407  00AF               	movwf	??_USBConfigureEndpoint^(0+128)
  6244  1408  3001               	movlw	1
  6245  1409                     u5675:	
  6246  1409  35AF               	lslf	??_USBConfigureEndpoint^(0+128),f
  6247  140A  0B89               	decfsz	9,f
  6248  140B  2C09               	goto	u5675
  6249  140C  0833               	movf	USBConfigureEndpoint@EPNum^(0+128),w
  6250  140D  00B0               	movwf	(??_USBConfigureEndpoint+1)^(0+128)
  6251  140E  3001               	movlw	1
  6252  140F                     u5685:	
  6253  140F  35B0               	lslf	(??_USBConfigureEndpoint+1)^(0+128),f
  6254  1410  3EFF               	addlw	-1
  6255  1411  1D03               	skipz
  6256  1412  2C0F               	goto	u5685
  6257  1413  3530               	lslf	(??_USBConfigureEndpoint+1)^(0+128),w
  6258  1414  072F               	addwf	??_USBConfigureEndpoint^(0+128),w
  6259  1415  00B1               	movwf	(??_USBConfigureEndpoint+2)^(0+128)
  6260  1416  3001               	movlw	1
  6261  1417                     u5695:	
  6262  1417  35B1               	lslf	(??_USBConfigureEndpoint+2)^(0+128),f
  6263  1418  3EFF               	addlw	-1
  6264  1419  1D03               	skipz
  6265  141A  2C17               	goto	u5695
  6266  141B  3531               	lslf	(??_USBConfigureEndpoint+2)^(0+128),w
  6267  141C  00B2               	movwf	(??_USBConfigureEndpoint+3)^(0+128)
  6268  141D  0832               	movf	(??_USBConfigureEndpoint+3)^(0+128),w
  6269  141E  07B4               	addwf	USBConfigureEndpoint@handle^(0+128),f
  6270                           
  6271                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  6272  141F  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6273  1420  0086               	movwf	6
  6274  1421  0187               	clrf	7
  6275  1422  1381               	bcf	1,7
  6276                           
  6277                           ;usb_device.c: 1557: if(direction == 0)
  6278  1423  082E               	movf	USBConfigureEndpoint@direction^(0+128),w
  6279  1424  1D03               	btfss	3,2
  6280  1425  2C30               	goto	l5635
  6281                           
  6282                           ;usb_device.c: 1558: {
  6283                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  6284  1426  3533               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  6285  1427  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6286  1428  0086               	movwf	6
  6287  1429  3001               	movlw	1	; select bank2/3
  6288  142A  0087               	movwf	7
  6289  142B  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6290  142C  3FC0               	movwi [0]fsr1
  6291  142D  3000               	movlw	0
  6292  142E  3FC1               	movwi [1]fsr1
  6293                           
  6294                           ;usb_device.c: 1560: }
  6295  142F  2C38               	goto	l5637
  6296  1430                     l5635:	
  6297                           
  6298                           ;usb_device.c: 1561: else
  6299                           ;usb_device.c: 1562: {
  6300                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  6301  1430  3533               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  6302  1431  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6303  1432  0086               	movwf	6
  6304  1433  0187               	clrf	7
  6305  1434  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6306  1435  3FC0               	movwi [0]fsr1
  6307  1436  3000               	movlw	0
  6308  1437  3FC1               	movwi [1]fsr1
  6309  1438                     l5637:	
  6310                           
  6311                           ;usb_device.c: 1564: }
  6312                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  6313  1438  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6314  1439  0086               	movwf	6
  6315  143A  0187               	clrf	7
  6316  143B  1301               	bcf	1,6
  6317                           
  6318                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  6319  143C  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6320  143D  3E04               	addlw	4
  6321  143E  0086               	movwf	6
  6322  143F  0187               	clrf	7
  6323  1440  1701               	bsf	1,6
  6324  1441  0008               	return
  6325  1442                     __end_of_USBConfigureEndpoint:	
  6326                           
  6327                           	psect	text22
  6328  0801                     __ptext22:	
  6329 ;; *************** function _USBCtrlTrfOutHandler *****************
  6330 ;; Defined at:
  6331 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;		None
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;		None
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  1    wreg      void 
  6338 ;; Registers used:
  6339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6347 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6348 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6349 ;;Total ram usage:        2 bytes
  6350 ;; Hardware stack levels used:    1
  6351 ;; Hardware stack levels required when called:   12
  6352 ;; This function calls:
  6353 ;;		_USBCtrlTrfRxService
  6354 ;; This function is called by:
  6355 ;;		_USBCtrlEPService
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359                           
  6360                           ;psect for function _USBCtrlTrfOutHandler
  6361  0801                     _USBCtrlTrfOutHandler:	
  6362                           
  6363                           ;usb_device.c: 2540: if(controlTransferState == 2)
  6364                           
  6365                           ;incstack = 0
  6366                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6367  0801  3002               	movlw	2
  6368  0802  0021               	movlb	1	; select bank1
  6369  0803  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
  6370  0804  1D03               	btfss	3,2
  6371  0805  2809               	goto	l6409
  6372                           
  6373                           ;usb_device.c: 2541: {
  6374                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  6375  0806  3186  26F2         	fcall	_USBCtrlTrfRxService
  6376                           
  6377                           ;usb_device.c: 2543: }
  6378  0808  0008               	return
  6379  0809                     l6409:	
  6380                           
  6381                           ;usb_device.c: 2544: else
  6382                           ;usb_device.c: 2545: {
  6383                           ;usb_device.c: 2548: controlTransferState = 0;
  6384  0809  0021               	movlb	1	; select bank1
  6385  080A  01DC               	clrf	_controlTransferState^(0+128)	;volatile
  6386                           
  6387                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  6388  080B  0022               	movlb	2	; select bank2
  6389  080C  084C               	movf	_BothEP0OutUOWNsSet^(0+256),w	;volatile
  6390  080D  1D03               	btfss	3,2
  6391  080E  2835               	goto	l6421
  6392                           
  6393                           ;usb_device.c: 2556: {
  6394                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 16;
  6395  080F  0021               	movlb	1	; select bank1
  6396  0810  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6397  0811  3E01               	addlw	1
  6398  0812  00B4               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  6399  0813  3000               	movlw	0
  6400  0814  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6401  0815  00B5               	movwf	(??_USBCtrlTrfOutHandler+1)^(0+128)
  6402  0816  0834               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  6403  0817  0086               	movwf	6
  6404  0818  0835               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
  6405  0819  0087               	movwf	7
  6406  081A  3010               	movlw	16
  6407  081B  0081               	movwf	1
  6408                           
  6409                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6410  081C  3050               	movlw	80
  6411  081D  00B4               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  6412  081E  3000               	movlw	0
  6413  081F  00B5               	movwf	(??_USBCtrlTrfOutHandler^(0+128)+1)
  6414  0820  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6415  0821  0086               	movwf	6
  6416  0822  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6417  0823  0087               	movwf	7
  6418  0824  3142               	addfsr 1,2
  6419  0825  0834               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  6420  0826  3FC0               	movwi [0]fsr1
  6421  0827  0835               	movf	(??_USBCtrlTrfOutHandler^(0+128)+1),w
  6422  0828  3FC1               	movwi [1]fsr1
  6423                           
  6424                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6425  0829  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6426  082A  0086               	movwf	6
  6427  082B  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6428  082C  0087               	movwf	7
  6429  082D  300C               	movlw	12
  6430  082E  0081               	movwf	1
  6431                           
  6432                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6433  082F  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6434  0830  0086               	movwf	6
  6435  0831  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6436  0832  0087               	movwf	7
  6437  0833  1781               	bsf	1,7
  6438                           
  6439                           ;usb_device.c: 2561: }
  6440  0834  0008               	return
  6441  0835                     l6421:	
  6442                           
  6443                           ;usb_device.c: 2562: else
  6444                           ;usb_device.c: 2563: {
  6445                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  6446  0835  0022               	movlb	2	; select bank2
  6447  0836  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  6448  0837  0008               	return
  6449  0838                     __end_of_USBCtrlTrfOutHandler:	
  6450                           
  6451                           	psect	text23
  6452  06F2                     __ptext23:	
  6453 ;; *************** function _USBCtrlTrfRxService *****************
  6454 ;; Defined at:
  6455 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;		None
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  byteToRead      1   19[BANK1 ] unsigned char 
  6460 ;;  i               1   18[BANK1 ] unsigned char 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      void 
  6463 ;; Registers used:
  6464 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6473 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6474 ;;Total ram usage:        4 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:   11
  6477 ;; This function calls:
  6478 ;;		_USBCtrlEPAllowStatusStage
  6479 ;; This function is called by:
  6480 ;;		_USBCtrlTrfOutHandler
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           
  6485                           ;psect for function _USBCtrlTrfRxService
  6486  06F2                     _USBCtrlTrfRxService:	
  6487                           
  6488                           ;usb_device.c: 1854: uint8_t byteToRead;
  6489                           ;usb_device.c: 1855: uint8_t i;
  6490                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  6491                           
  6492                           ;incstack = 0
  6493                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6494  06F2  0021               	movlb	1	; select bank1
  6495  06F3  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6496  06F4  0086               	movwf	6
  6497  06F5  0187               	clrf	7
  6498  06F6  3F41               	moviw [1]fsr1
  6499  06F7  00B3               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  6500                           
  6501                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  6502  06F8  0833               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  6503  06F9  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6504  06FA  01B1               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  6505  06FB  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6506  06FC  024A               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
  6507  06FD  1D03               	skipz
  6508  06FE  2F01               	goto	u6315
  6509  06FF  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6510  0700  0249               	subwf	(_outPipes^(0+128)+3),w	;volatile
  6511  0701                     u6315:	
  6512  0701  1803               	skipnc
  6513  0702  2F07               	goto	l536
  6514                           
  6515                           ;usb_device.c: 1866: {
  6516                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  6517  0703  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
  6518  0704  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6519  0705  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6520  0706  00B3               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  6521  0707                     l536:	
  6522                           
  6523                           ;usb_device.c: 1868: }
  6524                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  6525  0707  0833               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  6526  0708  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6527  0709  01B1               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  6528  070A  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6529  070B  02C9               	subwf	(_outPipes^(0+128)+3),f	;volatile
  6530  070C  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6531  070D  3BCA               	subwfb	((_outPipes+1)^(0+128)+3),f	;volatile
  6532                           
  6533                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  6534  070E  01B2               	clrf	USBCtrlTrfRxService@i^(0+128)
  6535  070F                     l6173:	
  6536  070F  0833               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  6537  0710  0232               	subwf	USBCtrlTrfRxService@i^(0+128),w
  6538  0711  1803               	btfsc	3,0
  6539  0712  2F28               	goto	l6175
  6540                           
  6541                           ;usb_device.c: 1875: {
  6542                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  6543  0713  0832               	movf	USBCtrlTrfRxService@i^(0+128),w
  6544  0714  3E60               	addlw	96
  6545  0715  0086               	movwf	6
  6546  0716  0187               	clrf	7
  6547  0717  0801               	movf	1,w
  6548  0718  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6549  0719  0846               	movf	_outPipes^(0+128),w	;volatile
  6550  071A  0086               	movwf	6
  6551  071B  3001               	movlw	1	; select bank2/3
  6552  071C  0087               	movwf	7
  6553  071D  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6554  071E  0081               	movwf	1
  6555  071F  3001               	movlw	1
  6556  0720  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6557  0721  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6558  0722  07C6               	addwf	_outPipes^(0+128),f	;volatile
  6559  0723  3001               	movlw	1
  6560  0724  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6561  0725  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6562  0726  07B2               	addwf	USBCtrlTrfRxService@i^(0+128),f
  6563  0727  2F0F               	goto	l6173
  6564  0728                     l6175:	
  6565                           
  6566                           ;usb_device.c: 1877: }
  6567                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  6568  0728  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
  6569  0729  044A               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
  6570  072A  1903               	btfsc	3,2
  6571  072B  2F62               	goto	l6187
  6572                           
  6573                           ;usb_device.c: 1882: {
  6574                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 16;
  6575  072C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6576  072D  3E01               	addlw	1
  6577  072E  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6578  072F  3000               	movlw	0
  6579  0730  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6580  0731  00B1               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  6581  0732  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6582  0733  0086               	movwf	6
  6583  0734  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6584  0735  0087               	movwf	7
  6585  0736  3010               	movlw	16
  6586  0737  0081               	movwf	1
  6587                           
  6588                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6589  0738  3060               	movlw	96
  6590  0739  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6591  073A  3000               	movlw	0
  6592  073B  00B1               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  6593  073C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6594  073D  0086               	movwf	6
  6595  073E  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6596  073F  0087               	movwf	7
  6597  0740  3142               	addfsr 1,2
  6598  0741  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6599  0742  3FC0               	movwi [0]fsr1
  6600  0743  0831               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  6601  0744  3FC1               	movwi [1]fsr1
  6602                           
  6603                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  6604  0745  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6605  0746  0086               	movwf	6
  6606  0747  0187               	clrf	7
  6607  0748  1B01               	btfsc	1,6
  6608  0749  2F56               	goto	l6185
  6609                           
  6610                           ;usb_device.c: 1886: {
  6611                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6612  074A  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6613  074B  0086               	movwf	6
  6614  074C  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6615  074D  0087               	movwf	7
  6616  074E  3048               	movlw	72
  6617  074F  0081               	movwf	1
  6618                           
  6619                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6620  0750  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6621  0751  0086               	movwf	6
  6622  0752  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6623  0753  0087               	movwf	7
  6624  0754  1781               	bsf	1,7
  6625                           
  6626                           ;usb_device.c: 1889: }
  6627  0755  0008               	return
  6628  0756                     l6185:	
  6629                           
  6630                           ;usb_device.c: 1890: else
  6631                           ;usb_device.c: 1891: {
  6632                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  6633  0756  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6634  0757  0086               	movwf	6
  6635  0758  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6636  0759  0087               	movwf	7
  6637  075A  3008               	movlw	8
  6638  075B  0081               	movwf	1
  6639                           
  6640                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6641  075C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6642  075D  0086               	movwf	6
  6643  075E  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6644  075F  0087               	movwf	7
  6645  0760  1781               	bsf	1,7
  6646                           
  6647                           ;usb_device.c: 1894: }
  6648                           ;usb_device.c: 1895: }
  6649  0761  0008               	return
  6650  0762                     l6187:	
  6651                           
  6652                           ;usb_device.c: 1896: else
  6653                           ;usb_device.c: 1897: {
  6654                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 16;
  6655  0762  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6656  0763  3E01               	addlw	1
  6657  0764  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6658  0765  3000               	movlw	0
  6659  0766  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6660  0767  00B1               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  6661  0768  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6662  0769  0086               	movwf	6
  6663  076A  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6664  076B  0087               	movwf	7
  6665  076C  3010               	movlw	16
  6666  076D  0081               	movwf	1
  6667                           
  6668                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6669  076E  3050               	movlw	80
  6670  076F  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6671  0770  3000               	movlw	0
  6672  0771  00B1               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  6673  0772  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6674  0773  0086               	movwf	6
  6675  0774  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6676  0775  0087               	movwf	7
  6677  0776  3142               	addfsr 1,2
  6678  0777  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6679  0778  3FC0               	movwi [0]fsr1
  6680  0779  0831               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  6681  077A  3FC1               	movwi [1]fsr1
  6682                           
  6683                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6684  077B  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6685  077C  0086               	movwf	6
  6686  077D  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6687  077E  0087               	movwf	7
  6688  077F  3004               	movlw	4
  6689  0780  0081               	movwf	1
  6690                           
  6691                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6692  0781  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6693  0782  0086               	movwf	6
  6694  0783  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6695  0784  0087               	movwf	7
  6696  0785  1781               	bsf	1,7
  6697                           
  6698                           ;usb_device.c: 1915: {
  6699                           ;usb_device.c: 1921: outPipes[0].pFunc();
  6700  0786  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  6701  0787  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  6702                           
  6703                           ;usb_device.c: 1926: }
  6704                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  6705  0788  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
  6706                           
  6707                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  6708  0789  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  6709  078A  1D03               	btfss	3,2
  6710  078B  0008               	return
  6711                           
  6712                           ;usb_device.c: 1942: {
  6713                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  6714  078C  318A  22AD         	fcall	_USBCtrlEPAllowStatusStage
  6715  078E  0008               	return
  6716  078F                     __end_of_USBCtrlTrfRxService:	
  6717                           
  6718                           	psect	text24
  6719  0AAD                     __ptext24:	
  6720 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  6721 ;; Defined at:
  6722 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;		None
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  1    wreg      void 
  6729 ;; Registers used:
  6730 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;Total ram usage:        2 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; Hardware stack levels required when called:   10
  6743 ;; This function calls:
  6744 ;;		Nothing
  6745 ;; This function is called by:
  6746 ;;		_USBDeviceTasks
  6747 ;;		_USBCtrlEPServiceComplete
  6748 ;;		_USBCtrlTrfRxService
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           
  6753                           ;psect for function _USBCtrlEPAllowStatusStage
  6754  0AAD                     _USBCtrlEPAllowStatusStage:	
  6755                           
  6756                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  6757                           
  6758                           ;incstack = 0
  6759                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  6760  0AAD  0022               	movlb	2	; select bank2
  6761  0AAE  084A               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
  6762  0AAF  1D03               	btfss	3,2
  6763  0AB0  0008               	return
  6764                           
  6765                           ;usb_device.c: 1424: {
  6766                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  6767  0AB1  3001               	movlw	1
  6768  0AB2  0021               	movlb	1	; select bank1
  6769  0AB3  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6770  0AB4  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6771  0AB5  0022               	movlb	2	; select bank2
  6772  0AB6  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  6773                           
  6774                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  6775  0AB7  0849               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
  6776  0AB8  1D03               	btfss	3,2
  6777  0AB9  0008               	return
  6778                           
  6779                           ;usb_device.c: 1427: {
  6780                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  6781  0ABA  3001               	movlw	1
  6782  0ABB  0021               	movlb	1	; select bank1
  6783  0ABC  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6784  0ABD  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6785  0ABE  0022               	movlb	2	; select bank2
  6786  0ABF  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  6787                           
  6788                           ;usb_device.c: 1432: if(controlTransferState == 2)
  6789  0AC0  3002               	movlw	2
  6790  0AC1  0021               	movlb	1	; select bank1
  6791  0AC2  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
  6792  0AC3  1D03               	btfss	3,2
  6793  0AC4  2AD7               	goto	l5845
  6794                           
  6795                           ;usb_device.c: 1433: {
  6796                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  6797  0AC5  084D               	movf	_pBDTEntryIn^(0+128),w
  6798  0AC6  0086               	movwf	6
  6799  0AC7  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6800  0AC8  0087               	movwf	7
  6801  0AC9  3141               	addfsr 1,1
  6802  0ACA  0181               	clrf	1
  6803                           
  6804                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6805  0ACB  084D               	movf	_pBDTEntryIn^(0+128),w
  6806  0ACC  0086               	movwf	6
  6807  0ACD  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6808  0ACE  0087               	movwf	7
  6809  0ACF  3048               	movlw	72
  6810  0AD0  0081               	movwf	1
  6811                           
  6812                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6813  0AD1  084D               	movf	_pBDTEntryIn^(0+128),w
  6814  0AD2  0086               	movwf	6
  6815  0AD3  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6816  0AD4  0087               	movwf	7
  6817  0AD5  1781               	bsf	1,7
  6818                           
  6819                           ;usb_device.c: 1437: }
  6820  0AD6  0008               	return
  6821  0AD7                     l5845:	
  6822                           
  6823                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  6824  0AD7  035C               	decf	_controlTransferState^(0+128),w	;volatile
  6825  0AD8  1D03               	btfss	3,2
  6826  0AD9  0008               	return
  6827                           
  6828                           ;usb_device.c: 1439: {
  6829                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  6830  0ADA  0022               	movlb	2	; select bank2
  6831  0ADB  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  6832                           
  6833                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 16;
  6834  0ADC  3010               	movlw	16
  6835  0ADD  0021               	movlb	1	; select bank1
  6836  0ADE  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6837  0ADF  0A5E               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  6838  0AE0  0086               	movwf	6
  6839  0AE1  0187               	clrf	7
  6840  0AE2  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6841  0AE3  0081               	movwf	1
  6842                           
  6843                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6844  0AE4  3050               	movlw	80
  6845  0AE5  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6846  0AE6  3000               	movlw	0
  6847  0AE7  00AF               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  6848  0AE8  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6849  0AE9  3E02               	addlw	2
  6850  0AEA  0086               	movwf	6
  6851  0AEB  0187               	clrf	7
  6852  0AEC  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6853  0AED  3FC0               	movwi [0]fsr1
  6854  0AEE  082F               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  6855  0AEF  3FC1               	movwi [1]fsr1
  6856                           
  6857                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  6858  0AF0  3004               	movlw	4
  6859  0AF1  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6860  0AF2  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6861  0AF3  0086               	movwf	6
  6862  0AF4  0187               	clrf	7
  6863  0AF5  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6864  0AF6  0081               	movwf	1
  6865                           
  6866                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6867  0AF7  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6868  0AF8  0086               	movwf	6
  6869  0AF9  0187               	clrf	7
  6870  0AFA  1781               	bsf	1,7
  6871                           
  6872                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  6873  0AFB  3001               	movlw	1
  6874  0AFC  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6875  0AFD  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6876  0AFE  0022               	movlb	2	; select bank2
  6877  0AFF  00CC               	movwf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  6878                           
  6879                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 16;
  6880  0B00  0021               	movlb	1	; select bank1
  6881  0B01  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6882  0B02  3E01               	addlw	1
  6883  0B03  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6884  0B04  3000               	movlw	0
  6885  0B05  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6886  0B06  00AF               	movwf	(??_USBCtrlEPAllowStatusStage+1)^(0+128)
  6887  0B07  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6888  0B08  0086               	movwf	6
  6889  0B09  082F               	movf	(??_USBCtrlEPAllowStatusStage+1)^(0+128),w
  6890  0B0A  0087               	movwf	7
  6891  0B0B  3010               	movlw	16
  6892  0B0C  0081               	movwf	1
  6893                           
  6894                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6895  0B0D  3050               	movlw	80
  6896  0B0E  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6897  0B0F  3000               	movlw	0
  6898  0B10  00AF               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  6899  0B11  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6900  0B12  0086               	movwf	6
  6901  0B13  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6902  0B14  0087               	movwf	7
  6903  0B15  3142               	addfsr 1,2
  6904  0B16  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6905  0B17  3FC0               	movwi [0]fsr1
  6906  0B18  082F               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  6907  0B19  3FC1               	movwi [1]fsr1
  6908                           
  6909                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  6910  0B1A  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6911  0B1B  0086               	movwf	6
  6912  0B1C  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6913  0B1D  0087               	movwf	7
  6914  0B1E  3080               	movlw	128
  6915  0B1F  0081               	movwf	1
  6916  0B20  0008               	return
  6917  0B21                     __end_of_USBCtrlEPAllowStatusStage:	
  6918                           
  6919                           	psect	text25
  6920  0961                     __ptext25:	
  6921 ;; *************** function _USBCtrlTrfInHandler *****************
  6922 ;; Defined at:
  6923 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  lastDTS         1   19[BANK1 ] unsigned char 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;Total ram usage:        3 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:   11
  6944 ;; This function calls:
  6945 ;;		_USBCtrlTrfTxService
  6946 ;; This function is called by:
  6947 ;;		_USBCtrlEPService
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           
  6952                           ;psect for function _USBCtrlTrfInHandler
  6953  0961                     _USBCtrlTrfInHandler:	
  6954                           
  6955                           ;usb_device.c: 2594: uint8_t lastDTS;
  6956                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  6957                           
  6958                           ;incstack = 0
  6959                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6960  0961  0021               	movlb	1	; select bank1
  6961  0962  084D               	movf	_pBDTEntryIn^(0+128),w
  6962  0963  0086               	movwf	6
  6963  0964  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6964  0965  0087               	movwf	7
  6965  0966  3000               	movlw	0
  6966  0967  1B01               	btfsc	1,6
  6967  0968  3001               	movlw	1
  6968  0969  00B3               	movwf	USBCtrlTrfInHandler@lastDTS^(0+128)
  6969                           
  6970                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6971  096A  3004               	movlw	4
  6972  096B  064D               	xorwf	_pBDTEntryIn^(0+128),w
  6973  096C  00CD               	movwf	_pBDTEntryIn^(0+128)
  6974  096D  3000               	movlw	0
  6975  096E  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
  6976  096F  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  6977                           
  6978                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  6979  0970  3008               	movlw	8
  6980  0971  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
  6981  0972  1D03               	btfss	3,2
  6982  0973  2983               	goto	l6437
  6983                           
  6984                           ;usb_device.c: 2605: {
  6985                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  6986  0974  0020               	movlb	0	; select bank0
  6987  0975  0852               	movf	82,w	;volatile
  6988  0976  397F               	andlw	127
  6989  0977  003D               	movlb	29	; select bank29
  6990  0978  0096               	movwf	22	;volatile
  6991                           
  6992                           ;usb_device.c: 2607: if(UADDR != 0u)
  6993  0979  0816               	movf	22,w	;volatile
  6994  097A  1903               	btfsc	3,2
  6995  097B  297E               	goto	l6435
  6996                           
  6997                           ;usb_device.c: 2608: {
  6998                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  6999  097C  3010               	movlw	16
  7000  097D  297F               	goto	L7
  7001  097E                     l6435:	
  7002                           ;usb_device.c: 2610: }
  7003                           
  7004                           
  7005                           ;usb_device.c: 2611: else
  7006                           ;usb_device.c: 2612: {
  7007                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  7008  097E  3004               	movlw	4
  7009  097F                     L7:	
  7010  097F  0021               	movlb	1	; select bank1
  7011  0980  00B1               	movwf	??_USBCtrlTrfInHandler^(0+128)
  7012  0981  0831               	movf	??_USBCtrlTrfInHandler^(0+128),w
  7013  0982  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  7014  0983                     l6437:	
  7015                           
  7016                           ;usb_device.c: 2614: }
  7017                           ;usb_device.c: 2615: }
  7018                           ;usb_device.c: 2618: if(controlTransferState == 1)
  7019  0983  035C               	decf	_controlTransferState^(0+128),w	;volatile
  7020  0984  1D03               	btfss	3,2
  7021  0985  29C2               	goto	l621
  7022                           
  7023                           ;usb_device.c: 2619: {
  7024                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  7025  0986  3060               	movlw	96
  7026  0987  00B1               	movwf	??_USBCtrlTrfInHandler^(0+128)
  7027  0988  3000               	movlw	0
  7028  0989  00B2               	movwf	(??_USBCtrlTrfInHandler^(0+128)+1)
  7029  098A  084D               	movf	_pBDTEntryIn^(0+128),w
  7030  098B  0086               	movwf	6
  7031  098C  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7032  098D  0087               	movwf	7
  7033  098E  3142               	addfsr 1,2
  7034  098F  0831               	movf	??_USBCtrlTrfInHandler^(0+128),w
  7035  0990  3FC0               	movwi [0]fsr1
  7036  0991  0832               	movf	(??_USBCtrlTrfInHandler^(0+128)+1),w
  7037  0992  3FC1               	movwi [1]fsr1
  7038                           
  7039                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  7040  0993  318A  223B  3189   	fcall	_USBCtrlTrfTxService
  7041                           
  7042                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  7043  0996  3002               	movlw	2
  7044  0997  0021               	movlb	1	; select bank1
  7045  0998  065D               	xorwf	_shortPacketStatus^(0+128),w	;volatile
  7046  0999  1D03               	btfss	3,2
  7047  099A  29A7               	goto	l6447
  7048                           
  7049                           ;usb_device.c: 2628: {
  7050                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  7051  099B  084D               	movf	_pBDTEntryIn^(0+128),w
  7052  099C  0086               	movwf	6
  7053  099D  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7054  099E  0087               	movwf	7
  7055  099F  3004               	movlw	4
  7056  09A0  0081               	movwf	1
  7057                           
  7058                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7059  09A1  084D               	movf	_pBDTEntryIn^(0+128),w
  7060  09A2  0086               	movwf	6
  7061  09A3  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7062  09A4  0087               	movwf	7
  7063  09A5  1781               	bsf	1,7
  7064                           
  7065                           ;usb_device.c: 2633: }
  7066  09A6  0008               	return
  7067  09A7                     l6447:	
  7068                           
  7069                           ;usb_device.c: 2634: else
  7070                           ;usb_device.c: 2635: {
  7071                           ;usb_device.c: 2636: if(lastDTS == 0)
  7072  09A7  0833               	movf	USBCtrlTrfInHandler@lastDTS^(0+128),w
  7073  09A8  1D03               	btfss	3,2
  7074  09A9  29B6               	goto	l6451
  7075                           
  7076                           ;usb_device.c: 2637: {
  7077                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7078  09AA  084D               	movf	_pBDTEntryIn^(0+128),w
  7079  09AB  0086               	movwf	6
  7080  09AC  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7081  09AD  0087               	movwf	7
  7082  09AE  3048               	movlw	72
  7083  09AF  0081               	movwf	1
  7084                           
  7085                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7086  09B0  084D               	movf	_pBDTEntryIn^(0+128),w
  7087  09B1  0086               	movwf	6
  7088  09B2  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7089  09B3  0087               	movwf	7
  7090  09B4  1781               	bsf	1,7
  7091                           
  7092                           ;usb_device.c: 2640: }
  7093  09B5  0008               	return
  7094  09B6                     l6451:	
  7095                           
  7096                           ;usb_device.c: 2641: else
  7097                           ;usb_device.c: 2642: {
  7098                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  7099  09B6  084D               	movf	_pBDTEntryIn^(0+128),w
  7100  09B7  0086               	movwf	6
  7101  09B8  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7102  09B9  0087               	movwf	7
  7103  09BA  3008               	movlw	8
  7104  09BB  0081               	movwf	1
  7105                           
  7106                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7107  09BC  084D               	movf	_pBDTEntryIn^(0+128),w
  7108  09BD  0086               	movwf	6
  7109  09BE  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7110  09BF  0087               	movwf	7
  7111  09C0  1781               	bsf	1,7
  7112                           
  7113                           ;usb_device.c: 2645: }
  7114                           ;usb_device.c: 2646: }
  7115                           ;usb_device.c: 2647: }
  7116  09C1  0008               	return
  7117  09C2                     l621:	
  7118                           
  7119                           ;usb_device.c: 2648: else
  7120                           ;usb_device.c: 2649: {
  7121                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  7122  09C2  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
  7123  09C3  29C7               	goto	l6455
  7124                           
  7125                           ;usb_device.c: 2656: {
  7126                           ;usb_device.c: 2657: outPipes[0].pFunc();
  7127  09C4  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  7128  09C5  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  7129                           
  7130                           ;usb_device.c: 2658: }
  7131                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  7132  09C6  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
  7133  09C7                     l6455:	
  7134                           
  7135                           ;usb_device.c: 2660: }
  7136                           ;usb_device.c: 2662: controlTransferState = 0;
  7137  09C7  01DC               	clrf	_controlTransferState^(0+128)	;volatile
  7138  09C8  0008               	return
  7139  09C9                     __end_of_USBCtrlTrfInHandler:	
  7140                           
  7141                           	psect	text26
  7142  0A3B                     __ptext26:	
  7143 ;; *************** function _USBCtrlTrfTxService *****************
  7144 ;; Defined at:
  7145 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  byteToSend      1   16[BANK1 ] unsigned char 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  1    wreg      void 
  7152 ;; Registers used:
  7153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7160 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7161 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7162 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7163 ;;Total ram usage:        3 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:   10
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_USBCtrlEPAllowDataStage
  7170 ;;		_USBCtrlTrfInHandler
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           
  7175                           ;psect for function _USBCtrlTrfTxService
  7176  0A3B                     _USBCtrlTrfTxService:	
  7177                           
  7178                           ;usb_device.c: 1773: uint8_t byteToSend;
  7179                           ;usb_device.c: 1777: byteToSend = 16;
  7180                           
  7181                           ;incstack = 0
  7182 ;; hardware stack exceeded
  7183                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  7184  0A3B  3010               	movlw	16
  7185  0A3C  0021               	movlb	1	; select bank1
  7186  0A3D  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7187  0A3E  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7188  0A3F  00B0               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  7189                           
  7190                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)16)
  7191  0A40  3000               	movlw	0
  7192  0A41  0257               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  7193  0A42  3010               	movlw	16
  7194  0A43  1903               	skipnz
  7195  0A44  0256               	subwf	(_inPipes^(0+128)+3),w	;volatile
  7196  0A45  1803               	skipnc
  7197  0A46  2A57               	goto	l521
  7198                           
  7199                           ;usb_device.c: 1779: {
  7200                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  7201  0A47  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
  7202  0A48  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7203  0A49  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7204  0A4A  00B0               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  7205                           
  7206                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  7207  0A4B  085D               	movf	_shortPacketStatus^(0+128),w	;volatile
  7208  0A4C  1D03               	btfss	3,2
  7209  0A4D  2A50               	goto	l5771
  7210                           
  7211                           ;usb_device.c: 1788: {
  7212                           ;usb_device.c: 1789: shortPacketStatus = 1;
  7213  0A4E  3001               	movlw	1
  7214  0A4F  2A54               	goto	L8
  7215  0A50                     l5771:	
  7216                           ;usb_device.c: 1790: }
  7217                           
  7218                           
  7219                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  7220  0A50  035D               	decf	_shortPacketStatus^(0+128),w	;volatile
  7221  0A51  1D03               	btfss	3,2
  7222  0A52  2A57               	goto	l521
  7223                           
  7224                           ;usb_device.c: 1792: {
  7225                           ;usb_device.c: 1793: shortPacketStatus = 2;
  7226  0A53  3002               	movlw	2
  7227  0A54                     L8:	
  7228  0A54  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7229  0A55  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7230  0A56  00DD               	movwf	_shortPacketStatus^(0+128)	;volatile
  7231  0A57                     l521:	
  7232                           
  7233                           ;usb_device.c: 1794: }
  7234                           ;usb_device.c: 1795: }
  7235                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  7236  0A57  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7237  0A58  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7238  0A59  01AF               	clrf	(??_USBCtrlTrfTxService^(0+128)+1)
  7239  0A5A  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7240  0A5B  02D6               	subwf	(_inPipes^(0+128)+3),f	;volatile
  7241  0A5C  082F               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  7242  0A5D  3BD7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
  7243                           
  7244                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  7245  0A5E  084D               	movf	_pBDTEntryIn^(0+128),w
  7246  0A5F  3E01               	addlw	1
  7247  0A60  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7248  0A61  3000               	movlw	0
  7249  0A62  3D4E               	addwfc	(_pBDTEntryIn+1)^(0+128),w
  7250  0A63  00AF               	movwf	(??_USBCtrlTrfTxService+1)^(0+128)
  7251  0A64  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7252  0A65  0086               	movwf	6
  7253  0A66  082F               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  7254  0A67  0087               	movwf	7
  7255  0A68  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7256  0A69  0081               	movwf	1
  7257                           
  7258                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  7259  0A6A  3060               	movlw	96
  7260  0A6B  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7261  0A6C  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7262  0A6D  0022               	movlb	2	; select bank2
  7263  0A6E  00CF               	movwf	_pDst^(0+256)
  7264                           
  7265                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  7266  0A6F  0021               	movlb	1	; select bank1
  7267  0A70  1C55               	btfss	(_inPipes^(0+128)+2),0	;volatile
  7268  0A71  2A8C               	goto	l5791
  7269  0A72  2AA9               	goto	l5801
  7270  0A73                     l5783:	
  7271                           ;usb_device.c: 1810: {
  7272                           ;usb_device.c: 1811: while(byteToSend)
  7273                           
  7274                           
  7275                           ;usb_device.c: 1812: {
  7276                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  7277  0A73  0853               	movf	_inPipes^(0+128),w	;volatile
  7278  0A74  0084               	movwf	4
  7279  0A75  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  7280  0A76  0085               	movwf	5
  7281  0A77  0800               	movf	0,w	;code access
  7282  0A78  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7283  0A79  0022               	movlb	2	; select bank2
  7284  0A7A  084F               	movf	_pDst^(0+256),w
  7285  0A7B  0086               	movwf	6
  7286  0A7C  0187               	clrf	7
  7287  0A7D  0021               	movlb	1	; select bank1
  7288  0A7E  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7289  0A7F  0081               	movwf	1
  7290  0A80  3001               	movlw	1
  7291  0A81  07D3               	addwf	_inPipes^(0+128),f	;volatile
  7292  0A82  3000               	movlw	0
  7293  0A83  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  7294  0A84  3001               	movlw	1
  7295  0A85  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7296  0A86  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7297  0A87  0022               	movlb	2	; select bank2
  7298  0A88  07CF               	addwf	_pDst^(0+256),f
  7299                           
  7300                           ;usb_device.c: 1814: byteToSend--;
  7301  0A89  3001               	movlw	1
  7302  0A8A  0021               	movlb	1	; select bank1
  7303  0A8B  02B0               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  7304  0A8C                     l5791:	
  7305  0A8C  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7306  0A8D  1903               	btfsc	3,2
  7307  0A8E  0008               	return
  7308  0A8F  2A73               	goto	l5783
  7309  0A90                     l5793:	
  7310                           ;usb_device.c: 1817: else
  7311                           ;usb_device.c: 1818: {
  7312                           ;usb_device.c: 1819: while(byteToSend)
  7313                           
  7314                           ;usb_device.c: 1815: }
  7315                           ;usb_device.c: 1816: }
  7316                           
  7317                           
  7318                           ;usb_device.c: 1820: {
  7319                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  7320  0A90  0853               	movf	_inPipes^(0+128),w	;volatile
  7321  0A91  0084               	movwf	4
  7322  0A92  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  7323  0A93  0085               	movwf	5
  7324  0A94  0800               	movf	0,w	;code access
  7325  0A95  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7326  0A96  0022               	movlb	2	; select bank2
  7327  0A97  084F               	movf	_pDst^(0+256),w
  7328  0A98  0086               	movwf	6
  7329  0A99  0187               	clrf	7
  7330  0A9A  0021               	movlb	1	; select bank1
  7331  0A9B  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7332  0A9C  0081               	movwf	1
  7333  0A9D  3001               	movlw	1
  7334  0A9E  07D3               	addwf	_inPipes^(0+128),f	;volatile
  7335  0A9F  3000               	movlw	0
  7336  0AA0  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  7337  0AA1  3001               	movlw	1
  7338  0AA2  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7339  0AA3  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7340  0AA4  0022               	movlb	2	; select bank2
  7341  0AA5  07CF               	addwf	_pDst^(0+256),f
  7342                           
  7343                           ;usb_device.c: 1822: byteToSend--;
  7344  0AA6  3001               	movlw	1
  7345  0AA7  0021               	movlb	1	; select bank1
  7346  0AA8  02B0               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  7347  0AA9                     l5801:	
  7348  0AA9  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7349  0AAA  1903               	btfsc	3,2
  7350  0AAB  0008               	return
  7351  0AAC  2A90               	goto	l5793
  7352  0AAD                     __end_of_USBCtrlTrfTxService:	
  7353                           
  7354                           	psect	text27
  7355  04BD                     __ptext27:	
  7356 ;; *************** function _CDCTxService *****************
  7357 ;; Defined at:
  7358 ;;		line 835 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;		None
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;  byte_to_send    1   27[BANK1 ] unsigned char 
  7363 ;;  i               1   26[BANK1 ] unsigned char 
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  1    wreg      void 
  7366 ;; Registers used:
  7367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7376 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7377 ;;Total ram usage:        3 bytes
  7378 ;; Hardware stack levels used:    1
  7379 ;; Hardware stack levels required when called:   11
  7380 ;; This function calls:
  7381 ;;		_USBTransferOnePacket
  7382 ;; This function is called by:
  7383 ;;		_usb_task
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           
  7388                           ;psect for function _CDCTxService
  7389  04BD                     _CDCTxService:	
  7390                           
  7391                           ;usb_device_cdc.c: 837: uint8_t byte_to_send;
  7392                           ;usb_device_cdc.c: 838: uint8_t i;
  7393                           ;usb_device_cdc.c: 840: {PIE2bits.USBIE = 0;};
  7394                           
  7395                           ;incstack = 0
  7396                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7397  04BD  0021               	movlb	1	; select bank1
  7398  04BE  1112               	bcf	18,2	;volatile
  7399                           
  7400                           ;usb_device_cdc.c: 842: {};
  7401                           ;usb_device_cdc.c: 844: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  7402  04BF  0022               	movlb	2	; select bank2
  7403  04C0  083E               	movf	_CDCDataInHandle^(0+256),w
  7404  04C1  043F               	iorwf	(_CDCDataInHandle+1)^(0+256),w
  7405  04C2  1903               	btfsc	3,2
  7406  04C3  2CCD               	goto	l6711
  7407  04C4  083E               	movf	_CDCDataInHandle^(0+256),w
  7408  04C5  0086               	movwf	6
  7409  04C6  083F               	movf	(_CDCDataInHandle+1)^(0+256),w
  7410  04C7  0087               	movwf	7
  7411  04C8  1F81               	btfss	1,7
  7412  04C9  2CCD               	goto	l6711
  7413                           
  7414                           ;usb_device_cdc.c: 845: {
  7415                           ;usb_device_cdc.c: 846: {PIE2bits.USBIE = 1;};
  7416  04CA  0021               	movlb	1	; select bank1
  7417  04CB  1512               	bsf	18,2	;volatile
  7418                           
  7419                           ;usb_device_cdc.c: 847: return;
  7420  04CC  0008               	return
  7421  04CD                     l6711:	
  7422                           
  7423                           ;usb_device_cdc.c: 848: }
  7424                           ;usb_device_cdc.c: 855: if(cdc_trf_state == 3)
  7425  04CD  3003               	movlw	3
  7426  04CE  0022               	movlb	2	; select bank2
  7427  04CF  0654               	xorwf	_cdc_trf_state^(0+256),w
  7428  04D0  1903               	btfsc	3,2
  7429                           
  7430                           ;usb_device_cdc.c: 856: cdc_trf_state = 0;
  7431  04D1  01D4               	clrf	_cdc_trf_state^(0+256)
  7432                           
  7433                           ;usb_device_cdc.c: 861: if(cdc_trf_state == 0)
  7434  04D2  0854               	movf	_cdc_trf_state^(0+256),w
  7435  04D3  1D03               	btfss	3,2
  7436  04D4  2CD8               	goto	l6719
  7437                           
  7438                           ;usb_device_cdc.c: 862: {
  7439                           ;usb_device_cdc.c: 863: {PIE2bits.USBIE = 1;};
  7440  04D5  0021               	movlb	1	; select bank1
  7441  04D6  1512               	bsf	18,2	;volatile
  7442                           
  7443                           ;usb_device_cdc.c: 864: return;
  7444  04D7  0008               	return
  7445  04D8                     l6719:	
  7446                           
  7447                           ;usb_device_cdc.c: 865: }
  7448                           ;usb_device_cdc.c: 870: if(cdc_trf_state == 2)
  7449  04D8  3002               	movlw	2
  7450  04D9  0022               	movlb	2	; select bank2
  7451  04DA  0654               	xorwf	_cdc_trf_state^(0+256),w
  7452  04DB  1D03               	btfss	3,2
  7453  04DC  2CF8               	goto	l6725
  7454                           
  7455                           ;usb_device_cdc.c: 871: {
  7456                           ;usb_device_cdc.c: 872: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  7457  04DD  0021               	movlb	1	; select bank1
  7458  04DE  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  7459  04DF  0AAE               	incf	USBTransferOnePacket@dir^(0+128),f
  7460  04E0  3000               	movlw	0
  7461  04E1  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  7462  04E2  3000               	movlw	0
  7463  04E3  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  7464  04E4  01B1               	clrf	USBTransferOnePacket@len^(0+128)
  7465  04E5  3002               	movlw	2
  7466  04E6  318C  249F  3184   	fcall	_USBTransferOnePacket
  7467  04E9  0021               	movlb	1	; select bank1
  7468  04EA  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  7469  04EB  0022               	movlb	2	; select bank2
  7470  04EC  00BF               	movwf	(_CDCDataInHandle+1)^(0+256)
  7471  04ED  0021               	movlb	1	; select bank1
  7472  04EE  082E               	movf	?_USBTransferOnePacket^(0+128),w
  7473  04EF  0022               	movlb	2	; select bank2
  7474  04F0  00BE               	movwf	_CDCDataInHandle^(0+256)
  7475                           
  7476                           ;usb_device_cdc.c: 874: cdc_trf_state = 3;
  7477  04F1  3003               	movlw	3
  7478  04F2  0021               	movlb	1	; select bank1
  7479  04F3  00B9               	movwf	??_CDCTxService^(0+128)
  7480  04F4  0839               	movf	??_CDCTxService^(0+128),w
  7481  04F5  0022               	movlb	2	; select bank2
  7482  04F6  00D4               	movwf	_cdc_trf_state^(0+256)
  7483                           
  7484                           ;usb_device_cdc.c: 875: }
  7485  04F7  2D8C               	goto	l6773
  7486  04F8                     l6725:	
  7487                           
  7488                           ;usb_device_cdc.c: 876: else if(cdc_trf_state == 1)
  7489  04F8  0354               	decf	_cdc_trf_state^(0+256),w
  7490  04F9  1D03               	btfss	3,2
  7491  04FA  2D8C               	goto	l6773
  7492                           
  7493                           ;usb_device_cdc.c: 877: {
  7494                           ;usb_device_cdc.c: 881: if(cdc_tx_len > sizeof(cdc_data_tx))
  7495  04FB  3041               	movlw	65
  7496  04FC  0253               	subwf	_cdc_tx_len^(0+256),w
  7497  04FD  1C03               	skipc
  7498  04FE  2D01               	goto	l6731
  7499                           
  7500                           ;usb_device_cdc.c: 882: byte_to_send = sizeof(cdc_data_tx);
  7501  04FF  3040               	movlw	64
  7502  0500  2D03               	goto	L9
  7503  0501                     l6731:	
  7504                           
  7505                           ;usb_device_cdc.c: 883: else
  7506                           ;usb_device_cdc.c: 884: byte_to_send = cdc_tx_len;
  7507  0501  0022               	movlb	2	; select bank2
  7508  0502  0853               	movf	_cdc_tx_len^(0+256),w
  7509  0503                     L9:	
  7510  0503  0021               	movlb	1	; select bank1
  7511  0504  00B9               	movwf	??_CDCTxService^(0+128)
  7512  0505  0839               	movf	??_CDCTxService^(0+128),w
  7513  0506  00BB               	movwf	CDCTxService@byte_to_send^(0+128)
  7514                           
  7515                           ;usb_device_cdc.c: 889: cdc_tx_len = cdc_tx_len - byte_to_send;
  7516  0507  033B               	decf	CDCTxService@byte_to_send^(0+128),w
  7517  0508  3AFF               	xorlw	255
  7518  0509  0022               	movlb	2	; select bank2
  7519  050A  0753               	addwf	_cdc_tx_len^(0+256),w
  7520  050B  0021               	movlb	1	; select bank1
  7521  050C  00B9               	movwf	??_CDCTxService^(0+128)
  7522  050D  0839               	movf	??_CDCTxService^(0+128),w
  7523  050E  0022               	movlb	2	; select bank2
  7524  050F  00D3               	movwf	_cdc_tx_len^(0+256)
  7525                           
  7526                           ;usb_device_cdc.c: 891: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  7527  0510  3020               	movlw	(low (_cdc_data_tx| (0+512)))& (0+255)
  7528  0511  0021               	movlb	1	; select bank1
  7529  0512  00B9               	movwf	??_CDCTxService^(0+128)
  7530  0513  0839               	movf	??_CDCTxService^(0+128),w
  7531  0514  0022               	movlb	2	; select bank2
  7532  0515  00C2               	movwf	_pCDCDst^(0+256)
  7533                           
  7534                           ;usb_device_cdc.c: 893: i = byte_to_send;
  7535  0516  0021               	movlb	1	; select bank1
  7536  0517  083B               	movf	CDCTxService@byte_to_send^(0+128),w
  7537  0518  00B9               	movwf	??_CDCTxService^(0+128)
  7538  0519  0839               	movf	??_CDCTxService^(0+128),w
  7539  051A  00BA               	movwf	CDCTxService@i^(0+128)
  7540                           
  7541                           ;usb_device_cdc.c: 894: if(cdc_mem_type == 0x00)
  7542  051B  0022               	movlb	2	; select bank2
  7543  051C  0852               	movf	_cdc_mem_type^(0+256),w
  7544  051D  1903               	btfsc	3,2
  7545  051E  2D3E               	goto	l6751
  7546  051F  2D61               	goto	l6761
  7547  0520                     l6743:	
  7548                           ;usb_device_cdc.c: 895: {
  7549                           ;usb_device_cdc.c: 896: while(i)
  7550                           
  7551                           
  7552                           ;usb_device_cdc.c: 897: {
  7553                           ;usb_device_cdc.c: 898: *pCDCDst.bRam = *pCDCSrc.bRom;
  7554  0520  0022               	movlb	2	; select bank2
  7555  0521  0844               	movf	_pCDCSrc^(0+256),w
  7556  0522  0086               	movwf	6
  7557  0523  3003               	movlw	3	; select bank6/7
  7558  0524  0087               	movwf	7
  7559  0525  0801               	movf	1,w
  7560  0526  0021               	movlb	1	; select bank1
  7561  0527  00B9               	movwf	??_CDCTxService^(0+128)
  7562  0528  0022               	movlb	2	; select bank2
  7563  0529  0842               	movf	_pCDCDst^(0+256),w
  7564  052A  0086               	movwf	6
  7565  052B  3002               	movlw	2	; select bank4/5
  7566  052C  0087               	movwf	7
  7567  052D  0021               	movlb	1	; select bank1
  7568  052E  0839               	movf	??_CDCTxService^(0+128),w
  7569  052F  0081               	movwf	1
  7570                           
  7571                           ;usb_device_cdc.c: 899: pCDCDst.bRam++;
  7572  0530  3001               	movlw	1
  7573  0531  00B9               	movwf	??_CDCTxService^(0+128)
  7574  0532  0839               	movf	??_CDCTxService^(0+128),w
  7575  0533  0022               	movlb	2	; select bank2
  7576  0534  07C2               	addwf	_pCDCDst^(0+256),f
  7577                           
  7578                           ;usb_device_cdc.c: 900: pCDCSrc.bRom++;
  7579  0535  3001               	movlw	1
  7580  0536  0021               	movlb	1	; select bank1
  7581  0537  00B9               	movwf	??_CDCTxService^(0+128)
  7582  0538  0839               	movf	??_CDCTxService^(0+128),w
  7583  0539  0022               	movlb	2	; select bank2
  7584  053A  07C4               	addwf	_pCDCSrc^(0+256),f
  7585                           
  7586                           ;usb_device_cdc.c: 901: i--;
  7587  053B  3001               	movlw	1
  7588  053C  0021               	movlb	1	; select bank1
  7589  053D  02BA               	subwf	CDCTxService@i^(0+128),f
  7590  053E                     l6751:	
  7591  053E  0021               	movlb	1	; select bank1
  7592  053F  083A               	movf	CDCTxService@i^(0+128),w
  7593  0540  1903               	btfsc	3,2
  7594  0541  2D65               	goto	l6763
  7595  0542  2D20               	goto	l6743
  7596  0543                     l6753:	
  7597                           ;usb_device_cdc.c: 904: else
  7598                           ;usb_device_cdc.c: 905: {
  7599                           ;usb_device_cdc.c: 906: while(i)
  7600                           
  7601                           ;usb_device_cdc.c: 902: }
  7602                           ;usb_device_cdc.c: 903: }
  7603                           
  7604                           
  7605                           ;usb_device_cdc.c: 907: {
  7606                           ;usb_device_cdc.c: 908: *pCDCDst.bRam = *pCDCSrc.bRam;
  7607  0543  0022               	movlb	2	; select bank2
  7608  0544  0844               	movf	_pCDCSrc^(0+256),w
  7609  0545  0086               	movwf	6
  7610  0546  3003               	movlw	3	; select bank6/7
  7611  0547  0087               	movwf	7
  7612  0548  0801               	movf	1,w
  7613  0549  0021               	movlb	1	; select bank1
  7614  054A  00B9               	movwf	??_CDCTxService^(0+128)
  7615  054B  0022               	movlb	2	; select bank2
  7616  054C  0842               	movf	_pCDCDst^(0+256),w
  7617  054D  0086               	movwf	6
  7618  054E  3002               	movlw	2	; select bank4/5
  7619  054F  0087               	movwf	7
  7620  0550  0021               	movlb	1	; select bank1
  7621  0551  0839               	movf	??_CDCTxService^(0+128),w
  7622  0552  0081               	movwf	1
  7623                           
  7624                           ;usb_device_cdc.c: 909: pCDCDst.bRam++;
  7625  0553  3001               	movlw	1
  7626  0554  00B9               	movwf	??_CDCTxService^(0+128)
  7627  0555  0839               	movf	??_CDCTxService^(0+128),w
  7628  0556  0022               	movlb	2	; select bank2
  7629  0557  07C2               	addwf	_pCDCDst^(0+256),f
  7630                           
  7631                           ;usb_device_cdc.c: 910: pCDCSrc.bRam++;
  7632  0558  3001               	movlw	1
  7633  0559  0021               	movlb	1	; select bank1
  7634  055A  00B9               	movwf	??_CDCTxService^(0+128)
  7635  055B  0839               	movf	??_CDCTxService^(0+128),w
  7636  055C  0022               	movlb	2	; select bank2
  7637  055D  07C4               	addwf	_pCDCSrc^(0+256),f
  7638                           
  7639                           ;usb_device_cdc.c: 911: i--;
  7640  055E  3001               	movlw	1
  7641  055F  0021               	movlb	1	; select bank1
  7642  0560  02BA               	subwf	CDCTxService@i^(0+128),f
  7643  0561                     l6761:	
  7644  0561  0021               	movlb	1	; select bank1
  7645  0562  083A               	movf	CDCTxService@i^(0+128),w
  7646  0563  1D03               	btfss	3,2
  7647  0564  2D43               	goto	l6753
  7648  0565                     l6763:	
  7649                           
  7650                           ;usb_device_cdc.c: 912: }
  7651                           ;usb_device_cdc.c: 913: }
  7652                           ;usb_device_cdc.c: 919: if(cdc_tx_len == 0)
  7653  0565  0022               	movlb	2	; select bank2
  7654  0566  0853               	movf	_cdc_tx_len^(0+256),w
  7655  0567  1D03               	btfss	3,2
  7656  0568  2D76               	goto	l6771
  7657                           
  7658                           ;usb_device_cdc.c: 920: {
  7659                           ;usb_device_cdc.c: 921: if(byte_to_send == 64)
  7660  0569  3040               	movlw	64
  7661  056A  0021               	movlb	1	; select bank1
  7662  056B  063B               	xorwf	CDCTxService@byte_to_send^(0+128),w
  7663  056C  1D03               	btfss	3,2
  7664  056D  2D70               	goto	l6769
  7665                           
  7666                           ;usb_device_cdc.c: 922: cdc_trf_state = 2;
  7667  056E  3002               	movlw	2
  7668  056F  2D72               	goto	L10
  7669  0570                     l6769:	
  7670                           
  7671                           ;usb_device_cdc.c: 923: else
  7672                           ;usb_device_cdc.c: 924: cdc_trf_state = 3;
  7673  0570  3003               	movlw	3
  7674  0571  0021               	movlb	1	; select bank1
  7675  0572                     L10:	
  7676  0572  00B9               	movwf	??_CDCTxService^(0+128)
  7677  0573  0839               	movf	??_CDCTxService^(0+128),w
  7678  0574  0022               	movlb	2	; select bank2
  7679  0575  00D4               	movwf	_cdc_trf_state^(0+256)
  7680  0576                     l6771:	
  7681                           
  7682                           ;usb_device_cdc.c: 925: }
  7683                           ;usb_device_cdc.c: 926: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  7684  0576  0021               	movlb	1	; select bank1
  7685  0577  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  7686  0578  0AAE               	incf	USBTransferOnePacket@dir^(0+128),f
  7687  0579  3020               	movlw	low _cdc_data_tx
  7688  057A  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  7689  057B  3002               	movlw	high _cdc_data_tx
  7690  057C  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  7691  057D  083B               	movf	CDCTxService@byte_to_send^(0+128),w
  7692  057E  00B9               	movwf	??_CDCTxService^(0+128)
  7693  057F  0839               	movf	??_CDCTxService^(0+128),w
  7694  0580  00B1               	movwf	USBTransferOnePacket@len^(0+128)
  7695  0581  3002               	movlw	2
  7696  0582  318C  249F         	fcall	_USBTransferOnePacket
  7697  0584  0021               	movlb	1	; select bank1
  7698  0585  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  7699  0586  0022               	movlb	2	; select bank2
  7700  0587  00BF               	movwf	(_CDCDataInHandle+1)^(0+256)
  7701  0588  0021               	movlb	1	; select bank1
  7702  0589  082E               	movf	?_USBTransferOnePacket^(0+128),w
  7703  058A  0022               	movlb	2	; select bank2
  7704  058B  00BE               	movwf	_CDCDataInHandle^(0+256)
  7705  058C                     l6773:	
  7706                           
  7707                           ;usb_device_cdc.c: 928: }
  7708                           ;usb_device_cdc.c: 930: {PIE2bits.USBIE = 1;};
  7709  058C  0021               	movlb	1	; select bank1
  7710  058D  1512               	bsf	18,2	;volatile
  7711  058E  0008               	return
  7712  058F                     __end_of_CDCTxService:	
  7713                           
  7714                           	psect	text28
  7715  137F                     __ptext28:	
  7716 ;; *************** function _gpio_task *****************
  7717 ;; Defined at:
  7718 ;;		line 96 in file "main.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;		None
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  has_output      1   32[BANK1 ] unsigned char 
  7723 ;;  rx_ptr          1   33[BANK1 ] unsigned char 
  7724 ;;  tx_ptr          1   34[BANK1 ] unsigned char 
  7725 ;;  bytes_rcvd      1   31[BANK1 ] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;Total ram usage:        6 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:   12
  7742 ;; This function calls:
  7743 ;;		_getsUSBUSART
  7744 ;;		_process_gpio_cmd
  7745 ;;		_putUSBUSART
  7746 ;; This function is called by:
  7747 ;;		_main
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           
  7752                           ;psect for function _gpio_task
  7753  137F                     _gpio_task:	
  7754                           
  7755                           ;main.c: 97: static uint8_t usb_rx_buf[64];
  7756                           ;main.c: 98: static uint8_t usb_tx_buf[64];
  7757                           ;main.c: 100: if ((cdc_trf_state == 0)) {
  7758                           
  7759                           ;incstack = 0
  7760                           ; Regs used in _gpio_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7761  137F  0022               	movlb	2	; select bank2
  7762  1380  0854               	movf	_cdc_trf_state^(0+256),w
  7763  1381  1D03               	btfss	3,2
  7764  1382  0008               	return
  7765                           
  7766                           ;main.c: 101: uint8_t bytes_rcvd = getsUSBUSART(usb_rx_buf, 64);
  7767  1383  3040               	movlw	64
  7768  1384  0021               	movlb	1	; select bank1
  7769  1385  00BD               	movwf	??_gpio_task^(0+128)
  7770  1386  083D               	movf	??_gpio_task^(0+128),w
  7771  1387  00B9               	movwf	getsUSBUSART@len^(0+128)
  7772  1388  30A0               	movlw	(low (gpio_task@usb_rx_buf| (0+512)))& (0+255)
  7773  1389  3196  268A  3193   	fcall	_getsUSBUSART
  7774  138C  0021               	movlb	1	; select bank1
  7775  138D  00BE               	movwf	(??_gpio_task+1)^(0+128)
  7776  138E  083E               	movf	(??_gpio_task+1)^(0+128),w
  7777  138F  00BF               	movwf	gpio_task@bytes_rcvd^(0+128)
  7778                           
  7779                           ;main.c: 102: uint8_t tx_ptr = 0;
  7780  1390  01C2               	clrf	gpio_task@tx_ptr^(0+128)
  7781                           
  7782                           ;main.c: 104: for (uint8_t rx_ptr = 0; rx_ptr < bytes_rcvd; rx_ptr++) {
  7783  1391  01C1               	clrf	gpio_task@rx_ptr^(0+128)
  7784  1392                     l6953:	
  7785  1392  083F               	movf	gpio_task@bytes_rcvd^(0+128),w
  7786  1393  0241               	subwf	gpio_task@rx_ptr^(0+128),w
  7787  1394  1803               	btfsc	3,0
  7788  1395  2BB4               	goto	l6955
  7789                           
  7790                           ;main.c: 105: bool has_output = process_gpio_cmd(usb_rx_buf[rx_ptr], &usb_tx_buf[tx_ptr]
      +                          );
  7791  1396  0842               	movf	gpio_task@tx_ptr^(0+128),w
  7792  1397  3E20               	addlw	(low (gpio_task@usb_tx_buf| (0+768)))& (0+255)
  7793  1398  00BD               	movwf	??_gpio_task^(0+128)
  7794  1399  083D               	movf	??_gpio_task^(0+128),w
  7795  139A  00AE               	movwf	process_gpio_cmd@rsp^(0+128)
  7796  139B  0841               	movf	gpio_task@rx_ptr^(0+128),w
  7797  139C  3EA0               	addlw	(low (gpio_task@usb_rx_buf| (0+512)))& (0+255)
  7798  139D  0086               	movwf	6
  7799  139E  3002               	movlw	2	; select bank5/6
  7800  139F  0087               	movwf	7
  7801  13A0  0801               	movf	1,w
  7802  13A1  3193  233F  3193   	fcall	_process_gpio_cmd
  7803  13A4  0021               	movlb	1	; select bank1
  7804  13A5  00BE               	movwf	(??_gpio_task+1)^(0+128)
  7805  13A6  083E               	movf	(??_gpio_task+1)^(0+128),w
  7806  13A7  00C0               	movwf	gpio_task@has_output^(0+128)
  7807                           
  7808                           ;main.c: 107: if (has_output) {
  7809  13A8  0840               	movf	gpio_task@has_output^(0+128),w
  7810  13A9  1903               	btfsc	3,2
  7811  13AA  2BAF               	goto	l241
  7812                           
  7813                           ;main.c: 108: tx_ptr += 1;
  7814  13AB  3001               	movlw	1
  7815  13AC  00BD               	movwf	??_gpio_task^(0+128)
  7816  13AD  083D               	movf	??_gpio_task^(0+128),w
  7817  13AE  07C2               	addwf	gpio_task@tx_ptr^(0+128),f
  7818  13AF                     l241:	
  7819  13AF  3001               	movlw	1
  7820  13B0  00BD               	movwf	??_gpio_task^(0+128)
  7821  13B1  083D               	movf	??_gpio_task^(0+128),w
  7822  13B2  07C1               	addwf	gpio_task@rx_ptr^(0+128),f
  7823  13B3  2B92               	goto	l6953
  7824  13B4                     l6955:	
  7825                           
  7826                           ;main.c: 109: }
  7827                           ;main.c: 110: }
  7828                           ;main.c: 112: if (tx_ptr > 0) {
  7829  13B4  0842               	movf	gpio_task@tx_ptr^(0+128),w
  7830  13B5  1903               	btfsc	3,2
  7831  13B6  0008               	return
  7832                           
  7833                           ;main.c: 113: putUSBUSART(usb_tx_buf, tx_ptr);
  7834  13B7  0842               	movf	gpio_task@tx_ptr^(0+128),w
  7835  13B8  00BD               	movwf	??_gpio_task^(0+128)
  7836  13B9  083D               	movf	??_gpio_task^(0+128),w
  7837  13BA  00AE               	movwf	putUSBUSART@length^(0+128)
  7838  13BB  3020               	movlw	(low (gpio_task@usb_tx_buf| (0+768)))& (0+255)
  7839  13BC  3190  20D7         	fcall	_putUSBUSART
  7840  13BE  0008               	return
  7841  13BF                     __end_of_gpio_task:	
  7842                           
  7843                           	psect	text29
  7844  10D7                     __ptext29:	
  7845 ;; *************** function _putUSBUSART *****************
  7846 ;; Defined at:
  7847 ;;		line 555 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;  data            1    wreg     PTR unsigned char 
  7850 ;;		 -> gpio_task@usb_tx_buf(64), 
  7851 ;;  length          1   14[BANK1 ] unsigned char 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;  data            1   16[BANK1 ] PTR unsigned char 
  7854 ;;		 -> gpio_task@usb_tx_buf(64), 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, status,2, status,0
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7864 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7867 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;Total ram usage:        3 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:   10
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_gpio_task
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           
  7879                           ;psect for function _putUSBUSART
  7880  10D7                     _putUSBUSART:	
  7881                           
  7882                           ;incstack = 0
  7883                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  7884                           ;putUSBUSART@data stored from wreg
  7885  10D7  0021               	movlb	1	; select bank1
  7886  10D8  00B0               	movwf	putUSBUSART@data^(0+128)
  7887                           
  7888                           ;usb_device_cdc.c: 580: {PIE2bits.USBIE = 0;};
  7889  10D9  1112               	bcf	18,2	;volatile
  7890                           
  7891                           ;usb_device_cdc.c: 581: if(cdc_trf_state == 0)
  7892  10DA  0022               	movlb	2	; select bank2
  7893  10DB  0854               	movf	_cdc_trf_state^(0+256),w
  7894  10DC  1D03               	btfss	3,2
  7895  10DD  28EE               	goto	l4843
  7896                           
  7897                           ;usb_device_cdc.c: 582: {
  7898                           ;usb_device_cdc.c: 583: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  7899  10DE  0021               	movlb	1	; select bank1
  7900  10DF  0830               	movf	putUSBUSART@data^(0+128),w
  7901  10E0  00AF               	movwf	??_putUSBUSART^(0+128)
  7902  10E1  082F               	movf	??_putUSBUSART^(0+128),w
  7903  10E2  0022               	movlb	2	; select bank2
  7904  10E3  00C4               	movwf	_pCDCSrc^(0+256)
  7905  10E4  0021               	movlb	1	; select bank1
  7906  10E5  082E               	movf	putUSBUSART@length^(0+128),w
  7907  10E6  00AF               	movwf	??_putUSBUSART^(0+128)
  7908  10E7  082F               	movf	??_putUSBUSART^(0+128),w
  7909  10E8  0022               	movlb	2	; select bank2
  7910  10E9  00D3               	movwf	_cdc_tx_len^(0+256)
  7911  10EA  01D2               	clrf	_cdc_mem_type^(0+256)
  7912  10EB  0AD2               	incf	_cdc_mem_type^(0+256),f
  7913  10EC  01D4               	clrf	_cdc_trf_state^(0+256)
  7914  10ED  0AD4               	incf	_cdc_trf_state^(0+256),f
  7915  10EE                     l4843:	
  7916                           
  7917                           ;usb_device_cdc.c: 584: }
  7918                           ;usb_device_cdc.c: 585: {PIE2bits.USBIE = 1;};
  7919  10EE  0021               	movlb	1	; select bank1
  7920  10EF  1512               	bsf	18,2	;volatile
  7921  10F0  0008               	return
  7922  10F1                     __end_of_putUSBUSART:	
  7923                           
  7924                           	psect	text30
  7925  133F                     __ptext30:	
  7926 ;; *************** function _process_gpio_cmd *****************
  7927 ;; Defined at:
  7928 ;;		line 64 in file "main.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  cmd             1    wreg     unsigned char 
  7931 ;;  rsp             1   14[BANK1 ] PTR unsigned char 
  7932 ;;		 -> gpio_task@usb_tx_buf(64), 
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  cmd             1   17[BANK1 ] unsigned char 
  7935 ;;  cmd_type        1   16[BANK1 ] unsigned char 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  1    wreg      unsigned char 
  7938 ;; Registers used:
  7939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7945 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7946 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7947 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7948 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;Total ram usage:        4 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:   10
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_gpio_task
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           
  7960                           ;psect for function _process_gpio_cmd
  7961  133F                     _process_gpio_cmd:	
  7962                           
  7963                           ;incstack = 0
  7964                           ; Regs used in _process_gpio_cmd: [wreg-fsr1h+status,2+status,0]
  7965                           ;process_gpio_cmd@cmd stored from wreg
  7966  133F  0021               	movlb	1	; select bank1
  7967  1340  00B1               	movwf	process_gpio_cmd@cmd^(0+128)
  7968                           
  7969                           ;main.c: 65: static uint8_t gpio_dir = 0;
  7970                           ;main.c: 66: uint8_t cmd_type = cmd & 0xC0;
  7971  1341  0831               	movf	process_gpio_cmd@cmd^(0+128),w
  7972  1342  39C0               	andlw	192
  7973  1343  00AF               	movwf	??_process_gpio_cmd^(0+128)
  7974  1344  082F               	movf	??_process_gpio_cmd^(0+128),w
  7975  1345  00B0               	movwf	process_gpio_cmd@cmd_type^(0+128)
  7976                           
  7977                           ;main.c: 68: switch (cmd_type) {
  7978  1346  2B70               	goto	l5091
  7979  1347                     l5063:	
  7980                           ;main.c: 69: case 0x00:
  7981                           
  7982                           
  7983                           ;main.c: 70: gpio_dir = cmd & 0x3f;
  7984  1347  0831               	movf	process_gpio_cmd@cmd^(0+128),w
  7985  1348  393F               	andlw	63
  7986  1349  00AF               	movwf	??_process_gpio_cmd^(0+128)
  7987  134A  082F               	movf	??_process_gpio_cmd^(0+128),w
  7988  134B  0022               	movlb	2	; select bank2
  7989  134C  00D0               	movwf	process_gpio_cmd@gpio_dir^(0+256)
  7990                           
  7991                           ;main.c: 71: TRISC = gpio_dir;
  7992  134D  0850               	movf	process_gpio_cmd@gpio_dir^(0+256),w
  7993  134E  0021               	movlb	1	; select bank1
  7994  134F  008E               	movwf	14	;volatile
  7995                           
  7996                           ;main.c: 72: return 0;
  7997  1350  3000               	movlw	0
  7998  1351  0008               	return
  7999  1352                     l5071:	
  8000                           ;main.c: 74: case 0x40:
  8001                           
  8002                           
  8003                           ;main.c: 75: return 0;
  8004  1352  3000               	movlw	0
  8005  1353  0008               	return
  8006  1354                     l5075:	
  8007                           ;main.c: 77: case 0x80:
  8008                           
  8009                           
  8010                           ;main.c: 78: LATC = cmd & ~gpio_dir;
  8011  1354  0022               	movlb	2	; select bank2
  8012  1355  0950               	comf	process_gpio_cmd@gpio_dir^(0+256),w
  8013  1356  0021               	movlb	1	; select bank1
  8014  1357  0531               	andwf	process_gpio_cmd@cmd^(0+128),w
  8015  1358  0022               	movlb	2	; select bank2
  8016  1359  008E               	movwf	14	;volatile
  8017                           
  8018                           ;main.c: 79: return 0;
  8019  135A  3000               	movlw	0
  8020  135B  0008               	return
  8021  135C                     l5081:	
  8022                           ;main.c: 81: case 0xC0:
  8023                           
  8024                           
  8025                           ;main.c: 82: LATC = cmd & ~gpio_dir;
  8026  135C  0022               	movlb	2	; select bank2
  8027  135D  0950               	comf	process_gpio_cmd@gpio_dir^(0+256),w
  8028  135E  0021               	movlb	1	; select bank1
  8029  135F  0531               	andwf	process_gpio_cmd@cmd^(0+128),w
  8030  1360  0022               	movlb	2	; select bank2
  8031  1361  008E               	movwf	14	;volatile
  8032                           
  8033                           ;main.c: 83: (*rsp) = PORTC & gpio_dir;
  8034  1362  0020               	movlb	0	; select bank0
  8035  1363  080E               	movf	14,w	;volatile
  8036  1364  0022               	movlb	2	; select bank2
  8037  1365  0550               	andwf	process_gpio_cmd@gpio_dir^(0+256),w
  8038  1366  0021               	movlb	1	; select bank1
  8039  1367  00AF               	movwf	??_process_gpio_cmd^(0+128)
  8040  1368  082E               	movf	process_gpio_cmd@rsp^(0+128),w
  8041  1369  0086               	movwf	6
  8042  136A  3003               	movlw	3	; select bank6/7
  8043  136B  0087               	movwf	7
  8044  136C  082F               	movf	??_process_gpio_cmd^(0+128),w
  8045  136D  0081               	movwf	1
  8046                           
  8047                           ;main.c: 84: return 1;
  8048  136E  3001               	movlw	1
  8049                           
  8050                           ;main.c: 85: }
  8051  136F  0008               	return
  8052  1370                     l5091:	
  8053  1370  0830               	movf	process_gpio_cmd@cmd_type^(0+128),w
  8054                           
  8055                           ; Switch size 1, requested type "space"
  8056                           ; Number of cases is 4, Range of values is 0 to 192
  8057                           ; switch strategies available:
  8058                           ; Name         Instructions Cycles
  8059                           ; simple_byte           13     7 (average)
  8060                           ; jumptable            260     6 (fixed)
  8061                           ;	Chosen strategy is simple_byte
  8062  1371  3A00               	xorlw	0	; case 0
  8063  1372  1903               	skipnz
  8064  1373  2B47               	goto	l5063
  8065  1374  3A40               	xorlw	64	; case 64
  8066  1375  1903               	skipnz
  8067  1376  2B52               	goto	l5071
  8068  1377  3AC0               	xorlw	192	; case 128
  8069  1378  1903               	skipnz
  8070  1379  2B54               	goto	l5075
  8071  137A  3A40               	xorlw	64	; case 192
  8072  137B  1903               	skipnz
  8073  137C  2B5C               	goto	l5081
  8074  137D  2B7E               	goto	l224
  8075  137E                     l224:	
  8076  137E  0008               	return
  8077  137F                     __end_of_process_gpio_cmd:	
  8078                           
  8079                           	psect	text31
  8080  168A                     __ptext31:	
  8081 ;; *************** function _getsUSBUSART *****************
  8082 ;; Defined at:
  8083 ;;		line 484 in file "mcc_generated_files/usb/usb_device_cdc.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  buffer          1    wreg     PTR unsigned char 
  8086 ;;		 -> gpio_task@usb_rx_buf(64), 
  8087 ;;  len             1   25[BANK1 ] unsigned char 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  buffer          1   28[BANK1 ] PTR unsigned char 
  8090 ;;		 -> gpio_task@usb_rx_buf(64), 
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      unsigned char 
  8093 ;; Registers used:
  8094 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8100 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8102 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8103 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8104 ;;Total ram usage:        4 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:   11
  8107 ;; This function calls:
  8108 ;;		_USBTransferOnePacket
  8109 ;; This function is called by:
  8110 ;;		_gpio_task
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           
  8115                           ;psect for function _getsUSBUSART
  8116  168A                     _getsUSBUSART:	
  8117                           
  8118                           ;incstack = 0
  8119                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8120                           ;getsUSBUSART@buffer stored from wreg
  8121  168A  0021               	movlb	1	; select bank1
  8122  168B  00BC               	movwf	getsUSBUSART@buffer^(0+128)
  8123                           
  8124                           ;usb_device_cdc.c: 486: cdc_rx_len = 0;
  8125  168C  0022               	movlb	2	; select bank2
  8126  168D  01D5               	clrf	_cdc_rx_len^(0+256)
  8127                           
  8128                           ;usb_device_cdc.c: 488: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  8129  168E  0840               	movf	_CDCDataOutHandle^(0+256),w
  8130  168F  0441               	iorwf	(_CDCDataOutHandle+1)^(0+256),w
  8131  1690  1903               	btfsc	3,2
  8132  1691  2E98               	goto	l6685
  8133  1692  0840               	movf	_CDCDataOutHandle^(0+256),w
  8134  1693  0086               	movwf	6
  8135  1694  0841               	movf	(_CDCDataOutHandle+1)^(0+256),w
  8136  1695  0087               	movwf	7
  8137  1696  1B81               	btfsc	1,7
  8138  1697  2EE3               	goto	l6699
  8139  1698                     l6685:	
  8140                           
  8141                           ;usb_device_cdc.c: 489: {
  8142                           ;usb_device_cdc.c: 494: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  8143  1698  0840               	movf	_CDCDataOutHandle^(0+256),w
  8144  1699  0086               	movwf	6
  8145  169A  0841               	movf	(_CDCDataOutHandle+1)^(0+256),w
  8146  169B  0087               	movwf	7
  8147  169C  3141               	addfsr 1,1
  8148  169D  0021               	movlb	1	; select bank1
  8149  169E  0839               	movf	getsUSBUSART@len^(0+128),w
  8150  169F  0201               	subwf	1,w
  8151  16A0  1803               	skipnc
  8152  16A1  2EAD               	goto	l6689
  8153                           
  8154                           ;usb_device_cdc.c: 495: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  8155  16A2  0022               	movlb	2	; select bank2
  8156  16A3  0840               	movf	_CDCDataOutHandle^(0+256),w
  8157  16A4  0086               	movwf	6
  8158  16A5  0841               	movf	(_CDCDataOutHandle+1)^(0+256),w
  8159  16A6  0087               	movwf	7
  8160  16A7  3141               	addfsr 1,1
  8161  16A8  0801               	movf	1,w
  8162  16A9  0021               	movlb	1	; select bank1
  8163  16AA  00BA               	movwf	??_getsUSBUSART^(0+128)
  8164  16AB  083A               	movf	??_getsUSBUSART^(0+128),w
  8165  16AC  00B9               	movwf	getsUSBUSART@len^(0+128)
  8166  16AD                     l6689:	
  8167                           
  8168                           ;usb_device_cdc.c: 500: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  8169  16AD  0022               	movlb	2	; select bank2
  8170  16AE  01D5               	clrf	_cdc_rx_len^(0+256)
  8171  16AF                     l6695:	
  8172  16AF  0021               	movlb	1	; select bank1
  8173  16B0  0839               	movf	getsUSBUSART@len^(0+128),w
  8174  16B1  0022               	movlb	2	; select bank2
  8175  16B2  0255               	subwf	_cdc_rx_len^(0+256),w
  8176  16B3  1803               	btfsc	3,0
  8177  16B4  2ECE               	goto	l6697
  8178                           
  8179                           ;usb_device_cdc.c: 501: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  8180  16B5  0855               	movf	_cdc_rx_len^(0+256),w
  8181  16B6  3EA0               	addlw	(low (_cdc_data_rx| (0+256)))& (0+255)
  8182  16B7  0086               	movwf	6
  8183  16B8  3001               	movlw	1	; select bank3/4
  8184  16B9  0087               	movwf	7
  8185  16BA  0801               	movf	1,w
  8186  16BB  0021               	movlb	1	; select bank1
  8187  16BC  00BA               	movwf	??_getsUSBUSART^(0+128)
  8188  16BD  0022               	movlb	2	; select bank2
  8189  16BE  0855               	movf	_cdc_rx_len^(0+256),w
  8190  16BF  0021               	movlb	1	; select bank1
  8191  16C0  073C               	addwf	getsUSBUSART@buffer^(0+128),w
  8192  16C1  00BB               	movwf	(??_getsUSBUSART+1)^(0+128)
  8193  16C2  083B               	movf	(??_getsUSBUSART+1)^(0+128),w
  8194  16C3  0086               	movwf	6
  8195  16C4  3002               	movlw	2	; select bank4/5
  8196  16C5  0087               	movwf	7
  8197  16C6  083A               	movf	??_getsUSBUSART^(0+128),w
  8198  16C7  0081               	movwf	1
  8199  16C8  3001               	movlw	1
  8200  16C9  00BA               	movwf	??_getsUSBUSART^(0+128)
  8201  16CA  083A               	movf	??_getsUSBUSART^(0+128),w
  8202  16CB  0022               	movlb	2	; select bank2
  8203  16CC  07D5               	addwf	_cdc_rx_len^(0+256),f
  8204  16CD  2EAF               	goto	l6695
  8205  16CE                     l6697:	
  8206                           
  8207                           ;usb_device_cdc.c: 507: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8208  16CE  0021               	movlb	1	; select bank1
  8209  16CF  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  8210  16D0  30A0               	movlw	low _cdc_data_rx
  8211  16D1  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  8212  16D2  3001               	movlw	high _cdc_data_rx
  8213  16D3  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  8214  16D4  3040               	movlw	64
  8215  16D5  00BA               	movwf	??_getsUSBUSART^(0+128)
  8216  16D6  083A               	movf	??_getsUSBUSART^(0+128),w
  8217  16D7  00B1               	movwf	USBTransferOnePacket@len^(0+128)
  8218  16D8  3002               	movlw	2
  8219  16D9  318C  249F         	fcall	_USBTransferOnePacket
  8220  16DB  0021               	movlb	1	; select bank1
  8221  16DC  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  8222  16DD  0022               	movlb	2	; select bank2
  8223  16DE  00C1               	movwf	(_CDCDataOutHandle+1)^(0+256)
  8224  16DF  0021               	movlb	1	; select bank1
  8225  16E0  082E               	movf	?_USBTransferOnePacket^(0+128),w
  8226  16E1  0022               	movlb	2	; select bank2
  8227  16E2  00C0               	movwf	_CDCDataOutHandle^(0+256)
  8228  16E3                     l6699:	
  8229                           
  8230                           ;usb_device_cdc.c: 509: }
  8231                           ;usb_device_cdc.c: 511: return cdc_rx_len;
  8232  16E3  0855               	movf	_cdc_rx_len^(0+256),w
  8233  16E4  0008               	return
  8234  16E5                     __end_of_getsUSBUSART:	
  8235                           
  8236                           	psect	text32
  8237  0C9F                     __ptext32:	
  8238 ;; *************** function _USBTransferOnePacket *****************
  8239 ;; Defined at:
  8240 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;  ep              1    wreg     unsigned char 
  8243 ;;  dir             1   14[BANK1 ] unsigned char 
  8244 ;;  data            2   15[BANK1 ] PTR unsigned char 
  8245 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
  8246 ;;  len             1   17[BANK1 ] unsigned char 
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  ep              1   22[BANK1 ] unsigned char 
  8249 ;;  handle          2   23[BANK1 ] PTR volatile struct __BD
  8250 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  2   14[BANK1 ] PTR void 
  8253 ;; Registers used:
  8254 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8260 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8261 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;Total ram usage:       11 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:   10
  8267 ;; This function calls:
  8268 ;;		Nothing
  8269 ;; This function is called by:
  8270 ;;		_CDCInitEP
  8271 ;;		_getsUSBUSART
  8272 ;;		_CDCTxService
  8273 ;;		_USBCDCEventHandler
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           
  8277                           
  8278                           ;psect for function _USBTransferOnePacket
  8279  0C9F                     _USBTransferOnePacket:	
  8280                           
  8281                           ;incstack = 0
  8282                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  8283                           ;USBTransferOnePacket@ep stored from wreg
  8284  0C9F  0021               	movlb	1	; select bank1
  8285  0CA0  00B6               	movwf	USBTransferOnePacket@ep^(0+128)
  8286                           
  8287                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8288                           ;usb_device.c: 1000: if(dir != 0)
  8289  0CA1  082E               	movf	USBTransferOnePacket@dir^(0+128),w
  8290  0CA2  1903               	btfsc	3,2
  8291  0CA3  2CAC               	goto	l5657
  8292                           
  8293                           ;usb_device.c: 1001: {
  8294                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8295  0CA4  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8296  0CA5  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8297  0CA6  0086               	movwf	6
  8298  0CA7  0187               	clrf	7
  8299  0CA8  3F40               	moviw [0]fsr1
  8300  0CA9  00B7               	movwf	USBTransferOnePacket@handle^(0+128)
  8301  0CAA  3F41               	moviw [1]fsr1
  8302  0CAB  2CB4               	goto	L11
  8303  0CAC                     l5657:	
  8304                           ;usb_device.c: 1004: }
  8305                           
  8306                           
  8307                           ;usb_device.c: 1005: else
  8308                           ;usb_device.c: 1006: {
  8309                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8310  0CAC  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8311  0CAD  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8312  0CAE  0086               	movwf	6
  8313  0CAF  3001               	movlw	1	; select bank2/3
  8314  0CB0  0087               	movwf	7
  8315  0CB1  3F40               	moviw [0]fsr1
  8316  0CB2  00B7               	movwf	USBTransferOnePacket@handle^(0+128)
  8317  0CB3  3F41               	moviw [1]fsr1
  8318  0CB4                     L11:	
  8319  0CB4  00B8               	movwf	(USBTransferOnePacket@handle+1)^(0+128)
  8320                           
  8321                           ;usb_device.c: 1009: }
  8322                           ;usb_device.c: 1013: if(handle == 0)
  8323  0CB5  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8324  0CB6  0438               	iorwf	(USBTransferOnePacket@handle+1)^(0+128),w
  8325  0CB7  1D03               	btfss	3,2
  8326  0CB8  2CBC               	goto	l5665
  8327                           
  8328                           ;usb_device.c: 1014: {
  8329                           ;usb_device.c: 1015: return 0;
  8330  0CB9  01AE               	clrf	?_USBTransferOnePacket^(0+128)
  8331  0CBA  01AF               	clrf	(?_USBTransferOnePacket+1)^(0+128)
  8332  0CBB  0008               	return
  8333  0CBC                     l5665:	
  8334                           
  8335                           ;usb_device.c: 1016: }
  8336                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8337  0CBC  30FF               	movlw	255
  8338  0CBD  052F               	andwf	USBTransferOnePacket@data^(0+128),w
  8339  0CBE  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8340  0CBF  307F               	movlw	127
  8341  0CC0  0530               	andwf	(USBTransferOnePacket@data+1)^(0+128),w
  8342  0CC1  00B3               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  8343  0CC2  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8344  0CC3  0086               	movwf	6
  8345  0CC4  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8346  0CC5  0087               	movwf	7
  8347  0CC6  3142               	addfsr 1,2
  8348  0CC7  0832               	movf	??_USBTransferOnePacket^(0+128),w
  8349  0CC8  3FC0               	movwi [0]fsr1
  8350  0CC9  0833               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  8351  0CCA  3FC1               	movwi [1]fsr1
  8352                           
  8353                           ;usb_device.c: 1030: handle->CNT = len;
  8354  0CCB  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8355  0CCC  3E01               	addlw	1
  8356  0CCD  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8357  0CCE  3000               	movlw	0
  8358  0CCF  3D38               	addwfc	(USBTransferOnePacket@handle+1)^(0+128),w
  8359  0CD0  00B3               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  8360  0CD1  0832               	movf	??_USBTransferOnePacket^(0+128),w
  8361  0CD2  0086               	movwf	6
  8362  0CD3  0833               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  8363  0CD4  0087               	movwf	7
  8364  0CD5  0831               	movf	USBTransferOnePacket@len^(0+128),w
  8365  0CD6  0081               	movwf	1
  8366                           
  8367                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8368  0CD7  3040               	movlw	64
  8369  0CD8  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8370  0CD9  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8371  0CDA  0086               	movwf	6
  8372  0CDB  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8373  0CDC  0087               	movwf	7
  8374  0CDD  0832               	movf	??_USBTransferOnePacket^(0+128),w
  8375  0CDE  0581               	andwf	1,f
  8376                           
  8377                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8378  0CDF  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8379  0CE0  0086               	movwf	6
  8380  0CE1  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8381  0CE2  0087               	movwf	7
  8382  0CE3  1581               	bsf	1,3
  8383                           
  8384                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8385  0CE4  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8386  0CE5  0086               	movwf	6
  8387  0CE6  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8388  0CE7  0087               	movwf	7
  8389  0CE8  1781               	bsf	1,7
  8390                           
  8391                           ;usb_device.c: 1036: if(dir != 0)
  8392  0CE9  082E               	movf	USBTransferOnePacket@dir^(0+128),w
  8393  0CEA  1903               	btfsc	3,2
  8394  0CEB  2D03               	goto	l5675
  8395                           
  8396                           ;usb_device.c: 1037: {
  8397                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8398  0CEC  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8399  0CED  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8400  0CEE  0086               	movwf	6
  8401  0CEF  0187               	clrf	7
  8402  0CF0  3F40               	moviw [0]fsr1
  8403  0CF1  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8404  0CF2  3F41               	moviw [1]fsr1
  8405  0CF3  00B3               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  8406  0CF4  3004               	movlw	4
  8407  0CF5  0632               	xorwf	??_USBTransferOnePacket^(0+128),w
  8408  0CF6  00B4               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  8409  0CF7  3000               	movlw	0
  8410  0CF8  0633               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  8411  0CF9  00B5               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  8412  0CFA  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8413  0CFB  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8414  0CFC  0086               	movwf	6
  8415  0CFD  0187               	clrf	7
  8416  0CFE  0834               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  8417  0CFF  3FC0               	movwi [0]fsr1
  8418  0D00  0835               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  8419  0D01  3FC1               	movwi [1]fsr1
  8420                           
  8421                           ;usb_device.c: 1040: }
  8422  0D02  2D1B               	goto	l5677
  8423  0D03                     l5675:	
  8424                           
  8425                           ;usb_device.c: 1041: else
  8426                           ;usb_device.c: 1042: {
  8427                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8428  0D03  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8429  0D04  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8430  0D05  0086               	movwf	6
  8431  0D06  3001               	movlw	1	; select bank2/3
  8432  0D07  0087               	movwf	7
  8433  0D08  3F40               	moviw [0]fsr1
  8434  0D09  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8435  0D0A  3F41               	moviw [1]fsr1
  8436  0D0B  00B3               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  8437  0D0C  3004               	movlw	4
  8438  0D0D  0632               	xorwf	??_USBTransferOnePacket^(0+128),w
  8439  0D0E  00B4               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  8440  0D0F  3000               	movlw	0
  8441  0D10  0633               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  8442  0D11  00B5               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  8443  0D12  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8444  0D13  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8445  0D14  0086               	movwf	6
  8446  0D15  3001               	movlw	1	; select bank2/3
  8447  0D16  0087               	movwf	7
  8448  0D17  0834               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  8449  0D18  3FC0               	movwi [0]fsr1
  8450  0D19  0835               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  8451  0D1A  3FC1               	movwi [1]fsr1
  8452  0D1B                     l5677:	
  8453                           
  8454                           ;usb_device.c: 1045: }
  8455                           ;usb_device.c: 1046: return (void*)handle;
  8456  0D1B  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8457  0D1C  00AF               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  8458  0D1D  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8459  0D1E  00AE               	movwf	?_USBTransferOnePacket^(0+128)
  8460  0D1F  0008               	return
  8461  0D20                     __end_of_USBTransferOnePacket:	
  8462                           
  8463                           	psect	text33
  8464  1038                     __ptext33:	
  8465 ;; *************** function _gpio_init *****************
  8466 ;; Defined at:
  8467 ;;		line 88 in file "main.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;		None
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;		None
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  1    wreg      void 
  8474 ;; Registers used:
  8475 ;;		wreg
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;Total ram usage:        0 bytes
  8486 ;; Hardware stack levels used:    1
  8487 ;; Hardware stack levels required when called:   10
  8488 ;; This function calls:
  8489 ;;		Nothing
  8490 ;; This function is called by:
  8491 ;;		_main
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           
  8496                           ;psect for function _gpio_init
  8497  1038                     _gpio_init:	
  8498                           
  8499                           ;main.c: 89: TRISC = 0b111111;
  8500                           
  8501                           ;incstack = 0
  8502                           ; Regs used in _gpio_init: [wreg]
  8503  1038  303F               	movlw	63
  8504  1039  0021               	movlb	1	; select bank1
  8505  103A  008E               	movwf	14	;volatile
  8506  103B  0008               	return
  8507  103C                     __end_of_gpio_init:	
  8508                           
  8509                           	psect	text34
  8510  105A                     __ptext34:	
  8511 ;; *************** function _SYSTEM_Initialize *****************
  8512 ;; Defined at:
  8513 ;;		line 72 in file "mcc_generated_files/mcc.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;		None
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1    wreg      void 
  8520 ;; Registers used:
  8521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8531 ;;Total ram usage:        0 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; Hardware stack levels required when called:   11
  8534 ;; This function calls:
  8535 ;;		_OSCILLATOR_Initialize
  8536 ;;		_PIN_MANAGER_Initialize
  8537 ;;		_USBDeviceAttach
  8538 ;;		_USBDeviceInit
  8539 ;;		_WDT_Initialize
  8540 ;; This function is called by:
  8541 ;;		_main
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           
  8546                           ;psect for function _SYSTEM_Initialize
  8547  105A                     _SYSTEM_Initialize:	
  8548                           
  8549                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  8550                           
  8551                           ;incstack = 0
  8552                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8553  105A  3190  2079  3190   	fcall	_PIN_MANAGER_Initialize
  8554                           
  8555                           ;mcc.c: 76: OSCILLATOR_Initialize();
  8556  105D  3190  2042  3190   	fcall	_OSCILLATOR_Initialize
  8557                           
  8558                           ;mcc.c: 77: WDT_Initialize();
  8559  1060  3190  2034  3190   	fcall	_WDT_Initialize
  8560                           
  8561                           ;mcc.c: 78: USBDeviceInit();
  8562  1063  3185  258F  3190   	fcall	_USBDeviceInit
  8563                           
  8564                           ;mcc.c: 79: USBDeviceAttach();
  8565  1066  3190  20F1         	fcall	_USBDeviceAttach
  8566  1068  0008               	return
  8567  1069                     __end_of_SYSTEM_Initialize:	
  8568                           
  8569                           	psect	text35
  8570  1034                     __ptext35:	
  8571 ;; *************** function _WDT_Initialize *****************
  8572 ;; Defined at:
  8573 ;;		line 96 in file "mcc_generated_files/mcc.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;		None
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;		None
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		wreg
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;Total ram usage:        0 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:   10
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_SYSTEM_Initialize
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           
  8602                           ;psect for function _WDT_Initialize
  8603  1034                     _WDT_Initialize:	
  8604                           
  8605                           ;mcc.c: 99: WDTCON = 0x16;
  8606                           
  8607                           ;incstack = 0
  8608                           ; Regs used in _WDT_Initialize: [wreg]
  8609  1034  3016               	movlw	22
  8610  1035  0021               	movlb	1	; select bank1
  8611  1036  0097               	movwf	23	;volatile
  8612  1037  0008               	return
  8613  1038                     __end_of_WDT_Initialize:	
  8614                           
  8615                           	psect	text36
  8616  058F                     __ptext36:	
  8617 ;; *************** function _USBDeviceInit *****************
  8618 ;; Defined at:
  8619 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;  p               2   15[BANK1 ] PTR unsigned char 
  8624 ;;		 -> UEP1(1), 
  8625 ;;  i               1   17[BANK1 ] unsigned char 
  8626 ;;  i               1   18[BANK1 ] unsigned char 
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  1    wreg      void 
  8629 ;; Registers used:
  8630 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8638 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8639 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8640 ;;Total ram usage:        5 bytes
  8641 ;; Hardware stack levels used:    1
  8642 ;; Hardware stack levels required when called:   10
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_SYSTEM_Initialize
  8647 ;;		_main
  8648 ;;		_USBDeviceTasks
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           
  8653                           ;psect for function _USBDeviceInit
  8654  058F                     _USBDeviceInit:	
  8655                           
  8656                           ;usb_device.c: 279: uint8_t i;
  8657                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  8658                           
  8659                           ;incstack = 0
  8660                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8661  058F  0021               	movlb	1	; select bank1
  8662  0590  1112               	bcf	18,2	;volatile
  8663                           
  8664                           ;usb_device.c: 285: ;
  8665                           ;usb_device.c: 288: {UEIR = 0;};
  8666  0591  003D               	movlb	29	; select bank29
  8667  0592  0193               	clrf	19	;volatile
  8668                           
  8669                           ;usb_device.c: 291: {UIR = 0;};
  8670  0593  0190               	clrf	16	;volatile
  8671                           
  8672                           ;usb_device.c: 294: UEP0 = 0;
  8673  0594  0198               	clrf	24	;volatile
  8674                           
  8675                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  8676  0595  300E               	movlw	14
  8677  0596  0021               	movlb	1	; select bank1
  8678  0597  00B0               	movwf	(USBDeviceInit@p+1)^(0+128)
  8679  0598  3099               	movlw	153
  8680  0599  00AF               	movwf	USBDeviceInit@p^(0+128)
  8681  059A  01B1               	clrf	USBDeviceInit@i_1508^(0+128)
  8682  059B  3002               	movlw	2
  8683  059C  0231               	subwf	USBDeviceInit@i_1508^(0+128),w
  8684  059D  1803               	btfsc	3,0
  8685  059E  2DB0               	goto	l6517
  8686  059F                     l6509:	
  8687  059F  082F               	movf	USBDeviceInit@p^(0+128),w
  8688  05A0  0086               	movwf	6
  8689  05A1  0830               	movf	(USBDeviceInit@p+1)^(0+128),w
  8690  05A2  0087               	movwf	7
  8691  05A3  0181               	clrf	1
  8692  05A4  3001               	movlw	1
  8693  05A5  07AF               	addwf	USBDeviceInit@p^(0+128),f
  8694  05A6  3000               	movlw	0
  8695  05A7  3DB0               	addwfc	(USBDeviceInit@p+1)^(0+128),f
  8696  05A8  3001               	movlw	1
  8697  05A9  00AE               	movwf	??_USBDeviceInit^(0+128)
  8698  05AA  082E               	movf	??_USBDeviceInit^(0+128),w
  8699  05AB  07B1               	addwf	USBDeviceInit@i_1508^(0+128),f
  8700  05AC  3002               	movlw	2
  8701  05AD  0231               	subwf	USBDeviceInit@i_1508^(0+128),w
  8702  05AE  1C03               	skipc
  8703  05AF  2D9F               	goto	l6509
  8704  05B0                     l6517:	
  8705                           
  8706                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8707  05B0  3016               	movlw	22
  8708  05B1  003D               	movlb	29	; select bank29
  8709  05B2  0091               	movwf	17	;volatile
  8710  05B3  309F               	movlw	159
  8711  05B4  0097               	movwf	23	;volatile
  8712  05B5  307B               	movlw	123
  8713  05B6  0092               	movwf	18	;volatile
  8714                           
  8715                           ;usb_device.c: 301: ;
  8716                           ;usb_device.c: 304: ;
  8717                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8718  05B7  0021               	movlb	1	; select bank1
  8719  05B8  01B2               	clrf	USBDeviceInit@i^(0+128)
  8720  05B9  300C               	movlw	12
  8721  05BA  0232               	subwf	USBDeviceInit@i^(0+128),w
  8722  05BB  1803               	btfsc	3,0
  8723  05BC  2DD6               	goto	l423
  8724  05BD                     l6525:	
  8725                           
  8726                           ;usb_device.c: 308: {
  8727                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  8728  05BD  0832               	movf	USBDeviceInit@i^(0+128),w
  8729  05BE  00AE               	movwf	??_USBDeviceInit^(0+128)
  8730  05BF  3001               	movlw	1
  8731  05C0                     u6725:	
  8732  05C0  35AE               	lslf	??_USBDeviceInit^(0+128),f
  8733  05C1  3EFF               	addlw	-1
  8734  05C2  1D03               	skipz
  8735  05C3  2DC0               	goto	u6725
  8736  05C4  352E               	lslf	??_USBDeviceInit^(0+128),w
  8737  05C5  3E20               	addlw	32
  8738  05C6  0086               	movwf	6
  8739  05C7  0187               	clrf	7
  8740  05C8  3000               	movlw	0
  8741  05C9  3FC0               	movwi [0]fsr1
  8742  05CA  3000               	movlw	0
  8743  05CB  3FC1               	movwi [1]fsr1
  8744  05CC  3FC2               	movwi [2]fsr1
  8745  05CD  3FC3               	movwi [3]fsr1
  8746  05CE  3001               	movlw	1
  8747  05CF  00AE               	movwf	??_USBDeviceInit^(0+128)
  8748  05D0  082E               	movf	??_USBDeviceInit^(0+128),w
  8749  05D1  07B2               	addwf	USBDeviceInit@i^(0+128),f
  8750  05D2  300C               	movlw	12
  8751  05D3  0232               	subwf	USBDeviceInit@i^(0+128),w
  8752  05D4  1C03               	skipc
  8753  05D5  2DBD               	goto	l6525
  8754  05D6                     l423:	
  8755                           
  8756                           ;usb_device.c: 310: }
  8757                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  8758  05D6  003D               	movlb	29	; select bank29
  8759  05D7  170E               	bsf	14,6	;volatile
  8760                           
  8761                           ;usb_device.c: 316: UADDR = 0x00;
  8762  05D8  0196               	clrf	22	;volatile
  8763                           
  8764                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  8765  05D9  120E               	bcf	14,4	;volatile
  8766                           
  8767                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  8768  05DA  130E               	bcf	14,6	;volatile
  8769  05DB                     l6537:	
  8770                           ;usb_device.c: 325: do
  8771                           
  8772                           
  8773                           ;usb_device.c: 326: {
  8774                           ;usb_device.c: 327: (UIR &= 0xF7);
  8775  05DB  30F7               	movlw	247
  8776  05DC  0021               	movlb	1	; select bank1
  8777  05DD  00AE               	movwf	??_USBDeviceInit^(0+128)
  8778  05DE  082E               	movf	??_USBDeviceInit^(0+128),w
  8779  05DF  003D               	movlb	29	; select bank29
  8780  05E0  0590               	andwf	16,f	;volatile
  8781                           
  8782                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  8783  05E1  0021               	movlb	1	; select bank1
  8784  05E2  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  8785                           
  8786                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  8787  05E3  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
  8788                           
  8789                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  8790  05E4  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
  8791  05E5  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  8792                           
  8793                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  8794  05E6  003D               	movlb	29	; select bank29
  8795  05E7  1990               	btfsc	16,3	;volatile
  8796  05E8  2DDB               	goto	l6537
  8797                           
  8798                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  8799  05E9  3001               	movlw	1
  8800  05EA  0021               	movlb	1	; select bank1
  8801  05EB  00AE               	movwf	??_USBDeviceInit^(0+128)
  8802  05EC  082E               	movf	??_USBDeviceInit^(0+128),w
  8803  05ED  0022               	movlb	2	; select bank2
  8804  05EE  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  8805                           
  8806                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  8807  05EF  3001               	movlw	1
  8808  05F0  0021               	movlb	1	; select bank1
  8809  05F1  00AE               	movwf	??_USBDeviceInit^(0+128)
  8810  05F2  082E               	movf	??_USBDeviceInit^(0+128),w
  8811  05F3  0022               	movlb	2	; select bank2
  8812  05F4  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  8813                           
  8814                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  8815  05F5  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  8816                           
  8817                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  8818  05F6  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  8819                           
  8820                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  8821  05F7  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
  8822                           
  8823                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  8824  05F8  0021               	movlb	1	; select bank1
  8825  05F9  01B2               	clrf	USBDeviceInit@i^(0+128)
  8826  05FA  3003               	movlw	3
  8827  05FB  0232               	subwf	USBDeviceInit@i^(0+128),w
  8828  05FC  1803               	btfsc	3,0
  8829  05FD  2E21               	goto	l6565
  8830  05FE                     l6559:	
  8831                           
  8832                           ;usb_device.c: 346: {
  8833                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  8834  05FE  3532               	lslf	USBDeviceInit@i^(0+128),w
  8835  05FF  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8836  0600  0086               	movwf	6
  8837  0601  0187               	clrf	7
  8838  0602  3000               	movlw	0
  8839  0603  3FC0               	movwi [0]fsr1
  8840  0604  3FC1               	movwi [1]fsr1
  8841                           
  8842                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  8843  0605  3532               	lslf	USBDeviceInit@i^(0+128),w
  8844  0606  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8845  0607  0086               	movwf	6
  8846  0608  3001               	movlw	1	; select bank2/3
  8847  0609  0087               	movwf	7
  8848  060A  3000               	movlw	0
  8849  060B  3FC0               	movwi [0]fsr1
  8850  060C  3FC1               	movwi [1]fsr1
  8851                           
  8852                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  8853  060D  0832               	movf	USBDeviceInit@i^(0+128),w
  8854  060E  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8855  060F  0086               	movwf	6
  8856  0610  3001               	movlw	1	; select bank2/3
  8857  0611  0087               	movwf	7
  8858  0612  0181               	clrf	1
  8859                           
  8860                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  8861  0613  0832               	movf	USBDeviceInit@i^(0+128),w
  8862  0614  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8863  0615  0086               	movwf	6
  8864  0616  3001               	movlw	1	; select bank2/3
  8865  0617  0087               	movwf	7
  8866  0618  0181               	clrf	1
  8867  0619  3001               	movlw	1
  8868  061A  00AE               	movwf	??_USBDeviceInit^(0+128)
  8869  061B  082E               	movf	??_USBDeviceInit^(0+128),w
  8870  061C  07B2               	addwf	USBDeviceInit@i^(0+128),f
  8871  061D  3003               	movlw	3
  8872  061E  0232               	subwf	USBDeviceInit@i^(0+128),w
  8873  061F  1C03               	skipc
  8874  0620  2DFE               	goto	l6559
  8875  0621                     l6565:	
  8876                           
  8877                           ;usb_device.c: 351: }
  8878                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8879  0621  3028               	movlw	40
  8880  0622  00CD               	movwf	_pBDTEntryIn^(0+128)
  8881  0623  3000               	movlw	0
  8882  0624  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  8883                           
  8884                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  8885  0625  3016               	movlw	22
  8886  0626  003D               	movlb	29	; select bank29
  8887  0627  0098               	movwf	24	;volatile
  8888                           
  8889                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8890  0628  3000               	movlw	0
  8891  0629  0020               	movlb	0	; select bank0
  8892  062A  00A3               	movwf	35	;volatile
  8893  062B  3050               	movlw	80
  8894  062C  00A2               	movwf	34	;volatile
  8895                           
  8896                           ;usb_device.c: 359: BDT[0].CNT = 16;
  8897  062D  3010               	movlw	16
  8898  062E  00A1               	movwf	33	;volatile
  8899                           
  8900                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  8901  062F  3004               	movlw	4
  8902  0630  0021               	movlb	1	; select bank1
  8903  0631  00AE               	movwf	??_USBDeviceInit^(0+128)
  8904  0632  082E               	movf	??_USBDeviceInit^(0+128),w
  8905  0633  0020               	movlb	0	; select bank0
  8906  0634  00A0               	movwf	32	;volatile
  8907                           
  8908                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  8909  0635  17A0               	bsf	32,7	;volatile
  8910                           
  8911                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  8912  0636  0021               	movlb	1	; select bank1
  8913  0637  01E1               	clrf	_USBActiveConfiguration^(0+128)	;volatile
  8914                           
  8915                           ;usb_device.c: 366: USB1msTickCount = 0;
  8916  0638  3000               	movlw	0
  8917  0639  0022               	movlb	2	; select bank2
  8918  063A  00B3               	movwf	(_USB1msTickCount+3)^(0+256)	;volatile
  8919  063B  3000               	movlw	0
  8920  063C  00B2               	movwf	(_USB1msTickCount+2)^(0+256)	;volatile
  8921  063D  3000               	movlw	0
  8922  063E  00B1               	movwf	(_USB1msTickCount+1)^(0+256)	;volatile
  8923  063F  3000               	movlw	0
  8924  0640  00B0               	movwf	_USB1msTickCount^(0+256)	;volatile
  8925                           
  8926                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  8927  0641  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  8928                           
  8929                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  8930  0642  0021               	movlb	1	; select bank1
  8931  0643  01DF               	clrf	_USBDeviceState^(0+128)	;volatile
  8932  0644  0008               	return
  8933  0645                     __end_of_USBDeviceInit:	
  8934                           
  8935                           	psect	text37
  8936  10F1                     __ptext37:	
  8937 ;; *************** function _USBDeviceAttach *****************
  8938 ;; Defined at:
  8939 ;;		line 1352 in file "mcc_generated_files/usb/usb_device.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;		None
  8942 ;; Auto vars:     Size  Location     Type
  8943 ;;		None
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  1    wreg      void 
  8946 ;; Registers used:
  8947 ;;		wreg, status,2, status,0
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8955 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;Total ram usage:        1 bytes
  8958 ;; Hardware stack levels used:    1
  8959 ;; Hardware stack levels required when called:   10
  8960 ;; This function calls:
  8961 ;;		Nothing
  8962 ;; This function is called by:
  8963 ;;		_SYSTEM_Initialize
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           
  8968                           ;psect for function _USBDeviceAttach
  8969  10F1                     _USBDeviceAttach:	
  8970                           
  8971                           ;usb_device.c: 1356: {
  8972                           ;usb_device.c: 1357: if(1 == 1)
  8973                           
  8974                           ;incstack = 0
  8975                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  8976  10F1  0021               	movlb	1	; select bank1
  8977  10F2  085F               	movf	_USBDeviceState^(0+128),w	;volatile
  8978  10F3  1D03               	btfss	3,2
  8979  10F4  0008               	return
  8980                           
  8981                           ;usb_device.c: 1358: {
  8982                           ;usb_device.c: 1360: UCON = 0;
  8983  10F5  003D               	movlb	29	; select bank29
  8984  10F6  018E               	clrf	14	;volatile
  8985                           
  8986                           ;usb_device.c: 1363: UIE = 0;
  8987  10F7  0192               	clrf	18	;volatile
  8988                           
  8989                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  8990  10F8  3016               	movlw	22
  8991  10F9  0091               	movwf	17	;volatile
  8992  10FA  309F               	movlw	159
  8993  10FB  0097               	movwf	23	;volatile
  8994  10FC  307B               	movlw	123
  8995  10FD  0092               	movwf	18	;volatile
  8996                           
  8997                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  8998  10FE  0021               	movlb	1	; select bank1
  8999  10FF  1512               	bsf	18,2	;volatile
  9000  1100  170B               	bsf	11,6	;volatile
  9001  1101  178B               	bsf	11,7	;volatile
  9002  1102                     l483:	
  9003                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  9004                           
  9005  1102  003D               	movlb	29	; select bank29
  9006  1103  198E               	btfsc	14,3	;volatile
  9007  1104  2907               	goto	l5059
  9008  1105  158E               	bsf	14,3	;volatile
  9009  1106  2902               	goto	l483
  9010  1107                     l5059:	
  9011                           
  9012                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  9013  1107  3001               	movlw	1
  9014  1108  0021               	movlb	1	; select bank1
  9015  1109  00AE               	movwf	??_USBDeviceAttach^(0+128)
  9016  110A  082E               	movf	??_USBDeviceAttach^(0+128),w
  9017  110B  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  9018  110C  0008               	return
  9019  110D                     __end_of_USBDeviceAttach:	
  9020                           
  9021                           	psect	text38
  9022  1079                     __ptext38:	
  9023 ;; *************** function _PIN_MANAGER_Initialize *****************
  9024 ;; Defined at:
  9025 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;Total ram usage:        0 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:   10
  9046 ;; This function calls:
  9047 ;;		Nothing
  9048 ;; This function is called by:
  9049 ;;		_SYSTEM_Initialize
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           
  9054                           ;psect for function _PIN_MANAGER_Initialize
  9055  1079                     _PIN_MANAGER_Initialize:	
  9056                           
  9057                           ;pin_manager.c: 57: LATA = 0x00;
  9058                           
  9059                           ;incstack = 0
  9060                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9061  1079  0022               	movlb	2	; select bank2
  9062  107A  018C               	clrf	12	;volatile
  9063                           
  9064                           ;pin_manager.c: 58: LATC = 0x00;
  9065  107B  018E               	clrf	14	;volatile
  9066                           
  9067                           ;pin_manager.c: 63: TRISA = 0x30;
  9068  107C  3030               	movlw	48
  9069  107D  0021               	movlb	1	; select bank1
  9070  107E  008C               	movwf	12	;volatile
  9071                           
  9072                           ;pin_manager.c: 64: TRISC = 0x37;
  9073  107F  3037               	movlw	55
  9074  1080  008E               	movwf	14	;volatile
  9075                           
  9076                           ;pin_manager.c: 69: ANSELC = 0x0F;
  9077  1081  300F               	movlw	15
  9078  1082  0023               	movlb	3	; select bank3
  9079  1083  008E               	movwf	14	;volatile
  9080                           
  9081                           ;pin_manager.c: 70: ANSELA = 0x10;
  9082  1084  3010               	movlw	16
  9083  1085  008C               	movwf	12	;volatile
  9084                           
  9085                           ;pin_manager.c: 75: WPUA = 0x38;
  9086  1086  3038               	movlw	56
  9087  1087  0024               	movlb	4	; select bank4
  9088  1088  008C               	movwf	12	;volatile
  9089                           
  9090                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 0;
  9091  1089  0021               	movlb	1	; select bank1
  9092  108A  1395               	bcf	21,7	;volatile
  9093                           
  9094                           ;pin_manager.c: 82: APFCON = 0x00;
  9095  108B  0022               	movlb	2	; select bank2
  9096  108C  019D               	clrf	29	;volatile
  9097  108D  0008               	return
  9098  108E                     __end_of_PIN_MANAGER_Initialize:	
  9099                           
  9100                           	psect	text39
  9101  1042                     __ptext39:	
  9102 ;; *************** function _OSCILLATOR_Initialize *****************
  9103 ;; Defined at:
  9104 ;;		line 82 in file "mcc_generated_files/mcc.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;		None
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;		None
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;Total ram usage:        0 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:   10
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_SYSTEM_Initialize
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           
  9133                           ;psect for function _OSCILLATOR_Initialize
  9134  1042                     _OSCILLATOR_Initialize:	
  9135                           
  9136                           ;mcc.c: 85: OSCCON = 0x3C;
  9137                           
  9138                           ;incstack = 0
  9139                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9140  1042  303C               	movlw	60
  9141  1043  0021               	movlb	1	; select bank1
  9142  1044  0099               	movwf	25	;volatile
  9143                           
  9144                           ;mcc.c: 87: OSCTUNE = 0x00;
  9145  1045  0198               	clrf	24	;volatile
  9146                           
  9147                           ;mcc.c: 89: ACTCON = 0x00;
  9148  1046  0027               	movlb	7	; select bank7
  9149  1047  019B               	clrf	27	;volatile
  9150  1048                     l183:	
  9151                           ;mcc.c: 92: {
  9152                           
  9153                           ;mcc.c: 91: while(PLLRDY == 0)
  9154                           
  9155  1048  0021               	movlb	1	; select bank1
  9156  1049  1B1A               	btfsc	26,6	;volatile
  9157  104A  0008               	return
  9158  104B  2848               	goto	l183
  9159  104C                     __end_of_OSCILLATOR_Initialize:	
  9160                           
  9161                           	psect	intentry
  9162  0004                     __pintentry:	
  9163 ;; *************** function _INTERRUPT_InterruptManager *****************
  9164 ;; Defined at:
  9165 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;		None
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;		None
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  1    wreg      void 
  9172 ;; Registers used:
  9173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9174 ;; Tracked objects:
  9175 ;;		On entry : 0/0
  9176 ;;		On exit  : 0/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;Total ram usage:        1 bytes
  9184 ;; Hardware stack levels used:    1
  9185 ;; Hardware stack levels required when called:    9
  9186 ;; This function calls:
  9187 ;;		i1_USBDeviceTasks
  9188 ;; This function is called by:
  9189 ;;		Interrupt level 1
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193  0004                     _INTERRUPT_InterruptManager:	
  9194                           
  9195                           ;incstack = 0
  9196 ;; hardware stack exceeded
  9197  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9198                           
  9199                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9200  0005  3180               	pagesel	$
  9201  0006  0020               	movlb	0	; select bank0
  9202  0007  087F               	movf	127,w
  9203  0008  0021               	movlb	1	; select bank1
  9204  0009  00AD               	movwf	??_INTERRUPT_InterruptManager^(0+128)
  9205                           
  9206                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE2bits.USBIE == 1 && PIR2bits.USB
      +                          IF == 1)
  9207  000A  1B0B               	btfsc	11,6	;volatile
  9208  000B  1D12               	btfss	18,2	;volatile
  9209  000C  2812               	goto	i1l133
  9210  000D  0020               	movlb	0	; select bank0
  9211  000E  1D12               	btfss	18,2	;volatile
  9212  000F  2812               	goto	i1l133
  9213                           
  9214                           ;interrupt_manager.c: 55: {
  9215                           ;interrupt_manager.c: 56: USBDeviceTasks();
  9216  0010  3183  23E0         	fcall	i1_USBDeviceTasks
  9217  0012                     i1l133:	
  9218                           ;interrupt_manager.c: 58: else
  9219                           ;interrupt_manager.c: 59: {
  9220                           
  9221                           ;interrupt_manager.c: 57: }
  9222                           
  9223  0012  0021               	movlb	1	; select bank1
  9224  0013  082D               	movf	??_INTERRUPT_InterruptManager^(0+128),w
  9225  0014  0020               	movlb	0	; select bank0
  9226  0015  00FF               	movwf	127
  9227  0016  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9228  0017  0009               	retfie
  9229  0018                     __end_of_INTERRUPT_InterruptManager:	
  9230                           
  9231                           	psect	text41
  9232  03E0                     __ptext41:	
  9233 ;; *************** function i1_USBDeviceTasks *****************
  9234 ;; Defined at:
  9235 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;		None
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;  USBDeviceTas    1   12[BANK1 ] unsigned char 
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  1    wreg      void 
  9242 ;; Registers used:
  9243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9252 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;Total ram usage:        3 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; Hardware stack levels required when called:    8
  9256 ;; This function calls:
  9257 ;;		i1_USBCtrlEPAllowStatusStage
  9258 ;;		i1_USBCtrlEPService
  9259 ;;		i1_USBDeviceInit
  9260 ;;		i1_USBIncrement1msInternalTimers
  9261 ;;		i1_USBStallHandler
  9262 ;;		i1_USBSuspend
  9263 ;;		i1_USBWakeFromSuspend
  9264 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9265 ;; This function is called by:
  9266 ;;		_INTERRUPT_InterruptManager
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           
  9271                           ;psect for function i1_USBDeviceTasks
  9272  03E0                     i1_USBDeviceTasks:	
  9273                           
  9274                           ;usb_device.c: 479: uint8_t i;
  9275                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  9276                           
  9277                           ;incstack = 0
  9278 ;; hardware stack exceeded
  9279                           ; Regs used in i1_USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9280  03E0  0021               	movlb	1	; select bank1
  9281  03E1  035F               	decf	_USBDeviceState^(0+128),w	;volatile
  9282  03E2  1D03               	btfss	3,2
  9283  03E3  2BEF               	goto	i1l6971
  9284                           
  9285                           ;usb_device.c: 591: {
  9286                           ;usb_device.c: 601: if(!UCONbits.SE0)
  9287  03E4  003D               	movlb	29	; select bank29
  9288  03E5  1A8E               	btfsc	14,5	;volatile
  9289  03E6  2BEF               	goto	i1l6971
  9290                           
  9291                           ;usb_device.c: 602: {
  9292                           ;usb_device.c: 608: {UIR = 0;};
  9293  03E7  0190               	clrf	16	;volatile
  9294                           
  9295                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  9296  03E8  1412               	bsf	18,0	;volatile
  9297                           
  9298                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  9299  03E9  1612               	bsf	18,4	;volatile
  9300                           
  9301                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  9302  03EA  3002               	movlw	2
  9303  03EB  0021               	movlb	1	; select bank1
  9304  03EC  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9305  03ED  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9306  03EE  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  9307  03EF                     i1l6971:	
  9308                           
  9309                           ;usb_device.c: 617: }
  9310                           ;usb_device.c: 618: }
  9311                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  9312  03EF  003D               	movlb	29	; select bank29
  9313  03F0  1910               	btfsc	16,2	;volatile
  9314  03F1  1D12               	btfss	18,2	;volatile
  9315  03F2  2BFC               	goto	i1l6979
  9316                           
  9317                           ;usb_device.c: 635: {
  9318                           ;usb_device.c: 636: (UIR &= 0xFB);
  9319  03F3  30FB               	movlw	251
  9320  03F4  0021               	movlb	1	; select bank1
  9321  03F5  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9322  03F6  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9323  03F7  003D               	movlb	29	; select bank29
  9324  03F8  0590               	andwf	16,f	;volatile
  9325                           
  9326                           ;usb_device.c: 640: USBWakeFromSuspend();
  9327  03F9  3191  2187  3183   	fcall	i1_USBWakeFromSuspend
  9328  03FC                     i1l6979:	
  9329                           
  9330                           ;usb_device.c: 642: }
  9331                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  9332  03FC  003D               	movlb	29	; select bank29
  9333  03FD  1C8E               	btfss	14,1	;volatile
  9334  03FE  2C02               	goto	i1l434
  9335                           
  9336                           ;usb_device.c: 648: {
  9337                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  9338  03FF  0020               	movlb	0	; select bank0
  9339  0400  1112               	bcf	18,2	;volatile
  9340                           
  9341                           ;usb_device.c: 650: return;
  9342  0401  0008               	return
  9343  0402                     i1l434:	
  9344                           
  9345                           ;usb_device.c: 651: }
  9346                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  9347  0402  1810               	btfsc	16,0	;volatile
  9348  0403  1C12               	btfss	18,0	;volatile
  9349  0404  2C13               	goto	i1l6993
  9350                           
  9351                           ;usb_device.c: 664: {
  9352                           ;usb_device.c: 665: USBDeviceInit();
  9353  0405  3186  2645  3183   	fcall	i1_USBDeviceInit
  9354                           
  9355                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  9356  0408  0021               	movlb	1	; select bank1
  9357  0409  1512               	bsf	18,2	;volatile
  9358                           
  9359                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  9360  040A  3004               	movlw	4
  9361  040B  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9362  040C  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9363  040D  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  9364                           
  9365                           ;usb_device.c: 681: (UIR &= 0xFE);
  9366  040E  30FE               	movlw	254
  9367  040F  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9368  0410  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9369  0411  003D               	movlb	29	; select bank29
  9370  0412  0590               	andwf	16,f	;volatile
  9371  0413                     i1l6993:	
  9372                           
  9373                           ;usb_device.c: 682: }
  9374                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  9375  0413  1A10               	btfsc	16,4	;volatile
  9376  0414  1E12               	btfss	18,4	;volatile
  9377  0415  2C19               	goto	i1l6999
  9378                           
  9379                           ;usb_device.c: 688: {
  9380                           ;usb_device.c: 694: USBSuspend();
  9381  0416  3191  2129  3183   	fcall	i1_USBSuspend
  9382  0419                     i1l6999:	
  9383                           
  9384                           ;usb_device.c: 696: }
  9385                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  9386  0419  003D               	movlb	29	; select bank29
  9387  041A  1F10               	btfss	16,6	;volatile
  9388  041B  2C43               	goto	i1l7015
  9389                           
  9390                           ;usb_device.c: 709: {
  9391                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  9392  041C  1F12               	btfss	18,6	;volatile
  9393  041D  2C2E               	goto	i1l7005
  9394                           
  9395                           ;usb_device.c: 712: {
  9396                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  9397  041E  3073               	movlw	115
  9398  041F  0020               	movlb	0	; select bank0
  9399  0420  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9400  0421  3000               	movlw	0
  9401  0422  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9402  0423  3000               	movlw	0
  9403  0424  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9404  0425  3000               	movlw	0
  9405  0426  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9406  0427  3001               	movlw	1
  9407  0428  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9408  0429  3000               	movlw	0
  9409  042A  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9410  042B  3192  2236  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9411  042E                     i1l7005:	
  9412                           
  9413                           ;usb_device.c: 714: }
  9414                           ;usb_device.c: 715: (UIR &= 0xBF);
  9415  042E  30BF               	movlw	191
  9416  042F  0021               	movlb	1	; select bank1
  9417  0430  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9418  0431  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9419  0432  003D               	movlb	29	; select bank29
  9420  0433  0590               	andwf	16,f	;volatile
  9421                           
  9422                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  9423  0434  3190  20A6  3183   	fcall	i1_USBIncrement1msInternalTimers
  9424                           
  9425                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  9426  0437  0022               	movlb	2	; select bank2
  9427  0438  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  9428  0439  1903               	btfsc	3,2
  9429  043A  2C3D               	goto	i1l440
  9430                           
  9431                           ;usb_device.c: 736: {
  9432                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  9433  043B  3001               	movlw	1
  9434  043C  02CB               	subwf	_USBStatusStageTimeoutCounter^(0+256),f	;volatile
  9435  043D                     i1l440:	
  9436                           
  9437                           ;usb_device.c: 738: }
  9438                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  9439  043D  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  9440  043E  1D03               	btfss	3,2
  9441  043F  2C43               	goto	i1l7015
  9442                           
  9443                           ;usb_device.c: 745: {
  9444                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  9445  0440  3187  278F  3183   	fcall	i1_USBCtrlEPAllowStatusStage
  9446  0443                     i1l7015:	
  9447                           
  9448                           ;usb_device.c: 747: }
  9449                           ;usb_device.c: 749: }
  9450                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  9451  0443  003D               	movlb	29	; select bank29
  9452  0444  1A90               	btfsc	16,5	;volatile
  9453  0445  1E92               	btfss	18,5	;volatile
  9454  0446  2C4A               	goto	i1l7021
  9455                           
  9456                           ;usb_device.c: 752: {
  9457                           ;usb_device.c: 753: USBStallHandler();
  9458  0447  3191  21EA  3183   	fcall	i1_USBStallHandler
  9459  044A                     i1l7021:	
  9460                           
  9461                           ;usb_device.c: 754: }
  9462                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  9463  044A  003D               	movlb	29	; select bank29
  9464  044B  1890               	btfsc	16,1	;volatile
  9465  044C  1C92               	btfss	18,1	;volatile
  9466  044D  2C60               	goto	i1l7029
  9467                           
  9468                           ;usb_device.c: 757: {
  9469                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  9470  044E  30FF               	movlw	255
  9471  044F  0020               	movlb	0	; select bank0
  9472  0450  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9473  0451  307F               	movlw	127
  9474  0452  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9475  0453  3000               	movlw	0
  9476  0454  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9477  0455  3000               	movlw	0
  9478  0456  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9479  0457  3001               	movlw	1
  9480  0458  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9481  0459  3000               	movlw	0
  9482  045A  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9483  045B  3192  2236  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9484                           
  9485                           ;usb_device.c: 759: {UEIR = 0;};
  9486  045E  003D               	movlb	29	; select bank29
  9487  045F  0193               	clrf	19	;volatile
  9488  0460                     i1l7029:	
  9489                           
  9490                           ;usb_device.c: 767: }
  9491                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  9492  0460  3004               	movlw	4
  9493  0461  0021               	movlb	1	; select bank1
  9494  0462  025F               	subwf	_USBDeviceState^(0+128),w	;volatile
  9495  0463  1803               	skipnc
  9496  0464  2C68               	goto	i1l444
  9497                           
  9498                           ;usb_device.c: 775: {
  9499                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  9500  0465  0020               	movlb	0	; select bank0
  9501  0466  1112               	bcf	18,2	;volatile
  9502                           
  9503                           ;usb_device.c: 777: return;
  9504  0467  0008               	return
  9505  0468                     i1l444:	
  9506                           
  9507                           ;usb_device.c: 778: }
  9508                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  9509  0468  003D               	movlb	29	; select bank29
  9510  0469  1D92               	btfss	18,3	;volatile
  9511  046A  2CBA               	goto	i1l445
  9512                           
  9513                           ;usb_device.c: 784: {
  9514                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  9515  046B  0021               	movlb	1	; select bank1
  9516  046C  01AC               	clrf	i1USBDeviceTasks@i^(0+128)
  9517  046D  3004               	movlw	4
  9518  046E  022C               	subwf	i1USBDeviceTasks@i^(0+128),w
  9519  046F  1803               	btfsc	3,0
  9520  0470  2CBA               	goto	i1l445
  9521  0471                     i1l446:	
  9522                           
  9523                           ;usb_device.c: 786: {
  9524                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  9525  0471  003D               	movlb	29	; select bank29
  9526  0472  1D90               	btfss	16,3	;volatile
  9527  0473  2CBA               	goto	i1l445
  9528                           
  9529                           ;usb_device.c: 788: {
  9530                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  9531  0474  080F               	movf	15,w	;volatile
  9532  0475  0021               	movlb	1	; select bank1
  9533  0476  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9534  0477  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9535  0478  00E0               	movwf	_USTATcopy^(0+128)	;volatile
  9536                           
  9537                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  9538  0479  0C60               	rrf	_USTATcopy^(0+128),w	;volatile
  9539  047A  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9540  047B  0CAA               	rrf	??i1_USBDeviceTasks^(0+128),f
  9541  047C  0C2A               	rrf	??i1_USBDeviceTasks^(0+128),w
  9542  047D  390F               	andlw	15
  9543  047E  00AB               	movwf	(??i1_USBDeviceTasks+1)^(0+128)
  9544  047F  082B               	movf	(??i1_USBDeviceTasks+1)^(0+128),w
  9545  0480  00DB               	movwf	_endpoint_number^(0+128)	;volatile
  9546                           
  9547                           ;usb_device.c: 793: (UIR &= 0xF7);
  9548  0481  30F7               	movlw	247
  9549  0482  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9550  0483  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9551  0484  003D               	movlb	29	; select bank29
  9552  0485  0590               	andwf	16,f	;volatile
  9553                           
  9554                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  9555  0486  0021               	movlb	1	; select bank1
  9556  0487  1960               	btfsc	_USTATcopy^(0+128),2	;volatile
  9557  0488  2C8C               	goto	i1l7049
  9558                           
  9559                           ;usb_device.c: 799: {
  9560                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  9561  0489  085B               	movf	_endpoint_number^(0+128),w	;volatile
  9562  048A  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  9563  048B  2C8E               	goto	L12
  9564  048C                     i1l7049:	
  9565                           ;usb_device.c: 801: }
  9566                           
  9567                           
  9568                           ;usb_device.c: 802: else
  9569                           ;usb_device.c: 803: {
  9570                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  9571  048C  085B               	movf	_endpoint_number^(0+128),w	;volatile
  9572  048D  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  9573  048E                     L12:	
  9574  048E  0086               	movwf	6
  9575  048F  3001               	movlw	1	; select bank2/3
  9576  0490  0087               	movwf	7
  9577  0491  0801               	movf	1,w
  9578  0492  3901               	andlw	1
  9579  0493  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9580  0494  3001               	movlw	1
  9581  0495  06AA               	xorwf	??i1_USBDeviceTasks^(0+128),f
  9582  0496  0801               	movf	1,w
  9583  0497  062A               	xorwf	??i1_USBDeviceTasks^(0+128),w
  9584  0498  39FE               	andlw	-2
  9585  0499  062A               	xorwf	??i1_USBDeviceTasks^(0+128),w
  9586  049A  0081               	movwf	1
  9587                           
  9588                           ;usb_device.c: 805: }
  9589                           ;usb_device.c: 810: if(endpoint_number == 0)
  9590  049B  085B               	movf	_endpoint_number^(0+128),w	;volatile
  9591  049C  1D03               	btfss	3,2
  9592  049D  2CA2               	goto	i1l7055
  9593                           
  9594                           ;usb_device.c: 811: {
  9595                           ;usb_device.c: 812: USBCtrlEPService();
  9596  049E  3195  2526  3183   	fcall	i1_USBCtrlEPService
  9597                           
  9598                           ;usb_device.c: 813: }
  9599  04A1  2CB1               	goto	i1l7057
  9600  04A2                     i1l7055:	
  9601                           
  9602                           ;usb_device.c: 814: else
  9603                           ;usb_device.c: 815: {
  9604                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  9605  04A2  3072               	movlw	114
  9606  04A3  0020               	movlb	0	; select bank0
  9607  04A4  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9608  04A5  3000               	movlw	0
  9609  04A6  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9610  04A7  30E0               	movlw	low _USTATcopy
  9611  04A8  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9612  04A9  3000               	movlw	high _USTATcopy
  9613  04AA  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9614  04AB  3000               	movlw	0
  9615  04AC  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9616  04AD  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9617  04AE  3192  2236  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9618  04B1                     i1l7057:	
  9619                           ;usb_device.c: 819: else
  9620                           ;usb_device.c: 820: {
  9621                           ;usb_device.c: 821: break;
  9622                           
  9623                           ;usb_device.c: 817: }
  9624                           ;usb_device.c: 818: }
  9625                           
  9626  04B1  3001               	movlw	1
  9627  04B2  0021               	movlb	1	; select bank1
  9628  04B3  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9629  04B4  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9630  04B5  07AC               	addwf	i1USBDeviceTasks@i^(0+128),f
  9631  04B6  3004               	movlw	4
  9632  04B7  022C               	subwf	i1USBDeviceTasks@i^(0+128),w
  9633  04B8  1C03               	skipc
  9634  04B9  2C71               	goto	i1l446
  9635  04BA                     i1l445:	
  9636                           
  9637                           ;usb_device.c: 822: }
  9638                           ;usb_device.c: 823: }
  9639                           ;usb_device.c: 824: }
  9640                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  9641  04BA  0020               	movlb	0	; select bank0
  9642  04BB  1112               	bcf	18,2	;volatile
  9643  04BC  0008               	return
  9644  04BD                     __end_ofi1_USBDeviceTasks:	
  9645                           
  9646                           	psect	text42
  9647  1187                     __ptext42:	
  9648 ;; *************** function i1_USBWakeFromSuspend *****************
  9649 ;; Defined at:
  9650 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;		None
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;		None
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  1    wreg      void 
  9657 ;; Registers used:
  9658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;Total ram usage:        1 bytes
  9669 ;; Hardware stack levels used:    1
  9670 ;; Hardware stack levels required when called:    4
  9671 ;; This function calls:
  9672 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9673 ;; This function is called by:
  9674 ;;		i1_USBDeviceTasks
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           
  9679                           ;psect for function i1_USBWakeFromSuspend
  9680  1187                     i1_USBWakeFromSuspend:	
  9681                           
  9682                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  9683                           
  9684                           ;incstack = 0
  9685 ;; hardware stack exceeded
  9686                           ; Regs used in i1_USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9687  1187  0022               	movlb	2	; select bank2
  9688  1188  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
  9689                           
  9690                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  9691  1189  3074               	movlw	116
  9692  118A  0020               	movlb	0	; select bank0
  9693  118B  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9694  118C  3000               	movlw	0
  9695  118D  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9696  118E  3000               	movlw	0
  9697  118F  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9698  1190  3000               	movlw	0
  9699  1191  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9700  1192  3000               	movlw	0
  9701  1193  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9702  1194  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9703  1195  3192  2236  3191   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9704                           
  9705                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  9706  1198  003D               	movlb	29	; select bank29
  9707  1199  108E               	bcf	14,1	;volatile
  9708                           
  9709                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  9710  119A  1112               	bcf	18,2	;volatile
  9711  119B                     i1l6899:	
  9712                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  9713                           
  9714  119B  1D10               	btfss	16,2	;volatile
  9715  119C  29A4               	goto	i1l6901
  9716                           
  9717                           ;usb_device.c: 2343: {
  9718                           ;usb_device.c: 2344: (UIR &= 0xFB);
  9719  119D  30FB               	movlw	251
  9720  119E  0020               	movlb	0	; select bank0
  9721  119F  00DE               	movwf	??i1_USBWakeFromSuspend
  9722  11A0  085E               	movf	??i1_USBWakeFromSuspend,w
  9723  11A1  003D               	movlb	29	; select bank29
  9724  11A2  0590               	andwf	16,f	;volatile
  9725  11A3  299B               	goto	i1l6899
  9726  11A4                     i1l6901:	
  9727                           
  9728                           ;usb_device.c: 2345: }
  9729                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  9730  11A4  0022               	movlb	2	; select bank2
  9731  11A5  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  9732  11A6  0008               	return
  9733  11A7                     __end_ofi1_USBWakeFromSuspend:	
  9734                           
  9735                           	psect	text43
  9736  1129                     __ptext43:	
  9737 ;; *************** function i1_USBSuspend *****************
  9738 ;; Defined at:
  9739 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;		None
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  1    wreg      void 
  9746 ;; Registers used:
  9747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;Total ram usage:        1 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    4
  9760 ;; This function calls:
  9761 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9762 ;; This function is called by:
  9763 ;;		i1_USBDeviceTasks
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           
  9768                           ;psect for function i1_USBSuspend
  9769  1129                     i1_USBSuspend:	
  9770                           
  9771                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  9772                           
  9773                           ;incstack = 0
  9774 ;; hardware stack exceeded
  9775                           ; Regs used in i1_USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9776  1129  003D               	movlb	29	; select bank29
  9777  112A  1512               	bsf	18,2	;volatile
  9778                           
  9779                           ;usb_device.c: 2271: (UIR &= 0xEF);
  9780  112B  30EF               	movlw	239
  9781  112C  0020               	movlb	0	; select bank0
  9782  112D  00DE               	movwf	??i1_USBSuspend
  9783  112E  085E               	movf	??i1_USBSuspend,w
  9784  112F  003D               	movlb	29	; select bank29
  9785  1130  0590               	andwf	16,f	;volatile
  9786                           
  9787                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  9788  1131  148E               	bsf	14,1	;volatile
  9789                           
  9790                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  9791  1132  3001               	movlw	1
  9792  1133  0020               	movlb	0	; select bank0
  9793  1134  00DE               	movwf	??i1_USBSuspend
  9794  1135  085E               	movf	??i1_USBSuspend,w
  9795  1136  0022               	movlb	2	; select bank2
  9796  1137  00CD               	movwf	_USBBusIsSuspended^(0+256)	;volatile
  9797                           
  9798                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  9799  1138  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  9800                           
  9801                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  9802  1139  3075               	movlw	117
  9803  113A  0020               	movlb	0	; select bank0
  9804  113B  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9805  113C  3000               	movlw	0
  9806  113D  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9807  113E  3000               	movlw	0
  9808  113F  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9809  1140  3000               	movlw	0
  9810  1141  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9811  1142  3000               	movlw	0
  9812  1143  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9813  1144  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9814  1145  3192  2236         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9815  1147  0008               	return
  9816  1148                     __end_ofi1_USBSuspend:	
  9817                           
  9818                           	psect	text44
  9819  11EA                     __ptext44:	
  9820 ;; *************** function i1_USBStallHandler *****************
  9821 ;; Defined at:
  9822 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  9823 ;; Parameters:    Size  Location     Type
  9824 ;;		None
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;		None
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  1    wreg      void 
  9829 ;; Registers used:
  9830 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9840 ;;Total ram usage:        1 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; This function calls:
  9843 ;;		Nothing
  9844 ;; This function is called by:
  9845 ;;		i1_USBDeviceTasks
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           
  9850                           ;psect for function i1_USBStallHandler
  9851  11EA                     i1_USBStallHandler:	
  9852                           
  9853                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  9854                           
  9855                           ;incstack = 0
  9856                           ; Regs used in i1_USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  9857  11EA  003D               	movlb	29	; select bank29
  9858  11EB  1C18               	btfss	24,0	;volatile
  9859  11EC  2A0A               	goto	i1l5189
  9860                           
  9861                           ;usb_device.c: 2215: {
  9862                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  9863  11ED  0021               	movlb	1	; select bank1
  9864  11EE  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9865  11EF  0086               	movwf	6
  9866  11F0  0187               	clrf	7
  9867  11F1  3080               	movlw	128
  9868  11F2  0601               	xorwf	1,w
  9869  11F3  1D03               	btfss	3,2
  9870  11F4  2A08               	goto	i1l5187
  9871  11F5  084D               	movf	_pBDTEntryIn^(0+128),w
  9872  11F6  0086               	movwf	6
  9873  11F7  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  9874  11F8  0087               	movwf	7
  9875  11F9  3084               	movlw	132
  9876  11FA  0601               	xorwf	1,w
  9877  11FB  1D03               	btfss	3,2
  9878  11FC  2A08               	goto	i1l5187
  9879                           
  9880                           ;usb_device.c: 2218: {
  9881                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9882  11FD  300C               	movlw	12
  9883  11FE  00F0               	movwf	??i1_USBStallHandler
  9884  11FF  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9885  1200  0086               	movwf	6
  9886  1201  0187               	clrf	7
  9887  1202  0870               	movf	??i1_USBStallHandler,w
  9888  1203  0081               	movwf	1
  9889                           
  9890                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9891  1204  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9892  1205  0086               	movwf	6
  9893  1206  0187               	clrf	7
  9894  1207  1781               	bsf	1,7
  9895  1208                     i1l5187:	
  9896                           
  9897                           ;usb_device.c: 2222: }
  9898                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  9899  1208  003D               	movlb	29	; select bank29
  9900  1209  1018               	bcf	24,0	;volatile
  9901  120A                     i1l5189:	
  9902                           
  9903                           ;usb_device.c: 2224: }
  9904                           ;usb_device.c: 2226: (UIR &= 0xDF);
  9905  120A  30DF               	movlw	223
  9906  120B  00F0               	movwf	??i1_USBStallHandler
  9907  120C  0870               	movf	??i1_USBStallHandler,w
  9908  120D  0590               	andwf	16,f	;volatile
  9909  120E  0008               	return
  9910  120F                     __end_ofi1_USBStallHandler:	
  9911                           
  9912                           	psect	text45
  9913  10A6                     __ptext45:	
  9914 ;; *************** function i1_USBIncrement1msInternalTimers *****************
  9915 ;; Defined at:
  9916 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;		None
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;		None
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1    wreg      void 
  9923 ;; Registers used:
  9924 ;;		wreg, status,2, status,0
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;Total ram usage:        1 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; This function calls:
  9937 ;;		Nothing
  9938 ;; This function is called by:
  9939 ;;		i1_USBDeviceTasks
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           
  9944                           ;psect for function i1_USBIncrement1msInternalTimers
  9945  10A6                     i1_USBIncrement1msInternalTimers:	
  9946                           
  9947                           ;usb_device.c: 3033: USB1msTickCount++;
  9948                           
  9949                           ;incstack = 0
  9950                           ; Regs used in i1_USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  9951  10A6  3001               	movlw	1
  9952  10A7  0022               	movlb	2	; select bank2
  9953  10A8  07B0               	addwf	_USB1msTickCount^(0+256),f	;volatile
  9954  10A9  3000               	movlw	0
  9955  10AA  3DB1               	addwfc	(_USB1msTickCount+1)^(0+256),f	;volatile
  9956  10AB  3000               	movlw	0
  9957  10AC  3DB2               	addwfc	(_USB1msTickCount+2)^(0+256),f	;volatile
  9958  10AD  3000               	movlw	0
  9959  10AE  3DB3               	addwfc	(_USB1msTickCount+3)^(0+256),f	;volatile
  9960                           
  9961                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  9962  10AF  084D               	movf	_USBBusIsSuspended^(0+256),w	;volatile
  9963  10B0  1D03               	btfss	3,2
  9964  10B1  0008               	return
  9965                           
  9966                           ;usb_device.c: 3035: {
  9967                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  9968  10B2  3001               	movlw	1
  9969  10B3  00F0               	movwf	??i1_USBIncrement1msInternalTimers
  9970  10B4  0870               	movf	??i1_USBIncrement1msInternalTimers,w
  9971  10B5  07C6               	addwf	_USBTicksSinceSuspendEnd^(0+256),f	;volatile
  9972                           
  9973                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  9974  10B6  0846               	movf	_USBTicksSinceSuspendEnd^(0+256),w	;volatile
  9975  10B7  1D03               	btfss	3,2
  9976  10B8  0008               	return
  9977                           
  9978                           ;usb_device.c: 3039: {
  9979                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  9980  10B9  30FF               	movlw	255
  9981  10BA  00F0               	movwf	??i1_USBIncrement1msInternalTimers
  9982  10BB  0870               	movf	??i1_USBIncrement1msInternalTimers,w
  9983  10BC  00C6               	movwf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  9984  10BD  0008               	return
  9985  10BE                     __end_ofi1_USBIncrement1msInternalTimers:	
  9986                           
  9987                           	psect	text46
  9988  0645                     __ptext46:	
  9989 ;; *************** function i1_USBDeviceInit *****************
  9990 ;; Defined at:
  9991 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;		None
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  9996 ;;		 -> UEP1(1), 
  9997 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  9998 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  1    wreg      void 
 10001 ;; Registers used:
 10002 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10009 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;Total ram usage:        5 bytes
 10013 ;; Hardware stack levels used:    1
 10014 ;; This function calls:
 10015 ;;		Nothing
 10016 ;; This function is called by:
 10017 ;;		i1_USBDeviceTasks
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           
 10022                           ;psect for function i1_USBDeviceInit
 10023  0645                     i1_USBDeviceInit:	
 10024                           
 10025                           ;usb_device.c: 279: uint8_t i;
 10026                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 10027                           
 10028                           ;incstack = 0
 10029                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 10030  0645  0021               	movlb	1	; select bank1
 10031  0646  1112               	bcf	18,2	;volatile
 10032                           
 10033                           ;usb_device.c: 285: ;
 10034                           ;usb_device.c: 288: {UEIR = 0;};
 10035  0647  003D               	movlb	29	; select bank29
 10036  0648  0193               	clrf	19	;volatile
 10037                           
 10038                           ;usb_device.c: 291: {UIR = 0;};
 10039  0649  0190               	clrf	16	;volatile
 10040                           
 10041                           ;usb_device.c: 294: UEP0 = 0;
 10042  064A  0198               	clrf	24	;volatile
 10043                           
 10044                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
 10045  064B  300E               	movlw	14
 10046  064C  00F2               	movwf	i1USBDeviceInit@p+1
 10047  064D  3099               	movlw	153
 10048  064E  00F1               	movwf	i1USBDeviceInit@p
 10049  064F  01F3               	clrf	i1USBDeviceInit@i_1508
 10050  0650  3002               	movlw	2
 10051  0651  0273               	subwf	i1USBDeviceInit@i_1508,w
 10052  0652  1803               	btfsc	3,0
 10053  0653  2E65               	goto	i1l5111
 10054  0654                     i1l5103:	
 10055  0654  0871               	movf	i1USBDeviceInit@p,w
 10056  0655  0086               	movwf	6
 10057  0656  0872               	movf	i1USBDeviceInit@p+1,w
 10058  0657  0087               	movwf	7
 10059  0658  0181               	clrf	1
 10060  0659  3001               	movlw	1
 10061  065A  07F1               	addwf	i1USBDeviceInit@p,f
 10062  065B  3000               	movlw	0
 10063  065C  3DF2               	addwfc	i1USBDeviceInit@p+1,f
 10064  065D  3001               	movlw	1
 10065  065E  00F0               	movwf	??i1_USBDeviceInit
 10066  065F  0870               	movf	??i1_USBDeviceInit,w
 10067  0660  07F3               	addwf	i1USBDeviceInit@i_1508,f
 10068  0661  3002               	movlw	2
 10069  0662  0273               	subwf	i1USBDeviceInit@i_1508,w
 10070  0663  1C03               	skipc
 10071  0664  2E54               	goto	i1l5103
 10072  0665                     i1l5111:	
 10073                           
 10074                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10075  0665  3016               	movlw	22
 10076  0666  003D               	movlb	29	; select bank29
 10077  0667  0091               	movwf	17	;volatile
 10078  0668  309F               	movlw	159
 10079  0669  0097               	movwf	23	;volatile
 10080  066A  307B               	movlw	123
 10081  066B  0092               	movwf	18	;volatile
 10082                           
 10083                           ;usb_device.c: 301: ;
 10084                           ;usb_device.c: 304: ;
 10085                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 10086  066C  01F4               	clrf	i1USBDeviceInit@i
 10087  066D  300C               	movlw	12
 10088  066E  0274               	subwf	i1USBDeviceInit@i,w
 10089  066F  1803               	btfsc	3,0
 10090  0670  2E8A               	goto	i1l423
 10091  0671                     i1l5119:	
 10092                           
 10093                           ;usb_device.c: 308: {
 10094                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 10095  0671  0874               	movf	i1USBDeviceInit@i,w
 10096  0672  00F0               	movwf	??i1_USBDeviceInit
 10097  0673  3001               	movlw	1
 10098  0674                     u501_25:	
 10099  0674  35F0               	lslf	??i1_USBDeviceInit,f
 10100  0675  3EFF               	addlw	-1
 10101  0676  1D03               	skipz
 10102  0677  2E74               	goto	u501_25
 10103  0678  3570               	lslf	??i1_USBDeviceInit,w
 10104  0679  3E20               	addlw	32
 10105  067A  0086               	movwf	6
 10106  067B  0187               	clrf	7
 10107  067C  3000               	movlw	0
 10108  067D  3FC0               	movwi [0]fsr1
 10109  067E  3000               	movlw	0
 10110  067F  3FC1               	movwi [1]fsr1
 10111  0680  3FC2               	movwi [2]fsr1
 10112  0681  3FC3               	movwi [3]fsr1
 10113  0682  3001               	movlw	1
 10114  0683  00F0               	movwf	??i1_USBDeviceInit
 10115  0684  0870               	movf	??i1_USBDeviceInit,w
 10116  0685  07F4               	addwf	i1USBDeviceInit@i,f
 10117  0686  300C               	movlw	12
 10118  0687  0274               	subwf	i1USBDeviceInit@i,w
 10119  0688  1C03               	skipc
 10120  0689  2E71               	goto	i1l5119
 10121  068A                     i1l423:	
 10122                           
 10123                           ;usb_device.c: 310: }
 10124                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 10125  068A  003D               	movlb	29	; select bank29
 10126  068B  170E               	bsf	14,6	;volatile
 10127                           
 10128                           ;usb_device.c: 316: UADDR = 0x00;
 10129  068C  0196               	clrf	22	;volatile
 10130                           
 10131                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 10132  068D  120E               	bcf	14,4	;volatile
 10133                           
 10134                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 10135  068E  130E               	bcf	14,6	;volatile
 10136  068F                     i1l5131:	
 10137                           ;usb_device.c: 325: do
 10138                           
 10139                           
 10140                           ;usb_device.c: 326: {
 10141                           ;usb_device.c: 327: (UIR &= 0xF7);
 10142  068F  30F7               	movlw	247
 10143  0690  00F0               	movwf	??i1_USBDeviceInit
 10144  0691  0870               	movf	??i1_USBDeviceInit,w
 10145  0692  0590               	andwf	16,f	;volatile
 10146                           
 10147                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 10148  0693  0021               	movlb	1	; select bank1
 10149  0694  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 10150                           
 10151                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 10152  0695  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
 10153                           
 10154                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 10155  0696  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
 10156  0697  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
 10157                           
 10158                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 10159  0698  003D               	movlb	29	; select bank29
 10160  0699  1990               	btfsc	16,3	;volatile
 10161  069A  2E8F               	goto	i1l5131
 10162                           
 10163                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 10164  069B  3001               	movlw	1
 10165  069C  00F0               	movwf	??i1_USBDeviceInit
 10166  069D  0870               	movf	??i1_USBDeviceInit,w
 10167  069E  0022               	movlb	2	; select bank2
 10168  069F  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10169                           
 10170                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 10171  06A0  3001               	movlw	1
 10172  06A1  00F0               	movwf	??i1_USBDeviceInit
 10173  06A2  0870               	movf	??i1_USBDeviceInit,w
 10174  06A3  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10175                           
 10176                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 10177  06A4  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10178                           
 10179                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 10180  06A5  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10181                           
 10182                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 10183  06A6  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
 10184                           
 10185                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 10186  06A7  01F4               	clrf	i1USBDeviceInit@i
 10187  06A8  3003               	movlw	3
 10188  06A9  0274               	subwf	i1USBDeviceInit@i,w
 10189  06AA  1803               	btfsc	3,0
 10190  06AB  2ECF               	goto	i1l5159
 10191  06AC                     i1l5153:	
 10192                           
 10193                           ;usb_device.c: 346: {
 10194                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 10195  06AC  3574               	lslf	i1USBDeviceInit@i,w
 10196  06AD  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 10197  06AE  0086               	movwf	6
 10198  06AF  0187               	clrf	7
 10199  06B0  3000               	movlw	0
 10200  06B1  3FC0               	movwi [0]fsr1
 10201  06B2  3FC1               	movwi [1]fsr1
 10202                           
 10203                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 10204  06B3  3574               	lslf	i1USBDeviceInit@i,w
 10205  06B4  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10206  06B5  0086               	movwf	6
 10207  06B6  3001               	movlw	1	; select bank2/3
 10208  06B7  0087               	movwf	7
 10209  06B8  3000               	movlw	0
 10210  06B9  3FC0               	movwi [0]fsr1
 10211  06BA  3FC1               	movwi [1]fsr1
 10212                           
 10213                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 10214  06BB  0874               	movf	i1USBDeviceInit@i,w
 10215  06BC  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 10216  06BD  0086               	movwf	6
 10217  06BE  3001               	movlw	1	; select bank2/3
 10218  06BF  0087               	movwf	7
 10219  06C0  0181               	clrf	1
 10220                           
 10221                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 10222  06C1  0874               	movf	i1USBDeviceInit@i,w
 10223  06C2  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 10224  06C3  0086               	movwf	6
 10225  06C4  3001               	movlw	1	; select bank2/3
 10226  06C5  0087               	movwf	7
 10227  06C6  0181               	clrf	1
 10228  06C7  3001               	movlw	1
 10229  06C8  00F0               	movwf	??i1_USBDeviceInit
 10230  06C9  0870               	movf	??i1_USBDeviceInit,w
 10231  06CA  07F4               	addwf	i1USBDeviceInit@i,f
 10232  06CB  3003               	movlw	3
 10233  06CC  0274               	subwf	i1USBDeviceInit@i,w
 10234  06CD  1C03               	skipc
 10235  06CE  2EAC               	goto	i1l5153
 10236  06CF                     i1l5159:	
 10237                           
 10238                           ;usb_device.c: 351: }
 10239                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10240  06CF  3028               	movlw	40
 10241  06D0  0021               	movlb	1	; select bank1
 10242  06D1  00CD               	movwf	_pBDTEntryIn^(0+128)
 10243  06D2  3000               	movlw	0
 10244  06D3  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 10245                           
 10246                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 10247  06D4  3016               	movlw	22
 10248  06D5  003D               	movlb	29	; select bank29
 10249  06D6  0098               	movwf	24	;volatile
 10250                           
 10251                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10252  06D7  3000               	movlw	0
 10253  06D8  0020               	movlb	0	; select bank0
 10254  06D9  00A3               	movwf	35	;volatile
 10255  06DA  3050               	movlw	80
 10256  06DB  00A2               	movwf	34	;volatile
 10257                           
 10258                           ;usb_device.c: 359: BDT[0].CNT = 16;
 10259  06DC  3010               	movlw	16
 10260  06DD  00A1               	movwf	33	;volatile
 10261                           
 10262                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 10263  06DE  3004               	movlw	4
 10264  06DF  00F0               	movwf	??i1_USBDeviceInit
 10265  06E0  0870               	movf	??i1_USBDeviceInit,w
 10266  06E1  00A0               	movwf	32	;volatile
 10267                           
 10268                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 10269  06E2  17A0               	bsf	32,7	;volatile
 10270                           
 10271                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 10272  06E3  0021               	movlb	1	; select bank1
 10273  06E4  01E1               	clrf	_USBActiveConfiguration^(0+128)	;volatile
 10274                           
 10275                           ;usb_device.c: 366: USB1msTickCount = 0;
 10276  06E5  3000               	movlw	0
 10277  06E6  0022               	movlb	2	; select bank2
 10278  06E7  00B3               	movwf	(_USB1msTickCount+3)^(0+256)	;volatile
 10279  06E8  3000               	movlw	0
 10280  06E9  00B2               	movwf	(_USB1msTickCount+2)^(0+256)	;volatile
 10281  06EA  3000               	movlw	0
 10282  06EB  00B1               	movwf	(_USB1msTickCount+1)^(0+256)	;volatile
 10283  06EC  3000               	movlw	0
 10284  06ED  00B0               	movwf	_USB1msTickCount^(0+256)	;volatile
 10285                           
 10286                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 10287  06EE  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
 10288                           
 10289                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 10290  06EF  0021               	movlb	1	; select bank1
 10291  06F0  01DF               	clrf	_USBDeviceState^(0+128)	;volatile
 10292  06F1  0008               	return
 10293  06F2                     __end_ofi1_USBDeviceInit:	
 10294                           
 10295                           	psect	text47
 10296  1526                     __ptext47:	
 10297 ;; *************** function i1_USBCtrlEPService *****************
 10298 ;; Defined at:
 10299 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
 10300 ;; Parameters:    Size  Location     Type
 10301 ;;		None
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;		None
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  1    wreg      void 
 10306 ;; Registers used:
 10307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10315 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10316 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10317 ;;Total ram usage:        3 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:    7
 10320 ;; This function calls:
 10321 ;;		i1_USBCtrlTrfInHandler
 10322 ;;		i1_USBCtrlTrfOutHandler
 10323 ;;		i1_USBCtrlTrfSetupHandler
 10324 ;; This function is called by:
 10325 ;;		i1_USBDeviceTasks
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           
 10330                           ;psect for function i1_USBCtrlEPService
 10331  1526                     i1_USBCtrlEPService:	
 10332                           
 10333                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 10334                           
 10335                           ;incstack = 0
 10336 ;; hardware stack exceeded
 10337                           ; Regs used in i1_USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10338  1526  302D               	movlw	45
 10339  1527  0021               	movlb	1	; select bank1
 10340  1528  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10341  1529  0827               	movf	??i1_USBCtrlEPService^(0+128),w
 10342  152A  0022               	movlb	2	; select bank2
 10343  152B  00CB               	movwf	_USBStatusStageTimeoutCounter^(0+256)	;volatile
 10344                           
 10345                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 10346  152C  0021               	movlb	1	; select bank1
 10347  152D  0860               	movf	_USTATcopy^(0+128),w	;volatile
 10348  152E  39FD               	andlw	253
 10349  152F  1D03               	btfss	3,2
 10350  1530  2D72               	goto	i1l6921
 10351                           
 10352                           ;usb_device.c: 2383: {
 10353                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 10354  1531  3660               	lsrf	_USTATcopy^(0+128),w	;volatile
 10355  1532  393F               	andlw	63
 10356  1533  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10357  1534  3001               	movlw	1
 10358  1535                     u730_25:	
 10359  1535  35A7               	lslf	??i1_USBCtrlEPService^(0+128),f
 10360  1536  3EFF               	addlw	-1
 10361  1537  1D03               	skipz
 10362  1538  2D35               	goto	u730_25
 10363  1539  3527               	lslf	??i1_USBCtrlEPService^(0+128),w
 10364  153A  3E20               	addlw	32
 10365  153B  00A8               	movwf	(??i1_USBCtrlEPService+1)^(0+128)
 10366  153C  0828               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 10367  153D  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
 10368                           
 10369                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10370  153E  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 10371  153F  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 10372  1540  39FF               	andlw	255
 10373  1541  1D03               	skipz
 10374  1542  3000               	movlw	0
 10375  1543  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 10376                           
 10377                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 10378  1544  3004               	movlw	4
 10379  1545  0658               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
 10380  1546  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 10381  1547  3000               	movlw	0
 10382  1548  0659               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10383  1549  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 10384                           
 10385                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 10386  154A  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 10387  154B  0086               	movwf	6
 10388  154C  0187               	clrf	7
 10389  154D  0C01               	rrf	1,w
 10390  154E  0C89               	rrf	9,f
 10391  154F  390F               	andlw	15
 10392  1550  3A0D               	xorlw	13
 10393  1551  1D03               	skipz
 10394  1552  2D6F               	goto	i1l6919
 10395                           
 10396                           ;usb_device.c: 2400: {
 10397                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
 10398  1553  3050               	movlw	80
 10399  1554  0086               	movwf	6
 10400  1555  0187               	clrf	7
 10401  1556  0021               	movlb	1	; select bank1
 10402  1557  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 10403  1558  3E02               	addlw	2
 10404  1559  0084               	movwf	4
 10405  155A  0185               	clrf	5
 10406  155B  3F00               	moviw [0]fsr0
 10407  155C  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10408  155D  3F01               	moviw [1]fsr0
 10409  155E  00A8               	movwf	(??i1_USBCtrlEPService^(0+128)+1)
 10410  155F  0827               	movf	??i1_USBCtrlEPService^(0+128),w
 10411  1560  0084               	movwf	4
 10412  1561  0828               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 10413  1562  0085               	movwf	5
 10414  1563  3008               	movlw	8
 10415  1564  00A9               	movwf	(??i1_USBCtrlEPService+2)^(0+128)
 10416  1565  0829               	movf	(??i1_USBCtrlEPService+2)^(0+128),w
 10417  1566  1903               	skipnz
 10418  1567  2D6C               	goto	i1l6917
 10419  1568                     u732_2m0:	
 10420  1568  0012               	moviw fsr0++
 10421  1569  001E               	movwi fsr1++
 10422  156A  0BA9               	decfsz	(??i1_USBCtrlEPService+2)^(0+128),f
 10423  156B  2D68               	goto	u732_2m0
 10424  156C                     i1l6917:	
 10425                           
 10426                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 10427  156C  3194  2442         	fcall	i1_USBCtrlTrfSetupHandler
 10428                           
 10429                           ;usb_device.c: 2409: }
 10430  156E  0008               	return
 10431  156F                     i1l6919:	
 10432                           
 10433                           ;usb_device.c: 2410: else
 10434                           ;usb_device.c: 2411: {
 10435                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 10436  156F  3192  22CB         	fcall	i1_USBCtrlTrfOutHandler
 10437                           
 10438                           ;usb_device.c: 2414: }
 10439                           ;usb_device.c: 2415: }
 10440  1571  0008               	return
 10441  1572                     i1l6921:	
 10442                           
 10443                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 10444  1572  30FD               	movlw	253
 10445  1573  0021               	movlb	1	; select bank1
 10446  1574  0560               	andwf	_USTATcopy^(0+128),w	;volatile
 10447  1575  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10448  1576  3004               	movlw	4
 10449  1577  0627               	xorwf	??i1_USBCtrlEPService^(0+128),w
 10450  1578  1D03               	btfss	3,2
 10451  1579  0008               	return
 10452                           
 10453                           ;usb_device.c: 2417: {
 10454                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 10455  157A  3188  20F9         	fcall	i1_USBCtrlTrfInHandler
 10456  157C  0008               	return
 10457  157D                     __end_ofi1_USBCtrlEPService:	
 10458                           
 10459                           	psect	text48
 10460  1442                     __ptext48:	
 10461 ;; *************** function i1_USBCtrlTrfSetupHandler *****************
 10462 ;; Defined at:
 10463 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
 10464 ;; Parameters:    Size  Location     Type
 10465 ;;		None
 10466 ;; Auto vars:     Size  Location     Type
 10467 ;;		None
 10468 ;; Return value:  Size  Location     Type
 10469 ;;                  1    wreg      void 
 10470 ;; Registers used:
 10471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10472 ;; Tracked objects:
 10473 ;;		On entry : 0/0
 10474 ;;		On exit  : 0/0
 10475 ;;		Unchanged: 0/0
 10476 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10479 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10480 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10481 ;;Total ram usage:        1 bytes
 10482 ;; Hardware stack levels used:    1
 10483 ;; Hardware stack levels required when called:    6
 10484 ;; This function calls:
 10485 ;;		i1_USBCheckStdRequest
 10486 ;;		i1_USBCtrlEPServiceComplete
 10487 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10488 ;; This function is called by:
 10489 ;;		i1_USBCtrlEPService
 10490 ;; This function uses a non-reentrant model
 10491 ;;
 10492                           
 10493                           
 10494                           ;psect for function i1_USBCtrlTrfSetupHandler
 10495  1442                     i1_USBCtrlTrfSetupHandler:	
 10496                           
 10497                           ;usb_device.c: 2470: shortPacketStatus = 0;
 10498                           
 10499                           ;incstack = 0
 10500 ;; hardware stack exceeded
 10501                           ; Regs used in i1_USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10502  1442  0021               	movlb	1	; select bank1
 10503  1443  01DD               	clrf	_shortPacketStatus^(0+128)	;volatile
 10504                           
 10505                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 10506  1444  01DA               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
 10507                           
 10508                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 10509  1445  0022               	movlb	2	; select bank2
 10510  1446  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10511                           
 10512                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 10513  1447  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10514                           
 10515                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 10516  1448  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 10517                           
 10518                           ;usb_device.c: 2475: controlTransferState = 0;
 10519  1449  0021               	movlb	1	; select bank1
 10520  144A  01DC               	clrf	_controlTransferState^(0+128)	;volatile
 10521                           
 10522                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10523  144B  307F               	movlw	127
 10524  144C  00A6               	movwf	??i1_USBCtrlTrfSetupHandler^(0+128)
 10525  144D  084D               	movf	_pBDTEntryIn^(0+128),w
 10526  144E  0086               	movwf	6
 10527  144F  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10528  1450  0087               	movwf	7
 10529  1451  0826               	movf	??i1_USBCtrlTrfSetupHandler^(0+128),w
 10530  1452  0581               	andwf	1,f
 10531                           
 10532                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10533  1453  3004               	movlw	4
 10534  1454  064D               	xorwf	_pBDTEntryIn^(0+128),w
 10535  1455  00CD               	movwf	_pBDTEntryIn^(0+128)
 10536  1456  3000               	movlw	0
 10537  1457  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
 10538  1458  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 10539                           
 10540                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10541  1459  307F               	movlw	127
 10542  145A  00A6               	movwf	??i1_USBCtrlTrfSetupHandler^(0+128)
 10543  145B  084D               	movf	_pBDTEntryIn^(0+128),w
 10544  145C  0086               	movwf	6
 10545  145D  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10546  145E  0087               	movwf	7
 10547  145F  0826               	movf	??i1_USBCtrlTrfSetupHandler^(0+128),w
 10548  1460  0581               	andwf	1,f
 10549                           
 10550                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10551  1461  3004               	movlw	4
 10552  1462  064D               	xorwf	_pBDTEntryIn^(0+128),w
 10553  1463  00CD               	movwf	_pBDTEntryIn^(0+128)
 10554  1464  3000               	movlw	0
 10555  1465  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
 10556  1466  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 10557                           
 10558                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 10559  1467  307F               	movlw	127
 10560  1468  00A6               	movwf	??i1_USBCtrlTrfSetupHandler^(0+128)
 10561  1469  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10562  146A  0086               	movwf	6
 10563  146B  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10564  146C  0087               	movwf	7
 10565  146D  0826               	movf	??i1_USBCtrlTrfSetupHandler^(0+128),w
 10566  146E  0581               	andwf	1,f
 10567                           
 10568                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 10569  146F  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 10570                           
 10571                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 10572  1470  01D6               	clrf	(_inPipes^(0+128)+3)	;volatile
 10573  1471  01D7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 10574                           
 10575                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 10576  1472  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
 10577                           
 10578                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 10579  1473  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
 10580  1474  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
 10581                           
 10582                           ;usb_device.c: 2500: USBCheckStdRequest();
 10583  1475  3197  27A0  3194   	fcall	i1_USBCheckStdRequest
 10584                           
 10585                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 10586  1478  3000               	movlw	0
 10587  1479  0020               	movlb	0	; select bank0
 10588  147A  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10589  147B  3003               	movlw	3
 10590  147C  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10591  147D  3000               	movlw	0
 10592  147E  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10593  147F  3000               	movlw	0
 10594  1480  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10595  1481  3000               	movlw	0
 10596  1482  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10597  1483  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10598  1484  3192  2236  3194   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10599                           
 10600                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 10601  1487  318E  263F         	fcall	i1_USBCtrlEPServiceComplete
 10602  1489  0008               	return
 10603  148A                     __end_ofi1_USBCtrlTrfSetupHandler:	
 10604                           
 10605                           	psect	text49
 10606  0E3F                     __ptext49:	
 10607 ;; *************** function i1_USBCtrlEPServiceComplete *****************
 10608 ;; Defined at:
 10609 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;		None
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;		None
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  1    wreg      void 
 10616 ;; Registers used:
 10617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;Total ram usage:        2 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:    2
 10630 ;; This function calls:
 10631 ;;		i1_USBCtrlEPAllowDataStage
 10632 ;;		i1_USBCtrlEPAllowStatusStage
 10633 ;; This function is called by:
 10634 ;;		i1_USBCtrlTrfSetupHandler
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           
 10639                           ;psect for function i1_USBCtrlEPServiceComplete
 10640  0E3F                     i1_USBCtrlEPServiceComplete:	
 10641                           
 10642                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 10643                           
 10644                           ;incstack = 0
 10645 ;; hardware stack exceeded
 10646                           ; Regs used in i1_USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10647  0E3F  003D               	movlb	29	; select bank29
 10648  0E40  120E               	bcf	14,4	;volatile
 10649                           
 10650                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 10651  0E41  0021               	movlb	1	; select bank1
 10652  0E42  1BD5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
 10653  0E43  2E85               	goto	i1l508
 10654                           
 10655                           ;usb_device.c: 1629: {
 10656                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 10657  0E44  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
 10658  0E45  2E54               	goto	i1l4451
 10659                           
 10660                           ;usb_device.c: 1631: {
 10661                           ;usb_device.c: 1632: controlTransferState = 2;
 10662  0E46  3002               	movlw	2
 10663  0E47  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10664  0E48  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10665  0E49  00DC               	movwf	_controlTransferState^(0+128)	;volatile
 10666                           
 10667                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 10668  0E4A  0022               	movlb	2	; select bank2
 10669  0E4B  0847               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
 10670  0E4C  1D03               	btfss	3,2
 10671  0E4D  2E50               	goto	i1l4447
 10672                           
 10673                           ;usb_device.c: 1644: {
 10674                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 10675  0E4E  3196  262F         	fcall	i1_USBCtrlEPAllowDataStage
 10676  0E50                     i1l4447:	
 10677                           
 10678                           ;usb_device.c: 1646: }
 10679                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 10680  0E50  0022               	movlb	2	; select bank2
 10681  0E51  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10682                           
 10683                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 10684  0E52  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10685                           
 10686                           ;usb_device.c: 1652: }
 10687  0E53  0008               	return
 10688  0E54                     i1l4451:	
 10689                           
 10690                           ;usb_device.c: 1653: else
 10691                           ;usb_device.c: 1654: {
 10692                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 16;
 10693  0E54  0021               	movlb	1	; select bank1
 10694  0E55  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10695  0E56  3E01               	addlw	1
 10696  0E57  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10697  0E58  3000               	movlw	0
 10698  0E59  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10699  0E5A  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10700  0E5B  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10701  0E5C  0086               	movwf	6
 10702  0E5D  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10703  0E5E  0087               	movwf	7
 10704  0E5F  3010               	movlw	16
 10705  0E60  0081               	movwf	1
 10706                           
 10707                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10708  0E61  3050               	movlw	80
 10709  0E62  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10710  0E63  3000               	movlw	0
 10711  0E64  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10712  0E65  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10713  0E66  0086               	movwf	6
 10714  0E67  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10715  0E68  0087               	movwf	7
 10716  0E69  3142               	addfsr 1,2
 10717  0E6A  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10718  0E6B  3FC0               	movwi [0]fsr1
 10719  0E6C  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10720  0E6D  3FC1               	movwi [1]fsr1
 10721                           
 10722                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10723  0E6E  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10724  0E6F  0086               	movwf	6
 10725  0E70  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10726  0E71  0087               	movwf	7
 10727  0E72  300C               	movlw	12
 10728  0E73  0081               	movwf	1
 10729                           
 10730                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10731  0E74  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10732  0E75  0086               	movwf	6
 10733  0E76  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10734  0E77  0087               	movwf	7
 10735  0E78  1781               	bsf	1,7
 10736                           
 10737                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 10738  0E79  084D               	movf	_pBDTEntryIn^(0+128),w
 10739  0E7A  0086               	movwf	6
 10740  0E7B  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10741  0E7C  0087               	movwf	7
 10742  0E7D  3004               	movlw	4
 10743  0E7E  0081               	movwf	1
 10744                           
 10745                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10746  0E7F  084D               	movf	_pBDTEntryIn^(0+128),w
 10747  0E80  0086               	movwf	6
 10748  0E81  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10749  0E82  0087               	movwf	7
 10750  0E83  1781               	bsf	1,7
 10751                           
 10752                           ;usb_device.c: 1665: }
 10753                           ;usb_device.c: 1666: }
 10754  0E84  0008               	return
 10755  0E85                     i1l508:	
 10756                           
 10757                           ;usb_device.c: 1667: else
 10758                           ;usb_device.c: 1668: {
 10759                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 10760  0E85  0020               	movlb	0	; select bank0
 10761  0E86  1FD0               	btfss	80,7	;volatile
 10762  0E87  2E9E               	goto	i1l4477
 10763                           
 10764                           ;usb_device.c: 1670: {
 10765                           ;usb_device.c: 1671: controlTransferState = 1;
 10766  0E88  3001               	movlw	1
 10767  0E89  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10768  0E8A  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10769  0E8B  0021               	movlb	1	; select bank1
 10770  0E8C  00DC               	movwf	_controlTransferState^(0+128)	;volatile
 10771                           
 10772                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 10773  0E8D  0022               	movlb	2	; select bank2
 10774  0E8E  0848               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
 10775  0E8F  1D03               	btfss	3,2
 10776  0E90  2E94               	goto	i1l4469
 10777                           
 10778                           ;usb_device.c: 1686: {
 10779                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 10780  0E91  3196  262F  318E   	fcall	i1_USBCtrlEPAllowDataStage
 10781  0E94                     i1l4469:	
 10782                           
 10783                           ;usb_device.c: 1688: }
 10784                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 10785  0E94  0022               	movlb	2	; select bank2
 10786  0E95  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10787                           
 10788                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 10789  0E96  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10790                           
 10791                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 10792  0E97  0021               	movlb	1	; select bank1
 10793  0E98  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
 10794  0E99  1D03               	btfss	3,2
 10795  0E9A  0008               	return
 10796                           
 10797                           ;usb_device.c: 1713: {
 10798                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 10799  0E9B  3187  278F         	fcall	i1_USBCtrlEPAllowStatusStage
 10800                           
 10801                           ;usb_device.c: 1715: }
 10802                           ;usb_device.c: 1716: }
 10803  0E9D  0008               	return
 10804  0E9E                     i1l4477:	
 10805                           
 10806                           ;usb_device.c: 1717: else
 10807                           ;usb_device.c: 1718: {
 10808                           ;usb_device.c: 1729: controlTransferState = 2;
 10809  0E9E  3002               	movlw	2
 10810  0E9F  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10811  0EA0  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10812  0EA1  0021               	movlb	1	; select bank1
 10813  0EA2  00DC               	movwf	_controlTransferState^(0+128)	;volatile
 10814                           
 10815                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 16;
 10816  0EA3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10817  0EA4  3E01               	addlw	1
 10818  0EA5  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10819  0EA6  3000               	movlw	0
 10820  0EA7  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10821  0EA8  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10822  0EA9  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10823  0EAA  0086               	movwf	6
 10824  0EAB  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10825  0EAC  0087               	movwf	7
 10826  0EAD  3010               	movlw	16
 10827  0EAE  0081               	movwf	1
 10828                           
 10829                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10830  0EAF  3050               	movlw	80
 10831  0EB0  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10832  0EB1  3000               	movlw	0
 10833  0EB2  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10834  0EB3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10835  0EB4  0086               	movwf	6
 10836  0EB5  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10837  0EB6  0087               	movwf	7
 10838  0EB7  3142               	addfsr 1,2
 10839  0EB8  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10840  0EB9  3FC0               	movwi [0]fsr1
 10841  0EBA  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10842  0EBB  3FC1               	movwi [1]fsr1
 10843                           
 10844                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 10845  0EBC  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10846  0EBD  0086               	movwf	6
 10847  0EBE  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10848  0EBF  0087               	movwf	7
 10849  0EC0  3004               	movlw	4
 10850  0EC1  0081               	movwf	1
 10851                           
 10852                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10853  0EC2  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10854  0EC3  0086               	movwf	6
 10855  0EC4  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10856  0EC5  0087               	movwf	7
 10857  0EC6  1781               	bsf	1,7
 10858                           
 10859                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 10860  0EC7  0022               	movlb	2	; select bank2
 10861  0EC8  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10862                           
 10863                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 10864  0EC9  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10865                           
 10866                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 10867  0ECA  0021               	movlb	1	; select bank1
 10868  0ECB  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
 10869  0ECC  1D03               	btfss	3,2
 10870  0ECD  0008               	return
 10871                           
 10872                           ;usb_device.c: 1741: {
 10873                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 10874  0ECE  3187  278F         	fcall	i1_USBCtrlEPAllowStatusStage
 10875  0ED0  0008               	return
 10876  0ED1                     __end_ofi1_USBCtrlEPServiceComplete:	
 10877                           
 10878                           	psect	text50
 10879  162F                     __ptext50:	
 10880 ;; *************** function i1_USBCtrlEPAllowDataStage *****************
 10881 ;; Defined at:
 10882 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;		None
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;		None
 10887 ;; Return value:  Size  Location     Type
 10888 ;;                  1    wreg      void 
 10889 ;; Registers used:
 10890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10900 ;;Total ram usage:        2 bytes
 10901 ;; Hardware stack levels used:    1
 10902 ;; Hardware stack levels required when called:    1
 10903 ;; This function calls:
 10904 ;;		i1_USBCtrlTrfTxService
 10905 ;; This function is called by:
 10906 ;;		i1_USBCtrlEPServiceComplete
 10907 ;; This function uses a non-reentrant model
 10908 ;;
 10909                           
 10910                           
 10911                           ;psect for function i1_USBCtrlEPAllowDataStage
 10912  162F                     i1_USBCtrlEPAllowDataStage:	
 10913                           
 10914                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 10915                           
 10916                           ;incstack = 0
 10917 ;; hardware stack exceeded
 10918                           ; Regs used in i1_USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10919  162F  0022               	movlb	2	; select bank2
 10920  1630  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10921                           
 10922                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 10923  1631  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10924                           
 10925                           ;usb_device.c: 1493: if(controlTransferState == 2)
 10926  1632  3002               	movlw	2
 10927  1633  0021               	movlb	1	; select bank1
 10928  1634  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
 10929  1635  1D03               	btfss	3,2
 10930  1636  2E5C               	goto	i1l4151
 10931                           
 10932                           ;usb_device.c: 1494: {
 10933                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 16;
 10934  1637  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10935  1638  3E01               	addlw	1
 10936  1639  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 10937  163A  3000               	movlw	0
 10938  163B  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10939  163C  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 10940  163D  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 10941  163E  0086               	movwf	6
 10942  163F  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 10943  1640  0087               	movwf	7
 10944  1641  3010               	movlw	16
 10945  1642  0081               	movwf	1
 10946                           
 10947                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 10948  1643  3060               	movlw	96
 10949  1644  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 10950  1645  3000               	movlw	0
 10951  1646  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 10952  1647  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10953  1648  0086               	movwf	6
 10954  1649  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10955  164A  0087               	movwf	7
 10956  164B  3142               	addfsr 1,2
 10957  164C  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 10958  164D  3FC0               	movwi [0]fsr1
 10959  164E  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 10960  164F  3FC1               	movwi [1]fsr1
 10961                           
 10962                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10963  1650  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10964  1651  0086               	movwf	6
 10965  1652  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10966  1653  0087               	movwf	7
 10967  1654  3048               	movlw	72
 10968  1655  0081               	movwf	1
 10969                           
 10970                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10971  1656  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10972  1657  0086               	movwf	6
 10973  1658  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10974  1659  0087               	movwf	7
 10975  165A  1781               	bsf	1,7
 10976                           
 10977                           ;usb_device.c: 1500: }
 10978  165B  0008               	return
 10979  165C                     i1l4151:	
 10980                           
 10981                           ;usb_device.c: 1501: else
 10982                           ;usb_device.c: 1502: {
 10983                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 10984  165C  0857               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
 10985  165D  0020               	movlb	0	; select bank0
 10986  165E  0257               	subwf	87,w	;volatile
 10987  165F  1D03               	skipz
 10988  1660  2E65               	goto	u374_25
 10989  1661  0021               	movlb	1	; select bank1
 10990  1662  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
 10991  1663  0020               	movlb	0	; select bank0
 10992  1664  0256               	subwf	86,w	;volatile
 10993  1665                     u374_25:	
 10994  1665  1803               	skipnc
 10995  1666  2E6E               	goto	i1l4155
 10996                           
 10997                           ;usb_device.c: 1506: {
 10998                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 10999  1667  0857               	movf	87,w	;volatile
 11000  1668  0021               	movlb	1	; select bank1
 11001  1669  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 11002  166A  0020               	movlb	0	; select bank0
 11003  166B  0856               	movf	86,w	;volatile
 11004  166C  0021               	movlb	1	; select bank1
 11005  166D  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11006  166E                     i1l4155:	
 11007                           
 11008                           ;usb_device.c: 1508: }
 11009                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 11010  166E  3189  21C9         	fcall	i1_USBCtrlTrfTxService
 11011                           
 11012                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11013  1670  3060               	movlw	96
 11014  1671  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 11015  1672  3000               	movlw	0
 11016  1673  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 11017  1674  0021               	movlb	1	; select bank1
 11018  1675  084D               	movf	_pBDTEntryIn^(0+128),w
 11019  1676  0086               	movwf	6
 11020  1677  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 11021  1678  0087               	movwf	7
 11022  1679  3142               	addfsr 1,2
 11023  167A  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11024  167B  3FC0               	movwi [0]fsr1
 11025  167C  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11026  167D  3FC1               	movwi [1]fsr1
 11027                           
 11028                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11029  167E  084D               	movf	_pBDTEntryIn^(0+128),w
 11030  167F  0086               	movwf	6
 11031  1680  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 11032  1681  0087               	movwf	7
 11033  1682  3048               	movlw	72
 11034  1683  0081               	movwf	1
 11035                           
 11036                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11037  1684  084D               	movf	_pBDTEntryIn^(0+128),w
 11038  1685  0086               	movwf	6
 11039  1686  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 11040  1687  0087               	movwf	7
 11041  1688  1781               	bsf	1,7
 11042  1689  0008               	return
 11043  168A                     __end_ofi1_USBCtrlEPAllowDataStage:	
 11044                           
 11045                           	psect	text51
 11046  17A0                     __ptext51:	
 11047 ;; *************** function i1_USBCheckStdRequest *****************
 11048 ;; Defined at:
 11049 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;		None
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;		None
 11054 ;; Return value:  Size  Location     Type
 11055 ;;                  1    wreg      void 
 11056 ;; Registers used:
 11057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11065 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11066 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11067 ;;Total ram usage:        1 bytes
 11068 ;; Hardware stack levels used:    1
 11069 ;; Hardware stack levels required when called:    5
 11070 ;; This function calls:
 11071 ;;		i1_USBStdFeatureReqHandler
 11072 ;;		i1_USBStdGetDscHandler
 11073 ;;		i1_USBStdGetStatusHandler
 11074 ;;		i1_USBStdSetCfgHandler
 11075 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11076 ;; This function is called by:
 11077 ;;		i1_USBCtrlTrfSetupHandler
 11078 ;; This function uses a non-reentrant model
 11079 ;;
 11080                           
 11081                           
 11082                           ;psect for function i1_USBCheckStdRequest
 11083  17A0                     i1_USBCheckStdRequest:	
 11084                           
 11085                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 11086                           
 11087                           ;incstack = 0
 11088 ;; hardware stack exceeded
 11089                           ; Regs used in i1_USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11090  17A0  0020               	movlb	0	; select bank0
 11091  17A1  0E50               	swapf	80,w	;volatile
 11092  17A2  0C89               	rrf	9,f
 11093  17A3  3903               	andlw	3
 11094  17A4  3A00               	xorlw	0
 11095  17A5  1D03               	btfss	3,2
 11096  17A6  0008               	return
 11097  17A7  2FF4               	goto	i1l6493
 11098  17A8                     i1l635:	
 11099                           ;usb_device.c: 2691: {
 11100                           ;usb_device.c: 2692: case 5:
 11101                           
 11102                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
 11103                           
 11104                           
 11105                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 11106  17A8  0021               	movlb	1	; select bank1
 11107  17A9  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11108                           
 11109                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 11110  17AA  3008               	movlw	8
 11111  17AB  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11112  17AC  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11113  17AD  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 11114                           
 11115                           ;usb_device.c: 2696: break;
 11116  17AE  0008               	return
 11117  17AF                     i1l6463:	
 11118                           ;usb_device.c: 2697: case 6:
 11119                           
 11120                           
 11121                           ;usb_device.c: 2698: USBStdGetDscHandler();
 11122  17AF  318B  2321         	fcall	i1_USBStdGetDscHandler
 11123                           
 11124                           ;usb_device.c: 2699: break;
 11125  17B1  0008               	return
 11126  17B2                     i1l6465:	
 11127                           ;usb_device.c: 2700: case 9:
 11128                           
 11129                           
 11130                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 11131  17B2  318D  25AE         	fcall	i1_USBStdSetCfgHandler
 11132                           
 11133                           ;usb_device.c: 2702: break;
 11134  17B4  0008               	return
 11135  17B5                     i1l6467:	
 11136                           ;usb_device.c: 2703: case 8:
 11137                           
 11138                           
 11139                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 11140  17B5  30E1               	movlw	low _USBActiveConfiguration
 11141  17B6  0021               	movlb	1	; select bank1
 11142  17B7  00D3               	movwf	_inPipes^(0+128)	;volatile
 11143  17B8  3000               	movlw	high _USBActiveConfiguration
 11144  17B9  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11145                           
 11146                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11147  17BA  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11148                           
 11149                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 11150  17BB  3001               	movlw	1
 11151  17BC  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11152  17BD  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11153  17BE  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11154                           
 11155                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 11156  17BF  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11157                           
 11158                           ;usb_device.c: 2708: break;
 11159  17C0  0008               	return
 11160  17C1                     i1l6475:	
 11161                           ;usb_device.c: 2709: case 0:
 11162                           
 11163                           
 11164                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 11165  17C1  3194  24D2         	fcall	i1_USBStdGetStatusHandler
 11166                           
 11167                           ;usb_device.c: 2711: break;
 11168  17C3  0008               	return
 11169  17C4                     i1l6477:	
 11170                           ;usb_device.c: 2712: case 1:
 11171                           
 11172                           
 11173                           ;usb_device.c: 2713: case 3:
 11174                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 11175  17C4  3181  21A4         	fcall	i1_USBStdFeatureReqHandler
 11176                           
 11177                           ;usb_device.c: 2715: break;
 11178  17C6  0008               	return
 11179  17C7                     i1l6479:	
 11180                           ;usb_device.c: 2716: case 10:
 11181                           
 11182                           
 11183                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 11184  17C7  0020               	movlb	0	; select bank0
 11185  17C8  0854               	movf	84,w	;volatile
 11186  17C9  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 11187  17CA  0021               	movlb	1	; select bank1
 11188  17CB  00D3               	movwf	_inPipes^(0+128)	;volatile
 11189  17CC  3001               	movlw	1
 11190  17CD  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11191                           
 11192                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11193  17CE  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11194                           
 11195                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 11196  17CF  3001               	movlw	1
 11197  17D0  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11198  17D1  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11199  17D2  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11200                           
 11201                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 11202  17D3  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11203                           
 11204                           ;usb_device.c: 2721: break;
 11205  17D4  0008               	return
 11206  17D5                     i1l644:	
 11207                           ;usb_device.c: 2722: case 11:
 11208                           
 11209                           
 11210                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 11211  17D5  0021               	movlb	1	; select bank1
 11212  17D6  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11213                           
 11214                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 11215  17D7  0020               	movlb	0	; select bank0
 11216  17D8  0852               	movf	82,w	;volatile
 11217  17D9  0021               	movlb	1	; select bank1
 11218  17DA  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11219  17DB  0020               	movlb	0	; select bank0
 11220  17DC  0854               	movf	84,w	;volatile
 11221  17DD  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 11222  17DE  0086               	movwf	6
 11223  17DF  3001               	movlw	1	; select bank2/3
 11224  17E0  0087               	movwf	7
 11225  17E1  0021               	movlb	1	; select bank1
 11226  17E2  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11227  17E3  0081               	movwf	1
 11228                           
 11229                           ;usb_device.c: 2725: break;
 11230  17E4  0008               	return
 11231  17E5                     i1l6489:	
 11232                           ;usb_device.c: 2726: case 7:
 11233                           
 11234                           
 11235                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 11236  17E5  3000               	movlw	0
 11237  17E6  0020               	movlb	0	; select bank0
 11238  17E7  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11239  17E8  3002               	movlw	2
 11240  17E9  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11241  17EA  3000               	movlw	0
 11242  17EB  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11243  17EC  3000               	movlw	0
 11244  17ED  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11245  17EE  3000               	movlw	0
 11246  17EF  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11247  17F0  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11248  17F1  3192  2236         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11249                           
 11250                           ;usb_device.c: 2732: }
 11251                           
 11252                           ;usb_device.c: 2731: break;
 11253                           
 11254                           ;usb_device.c: 2730: default:
 11255                           
 11256                           ;usb_device.c: 2729: case 12:
 11257                           
 11258                           ;usb_device.c: 2728: break;
 11259  17F3  0008               	return
 11260  17F4                     i1l6493:	
 11261  17F4  0020               	movlb	0	; select bank0
 11262  17F5  0851               	movf	81,w	;volatile
 11263                           
 11264                           ; Switch size 1, requested type "space"
 11265                           ; Number of cases is 11, Range of values is 0 to 12
 11266                           ; switch strategies available:
 11267                           ; Name         Instructions Cycles
 11268                           ; direct_byte           32     6 (fixed)
 11269                           ; simple_byte           34    18 (average)
 11270                           ; jumptable            260     6 (fixed)
 11271                           ;	Chosen strategy is direct_byte
 11272  17F6  0084               	movwf	4
 11273  17F7  300D               	movlw	13
 11274  17F8  0204               	subwf	4,w
 11275  17F9  1803               	skipnc
 11276  17FA  0008               	return
 11277  17FB  3190               	movlp	high i1S7221
 11278  17FC  3504               	lslf	4,w
 11279  17FD  3E1A               	addlw	low i1S7221
 11280  17FE  0082               	movwf	2
 11281  17FF                     i1l633:	
 11282  17FF  0008               	return
 11283  1800                     __end_ofi1_USBCheckStdRequest:	
 11284                           
 11285                           	psect	swtext2
 11286  101A                     __pswtext2:	
 11287  101A                     i1S7221:	
 11288  101A  3197  2FC1         	ljmp	i1l6475
 11289  101C  3197  2FC4         	ljmp	i1l6477
 11290  101E  3197  2FFF         	ljmp	i1l633
 11291  1020  3197  2FC4         	ljmp	i1l6477
 11292  1022  3197  2FFF         	ljmp	i1l633
 11293  1024  3197  2FA8         	ljmp	i1l635
 11294  1026  3197  2FAF         	ljmp	i1l6463
 11295  1028  3197  2FE5         	ljmp	i1l6489
 11296  102A  3197  2FB5         	ljmp	i1l6467
 11297  102C  3197  2FB2         	ljmp	i1l6465
 11298  102E  3197  2FC7         	ljmp	i1l6479
 11299  1030  3197  2FD5         	ljmp	i1l644
 11300  1032  3197  2FFF         	ljmp	i1l633
 11301                           
 11302                           	psect	text52
 11303  0DAE                     __ptext52:	
 11304 ;; *************** function i1_USBStdSetCfgHandler *****************
 11305 ;; Defined at:
 11306 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;		None
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  USBStdSetCfg    2    0[BANK1 ] PTR unsigned char 
 11311 ;;		 -> UEP1(1), 
 11312 ;;  USBStdSetCfg    1    3[BANK1 ] unsigned char 
 11313 ;;  USBStdSetCfg    1    2[BANK1 ] unsigned char 
 11314 ;; Return value:  Size  Location     Type
 11315 ;;                  1    wreg      void 
 11316 ;; Registers used:
 11317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11318 ;; Tracked objects:
 11319 ;;		On entry : 0/0
 11320 ;;		On exit  : 0/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11324 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11325 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;Total ram usage:        5 bytes
 11328 ;; Hardware stack levels used:    1
 11329 ;; Hardware stack levels required when called:    4
 11330 ;; This function calls:
 11331 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11332 ;;		i1_memset
 11333 ;; This function is called by:
 11334 ;;		i1_USBCheckStdRequest
 11335 ;; This function uses a non-reentrant model
 11336 ;;
 11337                           
 11338                           
 11339                           ;psect for function i1_USBStdSetCfgHandler
 11340  0DAE                     i1_USBStdSetCfgHandler:	
 11341                           
 11342                           ;usb_device.c: 1970: uint8_t i;
 11343                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 11344                           
 11345                           ;incstack = 0
 11346 ;; hardware stack exceeded
 11347                           ; Regs used in i1_USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11348  0DAE  0021               	movlb	1	; select bank1
 11349  0DAF  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11350                           
 11351                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
 11352  0DB0  300E               	movlw	14
 11353  0DB1  00A1               	movwf	(i1USBStdSetCfgHandler@p+1)^(0+128)
 11354  0DB2  3099               	movlw	153
 11355  0DB3  00A0               	movwf	i1USBStdSetCfgHandler@p^(0+128)
 11356  0DB4  01A2               	clrf	i1USBStdSetCfgHandler@i_2173^(0+128)
 11357  0DB5  3002               	movlw	2
 11358  0DB6  0222               	subwf	i1USBStdSetCfgHandler@i_2173^(0+128),w
 11359  0DB7  1803               	btfsc	3,0
 11360  0DB8  2DCC               	goto	i1l6259
 11361  0DB9                     i1l6251:	
 11362  0DB9  0820               	movf	i1USBStdSetCfgHandler@p^(0+128),w
 11363  0DBA  0086               	movwf	6
 11364  0DBB  0821               	movf	(i1USBStdSetCfgHandler@p+1)^(0+128),w
 11365  0DBC  0087               	movwf	7
 11366  0DBD  0181               	clrf	1
 11367  0DBE  3001               	movlw	1
 11368  0DBF  07A0               	addwf	i1USBStdSetCfgHandler@p^(0+128),f
 11369  0DC0  3000               	movlw	0
 11370  0DC1  3DA1               	addwfc	(i1USBStdSetCfgHandler@p+1)^(0+128),f
 11371  0DC2  3001               	movlw	1
 11372  0DC3  0020               	movlb	0	; select bank0
 11373  0DC4  00DE               	movwf	??i1_USBStdSetCfgHandler
 11374  0DC5  085E               	movf	??i1_USBStdSetCfgHandler,w
 11375  0DC6  0021               	movlb	1	; select bank1
 11376  0DC7  07A2               	addwf	i1USBStdSetCfgHandler@i_2173^(0+128),f
 11377  0DC8  3002               	movlw	2
 11378  0DC9  0222               	subwf	i1USBStdSetCfgHandler@i_2173^(0+128),w
 11379  0DCA  1C03               	skipc
 11380  0DCB  2DB9               	goto	i1l6251
 11381  0DCC                     i1l6259:	
 11382                           
 11383                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 11384  0DCC  3020               	movlw	32
 11385  0DCD  00F0               	movwf	i1memset@p1
 11386  0DCE  3000               	movlw	0
 11387  0DCF  00F1               	movwf	i1memset@p1+1
 11388  0DD0  3000               	movlw	0
 11389  0DD1  00F2               	movwf	i1memset@c
 11390  0DD2  00F3               	movwf	i1memset@c+1
 11391  0DD3  3030               	movlw	48
 11392  0DD4  00F4               	movwf	i1memset@n
 11393  0DD5  3000               	movlw	0
 11394  0DD6  00F5               	movwf	i1memset@n+1
 11395  0DD7  3190  208E  318D   	fcall	i1_memset
 11396                           
 11397                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 11398  0DDA  003D               	movlb	29	; select bank29
 11399  0DDB  170E               	bsf	14,6	;volatile
 11400                           
 11401                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 11402  0DDC  0021               	movlb	1	; select bank1
 11403  0DDD  01A3               	clrf	i1USBStdSetCfgHandler@i^(0+128)
 11404  0DDE  3003               	movlw	3
 11405  0DDF  0223               	subwf	i1USBStdSetCfgHandler@i^(0+128),w
 11406  0DE0  1803               	btfsc	3,0
 11407  0DE1  2DF8               	goto	i1l6275
 11408  0DE2                     i1l6269:	
 11409                           
 11410                           ;usb_device.c: 1988: {
 11411                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 11412  0DE2  0823               	movf	i1USBStdSetCfgHandler@i^(0+128),w
 11413  0DE3  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 11414  0DE4  0086               	movwf	6
 11415  0DE5  3001               	movlw	1	; select bank2/3
 11416  0DE6  0087               	movwf	7
 11417  0DE7  0181               	clrf	1
 11418                           
 11419                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 11420  0DE8  0823               	movf	i1USBStdSetCfgHandler@i^(0+128),w
 11421  0DE9  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 11422  0DEA  0086               	movwf	6
 11423  0DEB  3001               	movlw	1	; select bank2/3
 11424  0DEC  0087               	movwf	7
 11425  0DED  0181               	clrf	1
 11426  0DEE  3001               	movlw	1
 11427  0DEF  0020               	movlb	0	; select bank0
 11428  0DF0  00DE               	movwf	??i1_USBStdSetCfgHandler
 11429  0DF1  085E               	movf	??i1_USBStdSetCfgHandler,w
 11430  0DF2  0021               	movlb	1	; select bank1
 11431  0DF3  07A3               	addwf	i1USBStdSetCfgHandler@i^(0+128),f
 11432  0DF4  3003               	movlw	3
 11433  0DF5  0223               	subwf	i1USBStdSetCfgHandler@i^(0+128),w
 11434  0DF6  1C03               	skipc
 11435  0DF7  2DE2               	goto	i1l6269
 11436  0DF8                     i1l6275:	
 11437                           
 11438                           ;usb_device.c: 1991: }
 11439                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 11440  0DF8  3065               	movlw	low _USBAlternateInterface
 11441  0DF9  00F0               	movwf	i1memset@p1
 11442  0DFA  3001               	movlw	high _USBAlternateInterface
 11443  0DFB  00F1               	movwf	i1memset@p1+1
 11444  0DFC  3000               	movlw	0
 11445  0DFD  00F2               	movwf	i1memset@c
 11446  0DFE  00F3               	movwf	i1memset@c+1
 11447  0DFF  3002               	movlw	2
 11448  0E00  00F4               	movwf	i1memset@n
 11449  0E01  3000               	movlw	0
 11450  0E02  00F5               	movwf	i1memset@n+1
 11451  0E03  3190  208E  318D   	fcall	i1_memset
 11452                           
 11453                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 11454  0E06  003D               	movlb	29	; select bank29
 11455  0E07  130E               	bcf	14,6	;volatile
 11456                           
 11457                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11458  0E08  3028               	movlw	40
 11459  0E09  0021               	movlb	1	; select bank1
 11460  0E0A  00CD               	movwf	_pBDTEntryIn^(0+128)
 11461  0E0B  3000               	movlw	0
 11462  0E0C  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 11463                           
 11464                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 11465  0E0D  3020               	movlw	32
 11466  0E0E  0020               	movlb	0	; select bank0
 11467  0E0F  00DE               	movwf	??i1_USBStdSetCfgHandler
 11468  0E10  085E               	movf	??i1_USBStdSetCfgHandler,w
 11469  0E11  0021               	movlb	1	; select bank1
 11470  0E12  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
 11471                           
 11472                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11473  0E13  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 11474  0E14  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 11475  0E15  39FF               	andlw	255
 11476  0E16  1D03               	skipz
 11477  0E17  3000               	movlw	0
 11478  0E18  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 11479                           
 11480                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 11481  0E19  0020               	movlb	0	; select bank0
 11482  0E1A  0852               	movf	82,w	;volatile
 11483  0E1B  00DE               	movwf	??i1_USBStdSetCfgHandler
 11484  0E1C  085E               	movf	??i1_USBStdSetCfgHandler,w
 11485  0E1D  0021               	movlb	1	; select bank1
 11486  0E1E  00E1               	movwf	_USBActiveConfiguration^(0+128)	;volatile
 11487                           
 11488                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 11489  0E1F  0861               	movf	_USBActiveConfiguration^(0+128),w	;volatile
 11490  0E20  1D03               	btfss	3,2
 11491  0E21  2E29               	goto	i1l6291
 11492                           
 11493                           ;usb_device.c: 2010: {
 11494                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 11495  0E22  3010               	movlw	16
 11496  0E23  0020               	movlb	0	; select bank0
 11497  0E24  00DE               	movwf	??i1_USBStdSetCfgHandler
 11498  0E25  085E               	movf	??i1_USBStdSetCfgHandler,w
 11499  0E26  0021               	movlb	1	; select bank1
 11500  0E27  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 11501                           
 11502                           ;usb_device.c: 2013: }
 11503  0E28  0008               	return
 11504  0E29                     i1l6291:	
 11505                           
 11506                           ;usb_device.c: 2014: else
 11507                           ;usb_device.c: 2015: {
 11508                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 11509  0E29  3000               	movlw	0
 11510  0E2A  0020               	movlb	0	; select bank0
 11511  0E2B  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11512  0E2C  3001               	movlw	1
 11513  0E2D  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11514  0E2E  30E1               	movlw	low _USBActiveConfiguration
 11515  0E2F  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11516  0E30  3000               	movlw	high _USBActiveConfiguration
 11517  0E31  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11518  0E32  3001               	movlw	1
 11519  0E33  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11520  0E34  3000               	movlw	0
 11521  0E35  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11522  0E36  3192  2236         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11523                           
 11524                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 11525  0E38  3020               	movlw	32
 11526  0E39  0020               	movlb	0	; select bank0
 11527  0E3A  00DE               	movwf	??i1_USBStdSetCfgHandler
 11528  0E3B  085E               	movf	??i1_USBStdSetCfgHandler,w
 11529  0E3C  0021               	movlb	1	; select bank1
 11530  0E3D  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 11531  0E3E  0008               	return
 11532  0E3F                     __end_ofi1_USBStdSetCfgHandler:	
 11533                           
 11534                           	psect	text53
 11535  108E                     __ptext53:	
 11536 ;; *************** function i1_memset *****************
 11537 ;; Defined at:
 11538 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 11539 ;; Parameters:    Size  Location     Type
 11540 ;;  p1              2    0[COMMON] PTR void 
 11541 ;;		 -> USBAlternateInterface(2), BDT(48), 
 11542 ;;  c               2    2[COMMON] int 
 11543 ;;  n               2    4[COMMON] unsigned int 
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;  memset          2    6[COMMON] PTR unsigned char 
 11546 ;;		 -> USBAlternateInterface(2), BDT(48), 
 11547 ;; Return value:  Size  Location     Type
 11548 ;;                  1    wreg      PTR void 
 11549 ;; Registers used:
 11550 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11551 ;; Tracked objects:
 11552 ;;		On entry : 0/0
 11553 ;;		On exit  : 0/0
 11554 ;;		Unchanged: 0/0
 11555 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11556 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11560 ;;Total ram usage:        8 bytes
 11561 ;; Hardware stack levels used:    1
 11562 ;; This function calls:
 11563 ;;		Nothing
 11564 ;; This function is called by:
 11565 ;;		i1_USBStdSetCfgHandler
 11566 ;; This function uses a non-reentrant model
 11567 ;;
 11568                           
 11569                           
 11570                           ;psect for function i1_memset
 11571  108E                     i1_memset:	
 11572                           
 11573                           ;incstack = 0
 11574 ;; hardware stack exceeded
 11575                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11576  108E  0871               	movf	i1memset@p1+1,w
 11577  108F  00F7               	movwf	i1memset@p+1
 11578  1090  0870               	movf	i1memset@p1,w
 11579  1091  00F6               	movwf	i1memset@p
 11580  1092                     i1l3961:	
 11581  1092  3001               	movlw	1
 11582  1093  02F4               	subwf	i1memset@n,f
 11583  1094  3000               	movlw	0
 11584  1095  3BF5               	subwfb	i1memset@n+1,f
 11585  1096  0A74               	incf	i1memset@n,w
 11586  1097  1903               	btfsc	3,2
 11587  1098  0A75               	incf	i1memset@n+1,w
 11588  1099  1903               	btfsc	3,2
 11589  109A  0008               	return
 11590  109B  0876               	movf	i1memset@p,w
 11591  109C  0086               	movwf	6
 11592  109D  0877               	movf	i1memset@p+1,w
 11593  109E  0087               	movwf	7
 11594  109F  0872               	movf	i1memset@c,w
 11595  10A0  0081               	movwf	1
 11596  10A1  3001               	movlw	1
 11597  10A2  07F6               	addwf	i1memset@p,f
 11598  10A3  3000               	movlw	0
 11599  10A4  3DF7               	addwfc	i1memset@p+1,f
 11600  10A5  2892               	goto	i1l3961
 11601  10A6                     __end_ofi1_memset:	
 11602                           ;	Return value of i1_memset is never used
 11603                           
 11604                           
 11605                           	psect	text54
 11606  14D2                     __ptext54:	
 11607 ;; *************** function i1_USBStdGetStatusHandler *****************
 11608 ;; Defined at:
 11609 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;		None
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;  USBStdGetSta    2    1[COMMON] PTR struct __BDT
 11614 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 11615 ;; Return value:  Size  Location     Type
 11616 ;;                  1    wreg      void 
 11617 ;; Registers used:
 11618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11619 ;; Tracked objects:
 11620 ;;		On entry : 0/0
 11621 ;;		On exit  : 0/0
 11622 ;;		Unchanged: 0/0
 11623 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11627 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11628 ;;Total ram usage:        3 bytes
 11629 ;; Hardware stack levels used:    1
 11630 ;; This function calls:
 11631 ;;		Nothing
 11632 ;; This function is called by:
 11633 ;;		i1_USBCheckStdRequest
 11634 ;; This function uses a non-reentrant model
 11635 ;;
 11636                           
 11637                           
 11638                           ;psect for function i1_USBStdGetStatusHandler
 11639  14D2                     i1_USBStdGetStatusHandler:	
 11640                           
 11641                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 11642                           
 11643                           ;incstack = 0
 11644                           ; Regs used in i1_USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 11645  14D2  0020               	movlb	0	; select bank0
 11646  14D3  01E0               	clrf	96	;volatile
 11647                           
 11648                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 11649  14D4  01E1               	clrf	97	;volatile
 11650                           
 11651                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 11652  14D5  2D0D               	goto	i1l4267
 11653  14D6                     i1l573:	
 11654                           ;usb_device.c: 2135: {
 11655                           ;usb_device.c: 2136: case (0x00):
 11656                           
 11657                           
 11658                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 11659  14D6  0021               	movlb	1	; select bank1
 11660  14D7  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11661                           
 11662                           ;usb_device.c: 2145: }
 11663                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 11664                           
 11665                           ;usb_device.c: 2143: {
 11666                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 11667                           
 11668                           ;usb_device.c: 2142: if(0 == 1)
 11669  14D8  0022               	movlb	2	; select bank2
 11670  14D9  034E               	decf	_RemoteWakeup^(0+256),w	;volatile
 11671  14DA  1D03               	btfss	3,2
 11672  14DB  2D19               	goto	i1l576
 11673                           
 11674                           ;usb_device.c: 2148: {
 11675                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 11676  14DC  0020               	movlb	0	; select bank0
 11677  14DD  14E0               	bsf	96,1	;volatile
 11678                           
 11679                           ;usb_device.c: 2150: }
 11680                           ;usb_device.c: 2151: break;
 11681  14DE  2D19               	goto	i1l576
 11682  14DF                     i1l577:	
 11683                           ;usb_device.c: 2152: case (0x01):
 11684                           
 11685                           
 11686                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 11687  14DF  0021               	movlb	1	; select bank1
 11688  14E0  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11689                           
 11690                           ;usb_device.c: 2154: break;
 11691  14E1  2D19               	goto	i1l576
 11692  14E2                     i1l578:	
 11693                           ;usb_device.c: 2155: case (0x02):
 11694                           
 11695                           
 11696                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 11697  14E2  0021               	movlb	1	; select bank1
 11698  14E3  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11699                           
 11700                           ;usb_device.c: 2160: {
 11701                           ;usb_device.c: 2161: BDT_ENTRY *p;
 11702                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 11703  14E4  0020               	movlb	0	; select bank0
 11704  14E5  1BD4               	btfsc	84,7	;volatile
 11705  14E6  2CF2               	goto	i1l4257
 11706                           
 11707                           ;usb_device.c: 2164: {
 11708                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11709  14E7  0854               	movf	84,w	;volatile
 11710  14E8  390F               	andlw	15
 11711  14E9  0709               	addwf	9,w
 11712  14EA  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11713  14EB  0086               	movwf	6
 11714  14EC  3001               	movlw	1	; select bank2/3
 11715  14ED  0087               	movwf	7
 11716  14EE  3F40               	moviw [0]fsr1
 11717  14EF  00F1               	movwf	i1USBStdGetStatusHandler@p
 11718  14F0  3F41               	moviw [1]fsr1
 11719  14F1  2CFB               	goto	L13
 11720  14F2                     i1l4257:	
 11721                           ;usb_device.c: 2166: }
 11722                           
 11723                           
 11724                           ;usb_device.c: 2167: else
 11725                           ;usb_device.c: 2168: {
 11726                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11727  14F2  0854               	movf	84,w	;volatile
 11728  14F3  390F               	andlw	15
 11729  14F4  0709               	addwf	9,w
 11730  14F5  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 11731  14F6  0086               	movwf	6
 11732  14F7  0187               	clrf	7
 11733  14F8  3F40               	moviw [0]fsr1
 11734  14F9  00F1               	movwf	i1USBStdGetStatusHandler@p
 11735  14FA  3F41               	moviw [1]fsr1
 11736  14FB                     L13:	
 11737  14FB  00F2               	movwf	i1USBStdGetStatusHandler@p+1
 11738                           
 11739                           ;usb_device.c: 2170: }
 11740                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 11741  14FC  0871               	movf	i1USBStdGetStatusHandler@p,w
 11742  14FD  0086               	movwf	6
 11743  14FE  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 11744  14FF  0087               	movwf	7
 11745  1500  1F81               	btfss	1,7
 11746  1501  2D19               	goto	i1l576
 11747  1502  0871               	movf	i1USBStdGetStatusHandler@p,w
 11748  1503  0086               	movwf	6
 11749  1504  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 11750  1505  0087               	movwf	7
 11751  1506  1D01               	btfss	1,2
 11752  1507  2D19               	goto	i1l576
 11753                           
 11754                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 11755  1508  3001               	movlw	1
 11756  1509  00F0               	movwf	??i1_USBStdGetStatusHandler
 11757  150A  0870               	movf	??i1_USBStdGetStatusHandler,w
 11758  150B  00E0               	movwf	96	;volatile
 11759                           
 11760                           ;usb_device.c: 2175: }
 11761                           ;usb_device.c: 2176: }
 11762                           
 11763                           ;usb_device.c: 2174: break;
 11764  150C  2D19               	goto	i1l576
 11765  150D                     i1l4267:	
 11766  150D  0850               	movf	80,w	;volatile
 11767  150E  391F               	andlw	31
 11768                           
 11769                           ; Switch size 1, requested type "space"
 11770                           ; Number of cases is 3, Range of values is 0 to 2
 11771                           ; switch strategies available:
 11772                           ; Name         Instructions Cycles
 11773                           ; simple_byte           10     6 (average)
 11774                           ; direct_byte           12     6 (fixed)
 11775                           ; jumptable            260     6 (fixed)
 11776                           ;	Chosen strategy is simple_byte
 11777  150F  3A00               	xorlw	0	; case 0
 11778  1510  1903               	skipnz
 11779  1511  2CD6               	goto	i1l573
 11780  1512  3A01               	xorlw	1	; case 1
 11781  1513  1903               	skipnz
 11782  1514  2CDF               	goto	i1l577
 11783  1515  3A03               	xorlw	3	; case 2
 11784  1516  1903               	skipnz
 11785  1517  2CE2               	goto	i1l578
 11786  1518  2D19               	goto	i1l576
 11787  1519                     i1l576:	
 11788                           
 11789                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 11790  1519  0021               	movlb	1	; select bank1
 11791  151A  1FD5               	btfss	(_inPipes^(0+128)+2),7	;volatile
 11792  151B  0008               	return
 11793                           
 11794                           ;usb_device.c: 2179: {
 11795                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 11796  151C  3060               	movlw	96
 11797  151D  00D3               	movwf	_inPipes^(0+128)	;volatile
 11798  151E  3000               	movlw	0
 11799  151F  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11800                           
 11801                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11802  1520  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11803                           
 11804                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 11805  1521  3002               	movlw	2
 11806  1522  00F0               	movwf	??i1_USBStdGetStatusHandler
 11807  1523  0870               	movf	??i1_USBStdGetStatusHandler,w
 11808  1524  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11809  1525  0008               	return
 11810  1526                     __end_ofi1_USBStdGetStatusHandler:	
 11811                           
 11812                           	psect	text55
 11813  0B21                     __ptext55:	
 11814 ;; *************** function i1_USBStdGetDscHandler *****************
 11815 ;; Defined at:
 11816 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;		None
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;		None
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      void 
 11823 ;; Registers used:
 11824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11825 ;; Tracked objects:
 11826 ;;		On entry : 0/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11832 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11833 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11834 ;;Total ram usage:        3 bytes
 11835 ;; Hardware stack levels used:    1
 11836 ;; This function calls:
 11837 ;;		Nothing
 11838 ;; This function is called by:
 11839 ;;		i1_USBCheckStdRequest
 11840 ;; This function uses a non-reentrant model
 11841 ;;
 11842                           
 11843                           
 11844                           ;psect for function i1_USBStdGetDscHandler
 11845  0B21                     i1_USBStdGetDscHandler:	
 11846                           
 11847                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 11848                           
 11849                           ;incstack = 0
 11850                           ; Regs used in i1_USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 11851  0B21  3080               	movlw	128
 11852  0B22  0020               	movlb	0	; select bank0
 11853  0B23  0650               	xorwf	80,w	;volatile
 11854  0B24  1D03               	btfss	3,2
 11855  0B25  0008               	return
 11856                           
 11857                           ;usb_device.c: 2046: {
 11858                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 11859  0B26  30C0               	movlw	192
 11860  0B27  00F0               	movwf	??i1_USBStdGetDscHandler
 11861  0B28  0870               	movf	??i1_USBStdGetDscHandler,w
 11862  0B29  0021               	movlb	1	; select bank1
 11863  0B2A  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
 11864                           
 11865                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 11866  0B2B  2B93               	goto	i1l4245
 11867  0B2C                     i1l4219:	
 11868                           ;usb_device.c: 2050: {
 11869                           ;usb_device.c: 2051: case 0x01:
 11870                           
 11871                           
 11872                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 11873  0B2C  3091               	movlw	low (_device_dsc| (0+32768))
 11874  0B2D  0021               	movlb	1	; select bank1
 11875  0B2E  00D3               	movwf	_inPipes^(0+128)	;volatile
 11876  0B2F  3098               	movlw	high (_device_dsc| (0+32768))
 11877  0B30  00D4               	movwf	(_inPipes^(0+128)+1)	;volatile
 11878                           
 11879                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 11880  0B31  3000               	movlw	0
 11881  0B32  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 11882  0B33  3012               	movlw	18
 11883  0B34  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11884                           
 11885                           ;usb_device.c: 2058: break;
 11886  0B35  0008               	return
 11887  0B36                     i1l4223:	
 11888                           ;usb_device.c: 2059: case 0x02:
 11889                           
 11890                           
 11891                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 11892  0B36  0020               	movlb	0	; select bank0
 11893  0B37  0852               	movf	82,w	;volatile
 11894  0B38  1D03               	btfss	3,2
 11895  0B39  2B69               	goto	i1l4231
 11896                           
 11897                           ;usb_device.c: 2064: {
 11898                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 11899  0B3A  0852               	movf	82,w	;volatile
 11900  0B3B  00F0               	movwf	??i1_USBStdGetDscHandler
 11901  0B3C  01F1               	clrf	??i1_USBStdGetDscHandler+1
 11902  0B3D  35F0               	lslf	??i1_USBStdGetDscHandler,f
 11903  0B3E  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 11904  0B3F  30AD               	movlw	low (_USB_CD_Ptr| (0+32768))
 11905  0B40  0770               	addwf	??i1_USBStdGetDscHandler,w
 11906  0B41  0084               	movwf	4
 11907  0B42  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
 11908  0B43  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 11909  0B44  0085               	movwf	5
 11910  0B45  3F00               	moviw [0]fsr0
 11911  0B46  0021               	movlb	1	; select bank1
 11912  0B47  00D3               	movwf	_inPipes^(0+128)	;volatile
 11913  0B48  3F01               	moviw [1]fsr0
 11914  0B49  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11915                           
 11916                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 11917  0B4A  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 11918  0B4B  00F1               	movwf	??i1_USBStdGetDscHandler+1
 11919  0B4C  0853               	movf	_inPipes^(0+128),w	;volatile
 11920  0B4D  00F0               	movwf	??i1_USBStdGetDscHandler
 11921  0B4E  3002               	movlw	2
 11922  0B4F  0770               	addwf	??i1_USBStdGetDscHandler,w
 11923  0B50  0084               	movwf	4
 11924  0B51  0871               	movf	??i1_USBStdGetDscHandler+1,w
 11925  0B52  1803               	skipnc
 11926  0B53  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 11927  0B54  0085               	movwf	5
 11928  0B55  0800               	movf	0,w	;code access
 11929  0B56  00F2               	movwf	??i1_USBStdGetDscHandler+2
 11930  0B57  0872               	movf	??i1_USBStdGetDscHandler+2,w
 11931  0B58  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11932                           
 11933                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 11934  0B59  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 11935  0B5A  00F1               	movwf	??i1_USBStdGetDscHandler+1
 11936  0B5B  0853               	movf	_inPipes^(0+128),w	;volatile
 11937  0B5C  00F0               	movwf	??i1_USBStdGetDscHandler
 11938  0B5D  3003               	movlw	3
 11939  0B5E  0770               	addwf	??i1_USBStdGetDscHandler,w
 11940  0B5F  0084               	movwf	4
 11941  0B60  0871               	movf	??i1_USBStdGetDscHandler+1,w
 11942  0B61  1803               	skipnc
 11943  0B62  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 11944  0B63  0085               	movwf	5
 11945  0B64  0800               	movf	0,w	;code access
 11946  0B65  00F2               	movwf	??i1_USBStdGetDscHandler+2
 11947  0B66  0872               	movf	??i1_USBStdGetDscHandler+2,w
 11948  0B67  00D7               	movwf	(_inPipes^(0+128)+4)	;volatile
 11949                           
 11950                           ;usb_device.c: 2076: }
 11951  0B68  0008               	return
 11952  0B69                     i1l4231:	
 11953                           
 11954                           ;usb_device.c: 2077: else
 11955                           ;usb_device.c: 2078: {
 11956                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 11957  0B69  0021               	movlb	1	; select bank1
 11958  0B6A  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11959                           
 11960                           ;usb_device.c: 2080: }
 11961                           ;usb_device.c: 2081: break;
 11962  0B6B  0008               	return
 11963  0B6C                     i1l4233:	
 11964                           ;usb_device.c: 2082: case 0x03:
 11965                           
 11966                           
 11967                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 11968  0B6C  3003               	movlw	3
 11969  0B6D  0020               	movlb	0	; select bank0
 11970  0B6E  0252               	subwf	82,w	;volatile
 11971  0B6F  1803               	skipnc
 11972  0B70  2B8D               	goto	i1l4239
 11973                           
 11974                           ;usb_device.c: 2087: {
 11975                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11976  0B71  0852               	movf	82,w	;volatile
 11977  0B72  00F0               	movwf	??i1_USBStdGetDscHandler
 11978  0B73  01F1               	clrf	??i1_USBStdGetDscHandler+1
 11979  0B74  35F0               	lslf	??i1_USBStdGetDscHandler,f
 11980  0B75  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 11981  0B76  30A3               	movlw	low (_USB_SD_Ptr| (0+32768))
 11982  0B77  0770               	addwf	??i1_USBStdGetDscHandler,w
 11983  0B78  0084               	movwf	4
 11984  0B79  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
 11985  0B7A  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 11986  0B7B  0085               	movwf	5
 11987  0B7C  3F00               	moviw [0]fsr0
 11988  0B7D  0021               	movlb	1	; select bank1
 11989  0B7E  00D3               	movwf	_inPipes^(0+128)	;volatile
 11990  0B7F  3F01               	moviw [1]fsr0
 11991  0B80  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11992                           
 11993                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11994  0B81  0853               	movf	_inPipes^(0+128),w	;volatile
 11995  0B82  0084               	movwf	4
 11996  0B83  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 11997  0B84  0085               	movwf	5
 11998  0B85  0800               	movf	0,w	;code access
 11999  0B86  00F0               	movwf	??i1_USBStdGetDscHandler
 12000  0B87  01F1               	clrf	??i1_USBStdGetDscHandler+1
 12001  0B88  0870               	movf	??i1_USBStdGetDscHandler,w
 12002  0B89  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12003  0B8A  0871               	movf	??i1_USBStdGetDscHandler+1,w
 12004  0B8B  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12005                           
 12006                           ;usb_device.c: 2092: }
 12007  0B8C  0008               	return
 12008  0B8D                     i1l4239:	
 12009                           
 12010                           ;usb_device.c: 2102: else
 12011                           ;usb_device.c: 2103: {
 12012                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 12013  0B8D  0021               	movlb	1	; select bank1
 12014  0B8E  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 12015                           
 12016                           ;usb_device.c: 2105: }
 12017                           ;usb_device.c: 2106: break;
 12018  0B8F  0008               	return
 12019  0B90                     i1l4241:	
 12020                           ;usb_device.c: 2107: default:
 12021                           
 12022                           
 12023                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 12024  0B90  0021               	movlb	1	; select bank1
 12025  0B91  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 12026                           
 12027                           ;usb_device.c: 2110: }
 12028                           
 12029                           ;usb_device.c: 2109: break;
 12030  0B92  0008               	return
 12031  0B93                     i1l4245:	
 12032  0B93  0020               	movlb	0	; select bank0
 12033  0B94  0853               	movf	83,w	;volatile
 12034                           
 12035                           ; Switch size 1, requested type "space"
 12036                           ; Number of cases is 3, Range of values is 1 to 3
 12037                           ; switch strategies available:
 12038                           ; Name         Instructions Cycles
 12039                           ; simple_byte           10     6 (average)
 12040                           ; direct_byte           15     9 (fixed)
 12041                           ; jumptable            263     9 (fixed)
 12042                           ;	Chosen strategy is simple_byte
 12043  0B95  3A01               	xorlw	1	; case 1
 12044  0B96  1903               	skipnz
 12045  0B97  2B2C               	goto	i1l4219
 12046  0B98  3A03               	xorlw	3	; case 2
 12047  0B99  1903               	skipnz
 12048  0B9A  2B36               	goto	i1l4223
 12049  0B9B  3A01               	xorlw	1	; case 3
 12050  0B9C  1903               	skipnz
 12051  0B9D  2B6C               	goto	i1l4233
 12052  0B9E  2B90               	goto	i1l4241
 12053  0B9F  0008               	return
 12054  0BA0                     __end_ofi1_USBStdGetDscHandler:	
 12055                           
 12056                           	psect	text56
 12057  01A4                     __ptext56:	
 12058 ;; *************** function i1_USBStdFeatureReqHandler *****************
 12059 ;; Defined at:
 12060 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;		None
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;  USBStdFeatur    2    3[BANK1 ] PTR struct __BDT
 12065 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 12066 ;;  USBStdFeatur    2    0[BANK1 ] PTR unsigned char 
 12067 ;;		 -> UEP0(1), 
 12068 ;;  USBStdFeatur    1    2[BANK1 ] struct .
 12069 ;; Return value:  Size  Location     Type
 12070 ;;                  1    wreg      void 
 12071 ;; Registers used:
 12072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12073 ;; Tracked objects:
 12074 ;;		On entry : 0/0
 12075 ;;		On exit  : 0/0
 12076 ;;		Unchanged: 0/0
 12077 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12079 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12080 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12081 ;;      Totals:         0       2       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12082 ;;Total ram usage:        7 bytes
 12083 ;; Hardware stack levels used:    1
 12084 ;; Hardware stack levels required when called:    4
 12085 ;; This function calls:
 12086 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12087 ;; This function is called by:
 12088 ;;		i1_USBCheckStdRequest
 12089 ;; This function uses a non-reentrant model
 12090 ;;
 12091                           
 12092                           
 12093                           ;psect for function i1_USBStdFeatureReqHandler
 12094  01A4                     i1_USBStdFeatureReqHandler:	
 12095                           
 12096                           ;usb_device.c: 2756: BDT_ENTRY *p;
 12097                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 12098                           ;usb_device.c: 2761: unsigned char* pUEP;
 12099                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 12100                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 12101                           
 12102                           ;incstack = 0
 12103 ;; hardware stack exceeded
 12104                           ; Regs used in i1_USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12105  01A4  0020               	movlb	0	; select bank0
 12106  01A5  0352               	decf	82,w	;volatile
 12107  01A6  1D03               	btfss	3,2
 12108  01A7  29BC               	goto	i1l6307
 12109  01A8  0850               	movf	80,w	;volatile
 12110  01A9  391F               	andlw	31
 12111  01AA  3A00               	xorlw	0
 12112  01AB  1D03               	skipz
 12113  01AC  29BC               	goto	i1l6307
 12114                           
 12115                           ;usb_device.c: 2801: {
 12116                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 12117  01AD  0021               	movlb	1	; select bank1
 12118  01AE  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12119                           
 12120                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 12121  01AF  3003               	movlw	3
 12122  01B0  0020               	movlb	0	; select bank0
 12123  01B1  0651               	xorwf	81,w	;volatile
 12124  01B2  1D03               	btfss	3,2
 12125  01B3  29BA               	goto	i1l6305
 12126                           
 12127                           ;usb_device.c: 2804: RemoteWakeup = 1;
 12128  01B4  3001               	movlw	1
 12129  01B5  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12130  01B6  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12131  01B7  0022               	movlb	2	; select bank2
 12132  01B8  00CE               	movwf	_RemoteWakeup^(0+256)	;volatile
 12133  01B9  29BC               	goto	i1l6307
 12134  01BA                     i1l6305:	
 12135                           
 12136                           ;usb_device.c: 2805: else
 12137                           ;usb_device.c: 2806: RemoteWakeup = 0;
 12138  01BA  0022               	movlb	2	; select bank2
 12139  01BB  01CE               	clrf	_RemoteWakeup^(0+256)	;volatile
 12140  01BC                     i1l6307:	
 12141                           
 12142                           ;usb_device.c: 2807: }
 12143                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 12144                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 12145                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 12146                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 12147  01BC  0020               	movlb	0	; select bank0
 12148  01BD  0852               	movf	82,w	;volatile
 12149  01BE  1D03               	btfss	3,2
 12150  01BF  0008               	return
 12151  01C0  0850               	movf	80,w	;volatile
 12152  01C1  391F               	andlw	31
 12153  01C2  3A02               	xorlw	2
 12154  01C3  1D03               	skipz
 12155  01C4  0008               	return
 12156  01C5  0854               	movf	84,w	;volatile
 12157  01C6  390F               	andlw	15
 12158  01C7  3A00               	xorlw	0
 12159  01C8  1903               	skipnz
 12160  01C9  0008               	return
 12161  01CA  0854               	movf	84,w	;volatile
 12162  01CB  390F               	andlw	15
 12163  01CC  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12164  01CD  3003               	movlw	3
 12165  01CE  025E               	subwf	??i1_USBStdFeatureReqHandler,w
 12166  01CF  1803               	skipnc
 12167  01D0  0008               	return
 12168  01D1  3020               	movlw	32
 12169  01D2  0021               	movlb	1	; select bank1
 12170  01D3  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
 12171  01D4  1D03               	btfss	3,2
 12172  01D5  0008               	return
 12173                           
 12174                           ;usb_device.c: 2814: {
 12175                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 12176  01D6  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12177                           
 12178                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 12179  01D7  0020               	movlb	0	; select bank0
 12180  01D8  1BD4               	btfsc	84,7	;volatile
 12181  01D9  29EB               	goto	i1l6321
 12182                           
 12183                           ;usb_device.c: 2821: {
 12184                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12185  01DA  0854               	movf	84,w	;volatile
 12186  01DB  390F               	andlw	15
 12187  01DC  0709               	addwf	9,w
 12188  01DD  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12189  01DE  0086               	movwf	6
 12190  01DF  3001               	movlw	1	; select bank2/3
 12191  01E0  0087               	movwf	7
 12192  01E1  3F40               	moviw [0]fsr1
 12193  01E2  0021               	movlb	1	; select bank1
 12194  01E3  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12195  01E4  3F41               	moviw [1]fsr1
 12196  01E5  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12197                           
 12198                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 12199  01E6  0020               	movlb	0	; select bank0
 12200  01E7  0854               	movf	84,w	;volatile
 12201  01E8  390F               	andlw	15
 12202  01E9  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12203  01EA  29FB               	goto	L14
 12204  01EB                     i1l6321:	
 12205                           ;usb_device.c: 2824: }
 12206                           
 12207                           
 12208                           ;usb_device.c: 2825: else
 12209                           ;usb_device.c: 2826: {
 12210                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12211  01EB  0020               	movlb	0	; select bank0
 12212  01EC  0854               	movf	84,w	;volatile
 12213  01ED  390F               	andlw	15
 12214  01EE  0709               	addwf	9,w
 12215  01EF  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 12216  01F0  0086               	movwf	6
 12217  01F1  0187               	clrf	7
 12218  01F2  3F40               	moviw [0]fsr1
 12219  01F3  0021               	movlb	1	; select bank1
 12220  01F4  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12221  01F5  3F41               	moviw [1]fsr1
 12222  01F6  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12223                           
 12224                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 12225  01F7  0020               	movlb	0	; select bank0
 12226  01F8  0854               	movf	84,w	;volatile
 12227  01F9  390F               	andlw	15
 12228  01FA  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12229  01FB                     L14:	
 12230  01FB  0086               	movwf	6
 12231  01FC  3001               	movlw	1	; select bank2/3
 12232  01FD  0087               	movwf	7
 12233  01FE  0801               	movf	1,w
 12234  01FF  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12235  0200  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12236  0201  0021               	movlb	1	; select bank1
 12237  0202  00A2               	movwf	i1USBStdFeatureReqHandler@current_ep_data^(0+128)
 12238                           
 12239                           ;usb_device.c: 2829: }
 12240                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 12241  0203  1822               	btfsc	i1USBStdFeatureReqHandler@current_ep_data^(0+128),0
 12242  0204  2A15               	goto	i1l6327
 12243                           
 12244                           ;usb_device.c: 2836: {
 12245                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 12246  0205  30FB               	movlw	251
 12247  0206  0020               	movlb	0	; select bank0
 12248  0207  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12249  0208  30FF               	movlw	255
 12250  0209  00DF               	movwf	??i1_USBStdFeatureReqHandler+1
 12251  020A  0021               	movlb	1	; select bank1
 12252  020B  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12253  020C  0020               	movlb	0	; select bank0
 12254  020D  055E               	andwf	??i1_USBStdFeatureReqHandler,w
 12255  020E  0021               	movlb	1	; select bank1
 12256  020F  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12257  0210  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12258  0211  0020               	movlb	0	; select bank0
 12259  0212  055F               	andwf	??i1_USBStdFeatureReqHandler+1,w
 12260  0213  0021               	movlb	1	; select bank1
 12261  0214  2A1A               	goto	L15
 12262  0215                     i1l6327:	
 12263                           ;usb_device.c: 2838: }
 12264                           
 12265                           
 12266                           ;usb_device.c: 2839: else
 12267                           ;usb_device.c: 2840: {
 12268                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 12269  0215  3004               	movlw	4
 12270  0216  0423               	iorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 12271  0217  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12272  0218  3000               	movlw	0
 12273  0219  0424               	iorwf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12274  021A                     L15:	
 12275  021A  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12276                           
 12277                           ;usb_device.c: 2842: }
 12278                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 12279  021B  0020               	movlb	0	; select bank0
 12280  021C  1BD4               	btfsc	84,7	;volatile
 12281  021D  2A2B               	goto	i1l6333
 12282                           
 12283                           ;usb_device.c: 2848: {
 12284                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12285  021E  0854               	movf	84,w	;volatile
 12286  021F  390F               	andlw	15
 12287  0220  0709               	addwf	9,w
 12288  0221  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12289  0222  0086               	movwf	6
 12290  0223  3001               	movlw	1	; select bank2/3
 12291  0224  0087               	movwf	7
 12292  0225  0021               	movlb	1	; select bank1
 12293  0226  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12294  0227  3FC0               	movwi [0]fsr1
 12295  0228  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12296  0229  3FC1               	movwi [1]fsr1
 12297                           
 12298                           ;usb_device.c: 2850: }
 12299  022A  2A37               	goto	i1l6335
 12300  022B                     i1l6333:	
 12301                           
 12302                           ;usb_device.c: 2851: else
 12303                           ;usb_device.c: 2852: {
 12304                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12305  022B  0020               	movlb	0	; select bank0
 12306  022C  0854               	movf	84,w	;volatile
 12307  022D  390F               	andlw	15
 12308  022E  0709               	addwf	9,w
 12309  022F  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 12310  0230  0086               	movwf	6
 12311  0231  0187               	clrf	7
 12312  0232  0021               	movlb	1	; select bank1
 12313  0233  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12314  0234  3FC0               	movwi [0]fsr1
 12315  0235  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12316  0236  3FC1               	movwi [1]fsr1
 12317  0237                     i1l6335:	
 12318                           
 12319                           ;usb_device.c: 2854: }
 12320                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 12321  0237  3003               	movlw	3
 12322  0238  0020               	movlb	0	; select bank0
 12323  0239  0651               	xorwf	81,w	;volatile
 12324  023A  1D03               	btfss	3,2
 12325  023B  2A5D               	goto	i1l6349
 12326                           
 12327                           ;usb_device.c: 2858: {
 12328                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 12329  023C  0021               	movlb	1	; select bank1
 12330  023D  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12331  023E  0086               	movwf	6
 12332  023F  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12333  0240  0087               	movwf	7
 12334  0241  1F81               	btfss	1,7
 12335  0242  2A51               	goto	i1l6345
 12336                           
 12337                           ;usb_device.c: 2860: {
 12338                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 12339  0243  0020               	movlb	0	; select bank0
 12340  0244  1BD4               	btfsc	84,7	;volatile
 12341  0245  2A4A               	goto	i1l6343
 12342                           
 12343                           ;usb_device.c: 2864: {
 12344                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 12345  0246  0854               	movf	84,w	;volatile
 12346  0247  390F               	andlw	15
 12347  0248  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12348  0249  2A4D               	goto	L16
 12349  024A                     i1l6343:	
 12350                           ;usb_device.c: 2866: }
 12351                           
 12352                           
 12353                           ;usb_device.c: 2867: else
 12354                           ;usb_device.c: 2868: {
 12355                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 12356  024A  0854               	movf	84,w	;volatile
 12357  024B  390F               	andlw	15
 12358  024C  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12359  024D                     L16:	
 12360  024D  0086               	movwf	6
 12361  024E  3001               	movlw	1	; select bank2/3
 12362  024F  0087               	movwf	7
 12363  0250  1481               	bsf	1,1
 12364  0251                     i1l6345:	
 12365                           
 12366                           ;usb_device.c: 2870: }
 12367                           ;usb_device.c: 2871: }
 12368                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 12369  0251  0021               	movlb	1	; select bank1
 12370  0252  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12371  0253  0086               	movwf	6
 12372  0254  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12373  0255  0087               	movwf	7
 12374  0256  1501               	bsf	1,2
 12375                           
 12376                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 12377  0257  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12378  0258  0086               	movwf	6
 12379  0259  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12380  025A  0087               	movwf	7
 12381  025B  1781               	bsf	1,7
 12382                           
 12383                           ;usb_device.c: 2876: }
 12384  025C  0008               	return
 12385  025D                     i1l6349:	
 12386                           
 12387                           ;usb_device.c: 2877: else
 12388                           ;usb_device.c: 2878: {
 12389                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 12390  025D  3004               	movlw	4
 12391  025E  0021               	movlb	1	; select bank1
 12392  025F  0623               	xorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 12393  0260  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12394  0261  3000               	movlw	0
 12395  0262  0624               	xorwf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12396  0263  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12397                           
 12398                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 12399  0264  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12400  0265  0086               	movwf	6
 12401  0266  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12402  0267  0087               	movwf	7
 12403  0268  1F81               	btfss	1,7
 12404  0269  2A90               	goto	i1l6359
 12405                           
 12406                           ;usb_device.c: 2885: {
 12407                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 12408  026A  307F               	movlw	127
 12409  026B  0020               	movlb	0	; select bank0
 12410  026C  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12411  026D  0021               	movlb	1	; select bank1
 12412  026E  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12413  026F  0086               	movwf	6
 12414  0270  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12415  0271  0087               	movwf	7
 12416  0272  0020               	movlb	0	; select bank0
 12417  0273  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12418  0274  0581               	andwf	1,f
 12419                           
 12420                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 12421  0275  0021               	movlb	1	; select bank1
 12422  0276  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12423  0277  0086               	movwf	6
 12424  0278  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12425  0279  0087               	movwf	7
 12426  027A  1701               	bsf	1,6
 12427                           
 12428                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 12429  027B  3000               	movlw	0
 12430  027C  0020               	movlb	0	; select bank0
 12431  027D  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12432  027E  3005               	movlw	5
 12433  027F  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12434  0280  0021               	movlb	1	; select bank1
 12435  0281  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12436  0282  0020               	movlb	0	; select bank0
 12437  0283  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12438  0284  0021               	movlb	1	; select bank1
 12439  0285  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12440  0286  0020               	movlb	0	; select bank0
 12441  0287  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12442  0288  3002               	movlw	2
 12443  0289  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12444  028A  3000               	movlw	0
 12445  028B  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12446  028C  3192  2236  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12447                           
 12448                           ;usb_device.c: 2891: }
 12449  028F  2A96               	goto	i1l6361
 12450  0290                     i1l6359:	
 12451                           
 12452                           ;usb_device.c: 2892: else
 12453                           ;usb_device.c: 2893: {
 12454                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 12455  0290  0021               	movlb	1	; select bank1
 12456  0291  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12457  0292  0086               	movwf	6
 12458  0293  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12459  0294  0087               	movwf	7
 12460  0295  1701               	bsf	1,6
 12461  0296                     i1l6361:	
 12462                           
 12463                           ;usb_device.c: 2896: }
 12464                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 12465  0296  3004               	movlw	4
 12466  0297  0021               	movlb	1	; select bank1
 12467  0298  0623               	xorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 12468  0299  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12469  029A  3000               	movlw	0
 12470  029B  0624               	xorwf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12471  029C  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12472                           
 12473                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 12474  029D  18A2               	btfsc	i1USBStdFeatureReqHandler@current_ep_data^(0+128),1
 12475  029E  2AA5               	goto	i1l669
 12476  029F  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12477  02A0  0086               	movwf	6
 12478  02A1  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12479  02A2  0087               	movwf	7
 12480  02A3  1F81               	btfss	1,7
 12481  02A4  2AD1               	goto	i1l6373
 12482  02A5                     i1l669:	
 12483                           
 12484                           ;usb_device.c: 2907: {
 12485                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 12486  02A5  0020               	movlb	0	; select bank0
 12487  02A6  1BD4               	btfsc	84,7	;volatile
 12488  02A7  2AAC               	goto	i1l6369
 12489                           
 12490                           ;usb_device.c: 2909: {
 12491                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 12492  02A8  0854               	movf	84,w	;volatile
 12493  02A9  390F               	andlw	15
 12494  02AA  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12495  02AB  2AAF               	goto	L17
 12496  02AC                     i1l6369:	
 12497                           ;usb_device.c: 2911: }
 12498                           
 12499                           
 12500                           ;usb_device.c: 2912: else
 12501                           ;usb_device.c: 2913: {
 12502                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 12503  02AC  0854               	movf	84,w	;volatile
 12504  02AD  390F               	andlw	15
 12505  02AE  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12506  02AF                     L17:	
 12507  02AF  0086               	movwf	6
 12508  02B0  3001               	movlw	1	; select bank2/3
 12509  02B1  0087               	movwf	7
 12510  02B2  1081               	bcf	1,1
 12511                           
 12512                           ;usb_device.c: 2915: }
 12513                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 12514  02B3  303B               	movlw	59
 12515  02B4  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12516  02B5  0021               	movlb	1	; select bank1
 12517  02B6  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12518  02B7  0086               	movwf	6
 12519  02B8  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12520  02B9  0087               	movwf	7
 12521  02BA  0020               	movlb	0	; select bank0
 12522  02BB  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12523  02BC  0581               	andwf	1,f
 12524                           
 12525                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 12526  02BD  3000               	movlw	0
 12527  02BE  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12528  02BF  3005               	movlw	5
 12529  02C0  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12530  02C1  0021               	movlb	1	; select bank1
 12531  02C2  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12532  02C3  0020               	movlb	0	; select bank0
 12533  02C4  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12534  02C5  0021               	movlb	1	; select bank1
 12535  02C6  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12536  02C7  0020               	movlb	0	; select bank0
 12537  02C8  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12538  02C9  3002               	movlw	2
 12539  02CA  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12540  02CB  3000               	movlw	0
 12541  02CC  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12542  02CD  3192  2236  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12543                           
 12544                           ;usb_device.c: 2921: }
 12545  02D0  2ADC               	goto	i1l6375
 12546  02D1                     i1l6373:	
 12547                           
 12548                           ;usb_device.c: 2922: else
 12549                           ;usb_device.c: 2923: {
 12550                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 12551  02D1  303B               	movlw	59
 12552  02D2  0020               	movlb	0	; select bank0
 12553  02D3  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12554  02D4  0021               	movlb	1	; select bank1
 12555  02D5  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12556  02D6  0086               	movwf	6
 12557  02D7  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12558  02D8  0087               	movwf	7
 12559  02D9  0020               	movlb	0	; select bank0
 12560  02DA  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12561  02DB  0581               	andwf	1,f
 12562  02DC                     i1l6375:	
 12563                           
 12564                           ;usb_device.c: 2926: }
 12565                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 12566  02DC  0020               	movlb	0	; select bank0
 12567  02DD  0854               	movf	84,w	;volatile
 12568  02DE  390F               	andlw	15
 12569  02DF  3E98               	addlw	152
 12570  02E0  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12571  02E1  01DF               	clrf	??i1_USBStdFeatureReqHandler+1
 12572  02E2  300E               	movlw	14
 12573  02E3  3DDF               	addwfc	??i1_USBStdFeatureReqHandler+1,f
 12574  02E4  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12575  02E5  0021               	movlb	1	; select bank1
 12576  02E6  00A0               	movwf	i1USBStdFeatureReqHandler@pUEP^(0+128)
 12577  02E7  0020               	movlb	0	; select bank0
 12578  02E8  085F               	movf	??i1_USBStdFeatureReqHandler+1,w
 12579  02E9  0021               	movlb	1	; select bank1
 12580  02EA  00A1               	movwf	(i1USBStdFeatureReqHandler@pUEP+1)^(0+128)
 12581                           
 12582                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 12583  02EB  30FE               	movlw	254
 12584  02EC  0020               	movlb	0	; select bank0
 12585  02ED  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12586  02EE  0021               	movlb	1	; select bank1
 12587  02EF  0820               	movf	i1USBStdFeatureReqHandler@pUEP^(0+128),w
 12588  02F0  0086               	movwf	6
 12589  02F1  0821               	movf	(i1USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 12590  02F2  0087               	movwf	7
 12591  02F3  0020               	movlb	0	; select bank0
 12592  02F4  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12593  02F5  0581               	andwf	1,f
 12594  02F6  0008               	return
 12595  02F7                     __end_ofi1_USBStdFeatureReqHandler:	
 12596                           
 12597                           	psect	text57
 12598  1236                     __ptext57:	
 12599 ;; *************** function i1_USER_USB_CALLBACK_EVENT_HANDLER *****************
 12600 ;; Defined at:
 12601 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
 12602 ;; Parameters:    Size  Location     Type
 12603 ;;  event           2    0[BANK0h] enum E34
 12604 ;;  pdata           2    2[BANK0h] PTR void 
 12605 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 12606 ;;		 -> NULL(0), 
 12607 ;;  size            2    4[BANK0h] unsigned int 
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;		None
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  1    wreg      unsigned char 
 12612 ;; Registers used:
 12613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12619 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12622 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12623 ;;Total ram usage:        6 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:    3
 12626 ;; This function calls:
 12627 ;;		i1_CDCInitEP
 12628 ;;		i1_USBCheckCDCRequest
 12629 ;; This function is called by:
 12630 ;;		i1_USBDeviceTasks
 12631 ;;		i1_USBStdSetCfgHandler
 12632 ;;		i1_USBSuspend
 12633 ;;		i1_USBWakeFromSuspend
 12634 ;;		i1_USBCtrlTrfSetupHandler
 12635 ;;		i1_USBCheckStdRequest
 12636 ;;		i1_USBStdFeatureReqHandler
 12637 ;; This function uses a non-reentrant model
 12638 ;;
 12639                           
 12640                           
 12641                           ;psect for function i1_USER_USB_CALLBACK_EVENT_HANDLER
 12642  1236                     i1_USER_USB_CALLBACK_EVENT_HANDLER:	
 12643                           
 12644                           ;usb_device_events.c: 51: switch( (int) event )
 12645                           
 12646                           ;incstack = 0
 12647                           ; Regs used in i1_USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12648  1236  2A3D               	goto	i1l6093
 12649  1237                     i1l6087:	
 12650                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
 12651                           
 12652                           ;usb_device_events.c: 73: break;
 12653                           
 12654                           ;usb_device_events.c: 68: case EVENT_RESUME:
 12655                           
 12656                           ;usb_device_events.c: 66: break;
 12657                           
 12658                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
 12659                           
 12660                           ;usb_device_events.c: 57: break;
 12661                           
 12662                           ;usb_device_events.c: 56: case EVENT_SOF:
 12663                           
 12664                           ;usb_device_events.c: 54: break;
 12665                           
 12666                           ;usb_device_events.c: 52: {
 12667                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
 12668                           
 12669                           
 12670                           ;usb_device_events.c: 76: CDCInitEP();
 12671  1237  3192  2296         	fcall	i1_CDCInitEP
 12672                           
 12673                           ;usb_device_events.c: 80: break;
 12674                           
 12675                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
 12676                           
 12677                           ;usb_device_events.c: 77: break;
 12678  1239  0008               	return
 12679  123A                     i1l6089:	
 12680                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
 12681                           
 12682                           
 12683                           ;usb_device_events.c: 85: USBCheckCDCRequest();
 12684  123A  3197  2740         	fcall	i1_USBCheckCDCRequest
 12685                           
 12686                           ;usb_device_events.c: 96: }
 12687                           
 12688                           ;usb_device_events.c: 95: break;
 12689                           
 12690                           ;usb_device_events.c: 94: default:
 12691                           
 12692                           ;usb_device_events.c: 92: break;
 12693                           
 12694                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
 12695                           
 12696                           ;usb_device_events.c: 89: break;
 12697                           
 12698                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
 12699                           
 12700                           ;usb_device_events.c: 86: break;
 12701  123C  0008               	return
 12702  123D                     i1l6093:	
 12703                           
 12704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12705                           ; Switch size 1, requested type "space"
 12706                           ; Number of cases is 2, Range of values is 0 to 127
 12707                           ; switch strategies available:
 12708                           ; Name         Instructions Cycles
 12709                           ; simple_byte            7     4 (average)
 12710                           ; direct_byte          262     6 (fixed)
 12711                           ; jumptable            260     6 (fixed)
 12712                           ;	Chosen strategy is simple_byte
 12713  123D  0020               	movlb	0	; select bank0
 12714  123E  0859               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
 12715  123F  3A00               	xorlw	0	; case 0
 12716  1240  1903               	skipnz
 12717  1241  2A46               	goto	i1l7223
 12718  1242  3A7F               	xorlw	127	; case 127
 12719  1243  1903               	skipnz
 12720  1244  2A60               	goto	i1l7225
 12721  1245  2A65               	goto	i1l285
 12722  1246                     i1l7223:	
 12723                           
 12724                           ; Switch size 1, requested type "space"
 12725                           ; Number of cases is 8, Range of values is 1 to 117
 12726                           ; switch strategies available:
 12727                           ; Name         Instructions Cycles
 12728                           ; simple_byte           25    13 (average)
 12729                           ; direct_byte          243     9 (fixed)
 12730                           ; jumptable            263     9 (fixed)
 12731                           ;	Chosen strategy is simple_byte
 12732  1246  0858               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 12733  1247  3A01               	xorlw	1	; case 1
 12734  1248  1903               	skipnz
 12735  1249  2A37               	goto	i1l6087
 12736  124A  3A03               	xorlw	3	; case 2
 12737  124B  1903               	skipnz
 12738  124C  2A65               	goto	i1l285
 12739  124D  3A01               	xorlw	1	; case 3
 12740  124E  1903               	skipnz
 12741  124F  2A3A               	goto	i1l6089
 12742  1250  3A06               	xorlw	6	; case 5
 12743  1251  1903               	skipnz
 12744  1252  2A65               	goto	i1l285
 12745  1253  3A77               	xorlw	119	; case 114
 12746  1254  1903               	skipnz
 12747  1255  2A65               	goto	i1l285
 12748  1256  3A01               	xorlw	1	; case 115
 12749  1257  1903               	skipnz
 12750  1258  2A65               	goto	i1l285
 12751  1259  3A07               	xorlw	7	; case 116
 12752  125A  1903               	skipnz
 12753  125B  2A65               	goto	i1l285
 12754  125C  3A01               	xorlw	1	; case 117
 12755  125D  1903               	skipnz
 12756  125E  2A65               	goto	i1l285
 12757  125F  2A65               	goto	i1l285
 12758  1260                     i1l7225:	
 12759                           
 12760                           ; Switch size 1, requested type "space"
 12761                           ; Number of cases is 1, Range of values is 255 to 255
 12762                           ; switch strategies available:
 12763                           ; Name         Instructions Cycles
 12764                           ; simple_byte            4     3 (average)
 12765                           ; direct_byte            7     5 (fixed)
 12766                           ; jumptable            263     9 (fixed)
 12767                           ;	Chosen strategy is simple_byte
 12768  1260  0858               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 12769  1261  3AFF               	xorlw	255	; case 255
 12770  1262  1903               	skipnz
 12771  1263  2A65               	goto	i1l285
 12772  1264  2A65               	goto	i1l285
 12773  1265                     i1l285:	
 12774                           ;usb_device_events.c: 97: return 1;
 12775                           ;	Return value of i1_USER_USB_CALLBACK_EVENT_HANDLER is never used
 12776                           
 12777  1265  0008               	return
 12778  1266                     __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER:	
 12779                           
 12780                           	psect	text58
 12781  1740                     __ptext58:	
 12782 ;; *************** function i1_USBCheckCDCRequest *****************
 12783 ;; Defined at:
 12784 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
 12785 ;; Parameters:    Size  Location     Type
 12786 ;;		None
 12787 ;; Auto vars:     Size  Location     Type
 12788 ;;		None
 12789 ;; Return value:  Size  Location     Type
 12790 ;;                  1    wreg      void 
 12791 ;; Registers used:
 12792 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12793 ;; Tracked objects:
 12794 ;;		On entry : 0/0
 12795 ;;		On exit  : 0/0
 12796 ;;		Unchanged: 0/0
 12797 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12802 ;;Total ram usage:        1 bytes
 12803 ;; Hardware stack levels used:    1
 12804 ;; This function calls:
 12805 ;;		Nothing
 12806 ;; This function is called by:
 12807 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12808 ;; This function uses a non-reentrant model
 12809 ;;
 12810                           
 12811                           
 12812                           ;psect for function i1_USBCheckCDCRequest
 12813  1740                     i1_USBCheckCDCRequest:	
 12814                           
 12815                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
 12816                           
 12817                           ;incstack = 0
 12818                           ; Regs used in i1_USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 12819  1740  0020               	movlb	0	; select bank0
 12820  1741  0850               	movf	80,w	;volatile
 12821  1742  391F               	andlw	31
 12822  1743  3A01               	xorlw	1
 12823  1744  1D03               	btfss	3,2
 12824  1745  0008               	return
 12825                           
 12826                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
 12827  1746  0E50               	swapf	80,w	;volatile
 12828  1747  0C89               	rrf	9,f
 12829  1748  3903               	andlw	3
 12830  1749  3A01               	xorlw	1
 12831  174A  1D03               	btfss	3,2
 12832  174B  0008               	return
 12833                           
 12834                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
 12835                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
 12836  174C  0854               	movf	84,w	;volatile
 12837  174D  1903               	btfsc	3,2
 12838  174E  2F8D               	goto	i1l3621
 12839  174F  0354               	decf	84,w	;volatile
 12840  1750  1D03               	btfss	3,2
 12841  1751  0008               	return
 12842  1752  2F8D               	goto	i1l3621
 12843  1753                     i1l3591:	
 12844                           ;usb_device_cdc.c: 166: {
 12845                           ;usb_device_cdc.c: 168: case 0x00:
 12846                           
 12847                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
 12848                           
 12849                           
 12850                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12851  1753  3056               	movlw	low _dummy_encapsulated_cmd_response
 12852  1754  0021               	movlb	1	; select bank1
 12853  1755  00D3               	movwf	_inPipes^(0+128)	;volatile
 12854  1756  3001               	movlw	high _dummy_encapsulated_cmd_response
 12855  1757  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12856                           
 12857                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
 12858  1758  3000               	movlw	0
 12859  1759  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12860  175A  3008               	movlw	8
 12861  175B  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12862                           
 12863                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12864  175C  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12865                           
 12866                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
 12867  175D  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12868                           
 12869                           ;usb_device_cdc.c: 174: break;
 12870  175E  0008               	return
 12871  175F                     i1l3599:	
 12872                           ;usb_device_cdc.c: 175: case 0x01:
 12873                           
 12874                           
 12875                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12876  175F  3056               	movlw	low _dummy_encapsulated_cmd_response
 12877  1760  0021               	movlb	1	; select bank1
 12878  1761  00D3               	movwf	_inPipes^(0+128)	;volatile
 12879  1762  3001               	movlw	high _dummy_encapsulated_cmd_response
 12880  1763  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12881                           
 12882                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
 12883  1764  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12884                           
 12885                           ;usb_device_cdc.c: 179: break;
 12886  1765  0008               	return
 12887  1766                     i1l3603:	
 12888                           ;usb_device_cdc.c: 183: case 0x20:
 12889                           
 12890                           
 12891                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
 12892  1766  0020               	movlb	0	; select bank0
 12893  1767  0857               	movf	87,w	;volatile
 12894  1768  0021               	movlb	1	; select bank1
 12895  1769  00CA               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
 12896  176A  0020               	movlb	0	; select bank0
 12897  176B  0856               	movf	86,w	;volatile
 12898  176C  0021               	movlb	1	; select bank1
 12899  176D  00C9               	movwf	(_outPipes^(0+128)+3)	;volatile
 12900                           
 12901                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 12902  176E  305E               	movlw	(low (_line_coding| (0+256)))& (0+255)
 12903  176F  00F0               	movwf	??i1_USBCheckCDCRequest
 12904  1770  0870               	movf	??i1_USBCheckCDCRequest,w
 12905  1771  00C6               	movwf	_outPipes^(0+128)	;volatile
 12906                           
 12907                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
 12908  1772  01CB               	clrf	(low ((_outPipes| 0+5)))^(0+128)	;volatile
 12909  1773  01CC               	clrf	((low ((_outPipes| 0+5))+1))^(0+128)	;volatile
 12910                           
 12911                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
 12912  1774  17C8               	bsf	(_outPipes^(0+128)+2),7	;volatile
 12913                           
 12914                           ;usb_device_cdc.c: 188: break;
 12915  1775  0008               	return
 12916  1776                     i1l3609:	
 12917                           ;usb_device_cdc.c: 190: case 0x21:
 12918                           
 12919                           
 12920                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 12921  1776  305E               	movlw	low _line_coding
 12922  1777  0021               	movlb	1	; select bank1
 12923  1778  00D3               	movwf	_inPipes^(0+128)	;volatile
 12924  1779  3001               	movlw	high _line_coding
 12925  177A  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12926  177B  3000               	movlw	0
 12927  177C  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12928  177D  3007               	movlw	7
 12929  177E  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12930  177F  30C1               	movlw	193
 12931  1780  00F0               	movwf	??i1_USBCheckCDCRequest
 12932  1781  0870               	movf	??i1_USBCheckCDCRequest,w
 12933  1782  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
 12934                           
 12935                           ;usb_device_cdc.c: 195: break;
 12936  1783  0008               	return
 12937  1784                     i1l3615:	
 12938                           ;usb_device_cdc.c: 197: case 0x22:
 12939                           
 12940                           
 12941                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 12942  1784  0020               	movlb	0	; select bank0
 12943  1785  0852               	movf	82,w	;volatile
 12944  1786  00F0               	movwf	??i1_USBCheckCDCRequest
 12945  1787  0870               	movf	??i1_USBCheckCDCRequest,w
 12946  1788  0022               	movlb	2	; select bank2
 12947  1789  00D1               	movwf	_control_signal_bitmap^(0+256)
 12948                           
 12949                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
 12950  178A  0021               	movlb	1	; select bank1
 12951  178B  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12952                           
 12953                           ;usb_device_cdc.c: 257: }
 12954                           
 12955                           ;usb_device_cdc.c: 256: break;
 12956                           
 12957                           ;usb_device_cdc.c: 255: default:
 12958                           
 12959                           ;usb_device_cdc.c: 231: break;
 12960  178C  0008               	return
 12961  178D                     i1l3621:	
 12962  178D  0020               	movlb	0	; select bank0
 12963  178E  0851               	movf	81,w	;volatile
 12964                           
 12965                           ; Switch size 1, requested type "space"
 12966                           ; Number of cases is 5, Range of values is 0 to 34
 12967                           ; switch strategies available:
 12968                           ; Name         Instructions Cycles
 12969                           ; simple_byte           16     9 (average)
 12970                           ; direct_byte           76     6 (fixed)
 12971                           ; jumptable            260     6 (fixed)
 12972                           ;	Chosen strategy is simple_byte
 12973  178F  3A00               	xorlw	0	; case 0
 12974  1790  1903               	skipnz
 12975  1791  2F53               	goto	i1l3591
 12976  1792  3A01               	xorlw	1	; case 1
 12977  1793  1903               	skipnz
 12978  1794  2F5F               	goto	i1l3599
 12979  1795  3A21               	xorlw	33	; case 32
 12980  1796  1903               	skipnz
 12981  1797  2F66               	goto	i1l3603
 12982  1798  3A01               	xorlw	1	; case 33
 12983  1799  1903               	skipnz
 12984  179A  2F76               	goto	i1l3609
 12985  179B  3A03               	xorlw	3	; case 34
 12986  179C  1903               	skipnz
 12987  179D  2F84               	goto	i1l3615
 12988  179E  2F9F               	goto	i1l46
 12989  179F                     i1l46:	
 12990  179F  0008               	return
 12991  17A0                     __end_ofi1_USBCheckCDCRequest:	
 12992                           
 12993                           	psect	text59
 12994  1296                     __ptext59:	
 12995 ;; *************** function i1_CDCInitEP *****************
 12996 ;; Defined at:
 12997 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
 12998 ;; Parameters:    Size  Location     Type
 12999 ;;		None
 13000 ;; Auto vars:     Size  Location     Type
 13001 ;;		None
 13002 ;; Return value:  Size  Location     Type
 13003 ;;                  1    wreg      void 
 13004 ;; Registers used:
 13005 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13006 ;; Tracked objects:
 13007 ;;		On entry : 0/0
 13008 ;;		On exit  : 0/0
 13009 ;;		Unchanged: 0/0
 13010 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;Total ram usage:        1 bytes
 13016 ;; Hardware stack levels used:    1
 13017 ;; Hardware stack levels required when called:    2
 13018 ;; This function calls:
 13019 ;;		i1_USBEnableEndpoint
 13020 ;;		i1_USBTransferOnePacket
 13021 ;; This function is called by:
 13022 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13023 ;; This function uses a non-reentrant model
 13024 ;;
 13025                           
 13026                           
 13027                           ;psect for function i1_CDCInitEP
 13028  1296                     i1_CDCInitEP:	
 13029                           
 13030                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
 13031                           
 13032                           ;incstack = 0
 13033                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13034  1296  3000               	movlw	0
 13035  1297  0022               	movlb	2	; select bank2
 13036  1298  00E1               	movwf	(_line_coding+3)^(0+256)
 13037  1299  3000               	movlw	0
 13038  129A  00E0               	movwf	(_line_coding+2)^(0+256)
 13039  129B  304B               	movlw	75
 13040  129C  00DF               	movwf	(_line_coding+1)^(0+256)
 13041  129D  3000               	movlw	0
 13042  129E  00DE               	movwf	_line_coding^(0+256)
 13043                           
 13044                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
 13045  129F  01E2               	clrf	(_line_coding^(0+256)+4)
 13046                           
 13047                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
 13048  12A0  01E3               	clrf	(_line_coding^(0+256)+5)
 13049                           
 13050                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
 13051  12A1  3008               	movlw	8
 13052  12A2  00FD               	movwf	??i1_CDCInitEP
 13053  12A3  087D               	movf	??i1_CDCInitEP,w
 13054  12A4  00E4               	movwf	(_line_coding^(0+256)+6)
 13055                           
 13056                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
 13057  12A5  01D5               	clrf	_cdc_rx_len^(0+256)
 13058                           
 13059                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
 13060  12A6  301A               	movlw	26
 13061  12A7  00FD               	movwf	??i1_CDCInitEP
 13062  12A8  087D               	movf	??i1_CDCInitEP,w
 13063  12A9  00F7               	movwf	i1USBEnableEndpoint@options
 13064  12AA  3001               	movlw	1
 13065  12AB  3191  2167  3192   	fcall	i1_USBEnableEndpoint
 13066                           
 13067                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 13068  12AE  301E               	movlw	30
 13069  12AF  00FD               	movwf	??i1_CDCInitEP
 13070  12B0  087D               	movf	??i1_CDCInitEP,w
 13071  12B1  00F7               	movwf	i1USBEnableEndpoint@options
 13072  12B2  3002               	movlw	2
 13073  12B3  3191  2167  3192   	fcall	i1_USBEnableEndpoint
 13074                           
 13075                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 13076  12B6  01F0               	clrf	i1USBTransferOnePacket@dir
 13077  12B7  30A0               	movlw	low _cdc_data_rx
 13078  12B8  00F1               	movwf	i1USBTransferOnePacket@data
 13079  12B9  3001               	movlw	high _cdc_data_rx
 13080  12BA  00F2               	movwf	i1USBTransferOnePacket@data+1
 13081  12BB  3040               	movlw	64
 13082  12BC  00FD               	movwf	??i1_CDCInitEP
 13083  12BD  087D               	movf	??i1_CDCInitEP,w
 13084  12BE  00F3               	movwf	i1USBTransferOnePacket@len
 13085  12BF  3002               	movlw	2
 13086  12C0  318C  241F         	fcall	i1_USBTransferOnePacket
 13087  12C2  0871               	movf	?i1_USBTransferOnePacket+1,w
 13088  12C3  0022               	movlb	2	; select bank2
 13089  12C4  00C1               	movwf	(_CDCDataOutHandle+1)^(0+256)
 13090  12C5  0870               	movf	?i1_USBTransferOnePacket,w
 13091  12C6  00C0               	movwf	_CDCDataOutHandle^(0+256)
 13092                           
 13093                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
 13094  12C7  01BE               	clrf	_CDCDataInHandle^(0+256)
 13095  12C8  01BF               	clrf	(_CDCDataInHandle+1)^(0+256)
 13096                           
 13097                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
 13098  12C9  01D4               	clrf	_cdc_trf_state^(0+256)
 13099  12CA  0008               	return
 13100  12CB                     __end_ofi1_CDCInitEP:	
 13101                           
 13102                           	psect	text60
 13103  0C1F                     __ptext60:	
 13104 ;; *************** function i1_USBTransferOnePacket *****************
 13105 ;; Defined at:
 13106 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
 13107 ;; Parameters:    Size  Location     Type
 13108 ;;  ep              1    wreg     unsigned char 
 13109 ;;  dir             1    0[COMMON] unsigned char 
 13110 ;;  data            2    1[COMMON] PTR unsigned char 
 13111 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
 13112 ;;  len             1    3[COMMON] unsigned char 
 13113 ;; Auto vars:     Size  Location     Type
 13114 ;;  ep              1    8[COMMON] unsigned char 
 13115 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
 13116 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  2    0[COMMON] PTR void 
 13119 ;; Registers used:
 13120 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13121 ;; Tracked objects:
 13122 ;;		On entry : 0/0
 13123 ;;		On exit  : 0/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13127 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13128 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;Total ram usage:       11 bytes
 13131 ;; Hardware stack levels used:    1
 13132 ;; This function calls:
 13133 ;;		Nothing
 13134 ;; This function is called by:
 13135 ;;		i1_CDCInitEP
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           
 13140                           ;psect for function i1_USBTransferOnePacket
 13141  0C1F                     i1_USBTransferOnePacket:	
 13142                           
 13143                           ;incstack = 0
 13144                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 13145                           ;i1USBTransferOnePacket@ep stored from wreg
 13146  0C1F  00F8               	movwf	i1USBTransferOnePacket@ep
 13147                           
 13148                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 13149                           ;usb_device.c: 1000: if(dir != 0)
 13150  0C20  0870               	movf	i1USBTransferOnePacket@dir,w
 13151  0C21  1903               	btfsc	3,2
 13152  0C22  2C2B               	goto	i1l3487
 13153                           
 13154                           ;usb_device.c: 1001: {
 13155                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 13156  0C23  3578               	lslf	i1USBTransferOnePacket@ep,w
 13157  0C24  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13158  0C25  0086               	movwf	6
 13159  0C26  0187               	clrf	7
 13160  0C27  3F40               	moviw [0]fsr1
 13161  0C28  00F9               	movwf	i1USBTransferOnePacket@handle
 13162  0C29  3F41               	moviw [1]fsr1
 13163  0C2A  2C33               	goto	L18
 13164  0C2B                     i1l3487:	
 13165                           ;usb_device.c: 1004: }
 13166                           
 13167                           
 13168                           ;usb_device.c: 1005: else
 13169                           ;usb_device.c: 1006: {
 13170                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 13171  0C2B  3578               	lslf	i1USBTransferOnePacket@ep,w
 13172  0C2C  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13173  0C2D  0086               	movwf	6
 13174  0C2E  3001               	movlw	1	; select bank2/3
 13175  0C2F  0087               	movwf	7
 13176  0C30  3F40               	moviw [0]fsr1
 13177  0C31  00F9               	movwf	i1USBTransferOnePacket@handle
 13178  0C32  3F41               	moviw [1]fsr1
 13179  0C33                     L18:	
 13180  0C33  00FA               	movwf	i1USBTransferOnePacket@handle+1
 13181                           
 13182                           ;usb_device.c: 1009: }
 13183                           ;usb_device.c: 1013: if(handle == 0)
 13184  0C34  0879               	movf	i1USBTransferOnePacket@handle,w
 13185  0C35  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
 13186  0C36  1D03               	btfss	3,2
 13187  0C37  2C3B               	goto	i1l3495
 13188                           
 13189                           ;usb_device.c: 1014: {
 13190                           ;usb_device.c: 1015: return 0;
 13191  0C38  01F0               	clrf	?i1_USBTransferOnePacket
 13192  0C39  01F1               	clrf	?i1_USBTransferOnePacket+1
 13193  0C3A  0008               	return
 13194  0C3B                     i1l3495:	
 13195                           
 13196                           ;usb_device.c: 1016: }
 13197                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 13198  0C3B  30FF               	movlw	255
 13199  0C3C  0571               	andwf	i1USBTransferOnePacket@data,w
 13200  0C3D  00F4               	movwf	??i1_USBTransferOnePacket
 13201  0C3E  307F               	movlw	127
 13202  0C3F  0572               	andwf	i1USBTransferOnePacket@data+1,w
 13203  0C40  00F5               	movwf	??i1_USBTransferOnePacket+1
 13204  0C41  0879               	movf	i1USBTransferOnePacket@handle,w
 13205  0C42  0086               	movwf	6
 13206  0C43  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13207  0C44  0087               	movwf	7
 13208  0C45  3142               	addfsr 1,2
 13209  0C46  0874               	movf	??i1_USBTransferOnePacket,w
 13210  0C47  3FC0               	movwi [0]fsr1
 13211  0C48  0875               	movf	??i1_USBTransferOnePacket+1,w
 13212  0C49  3FC1               	movwi [1]fsr1
 13213                           
 13214                           ;usb_device.c: 1030: handle->CNT = len;
 13215  0C4A  0879               	movf	i1USBTransferOnePacket@handle,w
 13216  0C4B  3E01               	addlw	1
 13217  0C4C  00F4               	movwf	??i1_USBTransferOnePacket
 13218  0C4D  3000               	movlw	0
 13219  0C4E  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
 13220  0C4F  00F5               	movwf	??i1_USBTransferOnePacket+1
 13221  0C50  0874               	movf	??i1_USBTransferOnePacket,w
 13222  0C51  0086               	movwf	6
 13223  0C52  0875               	movf	??i1_USBTransferOnePacket+1,w
 13224  0C53  0087               	movwf	7
 13225  0C54  0873               	movf	i1USBTransferOnePacket@len,w
 13226  0C55  0081               	movwf	1
 13227                           
 13228                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 13229  0C56  3040               	movlw	64
 13230  0C57  00F4               	movwf	??i1_USBTransferOnePacket
 13231  0C58  0879               	movf	i1USBTransferOnePacket@handle,w
 13232  0C59  0086               	movwf	6
 13233  0C5A  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13234  0C5B  0087               	movwf	7
 13235  0C5C  0874               	movf	??i1_USBTransferOnePacket,w
 13236  0C5D  0581               	andwf	1,f
 13237                           
 13238                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 13239  0C5E  0879               	movf	i1USBTransferOnePacket@handle,w
 13240  0C5F  0086               	movwf	6
 13241  0C60  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13242  0C61  0087               	movwf	7
 13243  0C62  1581               	bsf	1,3
 13244                           
 13245                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 13246  0C63  0879               	movf	i1USBTransferOnePacket@handle,w
 13247  0C64  0086               	movwf	6
 13248  0C65  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13249  0C66  0087               	movwf	7
 13250  0C67  1781               	bsf	1,7
 13251                           
 13252                           ;usb_device.c: 1036: if(dir != 0)
 13253  0C68  0870               	movf	i1USBTransferOnePacket@dir,w
 13254  0C69  1903               	btfsc	3,2
 13255  0C6A  2C82               	goto	i1l3505
 13256                           
 13257                           ;usb_device.c: 1037: {
 13258                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 13259  0C6B  3578               	lslf	i1USBTransferOnePacket@ep,w
 13260  0C6C  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13261  0C6D  0086               	movwf	6
 13262  0C6E  0187               	clrf	7
 13263  0C6F  3F40               	moviw [0]fsr1
 13264  0C70  00F4               	movwf	??i1_USBTransferOnePacket
 13265  0C71  3F41               	moviw [1]fsr1
 13266  0C72  00F5               	movwf	??i1_USBTransferOnePacket+1
 13267  0C73  3004               	movlw	4
 13268  0C74  0674               	xorwf	??i1_USBTransferOnePacket,w
 13269  0C75  00F6               	movwf	??i1_USBTransferOnePacket+2
 13270  0C76  3000               	movlw	0
 13271  0C77  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 13272  0C78  00F7               	movwf	??i1_USBTransferOnePacket+3
 13273  0C79  3578               	lslf	i1USBTransferOnePacket@ep,w
 13274  0C7A  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13275  0C7B  0086               	movwf	6
 13276  0C7C  0187               	clrf	7
 13277  0C7D  0876               	movf	??i1_USBTransferOnePacket+2,w
 13278  0C7E  3FC0               	movwi [0]fsr1
 13279  0C7F  0877               	movf	??i1_USBTransferOnePacket+3,w
 13280  0C80  3FC1               	movwi [1]fsr1
 13281                           
 13282                           ;usb_device.c: 1040: }
 13283  0C81  2C9A               	goto	i1l3507
 13284  0C82                     i1l3505:	
 13285                           
 13286                           ;usb_device.c: 1041: else
 13287                           ;usb_device.c: 1042: {
 13288                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 13289  0C82  3578               	lslf	i1USBTransferOnePacket@ep,w
 13290  0C83  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13291  0C84  0086               	movwf	6
 13292  0C85  3001               	movlw	1	; select bank2/3
 13293  0C86  0087               	movwf	7
 13294  0C87  3F40               	moviw [0]fsr1
 13295  0C88  00F4               	movwf	??i1_USBTransferOnePacket
 13296  0C89  3F41               	moviw [1]fsr1
 13297  0C8A  00F5               	movwf	??i1_USBTransferOnePacket+1
 13298  0C8B  3004               	movlw	4
 13299  0C8C  0674               	xorwf	??i1_USBTransferOnePacket,w
 13300  0C8D  00F6               	movwf	??i1_USBTransferOnePacket+2
 13301  0C8E  3000               	movlw	0
 13302  0C8F  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 13303  0C90  00F7               	movwf	??i1_USBTransferOnePacket+3
 13304  0C91  3578               	lslf	i1USBTransferOnePacket@ep,w
 13305  0C92  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13306  0C93  0086               	movwf	6
 13307  0C94  3001               	movlw	1	; select bank2/3
 13308  0C95  0087               	movwf	7
 13309  0C96  0876               	movf	??i1_USBTransferOnePacket+2,w
 13310  0C97  3FC0               	movwi [0]fsr1
 13311  0C98  0877               	movf	??i1_USBTransferOnePacket+3,w
 13312  0C99  3FC1               	movwi [1]fsr1
 13313  0C9A                     i1l3507:	
 13314                           
 13315                           ;usb_device.c: 1045: }
 13316                           ;usb_device.c: 1046: return (void*)handle;
 13317  0C9A  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13318  0C9B  00F1               	movwf	?i1_USBTransferOnePacket+1
 13319  0C9C  0879               	movf	i1USBTransferOnePacket@handle,w
 13320  0C9D  00F0               	movwf	?i1_USBTransferOnePacket
 13321  0C9E  0008               	return
 13322  0C9F                     __end_ofi1_USBTransferOnePacket:	
 13323                           
 13324                           	psect	text61
 13325  1167                     __ptext61:	
 13326 ;; *************** function i1_USBEnableEndpoint *****************
 13327 ;; Defined at:
 13328 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
 13329 ;; Parameters:    Size  Location     Type
 13330 ;;  ep              1    wreg     unsigned char 
 13331 ;;  options         1    7[COMMON] unsigned char 
 13332 ;; Auto vars:     Size  Location     Type
 13333 ;;  ep              1   12[COMMON] unsigned char 
 13334 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
 13335 ;;		 -> UEP0(1), 
 13336 ;; Return value:  Size  Location     Type
 13337 ;;                  1    wreg      void 
 13338 ;; Registers used:
 13339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13340 ;; Tracked objects:
 13341 ;;		On entry : 0/0
 13342 ;;		On exit  : 0/0
 13343 ;;		Unchanged: 0/0
 13344 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13345 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13346 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;Total ram usage:        6 bytes
 13350 ;; Hardware stack levels used:    1
 13351 ;; Hardware stack levels required when called:    1
 13352 ;; This function calls:
 13353 ;;		i1_USBConfigureEndpoint
 13354 ;; This function is called by:
 13355 ;;		i1_CDCInitEP
 13356 ;; This function uses a non-reentrant model
 13357 ;;
 13358                           
 13359                           
 13360                           ;psect for function i1_USBEnableEndpoint
 13361  1167                     i1_USBEnableEndpoint:	
 13362                           
 13363                           ;incstack = 0
 13364                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13365                           ;i1USBEnableEndpoint@ep stored from wreg
 13366  1167  00FC               	movwf	i1USBEnableEndpoint@ep
 13367                           
 13368                           ;usb_device.c: 880: unsigned char* p;
 13369                           ;usb_device.c: 884: if(options & 0x04)
 13370  1168  1D77               	btfss	i1USBEnableEndpoint@options,2
 13371  1169  296F               	goto	i1l3475
 13372                           
 13373                           ;usb_device.c: 885: {
 13374                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 13375  116A  01F0               	clrf	i1USBConfigureEndpoint@direction
 13376  116B  087C               	movf	i1USBEnableEndpoint@ep,w
 13377  116C  3193  23BF  3191   	fcall	i1_USBConfigureEndpoint
 13378  116F                     i1l3475:	
 13379                           
 13380                           ;usb_device.c: 887: }
 13381                           ;usb_device.c: 888: if(options & 0x02)
 13382  116F  1CF7               	btfss	i1USBEnableEndpoint@options,1
 13383  1170  2976               	goto	i1l3479
 13384                           
 13385                           ;usb_device.c: 889: {
 13386                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 13387  1171  01F0               	clrf	i1USBConfigureEndpoint@direction
 13388  1172  0AF0               	incf	i1USBConfigureEndpoint@direction,f
 13389  1173  087C               	movf	i1USBEnableEndpoint@ep,w
 13390  1174  3193  23BF         	fcall	i1_USBConfigureEndpoint
 13391  1176                     i1l3479:	
 13392                           
 13393                           ;usb_device.c: 891: }
 13394                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 13395  1176  087C               	movf	i1USBEnableEndpoint@ep,w
 13396  1177  3E98               	addlw	152
 13397  1178  00F8               	movwf	??i1_USBEnableEndpoint
 13398  1179  01F9               	clrf	??i1_USBEnableEndpoint+1
 13399  117A  300E               	movlw	14
 13400  117B  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
 13401  117C  0878               	movf	??i1_USBEnableEndpoint,w
 13402  117D  00FA               	movwf	i1USBEnableEndpoint@p
 13403  117E  0879               	movf	??i1_USBEnableEndpoint+1,w
 13404  117F  00FB               	movwf	i1USBEnableEndpoint@p+1
 13405                           
 13406                           ;usb_device.c: 901: *p = options;
 13407  1180  087A               	movf	i1USBEnableEndpoint@p,w
 13408  1181  0086               	movwf	6
 13409  1182  087B               	movf	i1USBEnableEndpoint@p+1,w
 13410  1183  0087               	movwf	7
 13411  1184  0877               	movf	i1USBEnableEndpoint@options,w
 13412  1185  0081               	movwf	1
 13413  1186  0008               	return
 13414  1187                     __end_ofi1_USBEnableEndpoint:	
 13415                           
 13416                           	psect	text62
 13417  13BF                     __ptext62:	
 13418 ;; *************** function i1_USBConfigureEndpoint *****************
 13419 ;; Defined at:
 13420 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;  EPNum           1    wreg     unsigned char 
 13423 ;;  direction       1    0[COMMON] unsigned char 
 13424 ;; Auto vars:     Size  Location     Type
 13425 ;;  EPNum           1    5[COMMON] unsigned char 
 13426 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
 13427 ;;		 -> BDT(48), 
 13428 ;; Return value:  Size  Location     Type
 13429 ;;                  1    wreg      void 
 13430 ;; Registers used:
 13431 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13432 ;; Tracked objects:
 13433 ;;		On entry : 0/0
 13434 ;;		On exit  : 0/0
 13435 ;;		Unchanged: 0/0
 13436 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13437 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13439 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13440 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13441 ;;Total ram usage:        7 bytes
 13442 ;; Hardware stack levels used:    1
 13443 ;; This function calls:
 13444 ;;		Nothing
 13445 ;; This function is called by:
 13446 ;;		i1_USBEnableEndpoint
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450                           
 13451                           ;psect for function i1_USBConfigureEndpoint
 13452  13BF                     i1_USBConfigureEndpoint:	
 13453                           
 13454                           ;incstack = 0
 13455                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 13456                           ;i1USBConfigureEndpoint@EPNum stored from wreg
 13457  13BF  00F5               	movwf	i1USBConfigureEndpoint@EPNum
 13458                           
 13459                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 13460                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 13461  13C0  3020               	movlw	32
 13462  13C1  00F1               	movwf	??i1_USBConfigureEndpoint
 13463  13C2  0871               	movf	??i1_USBConfigureEndpoint,w
 13464  13C3  00F6               	movwf	i1USBConfigureEndpoint@handle
 13465                           
 13466                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 13467  13C4  0870               	movf	i1USBConfigureEndpoint@direction,w
 13468  13C5  00F1               	movwf	??i1_USBConfigureEndpoint
 13469  13C6  3001               	movlw	1
 13470  13C7                     u288_25:	
 13471  13C7  35F1               	lslf	??i1_USBConfigureEndpoint,f
 13472  13C8  0B89               	decfsz	9,f
 13473  13C9  2BC7               	goto	u288_25
 13474  13CA  0875               	movf	i1USBConfigureEndpoint@EPNum,w
 13475  13CB  00F2               	movwf	??i1_USBConfigureEndpoint+1
 13476  13CC  3001               	movlw	1
 13477  13CD                     u289_25:	
 13478  13CD  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
 13479  13CE  3EFF               	addlw	-1
 13480  13CF  1D03               	skipz
 13481  13D0  2BCD               	goto	u289_25
 13482  13D1  3572               	lslf	??i1_USBConfigureEndpoint+1,w
 13483  13D2  0771               	addwf	??i1_USBConfigureEndpoint,w
 13484  13D3  00F3               	movwf	??i1_USBConfigureEndpoint+2
 13485  13D4  3001               	movlw	1
 13486  13D5                     u290_25:	
 13487  13D5  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
 13488  13D6  3EFF               	addlw	-1
 13489  13D7  1D03               	skipz
 13490  13D8  2BD5               	goto	u290_25
 13491  13D9  3573               	lslf	??i1_USBConfigureEndpoint+2,w
 13492  13DA  00F4               	movwf	??i1_USBConfigureEndpoint+3
 13493  13DB  0874               	movf	??i1_USBConfigureEndpoint+3,w
 13494  13DC  07F6               	addwf	i1USBConfigureEndpoint@handle,f
 13495                           
 13496                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 13497  13DD  0876               	movf	i1USBConfigureEndpoint@handle,w
 13498  13DE  0086               	movwf	6
 13499  13DF  0187               	clrf	7
 13500  13E0  1381               	bcf	1,7
 13501                           
 13502                           ;usb_device.c: 1557: if(direction == 0)
 13503  13E1  0870               	movf	i1USBConfigureEndpoint@direction,w
 13504  13E2  1D03               	btfss	3,2
 13505  13E3  2BEE               	goto	i1l3401
 13506                           
 13507                           ;usb_device.c: 1558: {
 13508                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 13509  13E4  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 13510  13E5  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13511  13E6  0086               	movwf	6
 13512  13E7  3001               	movlw	1	; select bank2/3
 13513  13E8  0087               	movwf	7
 13514  13E9  0876               	movf	i1USBConfigureEndpoint@handle,w
 13515  13EA  3FC0               	movwi [0]fsr1
 13516  13EB  3000               	movlw	0
 13517  13EC  3FC1               	movwi [1]fsr1
 13518                           
 13519                           ;usb_device.c: 1560: }
 13520  13ED  2BF6               	goto	i1l3403
 13521  13EE                     i1l3401:	
 13522                           
 13523                           ;usb_device.c: 1561: else
 13524                           ;usb_device.c: 1562: {
 13525                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 13526  13EE  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 13527  13EF  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13528  13F0  0086               	movwf	6
 13529  13F1  0187               	clrf	7
 13530  13F2  0876               	movf	i1USBConfigureEndpoint@handle,w
 13531  13F3  3FC0               	movwi [0]fsr1
 13532  13F4  3000               	movlw	0
 13533  13F5  3FC1               	movwi [1]fsr1
 13534  13F6                     i1l3403:	
 13535                           
 13536                           ;usb_device.c: 1564: }
 13537                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 13538  13F6  0876               	movf	i1USBConfigureEndpoint@handle,w
 13539  13F7  0086               	movwf	6
 13540  13F8  0187               	clrf	7
 13541  13F9  1301               	bcf	1,6
 13542                           
 13543                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 13544  13FA  0876               	movf	i1USBConfigureEndpoint@handle,w
 13545  13FB  3E04               	addlw	4
 13546  13FC  0086               	movwf	6
 13547  13FD  0187               	clrf	7
 13548  13FE  1701               	bsf	1,6
 13549  13FF  0008               	return
 13550  1400                     __end_ofi1_USBConfigureEndpoint:	
 13551                           
 13552                           	psect	text63
 13553  12CB                     __ptext63:	
 13554 ;; *************** function i1_USBCtrlTrfOutHandler *****************
 13555 ;; Defined at:
 13556 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
 13557 ;; Parameters:    Size  Location     Type
 13558 ;;		None
 13559 ;; Auto vars:     Size  Location     Type
 13560 ;;		None
 13561 ;; Return value:  Size  Location     Type
 13562 ;;                  1    wreg      void 
 13563 ;; Registers used:
 13564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13565 ;; Tracked objects:
 13566 ;;		On entry : 0/0
 13567 ;;		On exit  : 0/0
 13568 ;;		Unchanged: 0/0
 13569 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13574 ;;Total ram usage:        2 bytes
 13575 ;; Hardware stack levels used:    1
 13576 ;; Hardware stack levels required when called:    2
 13577 ;; This function calls:
 13578 ;;		i1_USBCtrlTrfRxService
 13579 ;; This function is called by:
 13580 ;;		i1_USBCtrlEPService
 13581 ;; This function uses a non-reentrant model
 13582 ;;
 13583                           
 13584                           
 13585                           ;psect for function i1_USBCtrlTrfOutHandler
 13586  12CB                     i1_USBCtrlTrfOutHandler:	
 13587                           
 13588                           ;usb_device.c: 2540: if(controlTransferState == 2)
 13589                           
 13590                           ;incstack = 0
 13591                           ; Regs used in i1_USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13592  12CB  3002               	movlw	2
 13593  12CC  0021               	movlb	1	; select bank1
 13594  12CD  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
 13595  12CE  1D03               	btfss	3,2
 13596  12CF  2AD3               	goto	i1l4761
 13597                           
 13598                           ;usb_device.c: 2541: {
 13599                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 13600  12D0  318F  2763         	fcall	i1_USBCtrlTrfRxService
 13601                           
 13602                           ;usb_device.c: 2543: }
 13603  12D2  0008               	return
 13604  12D3                     i1l4761:	
 13605                           
 13606                           ;usb_device.c: 2544: else
 13607                           ;usb_device.c: 2545: {
 13608                           ;usb_device.c: 2548: controlTransferState = 0;
 13609  12D3  0021               	movlb	1	; select bank1
 13610  12D4  01DC               	clrf	_controlTransferState^(0+128)	;volatile
 13611                           
 13612                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 13613  12D5  0022               	movlb	2	; select bank2
 13614  12D6  084C               	movf	_BothEP0OutUOWNsSet^(0+256),w	;volatile
 13615  12D7  1D03               	btfss	3,2
 13616  12D8  2AFF               	goto	i1l4773
 13617                           
 13618                           ;usb_device.c: 2556: {
 13619                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 16;
 13620  12D9  0021               	movlb	1	; select bank1
 13621  12DA  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13622  12DB  3E01               	addlw	1
 13623  12DC  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 13624  12DD  3000               	movlw	0
 13625  12DE  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13626  12DF  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 13627  12E0  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 13628  12E1  0086               	movwf	6
 13629  12E2  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 13630  12E3  0087               	movwf	7
 13631  12E4  3010               	movlw	16
 13632  12E5  0081               	movwf	1
 13633                           
 13634                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13635  12E6  3050               	movlw	80
 13636  12E7  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 13637  12E8  3000               	movlw	0
 13638  12E9  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 13639  12EA  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13640  12EB  0086               	movwf	6
 13641  12EC  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13642  12ED  0087               	movwf	7
 13643  12EE  3142               	addfsr 1,2
 13644  12EF  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 13645  12F0  3FC0               	movwi [0]fsr1
 13646  12F1  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 13647  12F2  3FC1               	movwi [1]fsr1
 13648                           
 13649                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13650  12F3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13651  12F4  0086               	movwf	6
 13652  12F5  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13653  12F6  0087               	movwf	7
 13654  12F7  300C               	movlw	12
 13655  12F8  0081               	movwf	1
 13656                           
 13657                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13658  12F9  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13659  12FA  0086               	movwf	6
 13660  12FB  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13661  12FC  0087               	movwf	7
 13662  12FD  1781               	bsf	1,7
 13663                           
 13664                           ;usb_device.c: 2561: }
 13665  12FE  0008               	return
 13666  12FF                     i1l4773:	
 13667                           
 13668                           ;usb_device.c: 2562: else
 13669                           ;usb_device.c: 2563: {
 13670                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 13671  12FF  0022               	movlb	2	; select bank2
 13672  1300  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 13673  1301  0008               	return
 13674  1302                     __end_ofi1_USBCtrlTrfOutHandler:	
 13675                           
 13676                           	psect	text64
 13677  0F63                     __ptext64:	
 13678 ;; *************** function i1_USBCtrlTrfRxService *****************
 13679 ;; Defined at:
 13680 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
 13681 ;; Parameters:    Size  Location     Type
 13682 ;;		None
 13683 ;; Auto vars:     Size  Location     Type
 13684 ;;  USBCtrlTrfRx    1    5[COMMON] unsigned char 
 13685 ;;  USBCtrlTrfRx    1    4[COMMON] unsigned char 
 13686 ;; Return value:  Size  Location     Type
 13687 ;;                  1    wreg      void 
 13688 ;; Registers used:
 13689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13690 ;; Tracked objects:
 13691 ;;		On entry : 0/0
 13692 ;;		On exit  : 0/0
 13693 ;;		Unchanged: 0/0
 13694 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13698 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13699 ;;Total ram usage:        4 bytes
 13700 ;; Hardware stack levels used:    1
 13701 ;; Hardware stack levels required when called:    1
 13702 ;; This function calls:
 13703 ;;		i1_USBCtrlEPAllowStatusStage
 13704 ;; This function is called by:
 13705 ;;		i1_USBCtrlTrfOutHandler
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           
 13710                           ;psect for function i1_USBCtrlTrfRxService
 13711  0F63                     i1_USBCtrlTrfRxService:	
 13712                           
 13713                           ;usb_device.c: 1854: uint8_t byteToRead;
 13714                           ;usb_device.c: 1855: uint8_t i;
 13715                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 13716                           
 13717                           ;incstack = 0
 13718                           ; Regs used in i1_USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13719  0F63  0021               	movlb	1	; select bank1
 13720  0F64  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 13721  0F65  0086               	movwf	6
 13722  0F66  0187               	clrf	7
 13723  0F67  3F41               	moviw [1]fsr1
 13724  0F68  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 13725                           
 13726                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 13727  0F69  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13728  0F6A  00F2               	movwf	??i1_USBCtrlTrfRxService
 13729  0F6B  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 13730  0F6C  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13731  0F6D  024A               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
 13732  0F6E  1D03               	skipz
 13733  0F6F  2F72               	goto	u421_25
 13734  0F70  0872               	movf	??i1_USBCtrlTrfRxService,w
 13735  0F71  0249               	subwf	(_outPipes^(0+128)+3),w	;volatile
 13736  0F72                     u421_25:	
 13737  0F72  1803               	skipnc
 13738  0F73  2F78               	goto	i1l536
 13739                           
 13740                           ;usb_device.c: 1866: {
 13741                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 13742  0F74  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
 13743  0F75  00F2               	movwf	??i1_USBCtrlTrfRxService
 13744  0F76  0872               	movf	??i1_USBCtrlTrfRxService,w
 13745  0F77  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 13746  0F78                     i1l536:	
 13747                           
 13748                           ;usb_device.c: 1868: }
 13749                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 13750  0F78  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13751  0F79  00F2               	movwf	??i1_USBCtrlTrfRxService
 13752  0F7A  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 13753  0F7B  0872               	movf	??i1_USBCtrlTrfRxService,w
 13754  0F7C  02C9               	subwf	(_outPipes^(0+128)+3),f	;volatile
 13755  0F7D  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13756  0F7E  3BCA               	subwfb	((_outPipes+1)^(0+128)+3),f	;volatile
 13757                           
 13758                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 13759  0F7F  01F4               	clrf	i1USBCtrlTrfRxService@i
 13760  0F80                     i1l4507:	
 13761  0F80  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13762  0F81  0274               	subwf	i1USBCtrlTrfRxService@i,w
 13763  0F82  1803               	btfsc	3,0
 13764  0F83  2F99               	goto	i1l4509
 13765                           
 13766                           ;usb_device.c: 1875: {
 13767                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 13768  0F84  0874               	movf	i1USBCtrlTrfRxService@i,w
 13769  0F85  3E60               	addlw	96
 13770  0F86  0086               	movwf	6
 13771  0F87  0187               	clrf	7
 13772  0F88  0801               	movf	1,w
 13773  0F89  00F2               	movwf	??i1_USBCtrlTrfRxService
 13774  0F8A  0846               	movf	_outPipes^(0+128),w	;volatile
 13775  0F8B  0086               	movwf	6
 13776  0F8C  3001               	movlw	1	; select bank2/3
 13777  0F8D  0087               	movwf	7
 13778  0F8E  0872               	movf	??i1_USBCtrlTrfRxService,w
 13779  0F8F  0081               	movwf	1
 13780  0F90  3001               	movlw	1
 13781  0F91  00F2               	movwf	??i1_USBCtrlTrfRxService
 13782  0F92  0872               	movf	??i1_USBCtrlTrfRxService,w
 13783  0F93  07C6               	addwf	_outPipes^(0+128),f	;volatile
 13784  0F94  3001               	movlw	1
 13785  0F95  00F2               	movwf	??i1_USBCtrlTrfRxService
 13786  0F96  0872               	movf	??i1_USBCtrlTrfRxService,w
 13787  0F97  07F4               	addwf	i1USBCtrlTrfRxService@i,f
 13788  0F98  2F80               	goto	i1l4507
 13789  0F99                     i1l4509:	
 13790                           
 13791                           ;usb_device.c: 1877: }
 13792                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 13793  0F99  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
 13794  0F9A  044A               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
 13795  0F9B  1903               	btfsc	3,2
 13796  0F9C  2FD3               	goto	i1l4521
 13797                           
 13798                           ;usb_device.c: 1882: {
 13799                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 16;
 13800  0F9D  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13801  0F9E  3E01               	addlw	1
 13802  0F9F  00F2               	movwf	??i1_USBCtrlTrfRxService
 13803  0FA0  3000               	movlw	0
 13804  0FA1  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13805  0FA2  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13806  0FA3  0872               	movf	??i1_USBCtrlTrfRxService,w
 13807  0FA4  0086               	movwf	6
 13808  0FA5  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13809  0FA6  0087               	movwf	7
 13810  0FA7  3010               	movlw	16
 13811  0FA8  0081               	movwf	1
 13812                           
 13813                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 13814  0FA9  3060               	movlw	96
 13815  0FAA  00F2               	movwf	??i1_USBCtrlTrfRxService
 13816  0FAB  3000               	movlw	0
 13817  0FAC  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13818  0FAD  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13819  0FAE  0086               	movwf	6
 13820  0FAF  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13821  0FB0  0087               	movwf	7
 13822  0FB1  3142               	addfsr 1,2
 13823  0FB2  0872               	movf	??i1_USBCtrlTrfRxService,w
 13824  0FB3  3FC0               	movwi [0]fsr1
 13825  0FB4  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13826  0FB5  3FC1               	movwi [1]fsr1
 13827                           
 13828                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 13829  0FB6  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 13830  0FB7  0086               	movwf	6
 13831  0FB8  0187               	clrf	7
 13832  0FB9  1B01               	btfsc	1,6
 13833  0FBA  2FC7               	goto	i1l4519
 13834                           
 13835                           ;usb_device.c: 1886: {
 13836                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13837  0FBB  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13838  0FBC  0086               	movwf	6
 13839  0FBD  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13840  0FBE  0087               	movwf	7
 13841  0FBF  3048               	movlw	72
 13842  0FC0  0081               	movwf	1
 13843                           
 13844                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13845  0FC1  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13846  0FC2  0086               	movwf	6
 13847  0FC3  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13848  0FC4  0087               	movwf	7
 13849  0FC5  1781               	bsf	1,7
 13850                           
 13851                           ;usb_device.c: 1889: }
 13852  0FC6  0008               	return
 13853  0FC7                     i1l4519:	
 13854                           
 13855                           ;usb_device.c: 1890: else
 13856                           ;usb_device.c: 1891: {
 13857                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 13858  0FC7  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13859  0FC8  0086               	movwf	6
 13860  0FC9  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13861  0FCA  0087               	movwf	7
 13862  0FCB  3008               	movlw	8
 13863  0FCC  0081               	movwf	1
 13864                           
 13865                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13866  0FCD  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13867  0FCE  0086               	movwf	6
 13868  0FCF  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13869  0FD0  0087               	movwf	7
 13870  0FD1  1781               	bsf	1,7
 13871                           
 13872                           ;usb_device.c: 1894: }
 13873                           ;usb_device.c: 1895: }
 13874  0FD2  0008               	return
 13875  0FD3                     i1l4521:	
 13876                           
 13877                           ;usb_device.c: 1896: else
 13878                           ;usb_device.c: 1897: {
 13879                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 16;
 13880  0FD3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13881  0FD4  3E01               	addlw	1
 13882  0FD5  00F2               	movwf	??i1_USBCtrlTrfRxService
 13883  0FD6  3000               	movlw	0
 13884  0FD7  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13885  0FD8  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13886  0FD9  0872               	movf	??i1_USBCtrlTrfRxService,w
 13887  0FDA  0086               	movwf	6
 13888  0FDB  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13889  0FDC  0087               	movwf	7
 13890  0FDD  3010               	movlw	16
 13891  0FDE  0081               	movwf	1
 13892                           
 13893                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13894  0FDF  3050               	movlw	80
 13895  0FE0  00F2               	movwf	??i1_USBCtrlTrfRxService
 13896  0FE1  3000               	movlw	0
 13897  0FE2  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13898  0FE3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13899  0FE4  0086               	movwf	6
 13900  0FE5  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13901  0FE6  0087               	movwf	7
 13902  0FE7  3142               	addfsr 1,2
 13903  0FE8  0872               	movf	??i1_USBCtrlTrfRxService,w
 13904  0FE9  3FC0               	movwi [0]fsr1
 13905  0FEA  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13906  0FEB  3FC1               	movwi [1]fsr1
 13907                           
 13908                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13909  0FEC  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13910  0FED  0086               	movwf	6
 13911  0FEE  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13912  0FEF  0087               	movwf	7
 13913  0FF0  3004               	movlw	4
 13914  0FF1  0081               	movwf	1
 13915                           
 13916                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13917  0FF2  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13918  0FF3  0086               	movwf	6
 13919  0FF4  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13920  0FF5  0087               	movwf	7
 13921  0FF6  1781               	bsf	1,7
 13922                           
 13923                           ;usb_device.c: 1915: {
 13924                           ;usb_device.c: 1921: outPipes[0].pFunc();
 13925  0FF7  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
 13926  0FF8  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
 13927                           
 13928                           ;usb_device.c: 1926: }
 13929                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 13930  0FF9  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
 13931                           
 13932                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 13933  0FFA  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
 13934  0FFB  1D03               	btfss	3,2
 13935  0FFC  0008               	return
 13936                           
 13937                           ;usb_device.c: 1942: {
 13938                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 13939  0FFD  3187  278F         	fcall	i1_USBCtrlEPAllowStatusStage
 13940  0FFF  0008               	return
 13941  1000                     __end_ofi1_USBCtrlTrfRxService:	
 13942                           
 13943                           	psect	text65
 13944  078F                     __ptext65:	
 13945 ;; *************** function i1_USBCtrlEPAllowStatusStage *****************
 13946 ;; Defined at:
 13947 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;		None
 13950 ;; Auto vars:     Size  Location     Type
 13951 ;;		None
 13952 ;; Return value:  Size  Location     Type
 13953 ;;                  1    wreg      void 
 13954 ;; Registers used:
 13955 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13956 ;; Tracked objects:
 13957 ;;		On entry : 0/0
 13958 ;;		On exit  : 0/0
 13959 ;;		Unchanged: 0/0
 13960 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13963 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13964 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13965 ;;Total ram usage:        2 bytes
 13966 ;; Hardware stack levels used:    1
 13967 ;; This function calls:
 13968 ;;		Nothing
 13969 ;; This function is called by:
 13970 ;;		i1_USBDeviceTasks
 13971 ;;		i1_USBCtrlEPServiceComplete
 13972 ;;		i1_USBCtrlTrfRxService
 13973 ;; This function uses a non-reentrant model
 13974 ;;
 13975                           
 13976                           
 13977                           ;psect for function i1_USBCtrlEPAllowStatusStage
 13978  078F                     i1_USBCtrlEPAllowStatusStage:	
 13979                           
 13980                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 13981                           
 13982                           ;incstack = 0
 13983                           ; Regs used in i1_USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 13984  078F  0022               	movlb	2	; select bank2
 13985  0790  084A               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
 13986  0791  1D03               	btfss	3,2
 13987  0792  0008               	return
 13988                           
 13989                           ;usb_device.c: 1424: {
 13990                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 13991  0793  3001               	movlw	1
 13992  0794  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 13993  0795  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 13994  0796  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 13995                           
 13996                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 13997  0797  0849               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
 13998  0798  1D03               	btfss	3,2
 13999  0799  0008               	return
 14000                           
 14001                           ;usb_device.c: 1427: {
 14002                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 14003  079A  3001               	movlw	1
 14004  079B  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14005  079C  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14006  079D  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 14007                           
 14008                           ;usb_device.c: 1432: if(controlTransferState == 2)
 14009  079E  3002               	movlw	2
 14010  079F  0021               	movlb	1	; select bank1
 14011  07A0  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
 14012  07A1  1D03               	btfss	3,2
 14013  07A2  2FB5               	goto	i1l4119
 14014                           
 14015                           ;usb_device.c: 1433: {
 14016                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 14017  07A3  084D               	movf	_pBDTEntryIn^(0+128),w
 14018  07A4  0086               	movwf	6
 14019  07A5  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14020  07A6  0087               	movwf	7
 14021  07A7  3141               	addfsr 1,1
 14022  07A8  0181               	clrf	1
 14023                           
 14024                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14025  07A9  084D               	movf	_pBDTEntryIn^(0+128),w
 14026  07AA  0086               	movwf	6
 14027  07AB  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14028  07AC  0087               	movwf	7
 14029  07AD  3048               	movlw	72
 14030  07AE  0081               	movwf	1
 14031                           
 14032                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14033  07AF  084D               	movf	_pBDTEntryIn^(0+128),w
 14034  07B0  0086               	movwf	6
 14035  07B1  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14036  07B2  0087               	movwf	7
 14037  07B3  1781               	bsf	1,7
 14038                           
 14039                           ;usb_device.c: 1437: }
 14040  07B4  0008               	return
 14041  07B5                     i1l4119:	
 14042                           
 14043                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 14044  07B5  035C               	decf	_controlTransferState^(0+128),w	;volatile
 14045  07B6  1D03               	btfss	3,2
 14046  07B7  0008               	return
 14047                           
 14048                           ;usb_device.c: 1439: {
 14049                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 14050  07B8  0022               	movlb	2	; select bank2
 14051  07B9  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 14052                           
 14053                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 16;
 14054  07BA  3010               	movlw	16
 14055  07BB  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14056  07BC  0021               	movlb	1	; select bank1
 14057  07BD  0A5E               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
 14058  07BE  0086               	movwf	6
 14059  07BF  0187               	clrf	7
 14060  07C0  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14061  07C1  0081               	movwf	1
 14062                           
 14063                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14064  07C2  3050               	movlw	80
 14065  07C3  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14066  07C4  3000               	movlw	0
 14067  07C5  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14068  07C6  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 14069  07C7  3E02               	addlw	2
 14070  07C8  0086               	movwf	6
 14071  07C9  0187               	clrf	7
 14072  07CA  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14073  07CB  3FC0               	movwi [0]fsr1
 14074  07CC  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14075  07CD  3FC1               	movwi [1]fsr1
 14076                           
 14077                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 14078  07CE  3004               	movlw	4
 14079  07CF  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14080  07D0  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 14081  07D1  0086               	movwf	6
 14082  07D2  0187               	clrf	7
 14083  07D3  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14084  07D4  0081               	movwf	1
 14085                           
 14086                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14087  07D5  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 14088  07D6  0086               	movwf	6
 14089  07D7  0187               	clrf	7
 14090  07D8  1781               	bsf	1,7
 14091                           
 14092                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 14093  07D9  3001               	movlw	1
 14094  07DA  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14095  07DB  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14096  07DC  0022               	movlb	2	; select bank2
 14097  07DD  00CC               	movwf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 14098                           
 14099                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 16;
 14100  07DE  0021               	movlb	1	; select bank1
 14101  07DF  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14102  07E0  3E01               	addlw	1
 14103  07E1  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14104  07E2  3000               	movlw	0
 14105  07E3  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14106  07E4  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14107  07E5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14108  07E6  0086               	movwf	6
 14109  07E7  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14110  07E8  0087               	movwf	7
 14111  07E9  3010               	movlw	16
 14112  07EA  0081               	movwf	1
 14113                           
 14114                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14115  07EB  3050               	movlw	80
 14116  07EC  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14117  07ED  3000               	movlw	0
 14118  07EE  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14119  07EF  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14120  07F0  0086               	movwf	6
 14121  07F1  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14122  07F2  0087               	movwf	7
 14123  07F3  3142               	addfsr 1,2
 14124  07F4  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14125  07F5  3FC0               	movwi [0]fsr1
 14126  07F6  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14127  07F7  3FC1               	movwi [1]fsr1
 14128                           
 14129                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 14130  07F8  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14131  07F9  0086               	movwf	6
 14132  07FA  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14133  07FB  0087               	movwf	7
 14134  07FC  3080               	movlw	128
 14135  07FD  0081               	movwf	1
 14136  07FE  0008               	return
 14137  07FF                     __end_ofi1_USBCtrlEPAllowStatusStage:	
 14138                           
 14139                           	psect	text66
 14140  08F9                     __ptext66:	
 14141 ;; *************** function i1_USBCtrlTrfInHandler *****************
 14142 ;; Defined at:
 14143 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
 14144 ;; Parameters:    Size  Location     Type
 14145 ;;		None
 14146 ;; Auto vars:     Size  Location     Type
 14147 ;;  USBCtrlTrfIn    1    5[COMMON] unsigned char 
 14148 ;; Return value:  Size  Location     Type
 14149 ;;                  1    wreg      void 
 14150 ;; Registers used:
 14151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14152 ;; Tracked objects:
 14153 ;;		On entry : 0/0
 14154 ;;		On exit  : 0/0
 14155 ;;		Unchanged: 0/0
 14156 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;Total ram usage:        3 bytes
 14162 ;; Hardware stack levels used:    1
 14163 ;; Hardware stack levels required when called:    1
 14164 ;; This function calls:
 14165 ;;		i1_USBCtrlTrfTxService
 14166 ;; This function is called by:
 14167 ;;		i1_USBCtrlEPService
 14168 ;; This function uses a non-reentrant model
 14169 ;;
 14170                           
 14171                           
 14172                           ;psect for function i1_USBCtrlTrfInHandler
 14173  08F9                     i1_USBCtrlTrfInHandler:	
 14174                           
 14175                           ;usb_device.c: 2594: uint8_t lastDTS;
 14176                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 14177                           
 14178                           ;incstack = 0
 14179                           ; Regs used in i1_USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14180  08F9  0021               	movlb	1	; select bank1
 14181  08FA  084D               	movf	_pBDTEntryIn^(0+128),w
 14182  08FB  0086               	movwf	6
 14183  08FC  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14184  08FD  0087               	movwf	7
 14185  08FE  3000               	movlw	0
 14186  08FF  1B01               	btfsc	1,6
 14187  0900  3001               	movlw	1
 14188  0901  00F5               	movwf	i1USBCtrlTrfInHandler@lastDTS
 14189                           
 14190                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 14191  0902  3004               	movlw	4
 14192  0903  064D               	xorwf	_pBDTEntryIn^(0+128),w
 14193  0904  00CD               	movwf	_pBDTEntryIn^(0+128)
 14194  0905  3000               	movlw	0
 14195  0906  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
 14196  0907  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 14197                           
 14198                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 14199  0908  3008               	movlw	8
 14200  0909  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
 14201  090A  1D03               	btfss	3,2
 14202  090B  291B               	goto	i1l4789
 14203                           
 14204                           ;usb_device.c: 2605: {
 14205                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 14206  090C  0020               	movlb	0	; select bank0
 14207  090D  0852               	movf	82,w	;volatile
 14208  090E  397F               	andlw	127
 14209  090F  003D               	movlb	29	; select bank29
 14210  0910  0096               	movwf	22	;volatile
 14211                           
 14212                           ;usb_device.c: 2607: if(UADDR != 0u)
 14213  0911  0816               	movf	22,w	;volatile
 14214  0912  1903               	btfsc	3,2
 14215  0913  2916               	goto	i1l4787
 14216                           
 14217                           ;usb_device.c: 2608: {
 14218                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 14219  0914  3010               	movlw	16
 14220  0915  2917               	goto	L19
 14221  0916                     i1l4787:	
 14222                           ;usb_device.c: 2610: }
 14223                           
 14224                           
 14225                           ;usb_device.c: 2611: else
 14226                           ;usb_device.c: 2612: {
 14227                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 14228  0916  3004               	movlw	4
 14229  0917                     L19:	
 14230  0917  00F3               	movwf	??i1_USBCtrlTrfInHandler
 14231  0918  0873               	movf	??i1_USBCtrlTrfInHandler,w
 14232  0919  0021               	movlb	1	; select bank1
 14233  091A  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 14234  091B                     i1l4789:	
 14235                           
 14236                           ;usb_device.c: 2614: }
 14237                           ;usb_device.c: 2615: }
 14238                           ;usb_device.c: 2618: if(controlTransferState == 1)
 14239  091B  035C               	decf	_controlTransferState^(0+128),w	;volatile
 14240  091C  1D03               	btfss	3,2
 14241  091D  295A               	goto	i1l621
 14242                           
 14243                           ;usb_device.c: 2619: {
 14244                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 14245  091E  3060               	movlw	96
 14246  091F  00F3               	movwf	??i1_USBCtrlTrfInHandler
 14247  0920  3000               	movlw	0
 14248  0921  00F4               	movwf	??i1_USBCtrlTrfInHandler+1
 14249  0922  084D               	movf	_pBDTEntryIn^(0+128),w
 14250  0923  0086               	movwf	6
 14251  0924  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14252  0925  0087               	movwf	7
 14253  0926  3142               	addfsr 1,2
 14254  0927  0873               	movf	??i1_USBCtrlTrfInHandler,w
 14255  0928  3FC0               	movwi [0]fsr1
 14256  0929  0874               	movf	??i1_USBCtrlTrfInHandler+1,w
 14257  092A  3FC1               	movwi [1]fsr1
 14258                           
 14259                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 14260  092B  3189  21C9  3188   	fcall	i1_USBCtrlTrfTxService
 14261                           
 14262                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 14263  092E  3002               	movlw	2
 14264  092F  0021               	movlb	1	; select bank1
 14265  0930  065D               	xorwf	_shortPacketStatus^(0+128),w	;volatile
 14266  0931  1D03               	btfss	3,2
 14267  0932  293F               	goto	i1l4799
 14268                           
 14269                           ;usb_device.c: 2628: {
 14270                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 14271  0933  084D               	movf	_pBDTEntryIn^(0+128),w
 14272  0934  0086               	movwf	6
 14273  0935  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14274  0936  0087               	movwf	7
 14275  0937  3004               	movlw	4
 14276  0938  0081               	movwf	1
 14277                           
 14278                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14279  0939  084D               	movf	_pBDTEntryIn^(0+128),w
 14280  093A  0086               	movwf	6
 14281  093B  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14282  093C  0087               	movwf	7
 14283  093D  1781               	bsf	1,7
 14284                           
 14285                           ;usb_device.c: 2633: }
 14286  093E  0008               	return
 14287  093F                     i1l4799:	
 14288                           
 14289                           ;usb_device.c: 2634: else
 14290                           ;usb_device.c: 2635: {
 14291                           ;usb_device.c: 2636: if(lastDTS == 0)
 14292  093F  0875               	movf	i1USBCtrlTrfInHandler@lastDTS,w
 14293  0940  1D03               	btfss	3,2
 14294  0941  294E               	goto	i1l4803
 14295                           
 14296                           ;usb_device.c: 2637: {
 14297                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14298  0942  084D               	movf	_pBDTEntryIn^(0+128),w
 14299  0943  0086               	movwf	6
 14300  0944  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14301  0945  0087               	movwf	7
 14302  0946  3048               	movlw	72
 14303  0947  0081               	movwf	1
 14304                           
 14305                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14306  0948  084D               	movf	_pBDTEntryIn^(0+128),w
 14307  0949  0086               	movwf	6
 14308  094A  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14309  094B  0087               	movwf	7
 14310  094C  1781               	bsf	1,7
 14311                           
 14312                           ;usb_device.c: 2640: }
 14313  094D  0008               	return
 14314  094E                     i1l4803:	
 14315                           
 14316                           ;usb_device.c: 2641: else
 14317                           ;usb_device.c: 2642: {
 14318                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 14319  094E  084D               	movf	_pBDTEntryIn^(0+128),w
 14320  094F  0086               	movwf	6
 14321  0950  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14322  0951  0087               	movwf	7
 14323  0952  3008               	movlw	8
 14324  0953  0081               	movwf	1
 14325                           
 14326                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14327  0954  084D               	movf	_pBDTEntryIn^(0+128),w
 14328  0955  0086               	movwf	6
 14329  0956  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14330  0957  0087               	movwf	7
 14331  0958  1781               	bsf	1,7
 14332                           
 14333                           ;usb_device.c: 2645: }
 14334                           ;usb_device.c: 2646: }
 14335                           ;usb_device.c: 2647: }
 14336  0959  0008               	return
 14337  095A                     i1l621:	
 14338                           
 14339                           ;usb_device.c: 2648: else
 14340                           ;usb_device.c: 2649: {
 14341                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 14342  095A  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
 14343  095B  295F               	goto	i1l4807
 14344                           
 14345                           ;usb_device.c: 2656: {
 14346                           ;usb_device.c: 2657: outPipes[0].pFunc();
 14347  095C  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
 14348  095D  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
 14349                           
 14350                           ;usb_device.c: 2658: }
 14351                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 14352  095E  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
 14353  095F                     i1l4807:	
 14354                           
 14355                           ;usb_device.c: 2660: }
 14356                           ;usb_device.c: 2662: controlTransferState = 0;
 14357  095F  01DC               	clrf	_controlTransferState^(0+128)	;volatile
 14358  0960  0008               	return
 14359  0961                     __end_ofi1_USBCtrlTrfInHandler:	
 14360                           
 14361                           	psect	text67
 14362  09C9                     __ptext67:	
 14363 ;; *************** function i1_USBCtrlTrfTxService *****************
 14364 ;; Defined at:
 14365 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
 14366 ;; Parameters:    Size  Location     Type
 14367 ;;		None
 14368 ;; Auto vars:     Size  Location     Type
 14369 ;;  USBCtrlTrfTx    1    2[COMMON] unsigned char 
 14370 ;; Return value:  Size  Location     Type
 14371 ;;                  1    wreg      void 
 14372 ;; Registers used:
 14373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14374 ;; Tracked objects:
 14375 ;;		On entry : 0/0
 14376 ;;		On exit  : 0/0
 14377 ;;		Unchanged: 0/0
 14378 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14382 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14383 ;;Total ram usage:        3 bytes
 14384 ;; Hardware stack levels used:    1
 14385 ;; This function calls:
 14386 ;;		Nothing
 14387 ;; This function is called by:
 14388 ;;		i1_USBCtrlEPAllowDataStage
 14389 ;;		i1_USBCtrlTrfInHandler
 14390 ;; This function uses a non-reentrant model
 14391 ;;
 14392                           
 14393                           
 14394                           ;psect for function i1_USBCtrlTrfTxService
 14395  09C9                     i1_USBCtrlTrfTxService:	
 14396                           
 14397                           ;usb_device.c: 1773: uint8_t byteToSend;
 14398                           ;usb_device.c: 1777: byteToSend = 16;
 14399                           
 14400                           ;incstack = 0
 14401 ;; hardware stack exceeded
 14402                           ; Regs used in i1_USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 14403  09C9  3010               	movlw	16
 14404  09CA  00F0               	movwf	??i1_USBCtrlTrfTxService
 14405  09CB  0870               	movf	??i1_USBCtrlTrfTxService,w
 14406  09CC  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 14407                           
 14408                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)16)
 14409  09CD  3000               	movlw	0
 14410  09CE  0021               	movlb	1	; select bank1
 14411  09CF  0257               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
 14412  09D0  3010               	movlw	16
 14413  09D1  1903               	skipnz
 14414  09D2  0256               	subwf	(_inPipes^(0+128)+3),w	;volatile
 14415  09D3  1803               	skipnc
 14416  09D4  29E5               	goto	i1l521
 14417                           
 14418                           ;usb_device.c: 1779: {
 14419                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 14420  09D5  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
 14421  09D6  00F0               	movwf	??i1_USBCtrlTrfTxService
 14422  09D7  0870               	movf	??i1_USBCtrlTrfTxService,w
 14423  09D8  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 14424                           
 14425                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 14426  09D9  085D               	movf	_shortPacketStatus^(0+128),w	;volatile
 14427  09DA  1D03               	btfss	3,2
 14428  09DB  29DE               	goto	i1l3923
 14429                           
 14430                           ;usb_device.c: 1788: {
 14431                           ;usb_device.c: 1789: shortPacketStatus = 1;
 14432  09DC  3001               	movlw	1
 14433  09DD  29E2               	goto	L20
 14434  09DE                     i1l3923:	
 14435                           ;usb_device.c: 1790: }
 14436                           
 14437                           
 14438                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 14439  09DE  035D               	decf	_shortPacketStatus^(0+128),w	;volatile
 14440  09DF  1D03               	btfss	3,2
 14441  09E0  29E5               	goto	i1l521
 14442                           
 14443                           ;usb_device.c: 1792: {
 14444                           ;usb_device.c: 1793: shortPacketStatus = 2;
 14445  09E1  3002               	movlw	2
 14446  09E2                     L20:	
 14447  09E2  00F0               	movwf	??i1_USBCtrlTrfTxService
 14448  09E3  0870               	movf	??i1_USBCtrlTrfTxService,w
 14449  09E4  00DD               	movwf	_shortPacketStatus^(0+128)	;volatile
 14450  09E5                     i1l521:	
 14451                           
 14452                           ;usb_device.c: 1794: }
 14453                           ;usb_device.c: 1795: }
 14454                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 14455  09E5  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14456  09E6  00F0               	movwf	??i1_USBCtrlTrfTxService
 14457  09E7  01F1               	clrf	??i1_USBCtrlTrfTxService+1
 14458  09E8  0870               	movf	??i1_USBCtrlTrfTxService,w
 14459  09E9  02D6               	subwf	(_inPipes^(0+128)+3),f	;volatile
 14460  09EA  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 14461  09EB  3BD7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
 14462                           
 14463                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 14464  09EC  084D               	movf	_pBDTEntryIn^(0+128),w
 14465  09ED  3E01               	addlw	1
 14466  09EE  00F0               	movwf	??i1_USBCtrlTrfTxService
 14467  09EF  3000               	movlw	0
 14468  09F0  3D4E               	addwfc	(_pBDTEntryIn+1)^(0+128),w
 14469  09F1  00F1               	movwf	??i1_USBCtrlTrfTxService+1
 14470  09F2  0870               	movf	??i1_USBCtrlTrfTxService,w
 14471  09F3  0086               	movwf	6
 14472  09F4  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 14473  09F5  0087               	movwf	7
 14474  09F6  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14475  09F7  0081               	movwf	1
 14476                           
 14477                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 14478  09F8  3060               	movlw	96
 14479  09F9  00F0               	movwf	??i1_USBCtrlTrfTxService
 14480  09FA  0870               	movf	??i1_USBCtrlTrfTxService,w
 14481  09FB  0022               	movlb	2	; select bank2
 14482  09FC  00CF               	movwf	_pDst^(0+256)
 14483                           
 14484                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 14485  09FD  0021               	movlb	1	; select bank1
 14486  09FE  1C55               	btfss	(_inPipes^(0+128)+2),0	;volatile
 14487  09FF  2A1A               	goto	i1l3943
 14488  0A00  2A37               	goto	i1l3953
 14489  0A01                     i1l3935:	
 14490                           ;usb_device.c: 1810: {
 14491                           ;usb_device.c: 1811: while(byteToSend)
 14492                           
 14493                           
 14494                           ;usb_device.c: 1812: {
 14495                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 14496  0A01  0021               	movlb	1	; select bank1
 14497  0A02  0853               	movf	_inPipes^(0+128),w	;volatile
 14498  0A03  0084               	movwf	4
 14499  0A04  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 14500  0A05  0085               	movwf	5
 14501  0A06  0800               	movf	0,w	;code access
 14502  0A07  00F0               	movwf	??i1_USBCtrlTrfTxService
 14503  0A08  0022               	movlb	2	; select bank2
 14504  0A09  084F               	movf	_pDst^(0+256),w
 14505  0A0A  0086               	movwf	6
 14506  0A0B  0187               	clrf	7
 14507  0A0C  0870               	movf	??i1_USBCtrlTrfTxService,w
 14508  0A0D  0081               	movwf	1
 14509  0A0E  3001               	movlw	1
 14510  0A0F  0021               	movlb	1	; select bank1
 14511  0A10  07D3               	addwf	_inPipes^(0+128),f	;volatile
 14512  0A11  3000               	movlw	0
 14513  0A12  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 14514  0A13  3001               	movlw	1
 14515  0A14  00F0               	movwf	??i1_USBCtrlTrfTxService
 14516  0A15  0870               	movf	??i1_USBCtrlTrfTxService,w
 14517  0A16  0022               	movlb	2	; select bank2
 14518  0A17  07CF               	addwf	_pDst^(0+256),f
 14519                           
 14520                           ;usb_device.c: 1814: byteToSend--;
 14521  0A18  3001               	movlw	1
 14522  0A19  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 14523  0A1A                     i1l3943:	
 14524  0A1A  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14525  0A1B  1903               	btfsc	3,2
 14526  0A1C  0008               	return
 14527  0A1D  2A01               	goto	i1l3935
 14528  0A1E                     i1l3945:	
 14529                           ;usb_device.c: 1817: else
 14530                           ;usb_device.c: 1818: {
 14531                           ;usb_device.c: 1819: while(byteToSend)
 14532                           
 14533                           ;usb_device.c: 1815: }
 14534                           ;usb_device.c: 1816: }
 14535                           
 14536                           
 14537                           ;usb_device.c: 1820: {
 14538                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 14539  0A1E  0021               	movlb	1	; select bank1
 14540  0A1F  0853               	movf	_inPipes^(0+128),w	;volatile
 14541  0A20  0084               	movwf	4
 14542  0A21  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 14543  0A22  0085               	movwf	5
 14544  0A23  0800               	movf	0,w	;code access
 14545  0A24  00F0               	movwf	??i1_USBCtrlTrfTxService
 14546  0A25  0022               	movlb	2	; select bank2
 14547  0A26  084F               	movf	_pDst^(0+256),w
 14548  0A27  0086               	movwf	6
 14549  0A28  0187               	clrf	7
 14550  0A29  0870               	movf	??i1_USBCtrlTrfTxService,w
 14551  0A2A  0081               	movwf	1
 14552  0A2B  3001               	movlw	1
 14553  0A2C  0021               	movlb	1	; select bank1
 14554  0A2D  07D3               	addwf	_inPipes^(0+128),f	;volatile
 14555  0A2E  3000               	movlw	0
 14556  0A2F  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 14557  0A30  3001               	movlw	1
 14558  0A31  00F0               	movwf	??i1_USBCtrlTrfTxService
 14559  0A32  0870               	movf	??i1_USBCtrlTrfTxService,w
 14560  0A33  0022               	movlb	2	; select bank2
 14561  0A34  07CF               	addwf	_pDst^(0+256),f
 14562                           
 14563                           ;usb_device.c: 1822: byteToSend--;
 14564  0A35  3001               	movlw	1
 14565  0A36  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 14566  0A37                     i1l3953:	
 14567  0A37  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14568  0A38  1903               	btfsc	3,2
 14569  0A39  0008               	return
 14570  0A3A  2A1E               	goto	i1l3945
 14571  0A3B                     __end_ofi1_USBCtrlTrfTxService:	
 14572  007E                     btemp	set	126	;btemp
 14573  007E                     int$flags	set	126
 14574  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    175
    Data        0
    BSS         355
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0h            8      8       8
    BANK1            80     38      66
    BANK2            80      9      80
    BANK3            80      2      66
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0h[16]), RAM(DATA[4096]), SetupPkt(ABS[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(ABS[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), BDT(ABS[48]), 
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 16
		 -> CtrlTrfData(BANK0h[16]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK4[64]), NULL(NULL[0]), cdc_data_rx(BANK3[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    process_gpio_cmd@rsp	PTR unsigned char  size(1) Largest target is 64
		 -> gpio_task@usb_tx_buf(BANK6[64]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> gpio_task@usb_tx_buf(BANK6[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> gpio_task@usb_rx_buf(BANK5[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    S304$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S294$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S294$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S269$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S269$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S269$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S269$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S36_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S36_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S36_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S36_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_USBCtrlEPServiceComplete->i1_USBCtrlEPAllowDataStage
    i1_USBCtrlEPAllowDataStage->i1_USBCtrlTrfTxService
    i1_USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    i1_USBCtrlTrfOutHandler->i1_USBCtrlTrfRxService
    i1_USBCtrlTrfRxService->i1_USBCtrlEPAllowStatusStage
    i1_USBCtrlTrfInHandler->i1_USBCtrlTrfTxService

Critical Paths under _main in BANK0h

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0h

    i1_USBWakeFromSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler
    i1_USBStdSetCfgHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBStdFeatureReqHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_CDCInitEP
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _gpio_task->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _SYSTEM_Initialize->_USBDeviceInit

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBDeviceTasks->i1_USBCtrlEPService
    i1_USBCtrlEPService->i1_USBCtrlTrfSetupHandler
    i1_USBCtrlTrfSetupHandler->i1_USBCheckStdRequest
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler

Critical Paths under _main in BANK2

    _usb_task->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBCheckStdRequest->_USBStdFeatureReqHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _usb_task->_USBDeviceTasks

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   51973
                  _SYSTEM_Initialize
                      _USBDeviceInit
                          _gpio_init
                          _gpio_task
                           _usb_task
 ---------------------------------------------------------------------------------
 (1) _usb_task                                             0     0      0   48223
                       _CDCTxService
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (2) _USBDeviceTasks                                       3     3      0   45929
                                              8 BANK2      1     1      0
                                              0 BANK3      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   1     1      0    6196
                                             34 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           1     1      0    6196
                                             34 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBStallHandler                                      1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBIncrement1msInternalTimers                        1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlEPService                                     3     3      0   26877
                                              5 BANK2      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfSetupHandler                               1     1      0   26540
                                             37 BANK1      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPServiceComplete                             2     2      0     136
                                             19 BANK1      2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowDataStage                              2     2      0     136
                                             17 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCheckStdRequest                                   1     1      0   20208
                                             36 BANK1      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStdSetCfgHandler                                  5     5      0    7070
                                             34 BANK1      1     1      0
                                              0 BANK2      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (7) _memset                                               8     2      6     639
                                             14 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (6) _USBStdGetStatusHandler                               3     3      0      68
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (6) _USBStdGetDscHandler                                  3     3      0       0
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (6) _USBStdFeatureReqHandler                              7     7      0    6874
                                             34 BANK1      2     2      0
                                              0 BANK2      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    6196
                                             28 BANK1      6     0      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckCDCRequest                                   1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCInitEP                                            1     1      0    3045
                                             27 BANK1      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBEnableEndpoint                                    6     5      1     952
                                             21 BANK1      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (6) _USBConfigureEndpoint                                 7     6      1     524
                                             14 BANK1      7     6      1
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfOutHandler                                 2     2      0     167
                                             20 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfRxService                                  4     4      0     167
                                             16 BANK1      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                             14 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfInHandler                                  3     3      0     170
                                             17 BANK1      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfTxService                                  3     3      0     136
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         3     3      0    2294
                                             25 BANK1      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _gpio_task                                            6     6      0    2958
                                             29 BANK1      6     6      0
                       _getsUSBUSART
                   _process_gpio_cmd
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     2      1     169
                                             14 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (2) _process_gpio_cmd                                     4     3      1     222
                                             14 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     3      1    2332
                                             25 BANK1      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBTransferOnePacket                                11     7      4    2093
                                             14 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     396
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        5     5      0     396
                                             14 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          1     1      0   15934
                                             13 BANK1      1     1      0
                   i1_USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) i1_USBDeviceTasks                                    3     3      0   15934
                                             10 BANK1      3     3      0
        i1_USBCtrlEPAllowStatusStage
                 i1_USBCtrlEPService
                    i1_USBDeviceInit
    i1_USBIncrement1msInternalTimers
                  i1_USBStallHandler
                       i1_USBSuspend
               i1_USBWakeFromSuspend
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBWakeFromSuspend                                1     1      0    2016
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBSuspend                                        1     1      0    2016
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBStallHandler                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_USBIncrement1msInternalTimers                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_USBDeviceInit                                     5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlEPService                                  3     3      0    9546
                                              7 BANK1      3     3      0
              i1_USBCtrlTrfInHandler
             i1_USBCtrlTrfOutHandler
           i1_USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfSetupHandler                            1     1      0    9317
                                              6 BANK1      1     1      0
               i1_USBCheckStdRequest
         i1_USBCtrlEPServiceComplete
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPServiceComplete                          2     2      0      92
                                              5 COMMON     2     2      0
          i1_USBCtrlEPAllowDataStage
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlEPAllowDataStage                           2     2      0      92
                                              3 COMMON     2     2      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) i1_USBCheckStdRequest                                1     1      0    7209
                                              5 BANK1      1     1      0
          i1_USBStdFeatureReqHandler
              i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
              i1_USBStdSetCfgHandler
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) i1_USBStdSetCfgHandler                               5     5      0    2453
                                              6 BANK0h     1     1      0
                                              0 BANK1      4     4      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (17) i1_memset                                            8     2      6     202
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (16) i1_USBStdGetStatusHandler                            3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (16) i1_USBStdGetDscHandler                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (16) i1_USBStdFeatureReqHandler                           7     7      0    2694
                                              6 BANK0h     2     2      0
                                              0 BANK1      5     5      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USER_USB_CALLBACK_EVENT_HANDLER                   6     0      6    2016
                                              0 BANK0h     6     0      6
                        i1_CDCInitEP
               i1_USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) i1_USBCheckCDCRequest                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_CDCInitEP                                         1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i1_USBTransferOnePacket                             11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (15) i1_USBEnableEndpoint                                 6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) i1_USBConfigureEndpoint                              7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfOutHandler                              2     2      0     114
                                              6 COMMON     2     2      0
              i1_USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlTrfRxService                               4     4      0     114
                                              2 COMMON     4     4      0
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlEPAllowStatusStage                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfInHandler                               3     3      0     115
                                              3 COMMON     3     3      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) i1_USBCtrlTrfTxService                               3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _USBDeviceAttach
     _USBDeviceInit
     _WDT_Initialize
   _USBDeviceInit
   _gpio_init
   _gpio_task
     _getsUSBUSART
       _USBTransferOnePacket
     _process_gpio_cmd
     _putUSBUSART
   _usb_task
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
               _memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _USBDeviceInit
       _USBIncrement1msInternalTimers
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest

 _INTERRUPT_InterruptManager (ROOT)
   i1_USBDeviceTasks
     i1_USBCtrlEPAllowStatusStage
     i1_USBCtrlEPService
       i1_USBCtrlTrfInHandler
         i1_USBCtrlTrfTxService
       i1_USBCtrlTrfOutHandler
         i1_USBCtrlTrfRxService
           i1_USBCtrlEPAllowStatusStage
       i1_USBCtrlTrfSetupHandler
         i1_USBCheckStdRequest
           i1_USBStdFeatureReqHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
           i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
           i1_USBStdSetCfgHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
             i1_memset
           i1_USER_USB_CALLBACK_EVENT_HANDLER
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_USBCheckCDCRequest
         i1_USBCtrlEPServiceComplete
           i1_USBCtrlEPAllowDataStage
             i1_USBCtrlTrfTxService
           i1_USBCtrlEPAllowStatusStage
         i1_USER_USB_CALLBACK_EVENT_HANDLER
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_USBCheckCDCRequest
     i1_USBDeviceInit
     i1_USBIncrement1msInternalTimers
     i1_USBStallHandler
     i1_USBSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USBWakeFromSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USER_USB_CALLBACK_EVENT_HANDLER
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_USBCheckCDCRequest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0h            8      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0h               8      8       8       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     26      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      9      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      42      11       82.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1AA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1AA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Aug 02 19:10:39 2017

                                _USB_SD_Ptr 18A3                                           pc 0002  
                               __CFG_CP$OFF 0000                                          l46 08F8  
                             _USBDeviceInit 058F                          __size_of_CDCInitEP 003D  
                               __CFG_LVP$ON 0000      i1USER_USB_CALLBACK_EVENT_HANDLER@event 0058  
      USER_USB_CALLBACK_EVENT_HANDLER@event 00BC      i1USER_USB_CALLBACK_EVENT_HANDLER@pdata 005A  
      USER_USB_CALLBACK_EVENT_HANDLER@pdata 00BE                                         l224 137E  
                                       l241 13AF                 __end_of_USBStdGetDscHandler 0C1F  
                                       l183 1048                                         l423 05D6  
                                       l440 0358                                         l521 0A57  
                                       l434 031A                                         l508 0F17  
                                       l444 0383                                         l621 09C2  
                                       l285 1295                                         l445 03DD  
                                       l446 038C                                         l536 0707  
                                       l633 0897                                         l483 1102  
                                       l635 0840                                         l644 086D  
                                       l573 1581                                         l576 15C8  
                                       l577 158A                                         l578 158D  
                                       _BDT 0020                                         l669 0150  
                                       _UIE 0E92                                         _UIR 0E90  
                  i1_USBStdGetStatusHandler 14D2                                  _USBSuspend 1148  
                      USBStdSetCfgHandler@i 016A                        USBStdSetCfgHandler@p 0167  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                            _USBDeviceTasks 02F7                                __CFG_IESO$ON 0000  
                            _USBDeviceState 00DF                                        S7215 1000  
                     ??_USBCtrlTrfRxService 00B0                              ??_getsUSBUSART 00BA  
                  USBEnableEndpoint@options 00B5                  USBConfigureEndpoint@handle 00B4  
                                      l6011 0064                                        l6013 0066  
                                      l5071 1352                                        l5063 1347  
                                      l5081 135C                                        l6041 00E2  
                                      l6033 00C0                                        l6113 0EE2  
                                      l5059 1107                                        l5075 1354  
                                      l5091 1370                                        l6051 00FC  
                                      l6027 0095                                        l6211 084D  
                                      l6221 085C                                        l6117 0EE6  
                                      l6055 0108                                        l6039 00D6  
                                      l6223 085F                                        l6207 0847  
                                      l6135 0F26                                        l6143 0F30  
                                      l6081 0188                                        l6065 013B  
                                      l6049 00F5                                        l6233 087D  
                                      l6209 084A                                        l6075 0157  
                                      l6067 0141                                        l6219 0859  
                                      l6173 070F                                        l6421 0835  
                                      l6237 088C                                        l6175 0728  
                                      l5703 08B7                                        l6079 017D  
                                      l5801 0AA9                                        l6185 0756  
                                      l6409 0809                                        l5713 08CE  
                                      l7217 1276                                        l4843 10EE  
                                      l6451 09B6                                        l6435 097E  
                                      l6187 0762                                        l5635 1430  
                                      l5707 08BE                                        l7219 1290  
                                      l7091 1072                                        l6525 05BD  
                                      l6517 05B0                                        l6509 059F  
                                      l6437 0983                                        l5637 1438  
                                      l5645 11D0                                        l5725 08E6  
                                      l6711 04CD                                        l6455 09C7  
                                      l6447 09A7                                        l5719 08DC  
                                      l6537 05DB                                        l5665 0CBC  
                                      l5657 0CAC                                        l5649 11D8  
                                      l5753 126D                                        l5809 10C3  
                                      l5921 0D6C                                        l5905 0D3F  
                                      l5675 0D03                                        l6731 0501  
                                      l5771 0A50                                        l5747 1267  
                                      l5915 0D56                                        l6627 122D  
                                      l6565 0621                                        l5677 0D1B  
                                      l6725 04F8                                        l5845 0AD7  
                                      l5749 126A                                        l6645 161D  
                                      l6629 122F                                        l6821 0349  
                                      l6559 05FE                                        l6743 0520  
                                      l6751 053E                                        l6719 04D8  
                                      l5783 0A73                                        l5791 0A8C  
                                      l5695 08AB                                        l6647 1620  
                                      l6831 035E                                        l6815 0334  
                                      l6753 0543                                        l6761 0561  
                                      l5793 0A90                                        l5945 0BAB  
                                      l5937 0D9A                                        l5881 1724  
                                      l6649 1623                                        l6809 032E  
                                      l6771 0576                                        l6763 0565  
                                      l5971 0C12                                        l6595 11BB  
                                      l6685 1698                                        l6773 058C  
                                      l5965 0C0C                                        l5957 0BE8  
                                      l5949 0BB5                                        l5877 1712  
                                      l6597 11C4                                        l6845 037B  
                                      l6837 0365                                        l6695 16AF  
                                      l5967 0C0F                                        l5959 0BEB  
                                      l5983 159E                                        l6871 03C4  
                                      l6697 16CE                                        l6689 16AD  
                                      l6953 1392                                        l6769 0570  
                                      l5993 15BC                                        l5897 0D2C  
                                      l6873 03D3                                        l6865 03AB  
                                      l6699 16E3                                        l6955 13B4  
                                      l6795 0314                                        l6787 0307  
                                      _LATA 010C                                        _LATC 010E  
                                      u6315 0701                                        i1l46 179F  
                     ??_USBCtrlTrfTxService 00AE                                        u5675 1409  
                                      u6725 05C0                                        u5685 140F  
                                      u5925 171B                                        u5695 1417  
                                      _UCFG 0E91                                        _UEP0 0E98  
                                      u6845 15E4                                        _UEP1 0E99  
                                      _UEIE 0E97                                        _UEIR 0E93  
                                      _UCON 0E8E                                ?i1_CDCInitEP 0070  
                                      _WPUA 020C             i1USBCtrlTrfTxService@byteToSend 0072  
                              __CFG_WRT$OFF 0000                               __CFG_FCMEN$ON 0000  
                           _CDCDataInHandle 013E    i1USBStdFeatureReqHandler@current_ep_data 00A2  
    USBStdFeatureReqHandler@current_ep_data 0169                                        _pDst 014F  
                                      _main 1069                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                               _BaudRateGen 0134                                        fsr1l 0006  
                           _USBDeviceAttach 10F1                                        btemp 007E  
                             __CFG_BOREN$ON 0000                     ?i1_USBCtrlTrfOutHandler 0070  
                                      start 0018                         gpio_task@has_output 00C0  
            __size_ofi1_USBCtrlTrfRxService 009D               __end_ofi1_USBCtrlTrfRxService 1000  
                __end_of_USBCheckStdRequest 0898                      ??_USBCtrlTrfOutHandler 00B4  
                             __CFG_MCLRE$ON 0000                         USBDeviceInit@i_1508 00B1  
                 ??_USBStdFeatureReqHandler 00C2              __size_ofi1_USBCtrlTrfTxService 0072  
                     i1_USBStdGetDscHandler 0B21               __end_ofi1_USBCtrlTrfTxService 0A3B  
                  ??_USBStdGetStatusHandler 00AE                              ?_USBDeviceInit 0070  
            __size_of_OSCILLATOR_Initialize 000A               __end_of_OSCILLATOR_Initialize 104C  
                                     ?_main 0070                  i1USBEnableEndpoint@options 0077  
                             __CFG_WDTE$OFF 0000           __size_of_USBCtrlEPServiceComplete 0092  
                    __end_of_USBDeviceTasks 03E0                   ?_USBCtrlEPServiceComplete 0070  
                      i1_USBCheckStdRequest 17A0                                       i1l133 0012  
                                     i1l423 068A                                       i1l440 043D  
                                     i1l521 09E5                                       i1l434 0402  
                                     i1l508 0E85                                       i1l444 0468  
                                     i1l621 095A                                       i1l285 1265  
                                     i1l445 04BA                                       i1l446 0471  
                                     i1l536 0F78                                       i1l633 17FF  
                                     i1l635 17A8                                       i1l644 17D5  
                                     i1l573 14D6                                       i1l576 1519  
                                     i1l577 14DF                                       i1l578 14E2  
                                     i1l669 02A5                                       _UADDR 0E96  
                                     _PORTC 000E                                       u686m0 1619  
                                     _TRISA 008C                                       _TRISC 008E  
                                     _USTAT 0E8F                                  i1memset@p1 0070  
        __size_of_USBCtrlEPAllowStatusStage 0074             __end_of_USBCtrlEPAllowDataStage 1740  
                                     _sd000 18A9                                       _sd001 1843  
                                     _sd002 1877     __end_ofi1_USBIncrement1msInternalTimers 10BE  
  __size_ofi1_USBIncrement1msInternalTimers 0018           ??i1_USBIncrement1msInternalTimers 0070  
          ?i1_USBIncrement1msInternalTimers 0070              ?_USBIncrement1msInternalTimers 0070  
           i1_USBIncrement1msInternalTimers 10A6                              _WDT_Initialize 1034  
          __end_ofi1_USBCtrlTrfSetupHandler 148A                         gpio_task@bytes_rcvd 00BF  
                         __end_of_CDCInitEP 133F              __end_ofi1_USBCtrlTrfOutHandler 1302  
                                     status 0003                                       wtemp0 007E  
                          __end_ofi1_memset 10A6          __size_ofi1_USBCtrlEPAllowDataStage 005B  
                 __size_ofi1_USBDeviceTasks 00DD                  ?i1_USBCtrlEPAllowDataStage 0070  
                           putUSBUSART@data 00B0                __size_of_USBStdSetCfgHandler 008E  
                           __initialization 001A                                __end_of_main 1079  
                     _control_signal_bitmap 0151                              __CFG_LPBOR$OFF 0000  
               ?_INTERRUPT_InterruptManager 0070                   __size_of_USBCtrlEPService 005A  
                                    ??_main 00C6                       ?i1_USBCheckStdRequest 0070  
                           ?_USBDeviceTasks 0070                                 ?_USBSuspend 0070  
                       __CFG_USBLSCLK$48MHz 0000                             i1_USBDeviceInit 0645  
                    __end_of_WDT_Initialize 1038                                _cdc_mem_type 0152  
                   __end_of_USBDeviceAttach 110D                            _CDCDataOutHandle 0140  
                                    i1S7221 101A                                      _ACTCON 039B  
                                    _APFCON 011D                                      _ANSELA 018C  
                                    _ANSELC 018E                             getsUSBUSART@len 00B9  
                     __size_of_CDCTxService 00D2                                      i1l3401 13EE  
                                    i1l3403 13F6                                      i1l4119 07B5  
                                    i1l4231 0B69                                      i1l4223 0B36  
                                    i1l4151 165C                                      i1l5111 0665  
                                    i1l5103 0654                                      i1l3505 0C82  
                                    i1l4241 0B90                                      i1l4233 0B6C  
                                    i1l3507 0C9A                                      i1l3603 1766  
                                    i1l4219 0B2C                                      i1l4155 166E  
                                    i1l5131 068F                                      i1l3621 178D  
                                    i1l4245 0B93                                      i1l3615 1784  
                                    i1l4239 0B8D                                      i1l5119 0671  
                                    i1l4521 0FD3                                      i1l3609 1776  
                                    i1l4257 14F2                                      i1l5153 06AC  
                                    i1l4507 0F80                                      i1l3475 116F  
                                    i1l4267 150D                                      i1l4451 0E54  
                                    i1l4509 0F99                                      i1l7021 044A  
                                    i1l7005 042E                                      i1l4519 0FC7  
                                    i1l3479 1176                                      i1l3495 0C3B  
                                    i1l3487 0C2B                                      i1l3591 1753  
                                    i1l4447 0E50                                      i1l5159 06CF  
                                    i1l7015 0443                                      i1l6321 01EB  
                                    i1l6305 01BA                                      i1l3923 09DE  
                                    i1l4803 094E                                      i1l6307 01BC  
                                    i1l6251 0DB9                                      i1l5187 1208  
                                    i1l6093 123D                                      i1l6333 022B  
                                    i1l4469 0E94                                      i1l4477 0E9E  
                                    i1l5189 120A                                      i1l7029 0460  
                                    i1l3935 0A01                                      i1l3943 0A1A  
                                    i1l4807 095F                                      i1l3599 175F  
                                    i1l7223 1246                                      i1l6087 1237  
                                    i1l6343 024A                                      i1l6335 0237  
                                    i1l6327 0215                                      i1l7055 04A2  
                                    i1l3945 0A1E                                      i1l3953 0A37  
                                    i1l4761 12D3                                      i1l7225 1260  
                                    i1l6089 123A                                      i1l6361 0296  
                                    i1l6345 0251                                      i1l3961 1092  
                                    i1l7057 04B1                                      i1l7049 048C  
                                    i1l6291 0E29                                      i1l6275 0DF8  
                                    i1l6259 0DCC                                      i1l4773 12FF  
                                    i1l6373 02D1                                      i1l6349 025D  
                                    i1l6269 0DE2                                      i1l6375 02DC  
                                    i1l6359 0290                                      i1l6463 17AF  
                                    i1l6369 02AC                                      i1l6465 17B2  
                                    i1l4787 0916                                      i1l6475 17C1  
                                    i1l6467 17B5                                      i1l4789 091B  
                                    i1l6477 17C4                                      i1l6493 17F4  
                                    i1l6901 11A4                                      i1l4799 093F  
                                    i1l6479 17C7                                      i1l6489 17E5  
                                    i1l6921 1572                                      i1l6917 156C  
                                    i1l6919 156F                                      i1l6971 03EF  
                                    i1l6993 0413                                      i1l6899 119B  
                                    i1l6979 03FC                                      i1l6999 0419  
                                    u421_25 0F72                                      u501_25 0674  
                                    u290_25 13D5                                      u374_25 1665  
                                    u288_25 13C7                                      u289_25 13CD  
                                    _OSCCON 0099                                      u730_25 1535  
                                    _PLLRDY 04D6                               CDCTxService@i 00BA  
                                    _WDTCON 0097                i1USBTransferOnePacket@handle 0079  
                 __size_of_process_gpio_cmd 0040                              __CFG_PWRTE$OFF 0000  
                         _shortPacketStatus 00DD           __end_ofi1_USBCtrlEPAllowDataStage 168A  
                    ?i1_USBStdGetDscHandler 0070                             USBDeviceTasks@i 016F  
               USBStdFeatureReqHandler@pUEP 0167                    USBTransferOnePacket@data 00AF  
                USBCtrlTrfInHandler@lastDTS 00B3                             ??_USBDeviceInit 00AE  
                              ?_putUSBUSART 00AE                              __CFG_STVREN$ON 0000  
                      __end_of_getsUSBUSART 16E5               __size_ofi1_USBWakeFromSuspend 0020  
                       gpio_task@usb_rx_buf 02A0                         gpio_task@usb_tx_buf 0320  
                         _USBEnableEndpoint 11C7             __size_of_USBStdGetStatusHandler 0058  
                   ??i1_USBStdSetCfgHandler 005E                                      _memset 10BE  
             __size_ofi1_USBCheckCDCRequest 0060                        i1USBEnableEndpoint@p 007A  
                        ?_USBEnableEndpoint 00B5               __size_of_USBTransferOnePacket 0081  
                              _CDCTxService 04BD                             ?_WDT_Initialize 0070  
                       ??_USBEnableEndpoint 00B6                            __end_of_usb_task 105A  
              i1USBConfigureEndpoint@handle 0076                  __end_ofi1_USBCtrlEPService 157D  
                               _CtrlTrfData 0060                           i1_USBStallHandler 11EA  
                      _controlTransferState 00DC                           _SYSTEM_Initialize 105A  
                   __end_of__initialization 0049                  i1USBTransferOnePacket@data 0071  
                        ?i1_USBStallHandler 0070                    i1_USBCtrlTrfSetupHandler 1442  
                      __size_ofi1_CDCInitEP 0035                          ?_SYSTEM_Initialize 0070  
                  __size_of_USBStallHandler 0027                              __pcstackBANK0h 0058  
                    i1USBCtrlTrfRxService@i 0074                         __size_of_USBSuspend 001F  
                            __pcstackCOMMON 0070                   __end_of_USBEnableEndpoint 11EA  
                       ??i1_USBStallHandler 0070                               __end_of_sd000 18AD  
                             __end_of_sd001 1877                               __end_of_sd002 1891  
                ??i1_USBStdGetStatusHandler 0070                         ??_SYSTEM_Initialize 00B3  
          __size_of_USBCtrlEPAllowDataStage 005B               __size_of_USBConfigureEndpoint 0042  
                   __end_ofi1_USBDeviceInit 06F2                 __end_of_USBCtrlTrfInHandler 09C9  
                    ??i1_USBCheckStdRequest 00A5                              _OPTION_REGbits 0095  
                                 ?i1_memset 0070                                  _cdc_notice 0120  
                                _cdc_rx_len 0155                                  _cdc_tx_len 0153  
                 __end_ofi1_USBStallHandler 120F                    ??_USBCtrlTrfSetupHandler 00C5  
                   _USBTicksSinceSuspendEnd 0146                            ?_USBDeviceAttach 0070  
                 __end_of_SYSTEM_Initialize 1069                      _USBStdGetStatusHandler 157D  
                                __pbssBANK1 00C6                                  __pbssBANK2 0120  
                                __pbssBANK3 01A0                                  __pbssBANK4 0220  
                                __pbssBANK5 02A0                                  __pbssBANK6 0320  
                        __size_of_gpio_init 0004                          __size_of_gpio_task 0040  
                          i1_USBDeviceTasks 03E0                 __size_of_USBWakeFromSuspend 0020  
                             ?i1_USBSuspend 0070                                 _pBDTEntryIn 00CD  
          __end_of_USBCtrlEPServiceComplete 0F63                       i1_USBCtrlTrfInHandler 08F9  
              ??i1_USBCtrlEPServiceComplete 0075                 __size_of_USBCheckCDCRequest 0061  
                                __pmaintext 1069                        USBCtrlTrfRxService@i 00B2  
                           __CFG_PLLMULT$3x 0000                                  __pintentry 0004  
              __size_ofi1_USBEnableEndpoint 0020                                     ?_memset 00AE  
                                _device_dsc 1891                            _USBCtrlEPService 15D5  
                                _ep_data_in 013B                 __end_of_USBCtrlTrfRxService 078F  
                        _USBCheckStdRequest 0838                           _configDescriptor1 1800  
                                ??i1_memset 0076                 __end_of_USBCtrlTrfTxService 0AAD  
                       _USBStdSetCfgHandler 0D20                                     u732_2m0 1568  
                                   _OSCTUNE 0098                         ?_USBCheckStdRequest 0070  
              __size_of_USBStdGetDscHandler 007F                                     _UIEbits 0E92  
       __size_ofi1_USBCtrlEPServiceComplete 0092                                     _UIRbits 0E90  
                             _cdc_trf_state 0154                    ??i1_USBTransferOnePacket 0074  
                          _process_gpio_cmd 133F                              ??i1_USBSuspend 005E  
                                   _pCDCDst 0142                                     _pCDCSrc 0144  
                     __size_of_getsUSBUSART 005B                 ??i1_USBCtrlEPAllowDataStage 0073  
           ??_USBIncrement1msInternalTimers 00AE                        ?_USBStdSetCfgHandler 0070  
                                 _CDCInitEP 1302                i1USBCtrlTrfInHandler@lastDTS 0075  
                __size_of_USBEnableEndpoint 0023                        ??_USBCheckStdRequest 00C4  
                     i1_USBCtrlTrfRxService 0F63               __size_of_USBCtrlTrfOutHandler 0037  
                          ??_USBDeviceTasks 01E0                           ??_USBStallHandler 00AE  
                                 ?_usb_task 0070                            ?i1_USBDeviceInit 0070  
                     i1_USBCtrlTrfTxService 09C9                        __size_of_putUSBUSART 001A  
                        getsUSBUSART@buffer 00BC                             __size_of_memset 0019  
                 __end_of_configDescriptor1 1843                                     __ptext1 104C  
                                   __ptext2 02F7                                     __ptext3 11A7  
                                   __ptext4 1148                                     __ptext5 120F  
                                   __ptext6 110D                                     __ptext7 15D5  
                                   __ptext8 148A                                     __ptext9 0ED1  
                                   _inPipes 00D3                           __end_of_gpio_init 103C  
               _USBDeferOUTDataStagePackets 0147                           __end_of_gpio_task 13BF  
                     _OSCILLATOR_Initialize 1042                                ??_USBSuspend 00C2  
                  ??_PIN_MANAGER_Initialize 00AE                       i1USBEnableEndpoint@ep 007C  
                __size_ofi1_USBStallHandler 0025                          __end_of_USB_CD_Ptr 18AF  
                __size_of_SYSTEM_Initialize 000F             __size_of_USBCtrlTrfSetupHandler 0048  
                                   clrloop0 103D                    ??i1_USBConfigureEndpoint 0071  
                      end_of_initialization 0049                                _getsUSBUSART 168A  
                        __end_of_USB_SD_Ptr 18A9                         _pBDTEntryEP0OutNext 00D8  
                                   memset@c 00B0                                     memset@n 00B2  
                                   memset@p 00B4                             _USB1msTickCount 0130  
           _dummy_encapsulated_cmd_response 0156                     ??i1_USBStdGetDscHandler 0070  
                  ?_USBStdFeatureReqHandler 0070                      ?i1_USBCtrlTrfInHandler 0070  
                     ??_USBStdSetCfgHandler 00C2                                  ?_CDCInitEP 0070  
                        __end_of_USBSuspend 1167                     _USBCtrlEPAllowDataStage 16E5  
                                ??_usb_task 00C6                    _USBCtrlEPServiceComplete 0ED1  
                _USBStatusStageEnabledFlag1 014A                  _USBStatusStageEnabledFlag2 0149  
                          ??_WDT_Initialize 00AE                          USBEnableEndpoint@p 00B8  
                       process_gpio_cmd@cmd 00B1              __size_ofi1_USBStdSetCfgHandler 0091  
                       process_gpio_cmd@rsp 00AE               __end_ofi1_USBStdSetCfgHandler 0E3F  
                 i1_USBCtrlEPAllowDataStage 162F                            __CFG_FOSC$INTOSC 0000  
                        _BothEP0OutUOWNsSet 014C                  ??i1_USBCtrlTrfSetupHandler 00A6  
                 USBStdSetCfgHandler@i_2173 0169                __end_ofi1_USBWakeFromSuspend 11A7  
                 USBConfigureEndpoint@EPNum 00B3                ?i1_USBCtrlEPAllowStatusStage 0070  
                ?_USBCtrlEPAllowStatusStage 0070                __end_ofi1_USBCheckCDCRequest 17A0  
     i1USER_USB_CALLBACK_EVENT_HANDLER@size 005C         USER_USB_CALLBACK_EVENT_HANDLER@size 00C0  
                                 _USTATcopy 00E0                    i1USBTransferOnePacket@ep 0078  
              __end_of_USBTransferOnePacket 0D20             __size_ofi1_USBTransferOnePacket 0080  
        __end_ofi1_USBCtrlEPServiceComplete 0ED1                  i1_USBCtrlEPServiceComplete 0E3F  
                         putUSBUSART@length 00AE                          i1_USBCtrlEPService 1526  
                        __CFG_PLLEN$ENABLED 0000                       i1USBDeviceInit@i_1508 0073  
                    ?i1_USBCtrlTrfRxService 0070                    process_gpio_cmd@cmd_type 00B0  
                    _USBCtrlTrfSetupHandler 148A                      ?i1_USBCtrlTrfTxService 0070  
                     __end_of_USBDeviceInit 0645       __end_of_USBIncrement1msInternalTimers 1129  
    __size_of_USBIncrement1msInternalTimers 001C               _USBIncrement1msInternalTimers 110D  
                                 i1memset@c 0072                                   i1memset@n 0074  
                                 i1memset@p 0076                         ?i1_USBCtrlEPService 0070  
                  process_gpio_cmd@gpio_dir 0150                      ?_OSCILLATOR_Initialize 0070  
                            __end_of_memset 10D7                           _USBBusIsSuspended 014D  
                      __end_ofi1_USBSuspend 1148                    __end_ofi1_USBDeviceTasks 04BD  
                       start_initialization 001A                     ?_USBStdGetStatusHandler 0070  
             USBCtrlTrfRxService@byteToRead 00B3             __size_of_PIN_MANAGER_Initialize 0015  
                  ??i1_USBCtrlTrfOutHandler 0076                           __size_ofi1_memset 0018  
                               _cdc_data_rx 01A0                                 _cdc_data_tx 0220  
              __end_of_USBConfigureEndpoint 1442             __end_of_USBStdFeatureReqHandler 01A4  
                       i1_USBEnableEndpoint 1167             __size_ofi1_USBConfigureEndpoint 0041  
                             ??i1_CDCInitEP 007D           __end_of_USBCtrlEPAllowStatusStage 0B21  
                      ??i1_USBCtrlEPService 00A7               ??i1_USBCtrlEPAllowStatusStage 0070  
                  __end_of_USBCtrlEPService 162F               i1USBStdFeatureReqHandler@pUEP 00A0  
                 ??_USBCtrlEPAllowDataStage 00B1                                 ??_CDCInitEP 00BB  
                            USBDeviceInit@i 00B2                              USBDeviceInit@p 00AF  
               i1USBStdSetCfgHandler@i_2173 00A2                      _pBDTEntryEP0OutCurrent 00DE  
        __size_ofi1_USBStdFeatureReqHandler 0153                     USBTransferOnePacket@dir 00AE  
                   USBTransferOnePacket@len 00B1                  ?i1_USBStdFeatureReqHandler 0070  
               i1USBConfigureEndpoint@EPNum 0075                         _USBStdGetDscHandler 0BA0  
                      ?i1_USBEnableEndpoint 0077                                    ??_memset 00B4  
                    i1_USBTransferOnePacket 0C1F                    __end_of_process_gpio_cmd 137F  
             __size_ofi1_USBCheckStdRequest 0060                      _USBActiveConfiguration 00E1  
            __end_of_USBStdGetStatusHandler 15D5                   i1USBTransferOnePacket@dir 0070  
                 i1USBTransferOnePacket@len 0073                                   ___latbits 0002  
                             __pcstackBANK1 00A0                               __pcstackBANK2 0167  
                             __pcstackBANK3 01E0                __size_of_USBCtrlTrfInHandler 0068  
         __size_ofi1_USBStdGetStatusHandler 0054                   ?i1_USBStdGetStatusHandler 0070  
                      ?_USBStdGetDscHandler 0070                  __end_of_USBWakeFromSuspend 11C7  
                           _USBStallHandler 120F                                _pBDTEntryOut 012A  
                __end_of_USBCheckCDCRequest 08F9                    __size_of_USBDeviceAttach 001C  
                       __end_ofi1_CDCInitEP 12CB                      _PIN_MANAGER_Initialize 1079  
                     ??i1_USBEnableEndpoint 0078                      i1_USBConfigureEndpoint 13BF  
         __end_ofi1_USBStdFeatureReqHandler 02F7                        i1_USBWakeFromSuspend 1187  
      __size_ofi1_USBCtrlEPAllowStatusStage 0070                        i1_USBCheckCDCRequest 1740  
              ??_INTERRUPT_InterruptManager 00AD                                   __pswtext1 1000  
                                 __pswtext2 101A                           __size_of_usb_task 000E  
                      _USBTransferOnePacket 0C9F                                   _gpio_init 1038  
                                 _gpio_task 137F                __end_of_USBCtrlTrfOutHandler 0838  
                     ??_USBStdGetDscHandler 00AE                                 _ep_data_out 0138  
           __size_ofi1_USBCtrlTrfOutHandler 0037                __size_of_USBCtrlTrfRxService 009D  
             USBConfigureEndpoint@direction 00AE             i1USBCtrlTrfRxService@byteToRead 0075  
                   ??i1_USBCtrlTrfInHandler 0073                __size_of_USBCtrlTrfTxService 0072  
                ??_USBCtrlEPServiceComplete 00B3                                   clear_ram0 103C  
                                  _PIE2bits 0092              __size_ofi1_USBStdGetDscHandler 007F  
             __end_ofi1_USBStdGetDscHandler 0BA0         __size_of_INTERRUPT_InterruptManager 0014  
                                  _PIR2bits 0012                               ??_putUSBUSART 00AF  
                                  _UEP0bits 0E98                  _USBDeferINDataStagePackets 0148  
                     ?i1_USBWakeFromSuspend 0070                 __size_of_USBCheckStdRequest 0060  
                                  _UCONbits 0E8E                       ?i1_USBCheckCDCRequest 0070  
                      _USBConfigureEndpoint 1400                       __size_ofi1_USBSuspend 001F  
          __size_of_USBStdFeatureReqHandler 0157                       ?_USBTransferOnePacket 00AE  
                             ?_CDCTxService 0070                                    i1_memset 108E  
                              _RemoteWakeup 014E                             gpio_task@rx_ptr 00C1  
                           gpio_task@tx_ptr 00C2                                  ?_gpio_init 0070  
                                ?_gpio_task 0070                    __size_ofi1_USBDeviceInit 00AD  
                   __end_of_USBStallHandler 1236                 ??_USBCtrlEPAllowStatusStage 00AE  
               __end_of_USBStdSetCfgHandler 0DAE                                 i1_CDCInitEP 1296  
                        __end_of_device_dsc 18A3                     ??i1_USBCtrlTrfRxService 0072  
                         i1USBDeviceTasks@i 00AC                     ?_USBCtrlTrfSetupHandler 0070  
               ?i1_USBCtrlEPServiceComplete 0070                                i1_USBSuspend 1129  
                   USBStdGetStatusHandler@p 00AF                     ??i1_USBCtrlTrfTxService 0070  
                    USBTransferOnePacket@ep 00B6                      i1_USBCtrlTrfOutHandler 12CB  
                                  _SetupPkt 0050                     ??_OSCILLATOR_Initialize 00AE  
                     ?_USBConfigureEndpoint 00AE                           ??_USBDeviceAttach 00AE  
                 i1USBStdGetStatusHandler@p 0071                         __end_of_putUSBUSART 10F1  
                               _line_coding 015E                              ??_CDCTxService 00B9  
                     i1_USBStdSetCfgHandler 0DAE                           ?i1_USBDeviceTasks 0070  
                   __size_of_USBDeviceTasks 00E9                                    __ptext10 16E5  
                                  __ptext11 0838                                    __ptext20 11C7  
                                  __ptext12 0D20                                    __ptext21 1400  
                                  __ptext13 10BE                                    __ptext30 133F  
                                  __ptext22 0801                                    __ptext14 157D  
                                  __ptext31 168A                                    __ptext23 06F2  
                                  __ptext15 0BA0                                    __ptext32 0C9F  
                                  __ptext24 0AAD                                    __ptext16 004D  
                                  __ptext41 03E0                                    __ptext33 1038  
                                  __ptext25 0961                                    __ptext17 1266  
                                  __ptext50 162F                                    __ptext42 1187  
                                  __ptext34 105A                                    __ptext26 0A3B  
                                  __ptext18 0898                                    __ptext51 17A0  
                                  __ptext43 1129                                    __ptext35 1034  
                                  __ptext27 04BD                                    __ptext19 1302  
                                  __ptext60 0C1F                                    __ptext52 0DAE  
                                  __ptext44 11EA                                    __ptext36 058F  
                                  __ptext28 137F                                    __ptext61 1167  
                                  __ptext53 108E                                    __ptext45 10A6  
                                  __ptext37 10F1                                    __ptext29 10D7  
                                  __ptext62 13BF                                    __ptext54 14D2  
                                  __ptext46 0645                                    __ptext38 1079  
                                  __ptext63 12CB                                    __ptext55 0B21  
                                  __ptext47 1526                                    __ptext39 1042  
                                  __ptext64 0F63                                    __ptext56 01A4  
                                  __ptext48 1442                                    __ptext65 078F  
                                  __ptext57 1236                                    __ptext49 0E3F  
                                  __ptext66 08F9                                    __ptext58 1740  
                                  __ptext67 09C9                                    __ptext59 1296  
                        ??i1_USBDeviceTasks 00AA              __end_of_USBCtrlTrfSetupHandler 14D2  
                             __size_of_main 0010                           ?_USBCtrlEPService 0070  
           i1USBConfigureEndpoint@direction 0070                          ??_USBCtrlEPService 016C  
                       _USBCtrlTrfInHandler 0961           __size_ofi1_USBCtrlTrfSetupHandler 0048  
                    ??i1_USBWakeFromSuspend 005E                   ?i1_USBCtrlTrfSetupHandler 0070  
                                  _outPipes 00C6                 ??i1_USBStdFeatureReqHandler 005E  
                    ??i1_USBCheckCDCRequest 0070                        _USBCtrlTrfOutHandler 0801  
                                  int$flags 007E                     ?i1_USBTransferOnePacket 0070  
                 _USBCtrlEPAllowStatusStage 0AAD                                    _usb_task 104C  
          __end_ofi1_USBStdGetStatusHandler 1526          __end_of_INTERRUPT_InterruptManager 0018  
                _INTERRUPT_InterruptManager 0004                      ??_USBTransferOnePacket 00B2  
                 _USBDeferStatusStagePacket 00DA                    CDCTxService@byte_to_send 00BB  
                         ?_process_gpio_cmd 00AE                            i1USBDeviceInit@i 0074  
                          i1USBDeviceInit@p 0071                                  _INTCONbits 000B  
                      ?_USBCtrlTrfInHandler 0070                                 ??_gpio_init 00AE  
                        ??_process_gpio_cmd 00AF                                 ??_gpio_task 00BD  
             USBCtrlTrfTxService@byteToSend 00B0                                    memset@p1 00AE  
                          ?_USBStallHandler 0070                    USBStdFeatureReqHandler@p 016A  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
                    __size_of_USBDeviceInit 00B6                 __size_ofi1_USBCtrlEPService 0057  
 __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 1266  __size_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 0030  
   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1296    __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0030  
        ?i1_USER_USB_CALLBACK_EVENT_HANDLER 0058         ??i1_USER_USB_CALLBACK_EVENT_HANDLER 007E  
         ??_USER_USB_CALLBACK_EVENT_HANDLER 00C2            ?_USER_USB_CALLBACK_EVENT_HANDLER 00BC  
         i1_USER_USB_CALLBACK_EVENT_HANDLER 1236             _USER_USB_CALLBACK_EVENT_HANDLER 1266  
                         ??i1_USBDeviceInit 0070                __end_ofi1_USBCheckStdRequest 1800  
                   ?_PIN_MANAGER_Initialize 0070                           __CFG_CLKOUTEN$OFF 0000  
                   ?i1_USBConfigureEndpoint 0070              __end_ofi1_USBTransferOnePacket 0C9F  
                    ??_USBConfigureEndpoint 00AF                       ?_USBCtrlTrfOutHandler 0070  
                               _putUSBUSART 10D7                         _USBCtrlTrfRxService 06F2  
                        _USBWakeFromSuspend 11A7                     _USBStdFeatureReqHandler 004D  
                        _USBCheckCDCRequest 0898                         _USBCtrlTrfTxService 0A3B  
                             __pstringtext1 18A3                               __pstringtext2 18AD  
                             __pstringtext3 1800                               __pstringtext4 1843  
                             __pstringtext5 1877                               __pstringtext6 1891  
                             __pstringtext7 18A9                  i1USBStdFeatureReqHandler@p 00A3  
                    ?i1_USBStdSetCfgHandler 0070                      i1USBStdSetCfgHandler@i 00A3  
                    i1USBStdSetCfgHandler@p 00A0                         __CFG_CPUDIV$CLKDIV6 0000  
                       ?_USBWakeFromSuspend 0070                       ??_USBCtrlTrfInHandler 00B1  
                     _USBAlternateInterface 0165                         ?_USBCheckCDCRequest 0070  
                       USBEnableEndpoint@ep 00BA                   i1_USBStdFeatureReqHandler 01A4  
                           _endpoint_number 00DB         __end_ofi1_USBCtrlEPAllowStatusStage 07FF  
               i1_USBCtrlEPAllowStatusStage 078F                        ?_USBCtrlTrfRxService 0070  
                             ?_getsUSBUSART 00B9              __end_of_PIN_MANAGER_Initialize 108E  
                  ?_USBCtrlEPAllowDataStage 0070                        ?_USBCtrlTrfTxService 0070  
            __size_ofi1_USBCtrlTrfInHandler 0068                _USBStatusStageTimeoutCounter 014B  
             __end_ofi1_USBCtrlTrfInHandler 0961              __end_ofi1_USBConfigureEndpoint 1400  
                      ??_USBWakeFromSuspend 00C2                 __end_ofi1_USBEnableEndpoint 1187  
                USBTransferOnePacket@handle 00B7                        __end_of_CDCTxService 058F  
                      ??_USBCheckCDCRequest 00AE                                  _USB_CD_Ptr 18AD  
