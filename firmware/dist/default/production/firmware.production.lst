

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Aug 29 00:13:40 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext1,local,class=CONST,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	intentry,global,class=CODE,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	swtext2,local,class=CONST,delta=2
    78                           	psect	text52,local,class=CODE,merge=1,delta=2
    79                           	psect	text53,local,class=CODE,merge=1,delta=2
    80                           	psect	text54,local,class=CODE,merge=1,delta=2
    81                           	psect	text55,local,class=CODE,merge=1,delta=2
    82                           	psect	text56,local,class=CODE,merge=1,delta=2
    83                           	psect	text57,local,class=CODE,merge=1,delta=2
    84                           	psect	text58,local,class=CODE,merge=1,delta=2
    85                           	psect	text59,local,class=CODE,merge=1,delta=2
    86                           	psect	text60,local,class=CODE,merge=1,delta=2
    87                           	psect	text61,local,class=CODE,merge=1,delta=2
    88                           	psect	text62,local,class=CODE,merge=1,delta=2
    89                           	psect	text63,local,class=CODE,merge=1,delta=2
    90                           	psect	text64,local,class=CODE,merge=1,delta=2
    91                           	psect	text65,local,class=CODE,merge=1,delta=2
    92                           	psect	text66,local,class=CODE,merge=1,delta=2
    93                           	psect	text67,local,class=CODE,merge=1,delta=2
    94                           	dabs	1,0x20,48,_BDT
    95                           	dabs	1,0x50,8,_SetupPkt
    96                           	dabs	1,0x60,16,_CtrlTrfData
    97                           	dabs	1,0x7E,2
    98  0000                     
    99                           ; Version 1.42
   100                           ; Generated 13/04/2017 GMT
   101                           ; 
   102                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC16F1455 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000E                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  008C                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0095                     	;# 
   163  0096                     	;# 
   164  0097                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010E                     	;# 
   176  0111                     	;# 
   177  0112                     	;# 
   178  0113                     	;# 
   179  0114                     	;# 
   180  0115                     	;# 
   181  0116                     	;# 
   182  0117                     	;# 
   183  0118                     	;# 
   184  0119                     	;# 
   185  011D                     	;# 
   186  018C                     	;# 
   187  018E                     	;# 
   188  0191                     	;# 
   189  0191                     	;# 
   190  0192                     	;# 
   191  0193                     	;# 
   192  0193                     	;# 
   193  0194                     	;# 
   194  0195                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0199                     	;# 
   198  019A                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019C                     	;# 
   202  019D                     	;# 
   203  019E                     	;# 
   204  019F                     	;# 
   205  020C                     	;# 
   206  0211                     	;# 
   207  0211                     	;# 
   208  0212                     	;# 
   209  0212                     	;# 
   210  0213                     	;# 
   211  0213                     	;# 
   212  0214                     	;# 
   213  0214                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0216                     	;# 
   218  0216                     	;# 
   219  0217                     	;# 
   220  0217                     	;# 
   221  0391                     	;# 
   222  0392                     	;# 
   223  0393                     	;# 
   224  039A                     	;# 
   225  039B                     	;# 
   226  0611                     	;# 
   227  0612                     	;# 
   228  0613                     	;# 
   229  0613                     	;# 
   230  0614                     	;# 
   231  0615                     	;# 
   232  0616                     	;# 
   233  0616                     	;# 
   234  0691                     	;# 
   235  0692                     	;# 
   236  0693                     	;# 
   237  0694                     	;# 
   238  0695                     	;# 
   239  0E8E                     	;# 
   240  0E8F                     	;# 
   241  0E90                     	;# 
   242  0E91                     	;# 
   243  0E92                     	;# 
   244  0E93                     	;# 
   245  0E94                     	;# 
   246  0E94                     	;# 
   247  0E95                     	;# 
   248  0E96                     	;# 
   249  0E97                     	;# 
   250  0E98                     	;# 
   251  0E99                     	;# 
   252  0E9A                     	;# 
   253  0E9B                     	;# 
   254  0E9C                     	;# 
   255  0E9D                     	;# 
   256  0E9E                     	;# 
   257  0E9F                     	;# 
   258  0FE4                     	;# 
   259  0FE5                     	;# 
   260  0FE6                     	;# 
   261  0FE7                     	;# 
   262  0FE8                     	;# 
   263  0FE9                     	;# 
   264  0FEA                     	;# 
   265  0FEB                     	;# 
   266  0FED                     	;# 
   267  0FEE                     	;# 
   268  0FEF                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000E                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  008C                     	;# 
   295  008E                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009B                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  010C                     	;# 
   311  010E                     	;# 
   312  0111                     	;# 
   313  0112                     	;# 
   314  0113                     	;# 
   315  0114                     	;# 
   316  0115                     	;# 
   317  0116                     	;# 
   318  0117                     	;# 
   319  0118                     	;# 
   320  0119                     	;# 
   321  011D                     	;# 
   322  018C                     	;# 
   323  018E                     	;# 
   324  0191                     	;# 
   325  0191                     	;# 
   326  0192                     	;# 
   327  0193                     	;# 
   328  0193                     	;# 
   329  0194                     	;# 
   330  0195                     	;# 
   331  0196                     	;# 
   332  0197                     	;# 
   333  0199                     	;# 
   334  019A                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019C                     	;# 
   338  019D                     	;# 
   339  019E                     	;# 
   340  019F                     	;# 
   341  020C                     	;# 
   342  0211                     	;# 
   343  0211                     	;# 
   344  0212                     	;# 
   345  0212                     	;# 
   346  0213                     	;# 
   347  0213                     	;# 
   348  0214                     	;# 
   349  0214                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0215                     	;# 
   353  0216                     	;# 
   354  0216                     	;# 
   355  0217                     	;# 
   356  0217                     	;# 
   357  0391                     	;# 
   358  0392                     	;# 
   359  0393                     	;# 
   360  039A                     	;# 
   361  039B                     	;# 
   362  0611                     	;# 
   363  0612                     	;# 
   364  0613                     	;# 
   365  0613                     	;# 
   366  0614                     	;# 
   367  0615                     	;# 
   368  0616                     	;# 
   369  0616                     	;# 
   370  0691                     	;# 
   371  0692                     	;# 
   372  0693                     	;# 
   373  0694                     	;# 
   374  0695                     	;# 
   375  0E8E                     	;# 
   376  0E8F                     	;# 
   377  0E90                     	;# 
   378  0E91                     	;# 
   379  0E92                     	;# 
   380  0E93                     	;# 
   381  0E94                     	;# 
   382  0E94                     	;# 
   383  0E95                     	;# 
   384  0E96                     	;# 
   385  0E97                     	;# 
   386  0E98                     	;# 
   387  0E99                     	;# 
   388  0E9A                     	;# 
   389  0E9B                     	;# 
   390  0E9C                     	;# 
   391  0E9D                     	;# 
   392  0E9E                     	;# 
   393  0E9F                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000E                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  008C                     	;# 
   431  008E                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  010C                     	;# 
   447  010E                     	;# 
   448  0111                     	;# 
   449  0112                     	;# 
   450  0113                     	;# 
   451  0114                     	;# 
   452  0115                     	;# 
   453  0116                     	;# 
   454  0117                     	;# 
   455  0118                     	;# 
   456  0119                     	;# 
   457  011D                     	;# 
   458  018C                     	;# 
   459  018E                     	;# 
   460  0191                     	;# 
   461  0191                     	;# 
   462  0192                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0197                     	;# 
   469  0199                     	;# 
   470  019A                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019D                     	;# 
   475  019E                     	;# 
   476  019F                     	;# 
   477  020C                     	;# 
   478  0211                     	;# 
   479  0211                     	;# 
   480  0212                     	;# 
   481  0212                     	;# 
   482  0213                     	;# 
   483  0213                     	;# 
   484  0214                     	;# 
   485  0214                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0216                     	;# 
   490  0216                     	;# 
   491  0217                     	;# 
   492  0217                     	;# 
   493  0391                     	;# 
   494  0392                     	;# 
   495  0393                     	;# 
   496  039A                     	;# 
   497  039B                     	;# 
   498  0611                     	;# 
   499  0612                     	;# 
   500  0613                     	;# 
   501  0613                     	;# 
   502  0614                     	;# 
   503  0615                     	;# 
   504  0616                     	;# 
   505  0616                     	;# 
   506  0691                     	;# 
   507  0692                     	;# 
   508  0693                     	;# 
   509  0694                     	;# 
   510  0695                     	;# 
   511  0E8E                     	;# 
   512  0E8F                     	;# 
   513  0E90                     	;# 
   514  0E91                     	;# 
   515  0E92                     	;# 
   516  0E93                     	;# 
   517  0E94                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E96                     	;# 
   521  0E97                     	;# 
   522  0E98                     	;# 
   523  0E99                     	;# 
   524  0E9A                     	;# 
   525  0E9B                     	;# 
   526  0E9C                     	;# 
   527  0E9D                     	;# 
   528  0E9E                     	;# 
   529  0E9F                     	;# 
   530  0FE4                     	;# 
   531  0FE5                     	;# 
   532  0FE6                     	;# 
   533  0FE7                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEB                     	;# 
   538  0FED                     	;# 
   539  0FEE                     	;# 
   540  0FEF                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000E                     	;# 
   555  0011                     	;# 
   556  0012                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  001A                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  008C                     	;# 
   567  008E                     	;# 
   568  0091                     	;# 
   569  0092                     	;# 
   570  0095                     	;# 
   571  0096                     	;# 
   572  0097                     	;# 
   573  0098                     	;# 
   574  0099                     	;# 
   575  009A                     	;# 
   576  009B                     	;# 
   577  009B                     	;# 
   578  009C                     	;# 
   579  009D                     	;# 
   580  009E                     	;# 
   581  009F                     	;# 
   582  010C                     	;# 
   583  010E                     	;# 
   584  0111                     	;# 
   585  0112                     	;# 
   586  0113                     	;# 
   587  0114                     	;# 
   588  0115                     	;# 
   589  0116                     	;# 
   590  0117                     	;# 
   591  0118                     	;# 
   592  0119                     	;# 
   593  011D                     	;# 
   594  018C                     	;# 
   595  018E                     	;# 
   596  0191                     	;# 
   597  0191                     	;# 
   598  0192                     	;# 
   599  0193                     	;# 
   600  0193                     	;# 
   601  0194                     	;# 
   602  0195                     	;# 
   603  0196                     	;# 
   604  0197                     	;# 
   605  0199                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019D                     	;# 
   611  019E                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  0211                     	;# 
   615  0211                     	;# 
   616  0212                     	;# 
   617  0212                     	;# 
   618  0213                     	;# 
   619  0213                     	;# 
   620  0214                     	;# 
   621  0214                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0215                     	;# 
   625  0216                     	;# 
   626  0216                     	;# 
   627  0217                     	;# 
   628  0217                     	;# 
   629  0391                     	;# 
   630  0392                     	;# 
   631  0393                     	;# 
   632  039A                     	;# 
   633  039B                     	;# 
   634  0611                     	;# 
   635  0612                     	;# 
   636  0613                     	;# 
   637  0613                     	;# 
   638  0614                     	;# 
   639  0615                     	;# 
   640  0616                     	;# 
   641  0616                     	;# 
   642  0691                     	;# 
   643  0692                     	;# 
   644  0693                     	;# 
   645  0694                     	;# 
   646  0695                     	;# 
   647  0E8E                     	;# 
   648  0E8F                     	;# 
   649  0E90                     	;# 
   650  0E91                     	;# 
   651  0E92                     	;# 
   652  0E93                     	;# 
   653  0E94                     	;# 
   654  0E94                     	;# 
   655  0E95                     	;# 
   656  0E96                     	;# 
   657  0E97                     	;# 
   658  0E98                     	;# 
   659  0E99                     	;# 
   660  0E9A                     	;# 
   661  0E9B                     	;# 
   662  0E9C                     	;# 
   663  0E9D                     	;# 
   664  0E9E                     	;# 
   665  0E9F                     	;# 
   666  0FE4                     	;# 
   667  0FE5                     	;# 
   668  0FE6                     	;# 
   669  0FE7                     	;# 
   670  0FE8                     	;# 
   671  0FE9                     	;# 
   672  0FEA                     	;# 
   673  0FEB                     	;# 
   674  0FED                     	;# 
   675  0FEE                     	;# 
   676  0FEF                     	;# 
   677  0000                     	;# 
   678  0001                     	;# 
   679  0002                     	;# 
   680  0003                     	;# 
   681  0004                     	;# 
   682  0005                     	;# 
   683  0006                     	;# 
   684  0007                     	;# 
   685  0008                     	;# 
   686  0009                     	;# 
   687  000A                     	;# 
   688  000B                     	;# 
   689  000C                     	;# 
   690  000E                     	;# 
   691  0011                     	;# 
   692  0012                     	;# 
   693  0015                     	;# 
   694  0016                     	;# 
   695  0016                     	;# 
   696  0017                     	;# 
   697  0018                     	;# 
   698  0019                     	;# 
   699  001A                     	;# 
   700  001B                     	;# 
   701  001C                     	;# 
   702  008C                     	;# 
   703  008E                     	;# 
   704  0091                     	;# 
   705  0092                     	;# 
   706  0095                     	;# 
   707  0096                     	;# 
   708  0097                     	;# 
   709  0098                     	;# 
   710  0099                     	;# 
   711  009A                     	;# 
   712  009B                     	;# 
   713  009B                     	;# 
   714  009C                     	;# 
   715  009D                     	;# 
   716  009E                     	;# 
   717  009F                     	;# 
   718  010C                     	;# 
   719  010E                     	;# 
   720  0111                     	;# 
   721  0112                     	;# 
   722  0113                     	;# 
   723  0114                     	;# 
   724  0115                     	;# 
   725  0116                     	;# 
   726  0117                     	;# 
   727  0118                     	;# 
   728  0119                     	;# 
   729  011D                     	;# 
   730  018C                     	;# 
   731  018E                     	;# 
   732  0191                     	;# 
   733  0191                     	;# 
   734  0192                     	;# 
   735  0193                     	;# 
   736  0193                     	;# 
   737  0194                     	;# 
   738  0195                     	;# 
   739  0196                     	;# 
   740  0197                     	;# 
   741  0199                     	;# 
   742  019A                     	;# 
   743  019B                     	;# 
   744  019B                     	;# 
   745  019C                     	;# 
   746  019D                     	;# 
   747  019E                     	;# 
   748  019F                     	;# 
   749  020C                     	;# 
   750  0211                     	;# 
   751  0211                     	;# 
   752  0212                     	;# 
   753  0212                     	;# 
   754  0213                     	;# 
   755  0213                     	;# 
   756  0214                     	;# 
   757  0214                     	;# 
   758  0215                     	;# 
   759  0215                     	;# 
   760  0215                     	;# 
   761  0216                     	;# 
   762  0216                     	;# 
   763  0217                     	;# 
   764  0217                     	;# 
   765  0391                     	;# 
   766  0392                     	;# 
   767  0393                     	;# 
   768  039A                     	;# 
   769  039B                     	;# 
   770  0611                     	;# 
   771  0612                     	;# 
   772  0613                     	;# 
   773  0613                     	;# 
   774  0614                     	;# 
   775  0615                     	;# 
   776  0616                     	;# 
   777  0616                     	;# 
   778  0691                     	;# 
   779  0692                     	;# 
   780  0693                     	;# 
   781  0694                     	;# 
   782  0695                     	;# 
   783  0E8E                     	;# 
   784  0E8F                     	;# 
   785  0E90                     	;# 
   786  0E91                     	;# 
   787  0E92                     	;# 
   788  0E93                     	;# 
   789  0E94                     	;# 
   790  0E94                     	;# 
   791  0E95                     	;# 
   792  0E96                     	;# 
   793  0E97                     	;# 
   794  0E98                     	;# 
   795  0E99                     	;# 
   796  0E9A                     	;# 
   797  0E9B                     	;# 
   798  0E9C                     	;# 
   799  0E9D                     	;# 
   800  0E9E                     	;# 
   801  0E9F                     	;# 
   802  0FE4                     	;# 
   803  0FE5                     	;# 
   804  0FE6                     	;# 
   805  0FE7                     	;# 
   806  0FE8                     	;# 
   807  0FE9                     	;# 
   808  0FEA                     	;# 
   809  0FEB                     	;# 
   810  0FED                     	;# 
   811  0FEE                     	;# 
   812  0FEF                     	;# 
   813  0000                     	;# 
   814  0001                     	;# 
   815  0002                     	;# 
   816  0003                     	;# 
   817  0004                     	;# 
   818  0005                     	;# 
   819  0006                     	;# 
   820  0007                     	;# 
   821  0008                     	;# 
   822  0009                     	;# 
   823  000A                     	;# 
   824  000B                     	;# 
   825  000C                     	;# 
   826  000E                     	;# 
   827  0011                     	;# 
   828  0012                     	;# 
   829  0015                     	;# 
   830  0016                     	;# 
   831  0016                     	;# 
   832  0017                     	;# 
   833  0018                     	;# 
   834  0019                     	;# 
   835  001A                     	;# 
   836  001B                     	;# 
   837  001C                     	;# 
   838  008C                     	;# 
   839  008E                     	;# 
   840  0091                     	;# 
   841  0092                     	;# 
   842  0095                     	;# 
   843  0096                     	;# 
   844  0097                     	;# 
   845  0098                     	;# 
   846  0099                     	;# 
   847  009A                     	;# 
   848  009B                     	;# 
   849  009B                     	;# 
   850  009C                     	;# 
   851  009D                     	;# 
   852  009E                     	;# 
   853  009F                     	;# 
   854  010C                     	;# 
   855  010E                     	;# 
   856  0111                     	;# 
   857  0112                     	;# 
   858  0113                     	;# 
   859  0114                     	;# 
   860  0115                     	;# 
   861  0116                     	;# 
   862  0117                     	;# 
   863  0118                     	;# 
   864  0119                     	;# 
   865  011D                     	;# 
   866  018C                     	;# 
   867  018E                     	;# 
   868  0191                     	;# 
   869  0191                     	;# 
   870  0192                     	;# 
   871  0193                     	;# 
   872  0193                     	;# 
   873  0194                     	;# 
   874  0195                     	;# 
   875  0196                     	;# 
   876  0197                     	;# 
   877  0199                     	;# 
   878  019A                     	;# 
   879  019B                     	;# 
   880  019B                     	;# 
   881  019C                     	;# 
   882  019D                     	;# 
   883  019E                     	;# 
   884  019F                     	;# 
   885  020C                     	;# 
   886  0211                     	;# 
   887  0211                     	;# 
   888  0212                     	;# 
   889  0212                     	;# 
   890  0213                     	;# 
   891  0213                     	;# 
   892  0214                     	;# 
   893  0214                     	;# 
   894  0215                     	;# 
   895  0215                     	;# 
   896  0215                     	;# 
   897  0216                     	;# 
   898  0216                     	;# 
   899  0217                     	;# 
   900  0217                     	;# 
   901  0391                     	;# 
   902  0392                     	;# 
   903  0393                     	;# 
   904  039A                     	;# 
   905  039B                     	;# 
   906  0611                     	;# 
   907  0612                     	;# 
   908  0613                     	;# 
   909  0613                     	;# 
   910  0614                     	;# 
   911  0615                     	;# 
   912  0616                     	;# 
   913  0616                     	;# 
   914  0691                     	;# 
   915  0692                     	;# 
   916  0693                     	;# 
   917  0694                     	;# 
   918  0695                     	;# 
   919  0E8E                     	;# 
   920  0E8F                     	;# 
   921  0E90                     	;# 
   922  0E91                     	;# 
   923  0E92                     	;# 
   924  0E93                     	;# 
   925  0E94                     	;# 
   926  0E94                     	;# 
   927  0E95                     	;# 
   928  0E96                     	;# 
   929  0E97                     	;# 
   930  0E98                     	;# 
   931  0E99                     	;# 
   932  0E9A                     	;# 
   933  0E9B                     	;# 
   934  0E9C                     	;# 
   935  0E9D                     	;# 
   936  0E9E                     	;# 
   937  0E9F                     	;# 
   938  0FE4                     	;# 
   939  0FE5                     	;# 
   940  0FE6                     	;# 
   941  0FE7                     	;# 
   942  0FE8                     	;# 
   943  0FE9                     	;# 
   944  0FEA                     	;# 
   945  0FEB                     	;# 
   946  0FED                     	;# 
   947  0FEE                     	;# 
   948  0FEF                     	;# 
   949  0000                     	;# 
   950  0001                     	;# 
   951  0002                     	;# 
   952  0003                     	;# 
   953  0004                     	;# 
   954  0005                     	;# 
   955  0006                     	;# 
   956  0007                     	;# 
   957  0008                     	;# 
   958  0009                     	;# 
   959  000A                     	;# 
   960  000B                     	;# 
   961  000C                     	;# 
   962  000E                     	;# 
   963  0011                     	;# 
   964  0012                     	;# 
   965  0015                     	;# 
   966  0016                     	;# 
   967  0016                     	;# 
   968  0017                     	;# 
   969  0018                     	;# 
   970  0019                     	;# 
   971  001A                     	;# 
   972  001B                     	;# 
   973  001C                     	;# 
   974  008C                     	;# 
   975  008E                     	;# 
   976  0091                     	;# 
   977  0092                     	;# 
   978  0095                     	;# 
   979  0096                     	;# 
   980  0097                     	;# 
   981  0098                     	;# 
   982  0099                     	;# 
   983  009A                     	;# 
   984  009B                     	;# 
   985  009B                     	;# 
   986  009C                     	;# 
   987  009D                     	;# 
   988  009E                     	;# 
   989  009F                     	;# 
   990  010C                     	;# 
   991  010E                     	;# 
   992  0111                     	;# 
   993  0112                     	;# 
   994  0113                     	;# 
   995  0114                     	;# 
   996  0115                     	;# 
   997  0116                     	;# 
   998  0117                     	;# 
   999  0118                     	;# 
  1000  0119                     	;# 
  1001  011D                     	;# 
  1002  018C                     	;# 
  1003  018E                     	;# 
  1004  0191                     	;# 
  1005  0191                     	;# 
  1006  0192                     	;# 
  1007  0193                     	;# 
  1008  0193                     	;# 
  1009  0194                     	;# 
  1010  0195                     	;# 
  1011  0196                     	;# 
  1012  0197                     	;# 
  1013  0199                     	;# 
  1014  019A                     	;# 
  1015  019B                     	;# 
  1016  019B                     	;# 
  1017  019C                     	;# 
  1018  019D                     	;# 
  1019  019E                     	;# 
  1020  019F                     	;# 
  1021  020C                     	;# 
  1022  0211                     	;# 
  1023  0211                     	;# 
  1024  0212                     	;# 
  1025  0212                     	;# 
  1026  0213                     	;# 
  1027  0213                     	;# 
  1028  0214                     	;# 
  1029  0214                     	;# 
  1030  0215                     	;# 
  1031  0215                     	;# 
  1032  0215                     	;# 
  1033  0216                     	;# 
  1034  0216                     	;# 
  1035  0217                     	;# 
  1036  0217                     	;# 
  1037  0391                     	;# 
  1038  0392                     	;# 
  1039  0393                     	;# 
  1040  039A                     	;# 
  1041  039B                     	;# 
  1042  0611                     	;# 
  1043  0612                     	;# 
  1044  0613                     	;# 
  1045  0613                     	;# 
  1046  0614                     	;# 
  1047  0615                     	;# 
  1048  0616                     	;# 
  1049  0616                     	;# 
  1050  0691                     	;# 
  1051  0692                     	;# 
  1052  0693                     	;# 
  1053  0694                     	;# 
  1054  0695                     	;# 
  1055  0E8E                     	;# 
  1056  0E8F                     	;# 
  1057  0E90                     	;# 
  1058  0E91                     	;# 
  1059  0E92                     	;# 
  1060  0E93                     	;# 
  1061  0E94                     	;# 
  1062  0E94                     	;# 
  1063  0E95                     	;# 
  1064  0E96                     	;# 
  1065  0E97                     	;# 
  1066  0E98                     	;# 
  1067  0E99                     	;# 
  1068  0E9A                     	;# 
  1069  0E9B                     	;# 
  1070  0E9C                     	;# 
  1071  0E9D                     	;# 
  1072  0E9E                     	;# 
  1073  0E9F                     	;# 
  1074  0FE4                     	;# 
  1075  0FE5                     	;# 
  1076  0FE6                     	;# 
  1077  0FE7                     	;# 
  1078  0FE8                     	;# 
  1079  0FE9                     	;# 
  1080  0FEA                     	;# 
  1081  0FEB                     	;# 
  1082  0FED                     	;# 
  1083  0FEE                     	;# 
  1084  0FEF                     	;# 
  1085  0000                     	;# 
  1086  0001                     	;# 
  1087  0002                     	;# 
  1088  0003                     	;# 
  1089  0004                     	;# 
  1090  0005                     	;# 
  1091  0006                     	;# 
  1092  0007                     	;# 
  1093  0008                     	;# 
  1094  0009                     	;# 
  1095  000A                     	;# 
  1096  000B                     	;# 
  1097  000C                     	;# 
  1098  000E                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008E                     	;# 
  1112  0091                     	;# 
  1113  0092                     	;# 
  1114  0095                     	;# 
  1115  0096                     	;# 
  1116  0097                     	;# 
  1117  0098                     	;# 
  1118  0099                     	;# 
  1119  009A                     	;# 
  1120  009B                     	;# 
  1121  009B                     	;# 
  1122  009C                     	;# 
  1123  009D                     	;# 
  1124  009E                     	;# 
  1125  009F                     	;# 
  1126  010C                     	;# 
  1127  010E                     	;# 
  1128  0111                     	;# 
  1129  0112                     	;# 
  1130  0113                     	;# 
  1131  0114                     	;# 
  1132  0115                     	;# 
  1133  0116                     	;# 
  1134  0117                     	;# 
  1135  0118                     	;# 
  1136  0119                     	;# 
  1137  011D                     	;# 
  1138  018C                     	;# 
  1139  018E                     	;# 
  1140  0191                     	;# 
  1141  0191                     	;# 
  1142  0192                     	;# 
  1143  0193                     	;# 
  1144  0193                     	;# 
  1145  0194                     	;# 
  1146  0195                     	;# 
  1147  0196                     	;# 
  1148  0197                     	;# 
  1149  0199                     	;# 
  1150  019A                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019C                     	;# 
  1154  019D                     	;# 
  1155  019E                     	;# 
  1156  019F                     	;# 
  1157  020C                     	;# 
  1158  0211                     	;# 
  1159  0211                     	;# 
  1160  0212                     	;# 
  1161  0212                     	;# 
  1162  0213                     	;# 
  1163  0213                     	;# 
  1164  0214                     	;# 
  1165  0214                     	;# 
  1166  0215                     	;# 
  1167  0215                     	;# 
  1168  0215                     	;# 
  1169  0216                     	;# 
  1170  0216                     	;# 
  1171  0217                     	;# 
  1172  0217                     	;# 
  1173  0391                     	;# 
  1174  0392                     	;# 
  1175  0393                     	;# 
  1176  039A                     	;# 
  1177  039B                     	;# 
  1178  0611                     	;# 
  1179  0612                     	;# 
  1180  0613                     	;# 
  1181  0613                     	;# 
  1182  0614                     	;# 
  1183  0615                     	;# 
  1184  0616                     	;# 
  1185  0616                     	;# 
  1186  0691                     	;# 
  1187  0692                     	;# 
  1188  0693                     	;# 
  1189  0694                     	;# 
  1190  0695                     	;# 
  1191  0E8E                     	;# 
  1192  0E8F                     	;# 
  1193  0E90                     	;# 
  1194  0E91                     	;# 
  1195  0E92                     	;# 
  1196  0E93                     	;# 
  1197  0E94                     	;# 
  1198  0E94                     	;# 
  1199  0E95                     	;# 
  1200  0E96                     	;# 
  1201  0E97                     	;# 
  1202  0E98                     	;# 
  1203  0E99                     	;# 
  1204  0E9A                     	;# 
  1205  0E9B                     	;# 
  1206  0E9C                     	;# 
  1207  0E9D                     	;# 
  1208  0E9E                     	;# 
  1209  0E9F                     	;# 
  1210  0FE4                     	;# 
  1211  0FE5                     	;# 
  1212  0FE6                     	;# 
  1213  0FE7                     	;# 
  1214  0FE8                     	;# 
  1215  0FE9                     	;# 
  1216  0FEA                     	;# 
  1217  0FEB                     	;# 
  1218  0FED                     	;# 
  1219  0FEE                     	;# 
  1220  0FEF                     	;# 
  1221                           
  1222                           	psect	stringtext1
  1223  188F                     __pstringtext1:	
  1224  188F                     _USB_SD_Ptr:	
  1225  188F  3495               	retlw	low (_sd000| (0+32768))
  1226  1890  3498               	retlw	high (_sd000| (0+32768))
  1227  1891  346B               	retlw	low (_sd001| (0+32768))
  1228  1892  3498               	retlw	high (_sd001| (0+32768))
  1229  1893  3443               	retlw	low (_sd002| (0+32768))
  1230  1894  3498               	retlw	high (_sd002| (0+32768))
  1231  1895                     __end_of_USB_SD_Ptr:	
  1232                           
  1233                           	psect	stringtext2
  1234  1899                     __pstringtext2:	
  1235  1899                     _USB_CD_Ptr:	
  1236  1899  3400               	retlw	low (_configDescriptor1| (0+32768))
  1237  189A  3498               	retlw	high (_configDescriptor1| (0+32768))
  1238  189B                     __end_of_USB_CD_Ptr:	
  1239                           
  1240                           	psect	stringtext3
  1241  1800                     __pstringtext3:	
  1242  1800                     _configDescriptor1:	
  1243  1800  3409               	retlw	9
  1244  1801  3402               	retlw	2
  1245  1802  3443               	retlw	67
  1246  1803  3400               	retlw	0
  1247  1804  3402               	retlw	2
  1248  1805  3401               	retlw	1
  1249  1806  3400               	retlw	0
  1250  1807  34C0               	retlw	192
  1251  1808  3432               	retlw	50
  1252  1809  3409               	retlw	9
  1253  180A  3404               	retlw	4
  1254  180B  3400               	retlw	0
  1255  180C  3400               	retlw	0
  1256  180D  3401               	retlw	1
  1257  180E  3402               	retlw	2
  1258  180F  3402               	retlw	2
  1259  1810  3401               	retlw	1
  1260  1811  3400               	retlw	0
  1261  1812  3405               	retlw	5
  1262  1813  3424               	retlw	36
  1263  1814  3400               	retlw	0
  1264  1815  3410               	retlw	16
  1265  1816  3401               	retlw	1
  1266  1817  3404               	retlw	4
  1267  1818  3424               	retlw	36
  1268  1819  3402               	retlw	2
  1269  181A  3402               	retlw	2
  1270  181B  3405               	retlw	5
  1271  181C  3424               	retlw	36
  1272  181D  3406               	retlw	6
  1273  181E  3400               	retlw	0
  1274  181F  3401               	retlw	1
  1275  1820  3405               	retlw	5
  1276  1821  3424               	retlw	36
  1277  1822  3401               	retlw	1
  1278  1823  3400               	retlw	0
  1279  1824  3401               	retlw	1
  1280  1825  3407               	retlw	7
  1281  1826  3405               	retlw	5
  1282  1827  3481               	retlw	129
  1283  1828  3403               	retlw	3
  1284  1829  3408               	retlw	8
  1285  182A  3400               	retlw	0
  1286  182B  3402               	retlw	2
  1287  182C  3409               	retlw	9
  1288  182D  3404               	retlw	4
  1289  182E  3401               	retlw	1
  1290  182F  3400               	retlw	0
  1291  1830  3402               	retlw	2
  1292  1831  340A               	retlw	10
  1293  1832  3400               	retlw	0
  1294  1833  3400               	retlw	0
  1295  1834  3400               	retlw	0
  1296  1835  3407               	retlw	7
  1297  1836  3405               	retlw	5
  1298  1837  3402               	retlw	2
  1299  1838  3402               	retlw	2
  1300  1839  3440               	retlw	64
  1301  183A  3400               	retlw	0
  1302  183B  3400               	retlw	0
  1303  183C  3407               	retlw	7
  1304  183D  3405               	retlw	5
  1305  183E  3482               	retlw	130
  1306  183F  3402               	retlw	2
  1307  1840  3440               	retlw	64
  1308  1841  3400               	retlw	0
  1309  1842  3400               	retlw	0
  1310  1843                     __end_of_configDescriptor1:	
  1311                           
  1312                           	psect	stringtext4
  1313  1843                     __pstringtext4:	
  1314  1843                     _sd002:	
  1315  1843  3428               	retlw	40
  1316  1844  3403               	retlw	3
  1317  1845  3454               	retlw	84
  1318  1846  3400               	retlw	0
  1319  1847  3469               	retlw	105
  1320  1848  3400               	retlw	0
  1321  1849  346E               	retlw	110
  1322  184A  3400               	retlw	0
  1323  184B  3479               	retlw	121
  1324  184C  3400               	retlw	0
  1325  184D  3446               	retlw	70
  1326  184E  3400               	retlw	0
  1327  184F  3450               	retlw	80
  1328  1850  3400               	retlw	0
  1329  1851  3447               	retlw	71
  1330  1852  3400               	retlw	0
  1331  1853  3441               	retlw	65
  1332  1854  3400               	retlw	0
  1333  1855  3420               	retlw	32
  1334  1856  3400               	retlw	0
  1335  1857  3450               	retlw	80
  1336  1858  3400               	retlw	0
  1337  1859  3472               	retlw	114
  1338  185A  3400               	retlw	0
  1339  185B  346F               	retlw	111
  1340  185C  3400               	retlw	0
  1341  185D  3467               	retlw	103
  1342  185E  3400               	retlw	0
  1343  185F  3472               	retlw	114
  1344  1860  3400               	retlw	0
  1345  1861  3461               	retlw	97
  1346  1862  3400               	retlw	0
  1347  1863  346D               	retlw	109
  1348  1864  3400               	retlw	0
  1349  1865  346D               	retlw	109
  1350  1866  3400               	retlw	0
  1351  1867  3465               	retlw	101
  1352  1868  3400               	retlw	0
  1353  1869  3472               	retlw	114
  1354  186A  3400               	retlw	0
  1355  186B                     __end_of_sd002:	
  1356                           
  1357                           	psect	stringtext5
  1358  186B                     __pstringtext5:	
  1359  186B                     _sd001:	
  1360  186B  3412               	retlw	18
  1361  186C  3403               	retlw	3
  1362  186D  3454               	retlw	84
  1363  186E  3400               	retlw	0
  1364  186F  3469               	retlw	105
  1365  1870  3400               	retlw	0
  1366  1871  346E               	retlw	110
  1367  1872  3400               	retlw	0
  1368  1873  3479               	retlw	121
  1369  1874  3400               	retlw	0
  1370  1875  3446               	retlw	70
  1371  1876  3400               	retlw	0
  1372  1877  3450               	retlw	80
  1373  1878  3400               	retlw	0
  1374  1879  3447               	retlw	71
  1375  187A  3400               	retlw	0
  1376  187B  3441               	retlw	65
  1377  187C  3400               	retlw	0
  1378  187D                     __end_of_sd001:	
  1379                           
  1380                           	psect	stringtext6
  1381  187D                     __pstringtext6:	
  1382  187D                     _device_dsc:	
  1383  187D  3412               	retlw	18
  1384  187E  3401               	retlw	1
  1385  187F  3400               	retlw	0
  1386  1880  3402               	retlw	2
  1387  1881  3402               	retlw	2
  1388  1882  3400               	retlw	0
  1389  1883  3400               	retlw	0
  1390  1884  3410               	retlw	16
  1391  1885  3409               	retlw	9
  1392  1886  3412               	retlw	18
  1393  1887  3401               	retlw	1
  1394  1888  3421               	retlw	33
  1395  1889  3400               	retlw	0
  1396  188A  3401               	retlw	1
  1397  188B  3401               	retlw	1
  1398  188C  3402               	retlw	2
  1399  188D  3400               	retlw	0
  1400  188E  3401               	retlw	1
  1401  188F                     __end_of_device_dsc:	
  1402                           
  1403                           	psect	stringtext7
  1404  1895                     __pstringtext7:	
  1405  1895                     _sd000:	
  1406  1895  3404               	retlw	4
  1407  1896  3403               	retlw	3
  1408  1897  3409               	retlw	9
  1409  1898  3404               	retlw	4
  1410  1899                     __end_of_sd000:	
  1411  000E                     _PORTC	set	14
  1412  0012                     _PIR2bits	set	18
  1413  000B                     _INTCONbits	set	11
  1414  0097                     _WDTCON	set	151
  1415  0098                     _OSCTUNE	set	152
  1416  0099                     _OSCCON	set	153
  1417  0095                     _OPTION_REGbits	set	149
  1418  008E                     _TRISC	set	142
  1419  008C                     _TRISA	set	140
  1420  0092                     _PIE2bits	set	146
  1421  04D6                     _PLLRDY	set	1238
  1422  011D                     _APFCON	set	285
  1423  010E                     _LATC	set	270
  1424  010C                     _LATA	set	268
  1425  018C                     _ANSELA	set	396
  1426  018E                     _ANSELC	set	398
  1427  020C                     _WPUA	set	524
  1428  039B                     _ACTCON	set	923
  1429  0E98                     _UEP0bits	set	3736
  1430  0E8E                     _UCON	set	3726
  1431  0E8F                     _USTAT	set	3727
  1432  0E92                     _UIEbits	set	3730
  1433  0E90                     _UIRbits	set	3728
  1434  0E96                     _UADDR	set	3734
  1435  0E92                     _UIE	set	3730
  1436  0E97                     _UEIE	set	3735
  1437  0E91                     _UCFG	set	3729
  1438  0E90                     _UIR	set	3728
  1439  0E93                     _UEIR	set	3731
  1440  0E8E                     _UCONbits	set	3726
  1441  0E99                     _UEP1	set	3737
  1442  0E98                     _UEP0	set	3736
  1443                           
  1444                           ; #config settings
  1445  0000                     
  1446                           	psect	cinit
  1447  001A                     start_initialization:	
  1448  001A                     __initialization:	
  1449                           
  1450                           ; Clear objects allocated to BANK1
  1451  001A  30C6               	movlw	low __pbssBANK1
  1452  001B  0084               	movwf	4
  1453  001C  3000               	movlw	high __pbssBANK1
  1454  001D  0085               	movwf	5
  1455  001E  301C               	movlw	28
  1456  001F  3190  203B  3180   	fcall	clear_ram0
  1457                           
  1458                           ; Clear objects allocated to BANK2
  1459  0022  3020               	movlw	low __pbssBANK2
  1460  0023  0084               	movwf	4
  1461  0024  3001               	movlw	high __pbssBANK2
  1462  0025  0085               	movwf	5
  1463  0026  3047               	movlw	71
  1464  0027  3190  203B  3180   	fcall	clear_ram0
  1465                           
  1466                           ; Clear objects allocated to BANK3
  1467  002A  30A0               	movlw	low __pbssBANK3
  1468  002B  0084               	movwf	4
  1469  002C  3001               	movlw	high __pbssBANK3
  1470  002D  0085               	movwf	5
  1471  002E  3040               	movlw	64
  1472  002F  3190  203B  3180   	fcall	clear_ram0
  1473                           
  1474                           ; Clear objects allocated to BANK4
  1475  0032  3020               	movlw	low __pbssBANK4
  1476  0033  0084               	movwf	4
  1477  0034  3002               	movlw	high __pbssBANK4
  1478  0035  0085               	movwf	5
  1479  0036  3040               	movlw	64
  1480  0037  3190  203B  3180   	fcall	clear_ram0
  1481                           
  1482                           ; Clear objects allocated to BANK5
  1483  003A  30A0               	movlw	low __pbssBANK5
  1484  003B  0084               	movwf	4
  1485  003C  3002               	movlw	high __pbssBANK5
  1486  003D  0085               	movwf	5
  1487  003E  3040               	movlw	64
  1488  003F  3190  203B  3180   	fcall	clear_ram0
  1489                           
  1490                           ; Clear objects allocated to BANK6
  1491  0042  3020               	movlw	low __pbssBANK6
  1492  0043  0084               	movwf	4
  1493  0044  3003               	movlw	high __pbssBANK6
  1494  0045  0085               	movwf	5
  1495  0046  3040               	movlw	64
  1496  0047  3190  203B         	fcall	clear_ram0
  1497  0049                     end_of_initialization:	
  1498                           ;End of C runtime variable initialization code
  1499                           
  1500  0049                     __end_of__initialization:	
  1501  0049  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1502  004A  0020               	movlb	0
  1503  004B  3190  2868         	ljmp	_main	;jump to C main() function
  1504                           
  1505                           	psect	bssBANK1
  1506  00C6                     __pbssBANK1:	
  1507  00C6                     _outPipes:	
  1508  00C6                     	ds	7
  1509  00CD                     _pBDTEntryIn:	
  1510  00CD                     	ds	6
  1511  00D3                     _inPipes:	
  1512  00D3                     	ds	5
  1513  00D8                     _pBDTEntryEP0OutNext:	
  1514  00D8                     	ds	2
  1515  00DA                     _USBDeferStatusStagePacket:	
  1516  00DA                     	ds	1
  1517  00DB                     _endpoint_number:	
  1518  00DB                     	ds	1
  1519  00DC                     _controlTransferState:	
  1520  00DC                     	ds	1
  1521  00DD                     _shortPacketStatus:	
  1522  00DD                     	ds	1
  1523  00DE                     _pBDTEntryEP0OutCurrent:	
  1524  00DE                     	ds	1
  1525  00DF                     _USBDeviceState:	
  1526  00DF                     	ds	1
  1527  00E0                     _USTATcopy:	
  1528  00E0                     	ds	1
  1529  00E1                     _USBActiveConfiguration:	
  1530  00E1                     	ds	1
  1531                           
  1532                           	psect	bssBANK2
  1533  0120                     __pbssBANK2:	
  1534  0120                     _cdc_notice:	
  1535  0120                     	ds	10
  1536  012A                     _pBDTEntryOut:	
  1537  012A                     	ds	6
  1538  0130                     _USB1msTickCount:	
  1539  0130                     	ds	4
  1540  0134                     _BaudRateGen:	
  1541  0134                     	ds	4
  1542  0138                     _ep_data_out:	
  1543  0138                     	ds	3
  1544  013B                     _ep_data_in:	
  1545  013B                     	ds	3
  1546  013E                     _CDCDataInHandle:	
  1547  013E                     	ds	2
  1548  0140                     _CDCDataOutHandle:	
  1549  0140                     	ds	2
  1550  0142                     _pCDCDst:	
  1551  0142                     	ds	2
  1552  0144                     _pCDCSrc:	
  1553  0144                     	ds	2
  1554  0146                     _USBTicksSinceSuspendEnd:	
  1555  0146                     	ds	1
  1556  0147                     _USBDeferOUTDataStagePackets:	
  1557  0147                     	ds	1
  1558  0148                     _USBDeferINDataStagePackets:	
  1559  0148                     	ds	1
  1560  0149                     _USBStatusStageEnabledFlag2:	
  1561  0149                     	ds	1
  1562  014A                     _USBStatusStageEnabledFlag1:	
  1563  014A                     	ds	1
  1564  014B                     _USBStatusStageTimeoutCounter:	
  1565  014B                     	ds	1
  1566  014C                     _BothEP0OutUOWNsSet:	
  1567  014C                     	ds	1
  1568  014D                     _USBBusIsSuspended:	
  1569  014D                     	ds	1
  1570  014E                     _RemoteWakeup:	
  1571  014E                     	ds	1
  1572  014F                     _pDst:	
  1573  014F                     	ds	1
  1574  0150                     process_gpio_cmd@gpio_dir:	
  1575  0150                     	ds	1
  1576  0151                     _control_signal_bitmap:	
  1577  0151                     	ds	1
  1578  0152                     _cdc_mem_type:	
  1579  0152                     	ds	1
  1580  0153                     _cdc_tx_len:	
  1581  0153                     	ds	1
  1582  0154                     _cdc_trf_state:	
  1583  0154                     	ds	1
  1584  0155                     _cdc_rx_len:	
  1585  0155                     	ds	1
  1586  0156                     _dummy_encapsulated_cmd_response:	
  1587  0156                     	ds	8
  1588  015E                     _line_coding:	
  1589  015E                     	ds	7
  1590  0165                     _USBAlternateInterface:	
  1591  0165                     	ds	2
  1592                           
  1593                           	psect	bssBANK3
  1594  01A0                     __pbssBANK3:	
  1595  01A0                     _cdc_data_rx:	
  1596  01A0                     	ds	64
  1597                           
  1598                           	psect	bssBANK4
  1599  0220                     __pbssBANK4:	
  1600  0220                     _cdc_data_tx:	
  1601  0220                     	ds	64
  1602                           
  1603                           	psect	bssBANK5
  1604  02A0                     __pbssBANK5:	
  1605  02A0                     gpio_task@usb_rx_buf:	
  1606  02A0                     	ds	64
  1607                           
  1608                           	psect	bssBANK6
  1609  0320                     __pbssBANK6:	
  1610  0320                     gpio_task@usb_tx_buf:	
  1611  0320                     	ds	64
  1612                           
  1613                           	psect	clrtext
  1614  103B                     clear_ram0:	
  1615                           ;	Called with FSR0 containing the base address, and
  1616                           ;	WREG with the size to clear
  1617                           
  1618  103B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1619  103C                     clrloop0:	
  1620  103C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1621  103D  3101               	addfsr 0,1
  1622  103E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1623  103F  283C               	goto	clrloop0	;have we reached the end yet?
  1624  1040  3400               	retlw	0	;all done for this memory range, return
  1625                           
  1626                           	psect	cstackBANK3
  1627  01E0                     __pcstackBANK3:	
  1628  01E0                     ??_USBDeviceTasks:	
  1629                           
  1630                           ; 1 bytes @ 0x0
  1631  01E0                     	ds	2
  1632                           
  1633                           	psect	cstackBANK2
  1634  0167                     __pcstackBANK2:	
  1635  0167                     USBStdSetCfgHandler@p:	
  1636  0167                     USBStdFeatureReqHandler@pUEP:	
  1637                           ; 2 bytes @ 0x0
  1638                           
  1639                           
  1640                           ; 2 bytes @ 0x0
  1641  0167                     	ds	2
  1642  0169                     USBStdSetCfgHandler@i_2173:	
  1643  0169                     USBStdFeatureReqHandler@current_ep_data:	
  1644                           ; 1 bytes @ 0x2
  1645                           
  1646                           
  1647                           ; 1 bytes @ 0x2
  1648  0169                     	ds	1
  1649  016A                     USBStdSetCfgHandler@i:	
  1650  016A                     USBStdFeatureReqHandler@p:	
  1651                           ; 1 bytes @ 0x3
  1652                           
  1653                           
  1654                           ; 2 bytes @ 0x3
  1655  016A                     	ds	2
  1656  016C                     ??_USBCtrlEPService:	
  1657                           
  1658                           ; 1 bytes @ 0x5
  1659  016C                     	ds	3
  1660  016F                     USBDeviceTasks@i:	
  1661                           
  1662                           ; 1 bytes @ 0x8
  1663  016F                     	ds	1
  1664                           
  1665                           	psect	cstackBANK1
  1666  00A0                     __pcstackBANK1:	
  1667  00A0                     i1USBStdSetCfgHandler@p:	
  1668  00A0                     i1USBStdFeatureReqHandler@pUEP:	
  1669                           ; 2 bytes @ 0x0
  1670                           
  1671                           
  1672                           ; 2 bytes @ 0x0
  1673  00A0                     	ds	2
  1674  00A2                     i1USBStdSetCfgHandler@i_2173:	
  1675  00A2                     i1USBStdFeatureReqHandler@current_ep_data:	
  1676                           ; 1 bytes @ 0x2
  1677                           
  1678                           
  1679                           ; 1 bytes @ 0x2
  1680  00A2                     	ds	1
  1681  00A3                     i1USBStdSetCfgHandler@i:	
  1682  00A3                     i1USBStdFeatureReqHandler@p:	
  1683                           ; 1 bytes @ 0x3
  1684                           
  1685                           
  1686                           ; 2 bytes @ 0x3
  1687  00A3                     	ds	2
  1688  00A5                     ??i1_USBCheckStdRequest:	
  1689                           
  1690                           ; 1 bytes @ 0x5
  1691  00A5                     	ds	1
  1692  00A6                     ??i1_USBCtrlTrfSetupHandler:	
  1693                           
  1694                           ; 1 bytes @ 0x6
  1695  00A6                     	ds	1
  1696  00A7                     ??i1_USBCtrlEPService:	
  1697                           
  1698                           ; 1 bytes @ 0x7
  1699  00A7                     	ds	3
  1700  00AA                     ??i1_USBDeviceTasks:	
  1701                           
  1702                           ; 1 bytes @ 0xA
  1703  00AA                     	ds	2
  1704  00AC                     i1USBDeviceTasks@i:	
  1705                           
  1706                           ; 1 bytes @ 0xC
  1707  00AC                     	ds	1
  1708  00AD                     ??_INTERRUPT_InterruptManager:	
  1709                           
  1710                           ; 1 bytes @ 0xD
  1711  00AD                     	ds	1
  1712  00AE                     ??_OSCILLATOR_Initialize:	
  1713  00AE                     ??_WDT_Initialize:	
  1714                           ; 1 bytes @ 0xE
  1715                           
  1716  00AE                     ??_USBDeviceInit:	
  1717                           ; 1 bytes @ 0xE
  1718                           
  1719  00AE                     ??_USBDeviceAttach:	
  1720                           ; 1 bytes @ 0xE
  1721                           
  1722  00AE                     ??_USBIncrement1msInternalTimers:	
  1723                           ; 1 bytes @ 0xE
  1724                           
  1725  00AE                     ??_USBCtrlEPAllowStatusStage:	
  1726                           ; 1 bytes @ 0xE
  1727                           
  1728  00AE                     ??_USBStallHandler:	
  1729                           ; 1 bytes @ 0xE
  1730                           
  1731  00AE                     ?_USBConfigureEndpoint:	
  1732                           ; 1 bytes @ 0xE
  1733                           
  1734  00AE                     ??_USBCtrlTrfTxService:	
  1735                           ; 1 bytes @ 0xE
  1736                           
  1737  00AE                     ??_USBCheckCDCRequest:	
  1738                           ; 1 bytes @ 0xE
  1739                           
  1740  00AE                     ?_putUSBUSART:	
  1741                           ; 1 bytes @ 0xE
  1742                           
  1743  00AE                     ??_PIN_MANAGER_Initialize:	
  1744                           ; 1 bytes @ 0xE
  1745                           
  1746  00AE                     ?_process_gpio_cmd:	
  1747                           ; 1 bytes @ 0xE
  1748                           
  1749  00AE                     ??_gpio_init:	
  1750                           ; 1 bytes @ 0xE
  1751                           
  1752  00AE                     ??_USBStdGetDscHandler:	
  1753                           ; 1 bytes @ 0xE
  1754                           
  1755  00AE                     ??_USBStdGetStatusHandler:	
  1756                           ; 1 bytes @ 0xE
  1757                           
  1758  00AE                     ?_USBTransferOnePacket:	
  1759                           ; 1 bytes @ 0xE
  1760                           
  1761  00AE                     ?_memset:	
  1762                           ; 2 bytes @ 0xE
  1763                           
  1764  00AE                     putUSBUSART@length:	
  1765                           ; 2 bytes @ 0xE
  1766                           
  1767  00AE                     process_gpio_cmd@rsp:	
  1768                           ; 1 bytes @ 0xE
  1769                           
  1770  00AE                     USBTransferOnePacket@dir:	
  1771                           ; 1 bytes @ 0xE
  1772                           
  1773  00AE                     USBConfigureEndpoint@direction:	
  1774                           ; 1 bytes @ 0xE
  1775                           
  1776  00AE                     memset@p1:	
  1777                           ; 1 bytes @ 0xE
  1778                           
  1779                           
  1780                           ; 2 bytes @ 0xE
  1781  00AE                     	ds	1
  1782  00AF                     ??_USBConfigureEndpoint:	
  1783  00AF                     ??_putUSBUSART:	
  1784                           ; 1 bytes @ 0xF
  1785                           
  1786  00AF                     ??_process_gpio_cmd:	
  1787                           ; 1 bytes @ 0xF
  1788                           
  1789  00AF                     USBDeviceInit@p:	
  1790                           ; 1 bytes @ 0xF
  1791                           
  1792  00AF                     USBTransferOnePacket@data:	
  1793                           ; 2 bytes @ 0xF
  1794                           
  1795  00AF                     USBStdGetStatusHandler@p:	
  1796                           ; 2 bytes @ 0xF
  1797                           
  1798                           
  1799                           ; 2 bytes @ 0xF
  1800  00AF                     	ds	1
  1801  00B0                     ??_USBCtrlTrfRxService:	
  1802  00B0                     putUSBUSART@data:	
  1803                           ; 1 bytes @ 0x10
  1804                           
  1805  00B0                     process_gpio_cmd@cmd_type:	
  1806                           ; 1 bytes @ 0x10
  1807                           
  1808  00B0                     USBCtrlTrfTxService@byteToSend:	
  1809                           ; 1 bytes @ 0x10
  1810                           
  1811  00B0                     memset@c:	
  1812                           ; 1 bytes @ 0x10
  1813                           
  1814                           
  1815                           ; 2 bytes @ 0x10
  1816  00B0                     	ds	1
  1817  00B1                     ??_USBCtrlTrfInHandler:	
  1818  00B1                     ??_USBCtrlEPAllowDataStage:	
  1819                           ; 1 bytes @ 0x11
  1820                           
  1821  00B1                     process_gpio_cmd@cmd:	
  1822                           ; 1 bytes @ 0x11
  1823                           
  1824  00B1                     USBDeviceInit@i_1508:	
  1825                           ; 1 bytes @ 0x11
  1826                           
  1827  00B1                     USBTransferOnePacket@len:	
  1828                           ; 1 bytes @ 0x11
  1829                           
  1830                           
  1831                           ; 1 bytes @ 0x11
  1832  00B1                     	ds	1
  1833  00B2                     ??_USBTransferOnePacket:	
  1834  00B2                     USBDeviceInit@i:	
  1835                           ; 1 bytes @ 0x12
  1836                           
  1837  00B2                     USBCtrlTrfRxService@i:	
  1838                           ; 1 bytes @ 0x12
  1839                           
  1840  00B2                     memset@n:	
  1841                           ; 1 bytes @ 0x12
  1842                           
  1843                           
  1844                           ; 2 bytes @ 0x12
  1845  00B2                     	ds	1
  1846  00B3                     ??_SYSTEM_Initialize:	
  1847  00B3                     ??_USBCtrlEPServiceComplete:	
  1848                           ; 1 bytes @ 0x13
  1849                           
  1850  00B3                     USBConfigureEndpoint@EPNum:	
  1851                           ; 1 bytes @ 0x13
  1852                           
  1853  00B3                     USBCtrlTrfRxService@byteToRead:	
  1854                           ; 1 bytes @ 0x13
  1855                           
  1856  00B3                     USBCtrlTrfInHandler@lastDTS:	
  1857                           ; 1 bytes @ 0x13
  1858                           
  1859                           
  1860                           ; 1 bytes @ 0x13
  1861  00B3                     	ds	1
  1862  00B4                     ??_memset:	
  1863  00B4                     ??_USBCtrlTrfOutHandler:	
  1864                           ; 1 bytes @ 0x14
  1865                           
  1866  00B4                     USBConfigureEndpoint@handle:	
  1867                           ; 1 bytes @ 0x14
  1868                           
  1869  00B4                     memset@p:	
  1870                           ; 1 bytes @ 0x14
  1871                           
  1872                           
  1873                           ; 2 bytes @ 0x14
  1874  00B4                     	ds	1
  1875  00B5                     ?_USBEnableEndpoint:	
  1876  00B5                     USBEnableEndpoint@options:	
  1877                           ; 1 bytes @ 0x15
  1878                           
  1879                           
  1880                           ; 1 bytes @ 0x15
  1881  00B5                     	ds	1
  1882  00B6                     ??_USBEnableEndpoint:	
  1883  00B6                     USBTransferOnePacket@ep:	
  1884                           ; 1 bytes @ 0x16
  1885                           
  1886                           
  1887                           ; 1 bytes @ 0x16
  1888  00B6                     	ds	1
  1889  00B7                     USBTransferOnePacket@handle:	
  1890                           
  1891                           ; 2 bytes @ 0x17
  1892  00B7                     	ds	1
  1893  00B8                     USBEnableEndpoint@p:	
  1894                           
  1895                           ; 2 bytes @ 0x18
  1896  00B8                     	ds	1
  1897  00B9                     ?_getsUSBUSART:	
  1898  00B9                     ??_CDCTxService:	
  1899                           ; 1 bytes @ 0x19
  1900                           
  1901  00B9                     getsUSBUSART@len:	
  1902                           ; 1 bytes @ 0x19
  1903                           
  1904                           
  1905                           ; 1 bytes @ 0x19
  1906  00B9                     	ds	1
  1907  00BA                     ??_getsUSBUSART:	
  1908  00BA                     CDCTxService@i:	
  1909                           ; 1 bytes @ 0x1A
  1910                           
  1911  00BA                     USBEnableEndpoint@ep:	
  1912                           ; 1 bytes @ 0x1A
  1913                           
  1914                           
  1915                           ; 1 bytes @ 0x1A
  1916  00BA                     	ds	1
  1917  00BB                     ??_CDCInitEP:	
  1918  00BB                     CDCTxService@byte_to_send:	
  1919                           ; 1 bytes @ 0x1B
  1920                           
  1921                           
  1922                           ; 1 bytes @ 0x1B
  1923  00BB                     	ds	1
  1924  00BC                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1925  00BC                     getsUSBUSART@buffer:	
  1926                           ; 1 bytes @ 0x1C
  1927                           
  1928  00BC                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1929                           ; 1 bytes @ 0x1C
  1930                           
  1931                           
  1932                           ; 2 bytes @ 0x1C
  1933  00BC                     	ds	1
  1934  00BD                     ??_gpio_task:	
  1935                           
  1936                           ; 1 bytes @ 0x1D
  1937  00BD                     	ds	1
  1938  00BE                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1939                           
  1940                           ; 2 bytes @ 0x1E
  1941  00BE                     	ds	1
  1942  00BF                     gpio_task@bytes_rcvd:	
  1943                           
  1944                           ; 1 bytes @ 0x1F
  1945  00BF                     	ds	1
  1946  00C0                     gpio_task@has_output:	
  1947  00C0                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1948                           ; 1 bytes @ 0x20
  1949                           
  1950                           
  1951                           ; 2 bytes @ 0x20
  1952  00C0                     	ds	1
  1953  00C1                     gpio_task@rx_ptr:	
  1954                           
  1955                           ; 1 bytes @ 0x21
  1956  00C1                     	ds	1
  1957  00C2                     ??_USBWakeFromSuspend:	
  1958  00C2                     ??_USBSuspend:	
  1959                           ; 1 bytes @ 0x22
  1960                           
  1961  00C2                     ??_USBStdFeatureReqHandler:	
  1962                           ; 1 bytes @ 0x22
  1963                           
  1964  00C2                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  1965                           ; 1 bytes @ 0x22
  1966                           
  1967  00C2                     ??_USBStdSetCfgHandler:	
  1968                           ; 1 bytes @ 0x22
  1969                           
  1970  00C2                     gpio_task@tx_ptr:	
  1971                           ; 1 bytes @ 0x22
  1972                           
  1973                           
  1974                           ; 1 bytes @ 0x22
  1975  00C2                     	ds	2
  1976  00C4                     ??_USBCheckStdRequest:	
  1977                           
  1978                           ; 1 bytes @ 0x24
  1979  00C4                     	ds	1
  1980  00C5                     ??_USBCtrlTrfSetupHandler:	
  1981                           
  1982                           ; 1 bytes @ 0x25
  1983  00C5                     	ds	1
  1984  00C6                     ??_usb_task:	
  1985  00C6                     ??_main:	
  1986                           ; 1 bytes @ 0x26
  1987                           
  1988                           
  1989                           	psect	cstackCOMMON
  1990  0070                     __pcstackCOMMON:	
  1991                           ; 1 bytes @ 0x26
  1992                           
  1993  0070                     ?_USBDeviceTasks:	
  1994  0070                     ?_OSCILLATOR_Initialize:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997  0070                     ?_WDT_Initialize:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000  0070                     ?_USBDeviceInit:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003  0070                     ?_USBDeviceAttach:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006  0070                     ?_USBWakeFromSuspend:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009  0070                     ?_USBSuspend:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012  0070                     ?_USBIncrement1msInternalTimers:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015  0070                     ?_USBCtrlEPAllowStatusStage:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018  0070                     ?_USBStallHandler:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021  0070                     ?_USBCtrlEPService:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024  0070                     ?_USBCtrlTrfTxService:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027  0070                     ?_USBCtrlTrfSetupHandler:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030  0070                     ?_USBCtrlTrfOutHandler:	
  2031                           ; 1 bytes @ 0x0
  2032                           
  2033  0070                     ?_USBCtrlTrfInHandler:	
  2034                           ; 1 bytes @ 0x0
  2035                           
  2036  0070                     ?_USBCheckStdRequest:	
  2037                           ; 1 bytes @ 0x0
  2038                           
  2039  0070                     ?_USBStdFeatureReqHandler:	
  2040                           ; 1 bytes @ 0x0
  2041                           
  2042  0070                     ?_USBCheckCDCRequest:	
  2043                           ; 1 bytes @ 0x0
  2044                           
  2045  0070                     ?_CDCInitEP:	
  2046                           ; 1 bytes @ 0x0
  2047                           
  2048  0070                     ?_CDCTxService:	
  2049                           ; 1 bytes @ 0x0
  2050                           
  2051  0070                     ?_INTERRUPT_InterruptManager:	
  2052                           ; 1 bytes @ 0x0
  2053                           
  2054  0070                     ?_PIN_MANAGER_Initialize:	
  2055                           ; 1 bytes @ 0x0
  2056                           
  2057  0070                     ?_SYSTEM_Initialize:	
  2058                           ; 1 bytes @ 0x0
  2059                           
  2060  0070                     ?_usb_task:	
  2061                           ; 1 bytes @ 0x0
  2062                           
  2063  0070                     ?_gpio_init:	
  2064                           ; 1 bytes @ 0x0
  2065                           
  2066  0070                     ?_gpio_task:	
  2067                           ; 1 bytes @ 0x0
  2068                           
  2069  0070                     ?_main:	
  2070                           ; 1 bytes @ 0x0
  2071                           
  2072  0070                     ?_USBCtrlEPAllowDataStage:	
  2073                           ; 1 bytes @ 0x0
  2074                           
  2075  0070                     ?_USBCtrlEPServiceComplete:	
  2076                           ; 1 bytes @ 0x0
  2077                           
  2078  0070                     ?_USBCtrlTrfRxService:	
  2079                           ; 1 bytes @ 0x0
  2080                           
  2081  0070                     ?_USBStdSetCfgHandler:	
  2082                           ; 1 bytes @ 0x0
  2083                           
  2084  0070                     ?_USBStdGetDscHandler:	
  2085                           ; 1 bytes @ 0x0
  2086                           
  2087  0070                     ?_USBStdGetStatusHandler:	
  2088                           ; 1 bytes @ 0x0
  2089                           
  2090  0070                     ?i1_USBCheckCDCRequest:	
  2091                           ; 1 bytes @ 0x0
  2092                           
  2093  0070                     ??i1_USBCheckCDCRequest:	
  2094                           ; 1 bytes @ 0x0
  2095                           
  2096  0070                     ?i1_CDCInitEP:	
  2097                           ; 1 bytes @ 0x0
  2098                           
  2099  0070                     ?i1_USBDeviceInit:	
  2100                           ; 1 bytes @ 0x0
  2101                           
  2102  0070                     ??i1_USBDeviceInit:	
  2103                           ; 1 bytes @ 0x0
  2104                           
  2105  0070                     ?i1_USBDeviceTasks:	
  2106                           ; 1 bytes @ 0x0
  2107                           
  2108  0070                     ?i1_USBCtrlEPAllowStatusStage:	
  2109                           ; 1 bytes @ 0x0
  2110                           
  2111  0070                     ??i1_USBCtrlEPAllowStatusStage:	
  2112                           ; 1 bytes @ 0x0
  2113                           
  2114  0070                     ?i1_USBCtrlEPAllowDataStage:	
  2115                           ; 1 bytes @ 0x0
  2116                           
  2117  0070                     ?i1_USBConfigureEndpoint:	
  2118                           ; 1 bytes @ 0x0
  2119                           
  2120  0070                     ?i1_USBCtrlEPServiceComplete:	
  2121                           ; 1 bytes @ 0x0
  2122                           
  2123  0070                     ?i1_USBCtrlTrfTxService:	
  2124                           ; 1 bytes @ 0x0
  2125                           
  2126  0070                     ??i1_USBCtrlTrfTxService:	
  2127                           ; 1 bytes @ 0x0
  2128                           
  2129  0070                     ?i1_USBCtrlTrfRxService:	
  2130                           ; 1 bytes @ 0x0
  2131                           
  2132  0070                     ?i1_USBStdSetCfgHandler:	
  2133                           ; 1 bytes @ 0x0
  2134                           
  2135  0070                     ?i1_USBStdGetDscHandler:	
  2136                           ; 1 bytes @ 0x0
  2137                           
  2138  0070                     ??i1_USBStdGetDscHandler:	
  2139                           ; 1 bytes @ 0x0
  2140                           
  2141  0070                     ?i1_USBStdGetStatusHandler:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144  0070                     ??i1_USBStdGetStatusHandler:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147  0070                     ?i1_USBStallHandler:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150  0070                     ??i1_USBStallHandler:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153  0070                     ?i1_USBSuspend:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156  0070                     ?i1_USBWakeFromSuspend:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159  0070                     ?i1_USBCtrlEPService:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162  0070                     ?i1_USBCtrlTrfSetupHandler:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165  0070                     ?i1_USBCtrlTrfOutHandler:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168  0070                     ?i1_USBCtrlTrfInHandler:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171  0070                     ?i1_USBCheckStdRequest:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174  0070                     ?i1_USBStdFeatureReqHandler:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177  0070                     ?i1_USBIncrement1msInternalTimers:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180  0070                     ??i1_USBIncrement1msInternalTimers:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183  0070                     ?i1_memset:	
  2184                           ; 1 bytes @ 0x0
  2185                           
  2186  0070                     ?i1_USBTransferOnePacket:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189  0070                     i1USBTransferOnePacket@dir:	
  2190                           ; 2 bytes @ 0x0
  2191                           
  2192  0070                     i1USBConfigureEndpoint@direction:	
  2193                           ; 1 bytes @ 0x0
  2194                           
  2195  0070                     i1memset@p1:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198                           
  2199                           ; 2 bytes @ 0x0
  2200  0070                     	ds	1
  2201  0071                     ??i1_USBConfigureEndpoint:	
  2202  0071                     i1USBDeviceInit@p:	
  2203                           ; 1 bytes @ 0x1
  2204                           
  2205  0071                     i1USBTransferOnePacket@data:	
  2206                           ; 2 bytes @ 0x1
  2207                           
  2208  0071                     i1USBStdGetStatusHandler@p:	
  2209                           ; 2 bytes @ 0x1
  2210                           
  2211                           
  2212                           ; 2 bytes @ 0x1
  2213  0071                     	ds	1
  2214  0072                     ??i1_USBCtrlTrfRxService:	
  2215  0072                     i1USBCtrlTrfTxService@byteToSend:	
  2216                           ; 1 bytes @ 0x2
  2217                           
  2218  0072                     i1memset@c:	
  2219                           ; 1 bytes @ 0x2
  2220                           
  2221                           
  2222                           ; 2 bytes @ 0x2
  2223  0072                     	ds	1
  2224  0073                     ??i1_USBCtrlEPAllowDataStage:	
  2225  0073                     ??i1_USBCtrlTrfInHandler:	
  2226                           ; 1 bytes @ 0x3
  2227                           
  2228  0073                     i1USBDeviceInit@i_1508:	
  2229                           ; 1 bytes @ 0x3
  2230                           
  2231  0073                     i1USBTransferOnePacket@len:	
  2232                           ; 1 bytes @ 0x3
  2233                           
  2234                           
  2235                           ; 1 bytes @ 0x3
  2236  0073                     	ds	1
  2237  0074                     ??i1_USBTransferOnePacket:	
  2238  0074                     i1USBDeviceInit@i:	
  2239                           ; 1 bytes @ 0x4
  2240                           
  2241  0074                     i1USBCtrlTrfRxService@i:	
  2242                           ; 1 bytes @ 0x4
  2243                           
  2244  0074                     i1memset@n:	
  2245                           ; 1 bytes @ 0x4
  2246                           
  2247                           
  2248                           ; 2 bytes @ 0x4
  2249  0074                     	ds	1
  2250  0075                     ??i1_USBCtrlEPServiceComplete:	
  2251  0075                     i1USBConfigureEndpoint@EPNum:	
  2252                           ; 1 bytes @ 0x5
  2253                           
  2254  0075                     i1USBCtrlTrfRxService@byteToRead:	
  2255                           ; 1 bytes @ 0x5
  2256                           
  2257  0075                     i1USBCtrlTrfInHandler@lastDTS:	
  2258                           ; 1 bytes @ 0x5
  2259                           
  2260                           
  2261                           ; 1 bytes @ 0x5
  2262  0075                     	ds	1
  2263  0076                     ??i1_USBCtrlTrfOutHandler:	
  2264  0076                     ??i1_memset:	
  2265                           ; 1 bytes @ 0x6
  2266                           
  2267  0076                     i1USBConfigureEndpoint@handle:	
  2268                           ; 1 bytes @ 0x6
  2269                           
  2270  0076                     i1memset@p:	
  2271                           ; 1 bytes @ 0x6
  2272                           
  2273                           
  2274                           ; 2 bytes @ 0x6
  2275  0076                     	ds	1
  2276  0077                     ?i1_USBEnableEndpoint:	
  2277  0077                     i1USBEnableEndpoint@options:	
  2278                           ; 1 bytes @ 0x7
  2279                           
  2280                           
  2281                           ; 1 bytes @ 0x7
  2282  0077                     	ds	1
  2283  0078                     ??i1_USBEnableEndpoint:	
  2284  0078                     i1USBTransferOnePacket@ep:	
  2285                           ; 1 bytes @ 0x8
  2286                           
  2287                           
  2288                           ; 1 bytes @ 0x8
  2289  0078                     	ds	1
  2290  0079                     i1USBTransferOnePacket@handle:	
  2291                           
  2292                           ; 2 bytes @ 0x9
  2293  0079                     	ds	1
  2294  007A                     i1USBEnableEndpoint@p:	
  2295                           
  2296                           ; 2 bytes @ 0xA
  2297  007A                     	ds	2
  2298  007C                     i1USBEnableEndpoint@ep:	
  2299                           
  2300                           ; 1 bytes @ 0xC
  2301  007C                     	ds	1
  2302  007D                     ??i1_CDCInitEP:	
  2303                           
  2304                           ; 1 bytes @ 0xD
  2305  007D                     	ds	1
  2306  007E                     ??i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2307                           
  2308                           	psect	cstackBANK0h
  2309  0058                     __pcstackBANK0h:	
  2310                           ; 1 bytes @ 0xE
  2311                           
  2312  0058                     ?i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2313  0058                     i1USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316                           
  2317                           ; 2 bytes @ 0x0
  2318  0058                     	ds	2
  2319  005A                     i1USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2320                           
  2321                           ; 2 bytes @ 0x2
  2322  005A                     	ds	2
  2323  005C                     i1USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2324                           
  2325                           ; 2 bytes @ 0x4
  2326  005C                     	ds	2
  2327  005E                     ??i1_USBStdSetCfgHandler:	
  2328  005E                     ??i1_USBSuspend:	
  2329                           ; 1 bytes @ 0x6
  2330                           
  2331  005E                     ??i1_USBWakeFromSuspend:	
  2332                           ; 1 bytes @ 0x6
  2333                           
  2334  005E                     ??i1_USBStdFeatureReqHandler:	
  2335                           ; 1 bytes @ 0x6
  2336                           
  2337                           
  2338                           ; 1 bytes @ 0x6
  2339  005E                     	ds	2
  2340                           
  2341                           	psect	maintext
  2342  1068                     __pmaintext:	
  2343 ;;
  2344 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2345 ;;
  2346 ;; *************** function _main *****************
  2347 ;; Defined at:
  2348 ;;		line 122 in file "main.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : B1F/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels required when called:   20
  2368 ;; This function calls:
  2369 ;;		_SYSTEM_Initialize
  2370 ;;		_USBDeviceInit
  2371 ;;		_gpio_init
  2372 ;;		_gpio_task
  2373 ;;		_usb_task
  2374 ;; This function is called by:
  2375 ;;		Startup code after reset
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function _main
  2381  1068                     _main:	
  2382                           
  2383                           ;main.c: 123: SYSTEM_Initialize();
  2384                           
  2385                           ;incstack = 0
  2386 ;; hardware stack exceeded
  2387                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2388  1068  3190  2059  3190   	fcall	_SYSTEM_Initialize
  2389                           
  2390                           ;main.c: 124: USBDeviceInit();
  2391  106B  3185  258F  3190   	fcall	_USBDeviceInit
  2392                           
  2393                           ;main.c: 125: gpio_init();
  2394  106E  3190  2037  3190   	fcall	_gpio_init
  2395  1071                     l7091:	
  2396                           ;main.c: 127: while (1) {
  2397                           
  2398                           
  2399                           ;main.c: 128: usb_task();
  2400  1071  3190  204B  3190   	fcall	_usb_task
  2401                           
  2402                           ;main.c: 129: gpio_task();
  2403  1074  3193  233E  3190   	fcall	_gpio_task
  2404  1077  2871               	goto	l7091
  2405  1078                     __end_of_main:	
  2406                           
  2407                           	psect	text1
  2408  104B                     __ptext1:	
  2409 ;; *************** function _usb_task *****************
  2410 ;; Defined at:
  2411 ;;		line 28 in file "main.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2429 ;;Total ram usage:        0 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:   19
  2432 ;; This function calls:
  2433 ;;		_CDCTxService
  2434 ;;		_USBDeviceTasks
  2435 ;; This function is called by:
  2436 ;;		_main
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           
  2441                           ;psect for function _usb_task
  2442  104B                     _usb_task:	
  2443                           
  2444                           ;main.c: 29: USBDeviceTasks();
  2445                           
  2446                           ;incstack = 0
  2447 ;; hardware stack exceeded
  2448                           ; Regs used in _usb_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2449  104B  3182  22F7  3190   	fcall	_USBDeviceTasks
  2450                           
  2451                           ;main.c: 31: if (
  2452                           ;main.c: 32: (USBDeviceState >= CONFIGURED_STATE) &&
  2453                           ;main.c: 33: (UCONbits.SUSPND == 0)
  2454                           ;main.c: 34: ) {
  2455  104E  3020               	movlw	32
  2456  104F  0021               	movlb	1	; select bank1
  2457  1050  025F               	subwf	_USBDeviceState^(0+128),w	;volatile
  2458  1051  1C03               	skipc
  2459  1052  0008               	return
  2460  1053  003D               	movlb	29	; select bank29
  2461  1054  188E               	btfsc	14,1	;volatile
  2462  1055  0008               	return
  2463                           
  2464                           ;main.c: 35: CDCTxService();
  2465  1056  3184  24BD         	fcall	_CDCTxService
  2466  1058  0008               	return
  2467  1059                     __end_of_usb_task:	
  2468                           
  2469                           	psect	text2
  2470  02F7                     __ptext2:	
  2471 ;; *************** function _USBDeviceTasks *****************
  2472 ;; Defined at:
  2473 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;		None
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  i               1    8[BANK2 ] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2488 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2489 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  2490 ;;      Totals:         0       0       0       1       2       0       0       0       0       0       0       0       
      +0       0
  2491 ;;Total ram usage:        3 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:   18
  2494 ;; This function calls:
  2495 ;;		_USBCtrlEPAllowStatusStage
  2496 ;;		_USBCtrlEPService
  2497 ;;		_USBDeviceInit
  2498 ;;		_USBIncrement1msInternalTimers
  2499 ;;		_USBStallHandler
  2500 ;;		_USBSuspend
  2501 ;;		_USBWakeFromSuspend
  2502 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2503 ;; This function is called by:
  2504 ;;		_usb_task
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           
  2509                           ;psect for function _USBDeviceTasks
  2510  02F7                     _USBDeviceTasks:	
  2511                           
  2512                           ;usb_device.c: 479: uint8_t i;
  2513                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  2514                           
  2515                           ;incstack = 0
  2516 ;; hardware stack exceeded
  2517                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2518  02F7  0021               	movlb	1	; select bank1
  2519  02F8  035F               	decf	_USBDeviceState^(0+128),w	;volatile
  2520  02F9  1D03               	btfss	3,2
  2521  02FA  2B07               	goto	l6787
  2522                           
  2523                           ;usb_device.c: 591: {
  2524                           ;usb_device.c: 601: if(!UCONbits.SE0)
  2525  02FB  003D               	movlb	29	; select bank29
  2526  02FC  1A8E               	btfsc	14,5	;volatile
  2527  02FD  2B07               	goto	l6787
  2528                           
  2529                           ;usb_device.c: 602: {
  2530                           ;usb_device.c: 608: {UIR = 0;};
  2531  02FE  0190               	clrf	16	;volatile
  2532                           
  2533                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  2534  02FF  1412               	bsf	18,0	;volatile
  2535                           
  2536                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  2537  0300  1612               	bsf	18,4	;volatile
  2538                           
  2539                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  2540  0301  3002               	movlw	2
  2541  0302  0023               	movlb	3	; select bank3
  2542  0303  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2543  0304  0860               	movf	??_USBDeviceTasks^(0+384),w
  2544  0305  0021               	movlb	1	; select bank1
  2545  0306  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  2546  0307                     l6787:	
  2547                           
  2548                           ;usb_device.c: 617: }
  2549                           ;usb_device.c: 618: }
  2550                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  2551  0307  003D               	movlb	29	; select bank29
  2552  0308  1910               	btfsc	16,2	;volatile
  2553  0309  1D12               	btfss	18,2	;volatile
  2554  030A  2B14               	goto	l6795
  2555                           
  2556                           ;usb_device.c: 635: {
  2557                           ;usb_device.c: 636: (UIR &= 0xFB);
  2558  030B  30FB               	movlw	251
  2559  030C  0023               	movlb	3	; select bank3
  2560  030D  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2561  030E  0860               	movf	??_USBDeviceTasks^(0+384),w
  2562  030F  003D               	movlb	29	; select bank29
  2563  0310  0590               	andwf	16,f	;volatile
  2564                           
  2565                           ;usb_device.c: 640: USBWakeFromSuspend();
  2566  0311  3191  21A6  3182   	fcall	_USBWakeFromSuspend
  2567  0314                     l6795:	
  2568                           
  2569                           ;usb_device.c: 642: }
  2570                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  2571  0314  003D               	movlb	29	; select bank29
  2572  0315  1C8E               	btfss	14,1	;volatile
  2573  0316  2B1A               	goto	l434
  2574                           
  2575                           ;usb_device.c: 648: {
  2576                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  2577  0317  0020               	movlb	0	; select bank0
  2578  0318  1112               	bcf	18,2	;volatile
  2579                           
  2580                           ;usb_device.c: 650: return;
  2581  0319  0008               	return
  2582  031A                     l434:	
  2583                           
  2584                           ;usb_device.c: 651: }
  2585                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  2586  031A  1810               	btfsc	16,0	;volatile
  2587  031B  1C12               	btfss	18,0	;volatile
  2588  031C  2B2E               	goto	l6809
  2589                           
  2590                           ;usb_device.c: 664: {
  2591                           ;usb_device.c: 665: USBDeviceInit();
  2592  031D  3185  258F  3182   	fcall	_USBDeviceInit
  2593                           
  2594                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  2595  0320  0021               	movlb	1	; select bank1
  2596  0321  1512               	bsf	18,2	;volatile
  2597                           
  2598                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  2599  0322  3004               	movlw	4
  2600  0323  0023               	movlb	3	; select bank3
  2601  0324  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2602  0325  0860               	movf	??_USBDeviceTasks^(0+384),w
  2603  0326  0021               	movlb	1	; select bank1
  2604  0327  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  2605                           
  2606                           ;usb_device.c: 681: (UIR &= 0xFE);
  2607  0328  30FE               	movlw	254
  2608  0329  0023               	movlb	3	; select bank3
  2609  032A  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2610  032B  0860               	movf	??_USBDeviceTasks^(0+384),w
  2611  032C  003D               	movlb	29	; select bank29
  2612  032D  0590               	andwf	16,f	;volatile
  2613  032E                     l6809:	
  2614                           
  2615                           ;usb_device.c: 682: }
  2616                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  2617  032E  1A10               	btfsc	16,4	;volatile
  2618  032F  1E12               	btfss	18,4	;volatile
  2619  0330  2B34               	goto	l6815
  2620                           
  2621                           ;usb_device.c: 688: {
  2622                           ;usb_device.c: 694: USBSuspend();
  2623  0331  3191  2147  3182   	fcall	_USBSuspend
  2624  0334                     l6815:	
  2625                           
  2626                           ;usb_device.c: 696: }
  2627                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  2628  0334  003D               	movlb	29	; select bank29
  2629  0335  1F10               	btfss	16,6	;volatile
  2630  0336  2B5E               	goto	l6831
  2631                           
  2632                           ;usb_device.c: 709: {
  2633                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  2634  0337  1F12               	btfss	18,6	;volatile
  2635  0338  2B49               	goto	l6821
  2636                           
  2637                           ;usb_device.c: 712: {
  2638                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  2639  0339  3073               	movlw	115
  2640  033A  0021               	movlb	1	; select bank1
  2641  033B  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2642  033C  3000               	movlw	0
  2643  033D  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2644  033E  3000               	movlw	0
  2645  033F  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2646  0340  3000               	movlw	0
  2647  0341  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2648  0342  3001               	movlw	1
  2649  0343  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2650  0344  3000               	movlw	0
  2651  0345  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  2652  0346  3192  2265  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2653  0349                     l6821:	
  2654                           
  2655                           ;usb_device.c: 714: }
  2656                           ;usb_device.c: 715: (UIR &= 0xBF);
  2657  0349  30BF               	movlw	191
  2658  034A  0023               	movlb	3	; select bank3
  2659  034B  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2660  034C  0860               	movf	??_USBDeviceTasks^(0+384),w
  2661  034D  003D               	movlb	29	; select bank29
  2662  034E  0590               	andwf	16,f	;volatile
  2663                           
  2664                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  2665  034F  3191  210C  3182   	fcall	_USBIncrement1msInternalTimers
  2666                           
  2667                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  2668  0352  0022               	movlb	2	; select bank2
  2669  0353  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  2670  0354  1903               	btfsc	3,2
  2671  0355  2B58               	goto	l440
  2672                           
  2673                           ;usb_device.c: 736: {
  2674                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  2675  0356  3001               	movlw	1
  2676  0357  02CB               	subwf	_USBStatusStageTimeoutCounter^(0+256),f	;volatile
  2677  0358                     l440:	
  2678                           
  2679                           ;usb_device.c: 738: }
  2680                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  2681  0358  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  2682  0359  1D03               	btfss	3,2
  2683  035A  2B5E               	goto	l6831
  2684                           
  2685                           ;usb_device.c: 745: {
  2686                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  2687  035B  318A  22AD  3182   	fcall	_USBCtrlEPAllowStatusStage
  2688  035E                     l6831:	
  2689                           
  2690                           ;usb_device.c: 747: }
  2691                           ;usb_device.c: 749: }
  2692                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  2693  035E  003D               	movlb	29	; select bank29
  2694  035F  1A90               	btfsc	16,5	;volatile
  2695  0360  1E92               	btfss	18,5	;volatile
  2696  0361  2B65               	goto	l6837
  2697                           
  2698                           ;usb_device.c: 752: {
  2699                           ;usb_device.c: 753: USBStallHandler();
  2700  0362  3192  220E  3182   	fcall	_USBStallHandler
  2701  0365                     l6837:	
  2702                           
  2703                           ;usb_device.c: 754: }
  2704                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  2705  0365  003D               	movlb	29	; select bank29
  2706  0366  1890               	btfsc	16,1	;volatile
  2707  0367  1C92               	btfss	18,1	;volatile
  2708  0368  2B7B               	goto	l6845
  2709                           
  2710                           ;usb_device.c: 757: {
  2711                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  2712  0369  30FF               	movlw	255
  2713  036A  0021               	movlb	1	; select bank1
  2714  036B  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2715  036C  307F               	movlw	127
  2716  036D  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2717  036E  3000               	movlw	0
  2718  036F  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2719  0370  3000               	movlw	0
  2720  0371  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2721  0372  3001               	movlw	1
  2722  0373  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2723  0374  3000               	movlw	0
  2724  0375  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  2725  0376  3192  2265  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2726                           
  2727                           ;usb_device.c: 759: {UEIR = 0;};
  2728  0379  003D               	movlb	29	; select bank29
  2729  037A  0193               	clrf	19	;volatile
  2730  037B                     l6845:	
  2731                           
  2732                           ;usb_device.c: 767: }
  2733                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  2734  037B  3004               	movlw	4
  2735  037C  0021               	movlb	1	; select bank1
  2736  037D  025F               	subwf	_USBDeviceState^(0+128),w	;volatile
  2737  037E  1803               	skipnc
  2738  037F  2B83               	goto	l444
  2739                           
  2740                           ;usb_device.c: 775: {
  2741                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  2742  0380  0020               	movlb	0	; select bank0
  2743  0381  1112               	bcf	18,2	;volatile
  2744                           
  2745                           ;usb_device.c: 777: return;
  2746  0382  0008               	return
  2747  0383                     l444:	
  2748                           
  2749                           ;usb_device.c: 778: }
  2750                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  2751  0383  003D               	movlb	29	; select bank29
  2752  0384  1D92               	btfss	18,3	;volatile
  2753  0385  2BDD               	goto	l445
  2754                           
  2755                           ;usb_device.c: 784: {
  2756                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  2757  0386  0022               	movlb	2	; select bank2
  2758  0387  01EF               	clrf	USBDeviceTasks@i^(0+256)
  2759  0388  3004               	movlw	4
  2760  0389  026F               	subwf	USBDeviceTasks@i^(0+256),w
  2761  038A  1803               	btfsc	3,0
  2762  038B  2BDD               	goto	l445
  2763  038C                     l446:	
  2764                           
  2765                           ;usb_device.c: 786: {
  2766                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  2767  038C  003D               	movlb	29	; select bank29
  2768  038D  1D90               	btfss	16,3	;volatile
  2769  038E  2BDD               	goto	l445
  2770                           
  2771                           ;usb_device.c: 788: {
  2772                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  2773  038F  080F               	movf	15,w	;volatile
  2774  0390  0023               	movlb	3	; select bank3
  2775  0391  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2776  0392  0860               	movf	??_USBDeviceTasks^(0+384),w
  2777  0393  0021               	movlb	1	; select bank1
  2778  0394  00E0               	movwf	_USTATcopy^(0+128)	;volatile
  2779                           
  2780                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  2781  0395  0C60               	rrf	_USTATcopy^(0+128),w	;volatile
  2782  0396  0023               	movlb	3	; select bank3
  2783  0397  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2784  0398  0CE0               	rrf	??_USBDeviceTasks^(0+384),f
  2785  0399  0C60               	rrf	??_USBDeviceTasks^(0+384),w
  2786  039A  390F               	andlw	15
  2787  039B  00E1               	movwf	(??_USBDeviceTasks+1)^(0+384)
  2788  039C  0861               	movf	(??_USBDeviceTasks+1)^(0+384),w
  2789  039D  0021               	movlb	1	; select bank1
  2790  039E  00DB               	movwf	_endpoint_number^(0+128)	;volatile
  2791                           
  2792                           ;usb_device.c: 793: (UIR &= 0xF7);
  2793  039F  30F7               	movlw	247
  2794  03A0  0023               	movlb	3	; select bank3
  2795  03A1  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2796  03A2  0860               	movf	??_USBDeviceTasks^(0+384),w
  2797  03A3  003D               	movlb	29	; select bank29
  2798  03A4  0590               	andwf	16,f	;volatile
  2799                           
  2800                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  2801  03A5  0021               	movlb	1	; select bank1
  2802  03A6  1960               	btfsc	_USTATcopy^(0+128),2	;volatile
  2803  03A7  2BAB               	goto	l6865
  2804                           
  2805                           ;usb_device.c: 799: {
  2806                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  2807  03A8  085B               	movf	_endpoint_number^(0+128),w	;volatile
  2808  03A9  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  2809  03AA  2BAE               	goto	L1
  2810  03AB                     l6865:	
  2811                           ;usb_device.c: 801: }
  2812                           
  2813                           
  2814                           ;usb_device.c: 802: else
  2815                           ;usb_device.c: 803: {
  2816                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  2817  03AB  0021               	movlb	1	; select bank1
  2818  03AC  085B               	movf	_endpoint_number^(0+128),w	;volatile
  2819  03AD  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  2820  03AE                     L1:	
  2821  03AE  0086               	movwf	6
  2822  03AF  3001               	movlw	1	; select bank2/3
  2823  03B0  0087               	movwf	7
  2824  03B1  0801               	movf	1,w
  2825  03B2  3901               	andlw	1
  2826  03B3  0023               	movlb	3	; select bank3
  2827  03B4  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2828  03B5  3001               	movlw	1
  2829  03B6  06E0               	xorwf	??_USBDeviceTasks^(0+384),f
  2830  03B7  0801               	movf	1,w
  2831  03B8  0660               	xorwf	??_USBDeviceTasks^(0+384),w
  2832  03B9  39FE               	andlw	-2
  2833  03BA  0660               	xorwf	??_USBDeviceTasks^(0+384),w
  2834  03BB  0081               	movwf	1
  2835                           
  2836                           ;usb_device.c: 805: }
  2837                           ;usb_device.c: 810: if(endpoint_number == 0)
  2838  03BC  0021               	movlb	1	; select bank1
  2839  03BD  085B               	movf	_endpoint_number^(0+128),w	;volatile
  2840  03BE  1D03               	btfss	3,2
  2841  03BF  2BC4               	goto	l6871
  2842                           
  2843                           ;usb_device.c: 811: {
  2844                           ;usb_device.c: 812: USBCtrlEPService();
  2845  03C0  3195  25D5  3182   	fcall	_USBCtrlEPService
  2846                           
  2847                           ;usb_device.c: 813: }
  2848  03C3  2BD3               	goto	l6873
  2849  03C4                     l6871:	
  2850                           
  2851                           ;usb_device.c: 814: else
  2852                           ;usb_device.c: 815: {
  2853                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  2854  03C4  3072               	movlw	114
  2855  03C5  0021               	movlb	1	; select bank1
  2856  03C6  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2857  03C7  3000               	movlw	0
  2858  03C8  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2859  03C9  30E0               	movlw	low _USTATcopy
  2860  03CA  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2861  03CB  3000               	movlw	high _USTATcopy
  2862  03CC  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2863  03CD  3000               	movlw	0
  2864  03CE  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2865  03CF  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  2866  03D0  3192  2265  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2867  03D3                     l6873:	
  2868                           ;usb_device.c: 819: else
  2869                           ;usb_device.c: 820: {
  2870                           ;usb_device.c: 821: break;
  2871                           
  2872                           ;usb_device.c: 817: }
  2873                           ;usb_device.c: 818: }
  2874                           
  2875  03D3  3001               	movlw	1
  2876  03D4  0023               	movlb	3	; select bank3
  2877  03D5  00E0               	movwf	??_USBDeviceTasks^(0+384)
  2878  03D6  0860               	movf	??_USBDeviceTasks^(0+384),w
  2879  03D7  0022               	movlb	2	; select bank2
  2880  03D8  07EF               	addwf	USBDeviceTasks@i^(0+256),f
  2881  03D9  3004               	movlw	4
  2882  03DA  026F               	subwf	USBDeviceTasks@i^(0+256),w
  2883  03DB  1C03               	skipc
  2884  03DC  2B8C               	goto	l446
  2885  03DD                     l445:	
  2886                           
  2887                           ;usb_device.c: 822: }
  2888                           ;usb_device.c: 823: }
  2889                           ;usb_device.c: 824: }
  2890                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  2891  03DD  0020               	movlb	0	; select bank0
  2892  03DE  1112               	bcf	18,2	;volatile
  2893  03DF  0008               	return
  2894  03E0                     __end_of_USBDeviceTasks:	
  2895                           
  2896                           	psect	text3
  2897  11A6                     __ptext3:	
  2898 ;; *************** function _USBWakeFromSuspend *****************
  2899 ;; Defined at:
  2900 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2916 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2917 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2918 ;;Total ram usage:        1 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:   14
  2921 ;; This function calls:
  2922 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2923 ;; This function is called by:
  2924 ;;		_USBDeviceTasks
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           
  2929                           ;psect for function _USBWakeFromSuspend
  2930  11A6                     _USBWakeFromSuspend:	
  2931                           
  2932                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  2933                           
  2934                           ;incstack = 0
  2935 ;; hardware stack exceeded
  2936                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2937  11A6  0022               	movlb	2	; select bank2
  2938  11A7  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
  2939                           
  2940                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  2941  11A8  3074               	movlw	116
  2942  11A9  0021               	movlb	1	; select bank1
  2943  11AA  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  2944  11AB  3000               	movlw	0
  2945  11AC  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  2946  11AD  3000               	movlw	0
  2947  11AE  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  2948  11AF  3000               	movlw	0
  2949  11B0  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  2950  11B1  3000               	movlw	0
  2951  11B2  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  2952  11B3  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  2953  11B4  3192  2265  3191   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2954                           
  2955                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  2956  11B7  003D               	movlb	29	; select bank29
  2957  11B8  108E               	bcf	14,1	;volatile
  2958                           
  2959                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  2960  11B9  1112               	bcf	18,2	;volatile
  2961  11BA                     l6595:	
  2962                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  2963                           
  2964  11BA  1D10               	btfss	16,2	;volatile
  2965  11BB  29C3               	goto	l6597
  2966                           
  2967                           ;usb_device.c: 2343: {
  2968                           ;usb_device.c: 2344: (UIR &= 0xFB);
  2969  11BC  30FB               	movlw	251
  2970  11BD  0021               	movlb	1	; select bank1
  2971  11BE  00C2               	movwf	??_USBWakeFromSuspend^(0+128)
  2972  11BF  0842               	movf	??_USBWakeFromSuspend^(0+128),w
  2973  11C0  003D               	movlb	29	; select bank29
  2974  11C1  0590               	andwf	16,f	;volatile
  2975  11C2  29BA               	goto	l6595
  2976  11C3                     l6597:	
  2977                           
  2978                           ;usb_device.c: 2345: }
  2979                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  2980  11C3  0022               	movlb	2	; select bank2
  2981  11C4  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  2982  11C5  0008               	return
  2983  11C6                     __end_of_USBWakeFromSuspend:	
  2984                           
  2985                           	psect	text4
  2986  1147                     __ptext4:	
  2987 ;; *************** function _USBSuspend *****************
  2988 ;; Defined at:
  2989 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;Total ram usage:        1 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:   14
  3010 ;; This function calls:
  3011 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3012 ;; This function is called by:
  3013 ;;		_USBDeviceTasks
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           
  3018                           ;psect for function _USBSuspend
  3019  1147                     _USBSuspend:	
  3020                           
  3021                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  3022                           
  3023                           ;incstack = 0
  3024 ;; hardware stack exceeded
  3025                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3026  1147  003D               	movlb	29	; select bank29
  3027  1148  1512               	bsf	18,2	;volatile
  3028                           
  3029                           ;usb_device.c: 2271: (UIR &= 0xEF);
  3030  1149  30EF               	movlw	239
  3031  114A  0021               	movlb	1	; select bank1
  3032  114B  00C2               	movwf	??_USBSuspend^(0+128)
  3033  114C  0842               	movf	??_USBSuspend^(0+128),w
  3034  114D  003D               	movlb	29	; select bank29
  3035  114E  0590               	andwf	16,f	;volatile
  3036                           
  3037                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  3038  114F  148E               	bsf	14,1	;volatile
  3039                           
  3040                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  3041  1150  3001               	movlw	1
  3042  1151  0021               	movlb	1	; select bank1
  3043  1152  00C2               	movwf	??_USBSuspend^(0+128)
  3044  1153  0842               	movf	??_USBSuspend^(0+128),w
  3045  1154  0022               	movlb	2	; select bank2
  3046  1155  00CD               	movwf	_USBBusIsSuspended^(0+256)	;volatile
  3047                           
  3048                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  3049  1156  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  3050                           
  3051                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  3052  1157  3075               	movlw	117
  3053  1158  0021               	movlb	1	; select bank1
  3054  1159  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3055  115A  3000               	movlw	0
  3056  115B  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  3057  115C  3000               	movlw	0
  3058  115D  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3059  115E  3000               	movlw	0
  3060  115F  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3061  1160  3000               	movlw	0
  3062  1161  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3063  1162  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3064  1163  3192  2265         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3065  1165  0008               	return
  3066  1166                     __end_of_USBSuspend:	
  3067                           
  3068                           	psect	text5
  3069  120E                     __ptext5:	
  3070 ;; *************** function _USBStallHandler *****************
  3071 ;; Defined at:
  3072 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3088 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;Total ram usage:        1 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:   10
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_USBDeviceTasks
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _USBStallHandler
  3102  120E                     _USBStallHandler:	
  3103                           
  3104                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  3105                           
  3106                           ;incstack = 0
  3107                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  3108  120E  003D               	movlb	29	; select bank29
  3109  120F  1C18               	btfss	24,0	;volatile
  3110  1210  2A2E               	goto	l6629
  3111                           
  3112                           ;usb_device.c: 2215: {
  3113                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  3114  1211  0021               	movlb	1	; select bank1
  3115  1212  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3116  1213  0086               	movwf	6
  3117  1214  0187               	clrf	7
  3118  1215  3080               	movlw	128
  3119  1216  0601               	xorwf	1,w
  3120  1217  1D03               	btfss	3,2
  3121  1218  2A2C               	goto	l6627
  3122  1219  084D               	movf	_pBDTEntryIn^(0+128),w
  3123  121A  0086               	movwf	6
  3124  121B  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3125  121C  0087               	movwf	7
  3126  121D  3084               	movlw	132
  3127  121E  0601               	xorwf	1,w
  3128  121F  1D03               	btfss	3,2
  3129  1220  2A2C               	goto	l6627
  3130                           
  3131                           ;usb_device.c: 2218: {
  3132                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3133  1221  300C               	movlw	12
  3134  1222  00AE               	movwf	??_USBStallHandler^(0+128)
  3135  1223  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3136  1224  0086               	movwf	6
  3137  1225  0187               	clrf	7
  3138  1226  082E               	movf	??_USBStallHandler^(0+128),w
  3139  1227  0081               	movwf	1
  3140                           
  3141                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  3142  1228  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3143  1229  0086               	movwf	6
  3144  122A  0187               	clrf	7
  3145  122B  1781               	bsf	1,7
  3146  122C                     l6627:	
  3147                           
  3148                           ;usb_device.c: 2222: }
  3149                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  3150  122C  003D               	movlb	29	; select bank29
  3151  122D  1018               	bcf	24,0	;volatile
  3152  122E                     l6629:	
  3153                           
  3154                           ;usb_device.c: 2224: }
  3155                           ;usb_device.c: 2226: (UIR &= 0xDF);
  3156  122E  30DF               	movlw	223
  3157  122F  0021               	movlb	1	; select bank1
  3158  1230  00AE               	movwf	??_USBStallHandler^(0+128)
  3159  1231  082E               	movf	??_USBStallHandler^(0+128),w
  3160  1232  003D               	movlb	29	; select bank29
  3161  1233  0590               	andwf	16,f	;volatile
  3162  1234  0008               	return
  3163  1235                     __end_of_USBStallHandler:	
  3164                           
  3165                           	psect	text6
  3166  110C                     __ptext6:	
  3167 ;; *************** function _USBIncrement1msInternalTimers *****************
  3168 ;; Defined at:
  3169 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3186 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;Total ram usage:        1 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:   10
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_USBDeviceTasks
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _USBIncrement1msInternalTimers
  3199  110C                     _USBIncrement1msInternalTimers:	
  3200                           
  3201                           ;usb_device.c: 3033: USB1msTickCount++;
  3202                           
  3203                           ;incstack = 0
  3204                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  3205  110C  3001               	movlw	1
  3206  110D  0022               	movlb	2	; select bank2
  3207  110E  07B0               	addwf	_USB1msTickCount^(0+256),f	;volatile
  3208  110F  3000               	movlw	0
  3209  1110  3DB1               	addwfc	(_USB1msTickCount+1)^(0+256),f	;volatile
  3210  1111  3000               	movlw	0
  3211  1112  3DB2               	addwfc	(_USB1msTickCount+2)^(0+256),f	;volatile
  3212  1113  3000               	movlw	0
  3213  1114  3DB3               	addwfc	(_USB1msTickCount+3)^(0+256),f	;volatile
  3214                           
  3215                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  3216  1115  084D               	movf	_USBBusIsSuspended^(0+256),w	;volatile
  3217  1116  1D03               	btfss	3,2
  3218  1117  0008               	return
  3219                           
  3220                           ;usb_device.c: 3035: {
  3221                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  3222  1118  3001               	movlw	1
  3223  1119  0021               	movlb	1	; select bank1
  3224  111A  00AE               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  3225  111B  082E               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  3226  111C  0022               	movlb	2	; select bank2
  3227  111D  07C6               	addwf	_USBTicksSinceSuspendEnd^(0+256),f	;volatile
  3228                           
  3229                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  3230  111E  0846               	movf	_USBTicksSinceSuspendEnd^(0+256),w	;volatile
  3231  111F  1D03               	btfss	3,2
  3232  1120  0008               	return
  3233                           
  3234                           ;usb_device.c: 3039: {
  3235                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  3236  1121  30FF               	movlw	255
  3237  1122  0021               	movlb	1	; select bank1
  3238  1123  00AE               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  3239  1124  082E               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  3240  1125  0022               	movlb	2	; select bank2
  3241  1126  00C6               	movwf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  3242  1127  0008               	return
  3243  1128                     __end_of_USBIncrement1msInternalTimers:	
  3244                           
  3245                           	psect	text7
  3246  15D5                     __ptext7:	
  3247 ;; *************** function _USBCtrlEPService *****************
  3248 ;; Defined at:
  3249 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3265 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3266 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3267 ;;Total ram usage:        3 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:   17
  3270 ;; This function calls:
  3271 ;;		_USBCtrlTrfInHandler
  3272 ;;		_USBCtrlTrfOutHandler
  3273 ;;		_USBCtrlTrfSetupHandler
  3274 ;; This function is called by:
  3275 ;;		_USBDeviceTasks
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           
  3280                           ;psect for function _USBCtrlEPService
  3281  15D5                     _USBCtrlEPService:	
  3282                           
  3283                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  3284                           
  3285                           ;incstack = 0
  3286 ;; hardware stack exceeded
  3287                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3288  15D5  302D               	movlw	45
  3289  15D6  0022               	movlb	2	; select bank2
  3290  15D7  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3291  15D8  086C               	movf	??_USBCtrlEPService^(0+256),w
  3292  15D9  00CB               	movwf	_USBStatusStageTimeoutCounter^(0+256)	;volatile
  3293                           
  3294                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  3295  15DA  0021               	movlb	1	; select bank1
  3296  15DB  0860               	movf	_USTATcopy^(0+128),w	;volatile
  3297  15DC  39FD               	andlw	253
  3298  15DD  1D03               	btfss	3,2
  3299  15DE  2E23               	goto	l6649
  3300                           
  3301                           ;usb_device.c: 2383: {
  3302                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  3303  15DF  3660               	lsrf	_USTATcopy^(0+128),w	;volatile
  3304  15E0  393F               	andlw	63
  3305  15E1  0022               	movlb	2	; select bank2
  3306  15E2  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3307  15E3  3001               	movlw	1
  3308  15E4                     u6845:	
  3309  15E4  35EC               	lslf	??_USBCtrlEPService^(0+256),f
  3310  15E5  3EFF               	addlw	-1
  3311  15E6  1D03               	skipz
  3312  15E7  2DE4               	goto	u6845
  3313  15E8  356C               	lslf	??_USBCtrlEPService^(0+256),w
  3314  15E9  3E20               	addlw	32
  3315  15EA  00ED               	movwf	(??_USBCtrlEPService+1)^(0+256)
  3316  15EB  086D               	movf	(??_USBCtrlEPService+1)^(0+256),w
  3317  15EC  0021               	movlb	1	; select bank1
  3318  15ED  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  3319                           
  3320                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  3321  15EE  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3322  15EF  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  3323  15F0  39FF               	andlw	255
  3324  15F1  1D03               	skipz
  3325  15F2  3000               	movlw	0
  3326  15F3  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  3327                           
  3328                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  3329  15F4  3004               	movlw	4
  3330  15F5  0658               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  3331  15F6  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  3332  15F7  3000               	movlw	0
  3333  15F8  0659               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3334  15F9  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  3335                           
  3336                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  3337  15FA  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3338  15FB  0086               	movwf	6
  3339  15FC  0187               	clrf	7
  3340  15FD  0C01               	rrf	1,w
  3341  15FE  0C89               	rrf	9,f
  3342  15FF  390F               	andlw	15
  3343  1600  3A0D               	xorlw	13
  3344  1601  1D03               	skipz
  3345  1602  2E20               	goto	l6647
  3346                           
  3347                           ;usb_device.c: 2400: {
  3348                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  3349  1603  3050               	movlw	80
  3350  1604  0086               	movwf	6
  3351  1605  0187               	clrf	7
  3352  1606  0021               	movlb	1	; select bank1
  3353  1607  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3354  1608  3E02               	addlw	2
  3355  1609  0084               	movwf	4
  3356  160A  0185               	clrf	5
  3357  160B  3F00               	moviw [0]fsr0
  3358  160C  0022               	movlb	2	; select bank2
  3359  160D  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3360  160E  3F01               	moviw [1]fsr0
  3361  160F  00ED               	movwf	(??_USBCtrlEPService^(0+256)+1)
  3362  1610  086C               	movf	??_USBCtrlEPService^(0+256),w
  3363  1611  0084               	movwf	4
  3364  1612  086D               	movf	(??_USBCtrlEPService+1)^(0+256),w
  3365  1613  0085               	movwf	5
  3366  1614  3008               	movlw	8
  3367  1615  00EE               	movwf	(??_USBCtrlEPService+2)^(0+256)
  3368  1616  086E               	movf	(??_USBCtrlEPService+2)^(0+256),w
  3369  1617  1903               	skipnz
  3370  1618  2E1D               	goto	l6645
  3371  1619                     u686m0:	
  3372  1619  0012               	moviw fsr0++
  3373  161A  001E               	movwi fsr1++
  3374  161B  0BEE               	decfsz	(??_USBCtrlEPService+2)^(0+256),f
  3375  161C  2E19               	goto	u686m0
  3376  161D                     l6645:	
  3377                           
  3378                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  3379  161D  3194  248A         	fcall	_USBCtrlTrfSetupHandler
  3380                           
  3381                           ;usb_device.c: 2409: }
  3382  161F  0008               	return
  3383  1620                     l6647:	
  3384                           
  3385                           ;usb_device.c: 2410: else
  3386                           ;usb_device.c: 2411: {
  3387                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  3388  1620  3188  2001         	fcall	_USBCtrlTrfOutHandler
  3389                           
  3390                           ;usb_device.c: 2414: }
  3391                           ;usb_device.c: 2415: }
  3392  1622  0008               	return
  3393  1623                     l6649:	
  3394                           
  3395                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  3396  1623  30FD               	movlw	253
  3397  1624  0021               	movlb	1	; select bank1
  3398  1625  0560               	andwf	_USTATcopy^(0+128),w	;volatile
  3399  1626  0022               	movlb	2	; select bank2
  3400  1627  00EC               	movwf	??_USBCtrlEPService^(0+256)
  3401  1628  3004               	movlw	4
  3402  1629  066C               	xorwf	??_USBCtrlEPService^(0+256),w
  3403  162A  1D03               	btfss	3,2
  3404  162B  0008               	return
  3405                           
  3406                           ;usb_device.c: 2417: {
  3407                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  3408  162C  3189  2161         	fcall	_USBCtrlTrfInHandler
  3409  162E  0008               	return
  3410  162F                     __end_of_USBCtrlEPService:	
  3411                           
  3412                           	psect	text8
  3413  148A                     __ptext8:	
  3414 ;; *************** function _USBCtrlTrfSetupHandler *****************
  3415 ;; Defined at:
  3416 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;		None
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;Total ram usage:        1 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:   16
  3437 ;; This function calls:
  3438 ;;		_USBCheckStdRequest
  3439 ;;		_USBCtrlEPServiceComplete
  3440 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3441 ;; This function is called by:
  3442 ;;		_USBCtrlEPService
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           
  3447                           ;psect for function _USBCtrlTrfSetupHandler
  3448  148A                     _USBCtrlTrfSetupHandler:	
  3449                           
  3450                           ;usb_device.c: 2470: shortPacketStatus = 0;
  3451                           
  3452                           ;incstack = 0
  3453 ;; hardware stack exceeded
  3454                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3455  148A  0021               	movlb	1	; select bank1
  3456  148B  01DD               	clrf	_shortPacketStatus^(0+128)	;volatile
  3457                           
  3458                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  3459  148C  01DA               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
  3460                           
  3461                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  3462  148D  0022               	movlb	2	; select bank2
  3463  148E  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3464                           
  3465                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  3466  148F  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3467                           
  3468                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  3469  1490  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  3470                           
  3471                           ;usb_device.c: 2475: controlTransferState = 0;
  3472  1491  0021               	movlb	1	; select bank1
  3473  1492  01DC               	clrf	_controlTransferState^(0+128)	;volatile
  3474                           
  3475                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  3476  1493  307F               	movlw	127
  3477  1494  00C5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  3478  1495  084D               	movf	_pBDTEntryIn^(0+128),w
  3479  1496  0086               	movwf	6
  3480  1497  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3481  1498  0087               	movwf	7
  3482  1499  0845               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  3483  149A  0581               	andwf	1,f
  3484                           
  3485                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  3486  149B  3004               	movlw	4
  3487  149C  064D               	xorwf	_pBDTEntryIn^(0+128),w
  3488  149D  00CD               	movwf	_pBDTEntryIn^(0+128)
  3489  149E  3000               	movlw	0
  3490  149F  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
  3491  14A0  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  3492                           
  3493                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  3494  14A1  307F               	movlw	127
  3495  14A2  00C5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  3496  14A3  084D               	movf	_pBDTEntryIn^(0+128),w
  3497  14A4  0086               	movwf	6
  3498  14A5  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3499  14A6  0087               	movwf	7
  3500  14A7  0845               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  3501  14A8  0581               	andwf	1,f
  3502                           
  3503                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  3504  14A9  3004               	movlw	4
  3505  14AA  064D               	xorwf	_pBDTEntryIn^(0+128),w
  3506  14AB  00CD               	movwf	_pBDTEntryIn^(0+128)
  3507  14AC  3000               	movlw	0
  3508  14AD  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
  3509  14AE  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  3510                           
  3511                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  3512  14AF  307F               	movlw	127
  3513  14B0  00C5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  3514  14B1  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3515  14B2  0086               	movwf	6
  3516  14B3  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3517  14B4  0087               	movwf	7
  3518  14B5  0845               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  3519  14B6  0581               	andwf	1,f
  3520                           
  3521                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  3522  14B7  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  3523                           
  3524                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  3525  14B8  01D6               	clrf	(_inPipes^(0+128)+3)	;volatile
  3526  14B9  01D7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  3527                           
  3528                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  3529  14BA  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
  3530                           
  3531                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  3532  14BB  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
  3533  14BC  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  3534                           
  3535                           ;usb_device.c: 2500: USBCheckStdRequest();
  3536  14BD  3188  2038  3194   	fcall	_USBCheckStdRequest
  3537                           
  3538                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  3539  14C0  3000               	movlw	0
  3540  14C1  0021               	movlb	1	; select bank1
  3541  14C2  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  3542  14C3  3003               	movlw	3
  3543  14C4  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3544  14C5  3000               	movlw	0
  3545  14C6  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3546  14C7  3000               	movlw	0
  3547  14C8  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3548  14C9  3000               	movlw	0
  3549  14CA  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3550  14CB  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3551  14CC  3192  2265  3194   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3552                           
  3553                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  3554  14CF  318E  26D1         	fcall	_USBCtrlEPServiceComplete
  3555  14D1  0008               	return
  3556  14D2                     __end_of_USBCtrlTrfSetupHandler:	
  3557                           
  3558                           	psect	text9
  3559  0ED1                     __ptext9:	
  3560 ;; *************** function _USBCtrlEPServiceComplete *****************
  3561 ;; Defined at:
  3562 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      void 
  3569 ;; Registers used:
  3570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3579 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3580 ;;Total ram usage:        2 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:   12
  3583 ;; This function calls:
  3584 ;;		_USBCtrlEPAllowDataStage
  3585 ;;		_USBCtrlEPAllowStatusStage
  3586 ;; This function is called by:
  3587 ;;		_USBCtrlTrfSetupHandler
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           
  3592                           ;psect for function _USBCtrlEPServiceComplete
  3593  0ED1                     _USBCtrlEPServiceComplete:	
  3594                           
  3595                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  3596                           
  3597                           ;incstack = 0
  3598 ;; hardware stack exceeded
  3599                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3600  0ED1  003D               	movlb	29	; select bank29
  3601  0ED2  120E               	bcf	14,4	;volatile
  3602                           
  3603                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  3604  0ED3  0021               	movlb	1	; select bank1
  3605  0ED4  1BD5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  3606  0ED5  2F17               	goto	l508
  3607                           
  3608                           ;usb_device.c: 1629: {
  3609                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  3610  0ED6  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
  3611  0ED7  2EE6               	goto	l6117
  3612                           
  3613                           ;usb_device.c: 1631: {
  3614                           ;usb_device.c: 1632: controlTransferState = 2;
  3615  0ED8  3002               	movlw	2
  3616  0ED9  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3617  0EDA  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3618  0EDB  00DC               	movwf	_controlTransferState^(0+128)	;volatile
  3619                           
  3620                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  3621  0EDC  0022               	movlb	2	; select bank2
  3622  0EDD  0847               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
  3623  0EDE  1D03               	btfss	3,2
  3624  0EDF  2EE2               	goto	l6113
  3625                           
  3626                           ;usb_device.c: 1644: {
  3627                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  3628  0EE0  3196  26E5         	fcall	_USBCtrlEPAllowDataStage
  3629  0EE2                     l6113:	
  3630                           
  3631                           ;usb_device.c: 1646: }
  3632                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  3633  0EE2  0022               	movlb	2	; select bank2
  3634  0EE3  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3635                           
  3636                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  3637  0EE4  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3638                           
  3639                           ;usb_device.c: 1652: }
  3640  0EE5  0008               	return
  3641  0EE6                     l6117:	
  3642                           
  3643                           ;usb_device.c: 1653: else
  3644                           ;usb_device.c: 1654: {
  3645                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 16;
  3646  0EE6  0021               	movlb	1	; select bank1
  3647  0EE7  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3648  0EE8  3E01               	addlw	1
  3649  0EE9  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3650  0EEA  3000               	movlw	0
  3651  0EEB  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3652  0EEC  00B4               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  3653  0EED  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3654  0EEE  0086               	movwf	6
  3655  0EEF  0834               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  3656  0EF0  0087               	movwf	7
  3657  0EF1  3010               	movlw	16
  3658  0EF2  0081               	movwf	1
  3659                           
  3660                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3661  0EF3  3050               	movlw	80
  3662  0EF4  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3663  0EF5  3000               	movlw	0
  3664  0EF6  00B4               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  3665  0EF7  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3666  0EF8  0086               	movwf	6
  3667  0EF9  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3668  0EFA  0087               	movwf	7
  3669  0EFB  3142               	addfsr 1,2
  3670  0EFC  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3671  0EFD  3FC0               	movwi [0]fsr1
  3672  0EFE  0834               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  3673  0EFF  3FC1               	movwi [1]fsr1
  3674                           
  3675                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3676  0F00  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3677  0F01  0086               	movwf	6
  3678  0F02  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3679  0F03  0087               	movwf	7
  3680  0F04  300C               	movlw	12
  3681  0F05  0081               	movwf	1
  3682                           
  3683                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3684  0F06  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3685  0F07  0086               	movwf	6
  3686  0F08  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3687  0F09  0087               	movwf	7
  3688  0F0A  1781               	bsf	1,7
  3689                           
  3690                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  3691  0F0B  084D               	movf	_pBDTEntryIn^(0+128),w
  3692  0F0C  0086               	movwf	6
  3693  0F0D  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3694  0F0E  0087               	movwf	7
  3695  0F0F  3004               	movlw	4
  3696  0F10  0081               	movwf	1
  3697                           
  3698                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3699  0F11  084D               	movf	_pBDTEntryIn^(0+128),w
  3700  0F12  0086               	movwf	6
  3701  0F13  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3702  0F14  0087               	movwf	7
  3703  0F15  1781               	bsf	1,7
  3704                           
  3705                           ;usb_device.c: 1665: }
  3706                           ;usb_device.c: 1666: }
  3707  0F16  0008               	return
  3708  0F17                     l508:	
  3709                           
  3710                           ;usb_device.c: 1667: else
  3711                           ;usb_device.c: 1668: {
  3712                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  3713  0F17  0020               	movlb	0	; select bank0
  3714  0F18  1FD0               	btfss	80,7	;volatile
  3715  0F19  2F30               	goto	l6143
  3716                           
  3717                           ;usb_device.c: 1670: {
  3718                           ;usb_device.c: 1671: controlTransferState = 1;
  3719  0F1A  3001               	movlw	1
  3720  0F1B  0021               	movlb	1	; select bank1
  3721  0F1C  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3722  0F1D  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3723  0F1E  00DC               	movwf	_controlTransferState^(0+128)	;volatile
  3724                           
  3725                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  3726  0F1F  0022               	movlb	2	; select bank2
  3727  0F20  0848               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
  3728  0F21  1D03               	btfss	3,2
  3729  0F22  2F26               	goto	l6135
  3730                           
  3731                           ;usb_device.c: 1686: {
  3732                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  3733  0F23  3196  26E5  318E   	fcall	_USBCtrlEPAllowDataStage
  3734  0F26                     l6135:	
  3735                           
  3736                           ;usb_device.c: 1688: }
  3737                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  3738  0F26  0022               	movlb	2	; select bank2
  3739  0F27  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3740                           
  3741                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  3742  0F28  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3743                           
  3744                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  3745  0F29  0021               	movlb	1	; select bank1
  3746  0F2A  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  3747  0F2B  1D03               	btfss	3,2
  3748  0F2C  0008               	return
  3749                           
  3750                           ;usb_device.c: 1713: {
  3751                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  3752  0F2D  318A  22AD         	fcall	_USBCtrlEPAllowStatusStage
  3753                           
  3754                           ;usb_device.c: 1715: }
  3755                           ;usb_device.c: 1716: }
  3756  0F2F  0008               	return
  3757  0F30                     l6143:	
  3758                           
  3759                           ;usb_device.c: 1717: else
  3760                           ;usb_device.c: 1718: {
  3761                           ;usb_device.c: 1729: controlTransferState = 2;
  3762  0F30  3002               	movlw	2
  3763  0F31  0021               	movlb	1	; select bank1
  3764  0F32  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3765  0F33  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3766  0F34  00DC               	movwf	_controlTransferState^(0+128)	;volatile
  3767                           
  3768                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 16;
  3769  0F35  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3770  0F36  3E01               	addlw	1
  3771  0F37  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3772  0F38  3000               	movlw	0
  3773  0F39  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3774  0F3A  00B4               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  3775  0F3B  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3776  0F3C  0086               	movwf	6
  3777  0F3D  0834               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  3778  0F3E  0087               	movwf	7
  3779  0F3F  3010               	movlw	16
  3780  0F40  0081               	movwf	1
  3781                           
  3782                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3783  0F41  3050               	movlw	80
  3784  0F42  00B3               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  3785  0F43  3000               	movlw	0
  3786  0F44  00B4               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  3787  0F45  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3788  0F46  0086               	movwf	6
  3789  0F47  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3790  0F48  0087               	movwf	7
  3791  0F49  3142               	addfsr 1,2
  3792  0F4A  0833               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  3793  0F4B  3FC0               	movwi [0]fsr1
  3794  0F4C  0834               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  3795  0F4D  3FC1               	movwi [1]fsr1
  3796                           
  3797                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  3798  0F4E  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3799  0F4F  0086               	movwf	6
  3800  0F50  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3801  0F51  0087               	movwf	7
  3802  0F52  3004               	movlw	4
  3803  0F53  0081               	movwf	1
  3804                           
  3805                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3806  0F54  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3807  0F55  0086               	movwf	6
  3808  0F56  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3809  0F57  0087               	movwf	7
  3810  0F58  1781               	bsf	1,7
  3811                           
  3812                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  3813  0F59  0022               	movlb	2	; select bank2
  3814  0F5A  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3815                           
  3816                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  3817  0F5B  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3818                           
  3819                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  3820  0F5C  0021               	movlb	1	; select bank1
  3821  0F5D  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  3822  0F5E  1D03               	btfss	3,2
  3823  0F5F  0008               	return
  3824                           
  3825                           ;usb_device.c: 1741: {
  3826                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  3827  0F60  318A  22AD         	fcall	_USBCtrlEPAllowStatusStage
  3828  0F62  0008               	return
  3829  0F63                     __end_of_USBCtrlEPServiceComplete:	
  3830                           
  3831                           	psect	text10
  3832  16E5                     __ptext10:	
  3833 ;; *************** function _USBCtrlEPAllowDataStage *****************
  3834 ;; Defined at:
  3835 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;Total ram usage:        2 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:   11
  3856 ;; This function calls:
  3857 ;;		_USBCtrlTrfTxService
  3858 ;; This function is called by:
  3859 ;;		_USBCtrlEPServiceComplete
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           
  3864                           ;psect for function _USBCtrlEPAllowDataStage
  3865  16E5                     _USBCtrlEPAllowDataStage:	
  3866                           
  3867                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  3868                           
  3869                           ;incstack = 0
  3870 ;; hardware stack exceeded
  3871                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3872  16E5  0022               	movlb	2	; select bank2
  3873  16E6  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3874                           
  3875                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  3876  16E7  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3877                           
  3878                           ;usb_device.c: 1493: if(controlTransferState == 2)
  3879  16E8  3002               	movlw	2
  3880  16E9  0021               	movlb	1	; select bank1
  3881  16EA  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
  3882  16EB  1D03               	btfss	3,2
  3883  16EC  2F12               	goto	l5877
  3884                           
  3885                           ;usb_device.c: 1494: {
  3886                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 16;
  3887  16ED  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3888  16EE  3E01               	addlw	1
  3889  16EF  00B1               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  3890  16F0  3000               	movlw	0
  3891  16F1  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3892  16F2  00B2               	movwf	(??_USBCtrlEPAllowDataStage+1)^(0+128)
  3893  16F3  0831               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  3894  16F4  0086               	movwf	6
  3895  16F5  0832               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
  3896  16F6  0087               	movwf	7
  3897  16F7  3010               	movlw	16
  3898  16F8  0081               	movwf	1
  3899                           
  3900                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3901  16F9  3060               	movlw	96
  3902  16FA  00B1               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  3903  16FB  3000               	movlw	0
  3904  16FC  00B2               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  3905  16FD  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3906  16FE  0086               	movwf	6
  3907  16FF  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3908  1700  0087               	movwf	7
  3909  1701  3142               	addfsr 1,2
  3910  1702  0831               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  3911  1703  3FC0               	movwi [0]fsr1
  3912  1704  0832               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  3913  1705  3FC1               	movwi [1]fsr1
  3914                           
  3915                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  3916  1706  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3917  1707  0086               	movwf	6
  3918  1708  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3919  1709  0087               	movwf	7
  3920  170A  3048               	movlw	72
  3921  170B  0081               	movwf	1
  3922                           
  3923                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3924  170C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  3925  170D  0086               	movwf	6
  3926  170E  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  3927  170F  0087               	movwf	7
  3928  1710  1781               	bsf	1,7
  3929                           
  3930                           ;usb_device.c: 1500: }
  3931  1711  0008               	return
  3932  1712                     l5877:	
  3933                           
  3934                           ;usb_device.c: 1501: else
  3935                           ;usb_device.c: 1502: {
  3936                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  3937  1712  0857               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  3938  1713  0020               	movlb	0	; select bank0
  3939  1714  0257               	subwf	87,w	;volatile
  3940  1715  1D03               	skipz
  3941  1716  2F1B               	goto	u5925
  3942  1717  0021               	movlb	1	; select bank1
  3943  1718  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
  3944  1719  0020               	movlb	0	; select bank0
  3945  171A  0256               	subwf	86,w	;volatile
  3946  171B                     u5925:	
  3947  171B  1803               	skipnc
  3948  171C  2F24               	goto	l5881
  3949                           
  3950                           ;usb_device.c: 1506: {
  3951                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  3952  171D  0857               	movf	87,w	;volatile
  3953  171E  0021               	movlb	1	; select bank1
  3954  171F  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  3955  1720  0020               	movlb	0	; select bank0
  3956  1721  0856               	movf	86,w	;volatile
  3957  1722  0021               	movlb	1	; select bank1
  3958  1723  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  3959  1724                     l5881:	
  3960                           
  3961                           ;usb_device.c: 1508: }
  3962                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  3963  1724  318A  223B         	fcall	_USBCtrlTrfTxService
  3964                           
  3965                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3966  1726  3060               	movlw	96
  3967  1727  0021               	movlb	1	; select bank1
  3968  1728  00B1               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  3969  1729  3000               	movlw	0
  3970  172A  00B2               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  3971  172B  084D               	movf	_pBDTEntryIn^(0+128),w
  3972  172C  0086               	movwf	6
  3973  172D  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3974  172E  0087               	movwf	7
  3975  172F  3142               	addfsr 1,2
  3976  1730  0831               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  3977  1731  3FC0               	movwi [0]fsr1
  3978  1732  0832               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  3979  1733  3FC1               	movwi [1]fsr1
  3980                           
  3981                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  3982  1734  084D               	movf	_pBDTEntryIn^(0+128),w
  3983  1735  0086               	movwf	6
  3984  1736  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3985  1737  0087               	movwf	7
  3986  1738  3048               	movlw	72
  3987  1739  0081               	movwf	1
  3988                           
  3989                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3990  173A  084D               	movf	_pBDTEntryIn^(0+128),w
  3991  173B  0086               	movwf	6
  3992  173C  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  3993  173D  0087               	movwf	7
  3994  173E  1781               	bsf	1,7
  3995  173F  0008               	return
  3996  1740                     __end_of_USBCtrlEPAllowDataStage:	
  3997                           
  3998                           	psect	text11
  3999  0838                     __ptext11:	
  4000 ;; *************** function _USBCheckStdRequest *****************
  4001 ;; Defined at:
  4002 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4018 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4019 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4020 ;;Total ram usage:        1 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:   15
  4023 ;; This function calls:
  4024 ;;		_USBStdFeatureReqHandler
  4025 ;;		_USBStdGetDscHandler
  4026 ;;		_USBStdGetStatusHandler
  4027 ;;		_USBStdSetCfgHandler
  4028 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4029 ;; This function is called by:
  4030 ;;		_USBCtrlTrfSetupHandler
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           
  4035                           ;psect for function _USBCheckStdRequest
  4036  0838                     _USBCheckStdRequest:	
  4037                           
  4038                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  4039                           
  4040                           ;incstack = 0
  4041 ;; hardware stack exceeded
  4042                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4043  0838  0020               	movlb	0	; select bank0
  4044  0839  0E50               	swapf	80,w	;volatile
  4045  083A  0C89               	rrf	9,f
  4046  083B  3903               	andlw	3
  4047  083C  3A00               	xorlw	0
  4048  083D  1D03               	btfss	3,2
  4049  083E  0008               	return
  4050  083F  288C               	goto	l6237
  4051  0840                     l635:	
  4052                           ;usb_device.c: 2691: {
  4053                           ;usb_device.c: 2692: case 5:
  4054                           
  4055                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  4056                           
  4057                           
  4058                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  4059  0840  0021               	movlb	1	; select bank1
  4060  0841  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4061                           
  4062                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  4063  0842  3008               	movlw	8
  4064  0843  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4065  0844  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4066  0845  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  4067                           
  4068                           ;usb_device.c: 2696: break;
  4069  0846  0008               	return
  4070  0847                     l6207:	
  4071                           ;usb_device.c: 2697: case 6:
  4072                           
  4073                           
  4074                           ;usb_device.c: 2698: USBStdGetDscHandler();
  4075  0847  318B  23A0         	fcall	_USBStdGetDscHandler
  4076                           
  4077                           ;usb_device.c: 2699: break;
  4078  0849  0008               	return
  4079  084A                     l6209:	
  4080                           ;usb_device.c: 2700: case 9:
  4081                           
  4082                           
  4083                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  4084  084A  318D  2520         	fcall	_USBStdSetCfgHandler
  4085                           
  4086                           ;usb_device.c: 2702: break;
  4087  084C  0008               	return
  4088  084D                     l6211:	
  4089                           ;usb_device.c: 2703: case 8:
  4090                           
  4091                           
  4092                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  4093  084D  30E1               	movlw	low _USBActiveConfiguration
  4094  084E  0021               	movlb	1	; select bank1
  4095  084F  00D3               	movwf	_inPipes^(0+128)	;volatile
  4096  0850  3000               	movlw	high _USBActiveConfiguration
  4097  0851  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4098                           
  4099                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4100  0852  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4101                           
  4102                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  4103  0853  3001               	movlw	1
  4104  0854  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4105  0855  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4106  0856  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4107                           
  4108                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  4109  0857  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4110                           
  4111                           ;usb_device.c: 2708: break;
  4112  0858  0008               	return
  4113  0859                     l6219:	
  4114                           ;usb_device.c: 2709: case 0:
  4115                           
  4116                           
  4117                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  4118  0859  3195  257D         	fcall	_USBStdGetStatusHandler
  4119                           
  4120                           ;usb_device.c: 2711: break;
  4121  085B  0008               	return
  4122  085C                     l6221:	
  4123                           ;usb_device.c: 2712: case 1:
  4124                           
  4125                           
  4126                           ;usb_device.c: 2713: case 3:
  4127                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  4128  085C  3180  204D         	fcall	_USBStdFeatureReqHandler
  4129                           
  4130                           ;usb_device.c: 2715: break;
  4131  085E  0008               	return
  4132  085F                     l6223:	
  4133                           ;usb_device.c: 2716: case 10:
  4134                           
  4135                           
  4136                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  4137  085F  0020               	movlb	0	; select bank0
  4138  0860  0854               	movf	84,w	;volatile
  4139  0861  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  4140  0862  0021               	movlb	1	; select bank1
  4141  0863  00D3               	movwf	_inPipes^(0+128)	;volatile
  4142  0864  3001               	movlw	1
  4143  0865  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4144                           
  4145                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4146  0866  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4147                           
  4148                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  4149  0867  3001               	movlw	1
  4150  0868  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4151  0869  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4152  086A  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4153                           
  4154                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  4155  086B  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4156                           
  4157                           ;usb_device.c: 2721: break;
  4158  086C  0008               	return
  4159  086D                     l644:	
  4160                           ;usb_device.c: 2722: case 11:
  4161                           
  4162                           
  4163                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  4164  086D  0021               	movlb	1	; select bank1
  4165  086E  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4166                           
  4167                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  4168  086F  0020               	movlb	0	; select bank0
  4169  0870  0852               	movf	82,w	;volatile
  4170  0871  0021               	movlb	1	; select bank1
  4171  0872  00C4               	movwf	??_USBCheckStdRequest^(0+128)
  4172  0873  0020               	movlb	0	; select bank0
  4173  0874  0854               	movf	84,w	;volatile
  4174  0875  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  4175  0876  0086               	movwf	6
  4176  0877  3001               	movlw	1	; select bank2/3
  4177  0878  0087               	movwf	7
  4178  0879  0021               	movlb	1	; select bank1
  4179  087A  0844               	movf	??_USBCheckStdRequest^(0+128),w
  4180  087B  0081               	movwf	1
  4181                           
  4182                           ;usb_device.c: 2725: break;
  4183  087C  0008               	return
  4184  087D                     l6233:	
  4185                           ;usb_device.c: 2726: case 7:
  4186                           
  4187                           
  4188                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  4189  087D  3000               	movlw	0
  4190  087E  0021               	movlb	1	; select bank1
  4191  087F  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4192  0880  3002               	movlw	2
  4193  0881  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4194  0882  3000               	movlw	0
  4195  0883  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4196  0884  3000               	movlw	0
  4197  0885  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4198  0886  3000               	movlw	0
  4199  0887  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4200  0888  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4201  0889  3192  2265         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4202                           
  4203                           ;usb_device.c: 2732: }
  4204                           
  4205                           ;usb_device.c: 2731: break;
  4206                           
  4207                           ;usb_device.c: 2730: default:
  4208                           
  4209                           ;usb_device.c: 2729: case 12:
  4210                           
  4211                           ;usb_device.c: 2728: break;
  4212  088B  0008               	return
  4213  088C                     l6237:	
  4214  088C  0020               	movlb	0	; select bank0
  4215  088D  0851               	movf	81,w	;volatile
  4216                           
  4217                           ; Switch size 1, requested type "space"
  4218                           ; Number of cases is 11, Range of values is 0 to 12
  4219                           ; switch strategies available:
  4220                           ; Name         Instructions Cycles
  4221                           ; direct_byte           32     6 (fixed)
  4222                           ; simple_byte           34    18 (average)
  4223                           ; jumptable            260     6 (fixed)
  4224                           ;	Chosen strategy is direct_byte
  4225  088E  0084               	movwf	4
  4226  088F  300D               	movlw	13
  4227  0890  0204               	subwf	4,w
  4228  0891  1803               	skipnc
  4229  0892  0008               	return
  4230  0893  3190               	movlp	high S7215
  4231  0894  3504               	lslf	4,w
  4232  0895  3E00               	addlw	low S7215
  4233  0896  0082               	movwf	2
  4234  0897                     l633:	
  4235  0897  0008               	return
  4236  0898                     __end_of_USBCheckStdRequest:	
  4237                           
  4238                           	psect	swtext1
  4239  1000                     __pswtext1:	
  4240  1000                     S7215:	
  4241  1000  3188  2859         	ljmp	l6219
  4242  1002  3188  285C         	ljmp	l6221
  4243  1004  3188  2897         	ljmp	l633
  4244  1006  3188  285C         	ljmp	l6221
  4245  1008  3188  2897         	ljmp	l633
  4246  100A  3188  2840         	ljmp	l635
  4247  100C  3188  2847         	ljmp	l6207
  4248  100E  3188  287D         	ljmp	l6233
  4249  1010  3188  284D         	ljmp	l6211
  4250  1012  3188  284A         	ljmp	l6209
  4251  1014  3188  285F         	ljmp	l6223
  4252  1016  3188  286D         	ljmp	l644
  4253  1018  3188  2897         	ljmp	l633
  4254                           
  4255                           	psect	text12
  4256  0D20                     __ptext12:	
  4257 ;; *************** function _USBStdSetCfgHandler *****************
  4258 ;; Defined at:
  4259 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  p               2    0[BANK2 ] PTR unsigned char 
  4264 ;;		 -> UEP1(1), 
  4265 ;;  i               1    2[BANK2 ] unsigned char 
  4266 ;;  i               1    3[BANK2 ] unsigned char 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4278 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4279 ;;      Totals:         0       0       1       4       0       0       0       0       0       0       0       0       
      +0       0
  4280 ;;Total ram usage:        5 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:   14
  4283 ;; This function calls:
  4284 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4285 ;;		_memset
  4286 ;; This function is called by:
  4287 ;;		_USBCheckStdRequest
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           
  4292                           ;psect for function _USBStdSetCfgHandler
  4293  0D20                     _USBStdSetCfgHandler:	
  4294                           
  4295                           ;usb_device.c: 1970: uint8_t i;
  4296                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  4297                           
  4298                           ;incstack = 0
  4299 ;; hardware stack exceeded
  4300                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4301  0D20  0021               	movlb	1	; select bank1
  4302  0D21  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4303                           
  4304                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  4305  0D22  300E               	movlw	14
  4306  0D23  0022               	movlb	2	; select bank2
  4307  0D24  00E8               	movwf	(USBStdSetCfgHandler@p+1)^(0+256)
  4308  0D25  3099               	movlw	153
  4309  0D26  00E7               	movwf	USBStdSetCfgHandler@p^(0+256)
  4310  0D27  01E9               	clrf	USBStdSetCfgHandler@i_2173^(0+256)
  4311  0D28  3002               	movlw	2
  4312  0D29  0269               	subwf	USBStdSetCfgHandler@i_2173^(0+256),w
  4313  0D2A  1803               	btfsc	3,0
  4314  0D2B  2D3F               	goto	l5905
  4315  0D2C                     l5897:	
  4316  0D2C  0867               	movf	USBStdSetCfgHandler@p^(0+256),w
  4317  0D2D  0086               	movwf	6
  4318  0D2E  0868               	movf	(USBStdSetCfgHandler@p+1)^(0+256),w
  4319  0D2F  0087               	movwf	7
  4320  0D30  0181               	clrf	1
  4321  0D31  3001               	movlw	1
  4322  0D32  07E7               	addwf	USBStdSetCfgHandler@p^(0+256),f
  4323  0D33  3000               	movlw	0
  4324  0D34  3DE8               	addwfc	(USBStdSetCfgHandler@p+1)^(0+256),f
  4325  0D35  3001               	movlw	1
  4326  0D36  0021               	movlb	1	; select bank1
  4327  0D37  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4328  0D38  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4329  0D39  0022               	movlb	2	; select bank2
  4330  0D3A  07E9               	addwf	USBStdSetCfgHandler@i_2173^(0+256),f
  4331  0D3B  3002               	movlw	2
  4332  0D3C  0269               	subwf	USBStdSetCfgHandler@i_2173^(0+256),w
  4333  0D3D  1C03               	skipc
  4334  0D3E  2D2C               	goto	l5897
  4335  0D3F                     l5905:	
  4336                           
  4337                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  4338  0D3F  3020               	movlw	32
  4339  0D40  0021               	movlb	1	; select bank1
  4340  0D41  00AE               	movwf	memset@p1^(0+128)
  4341  0D42  3000               	movlw	0
  4342  0D43  00AF               	movwf	(memset@p1+1)^(0+128)
  4343  0D44  3000               	movlw	0
  4344  0D45  00B0               	movwf	memset@c^(0+128)
  4345  0D46  00B1               	movwf	(memset@c+1)^(0+128)
  4346  0D47  3030               	movlw	48
  4347  0D48  00B2               	movwf	memset@n^(0+128)
  4348  0D49  3000               	movlw	0
  4349  0D4A  00B3               	movwf	(memset@n^(0+128)+1)
  4350  0D4B  3190  20BD  318D   	fcall	_memset
  4351                           
  4352                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  4353  0D4E  003D               	movlb	29	; select bank29
  4354  0D4F  170E               	bsf	14,6	;volatile
  4355                           
  4356                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  4357  0D50  0022               	movlb	2	; select bank2
  4358  0D51  01EA               	clrf	USBStdSetCfgHandler@i^(0+256)
  4359  0D52  3003               	movlw	3
  4360  0D53  026A               	subwf	USBStdSetCfgHandler@i^(0+256),w
  4361  0D54  1803               	btfsc	3,0
  4362  0D55  2D6C               	goto	l5921
  4363  0D56                     l5915:	
  4364                           
  4365                           ;usb_device.c: 1988: {
  4366                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  4367  0D56  086A               	movf	USBStdSetCfgHandler@i^(0+256),w
  4368  0D57  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4369  0D58  0086               	movwf	6
  4370  0D59  3001               	movlw	1	; select bank2/3
  4371  0D5A  0087               	movwf	7
  4372  0D5B  0181               	clrf	1
  4373                           
  4374                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  4375  0D5C  086A               	movf	USBStdSetCfgHandler@i^(0+256),w
  4376  0D5D  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4377  0D5E  0086               	movwf	6
  4378  0D5F  3001               	movlw	1	; select bank2/3
  4379  0D60  0087               	movwf	7
  4380  0D61  0181               	clrf	1
  4381  0D62  3001               	movlw	1
  4382  0D63  0021               	movlb	1	; select bank1
  4383  0D64  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4384  0D65  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4385  0D66  0022               	movlb	2	; select bank2
  4386  0D67  07EA               	addwf	USBStdSetCfgHandler@i^(0+256),f
  4387  0D68  3003               	movlw	3
  4388  0D69  026A               	subwf	USBStdSetCfgHandler@i^(0+256),w
  4389  0D6A  1C03               	skipc
  4390  0D6B  2D56               	goto	l5915
  4391  0D6C                     l5921:	
  4392                           
  4393                           ;usb_device.c: 1991: }
  4394                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  4395  0D6C  3065               	movlw	low _USBAlternateInterface
  4396  0D6D  0021               	movlb	1	; select bank1
  4397  0D6E  00AE               	movwf	memset@p1^(0+128)
  4398  0D6F  3001               	movlw	high _USBAlternateInterface
  4399  0D70  00AF               	movwf	(memset@p1+1)^(0+128)
  4400  0D71  3000               	movlw	0
  4401  0D72  00B0               	movwf	memset@c^(0+128)
  4402  0D73  00B1               	movwf	(memset@c+1)^(0+128)
  4403  0D74  3002               	movlw	2
  4404  0D75  00B2               	movwf	memset@n^(0+128)
  4405  0D76  3000               	movlw	0
  4406  0D77  00B3               	movwf	(memset@n^(0+128)+1)
  4407  0D78  3190  20BD  318D   	fcall	_memset
  4408                           
  4409                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  4410  0D7B  003D               	movlb	29	; select bank29
  4411  0D7C  130E               	bcf	14,6	;volatile
  4412                           
  4413                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4414  0D7D  3028               	movlw	40
  4415  0D7E  0021               	movlb	1	; select bank1
  4416  0D7F  00CD               	movwf	_pBDTEntryIn^(0+128)
  4417  0D80  3000               	movlw	0
  4418  0D81  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  4419                           
  4420                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  4421  0D82  3020               	movlw	32
  4422  0D83  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4423  0D84  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4424  0D85  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  4425                           
  4426                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4427  0D86  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4428  0D87  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4429  0D88  39FF               	andlw	255
  4430  0D89  1D03               	skipz
  4431  0D8A  3000               	movlw	0
  4432  0D8B  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4433                           
  4434                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  4435  0D8C  0020               	movlb	0	; select bank0
  4436  0D8D  0852               	movf	82,w	;volatile
  4437  0D8E  0021               	movlb	1	; select bank1
  4438  0D8F  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4439  0D90  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4440  0D91  00E1               	movwf	_USBActiveConfiguration^(0+128)	;volatile
  4441                           
  4442                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  4443  0D92  0861               	movf	_USBActiveConfiguration^(0+128),w	;volatile
  4444  0D93  1D03               	btfss	3,2
  4445  0D94  2D9A               	goto	l5937
  4446                           
  4447                           ;usb_device.c: 2010: {
  4448                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  4449  0D95  3010               	movlw	16
  4450  0D96  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4451  0D97  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4452  0D98  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  4453                           
  4454                           ;usb_device.c: 2013: }
  4455  0D99  0008               	return
  4456  0D9A                     l5937:	
  4457                           
  4458                           ;usb_device.c: 2014: else
  4459                           ;usb_device.c: 2015: {
  4460                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  4461  0D9A  3000               	movlw	0
  4462  0D9B  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4463  0D9C  3001               	movlw	1
  4464  0D9D  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4465  0D9E  30E1               	movlw	low _USBActiveConfiguration
  4466  0D9F  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4467  0DA0  3000               	movlw	high _USBActiveConfiguration
  4468  0DA1  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4469  0DA2  3001               	movlw	1
  4470  0DA3  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4471  0DA4  3000               	movlw	0
  4472  0DA5  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  4473  0DA6  3192  2265         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4474                           
  4475                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  4476  0DA8  3020               	movlw	32
  4477  0DA9  0021               	movlb	1	; select bank1
  4478  0DAA  00C2               	movwf	??_USBStdSetCfgHandler^(0+128)
  4479  0DAB  0842               	movf	??_USBStdSetCfgHandler^(0+128),w
  4480  0DAC  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  4481  0DAD  0008               	return
  4482  0DAE                     __end_of_USBStdSetCfgHandler:	
  4483                           
  4484                           	psect	text13
  4485  10BD                     __ptext13:	
  4486 ;; *************** function _memset *****************
  4487 ;; Defined at:
  4488 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  p1              2   14[BANK1 ] PTR void 
  4491 ;;		 -> USBAlternateInterface(2), BDT(48), 
  4492 ;;  c               2   16[BANK1 ] int 
  4493 ;;  n               2   18[BANK1 ] unsigned int 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  p               2   20[BANK1 ] PTR unsigned char 
  4496 ;;		 -> USBAlternateInterface(2), BDT(48), 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  2   14[BANK1 ] PTR void 
  4499 ;; Registers used:
  4500 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4506 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;Total ram usage:        8 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:   10
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_USBStdSetCfgHandler
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _memset
  4522  10BD                     _memset:	
  4523                           
  4524                           ;incstack = 0
  4525 ;; hardware stack exceeded
  4526                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4527  10BD  0021               	movlb	1	; select bank1
  4528  10BE  082F               	movf	(memset@p1+1)^(0+128),w
  4529  10BF  00B5               	movwf	(memset@p+1)^(0+128)
  4530  10C0  082E               	movf	memset@p1^(0+128),w
  4531  10C1  00B4               	movwf	memset@p^(0+128)
  4532  10C2                     l5809:	
  4533  10C2  3001               	movlw	1
  4534  10C3  02B2               	subwf	memset@n^(0+128),f
  4535  10C4  3000               	movlw	0
  4536  10C5  3BB3               	subwfb	(memset@n+1)^(0+128),f
  4537  10C6  0A32               	incf	memset@n^(0+128),w
  4538  10C7  1903               	btfsc	3,2
  4539  10C8  0A33               	incf	(memset@n+1)^(0+128),w
  4540  10C9  1903               	btfsc	3,2
  4541  10CA  0008               	return
  4542  10CB  0834               	movf	memset@p^(0+128),w
  4543  10CC  0086               	movwf	6
  4544  10CD  0835               	movf	(memset@p+1)^(0+128),w
  4545  10CE  0087               	movwf	7
  4546  10CF  0830               	movf	memset@c^(0+128),w
  4547  10D0  0081               	movwf	1
  4548  10D1  3001               	movlw	1
  4549  10D2  07B4               	addwf	memset@p^(0+128),f
  4550  10D3  3000               	movlw	0
  4551  10D4  3DB5               	addwfc	(memset@p+1)^(0+128),f
  4552  10D5  28C2               	goto	l5809
  4553  10D6                     __end_of_memset:	
  4554                           ;	Return value of _memset is never used
  4555                           
  4556                           
  4557                           	psect	text14
  4558  157D                     __ptext14:	
  4559 ;; *************** function _USBStdGetStatusHandler *****************
  4560 ;; Defined at:
  4561 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  p               2   15[BANK1 ] PTR struct __BDT
  4566 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      void 
  4569 ;; Registers used:
  4570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;Total ram usage:        3 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:   10
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_USBCheckStdRequest
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _USBStdGetStatusHandler
  4592  157D                     _USBStdGetStatusHandler:	
  4593                           
  4594                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  4595                           
  4596                           ;incstack = 0
  4597                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  4598  157D  0020               	movlb	0	; select bank0
  4599  157E  01E0               	clrf	96	;volatile
  4600                           
  4601                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  4602  157F  01E1               	clrf	97	;volatile
  4603                           
  4604                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  4605  1580  2DBC               	goto	l5993
  4606  1581                     l573:	
  4607                           ;usb_device.c: 2135: {
  4608                           ;usb_device.c: 2136: case (0x00):
  4609                           
  4610                           
  4611                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  4612  1581  0021               	movlb	1	; select bank1
  4613  1582  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4614                           
  4615                           ;usb_device.c: 2145: }
  4616                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  4617                           
  4618                           ;usb_device.c: 2143: {
  4619                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  4620                           
  4621                           ;usb_device.c: 2142: if(0 == 1)
  4622  1583  0022               	movlb	2	; select bank2
  4623  1584  034E               	decf	_RemoteWakeup^(0+256),w	;volatile
  4624  1585  1D03               	btfss	3,2
  4625  1586  2DC8               	goto	l576
  4626                           
  4627                           ;usb_device.c: 2148: {
  4628                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  4629  1587  0020               	movlb	0	; select bank0
  4630  1588  14E0               	bsf	96,1	;volatile
  4631                           
  4632                           ;usb_device.c: 2150: }
  4633                           ;usb_device.c: 2151: break;
  4634  1589  2DC8               	goto	l576
  4635  158A                     l577:	
  4636                           ;usb_device.c: 2152: case (0x01):
  4637                           
  4638                           
  4639                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  4640  158A  0021               	movlb	1	; select bank1
  4641  158B  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4642                           
  4643                           ;usb_device.c: 2154: break;
  4644  158C  2DC8               	goto	l576
  4645  158D                     l578:	
  4646                           ;usb_device.c: 2155: case (0x02):
  4647                           
  4648                           
  4649                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  4650  158D  0021               	movlb	1	; select bank1
  4651  158E  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4652                           
  4653                           ;usb_device.c: 2160: {
  4654                           ;usb_device.c: 2161: BDT_ENTRY *p;
  4655                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  4656  158F  0020               	movlb	0	; select bank0
  4657  1590  1BD4               	btfsc	84,7	;volatile
  4658  1591  2D9E               	goto	l5983
  4659                           
  4660                           ;usb_device.c: 2164: {
  4661                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  4662  1592  0854               	movf	84,w	;volatile
  4663  1593  390F               	andlw	15
  4664  1594  0709               	addwf	9,w
  4665  1595  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4666  1596  0086               	movwf	6
  4667  1597  3001               	movlw	1	; select bank2/3
  4668  1598  0087               	movwf	7
  4669  1599  3F40               	moviw [0]fsr1
  4670  159A  0021               	movlb	1	; select bank1
  4671  159B  00AF               	movwf	USBStdGetStatusHandler@p^(0+128)
  4672  159C  3F41               	moviw [1]fsr1
  4673  159D  2DA9               	goto	L2
  4674  159E                     l5983:	
  4675                           ;usb_device.c: 2166: }
  4676                           
  4677                           
  4678                           ;usb_device.c: 2167: else
  4679                           ;usb_device.c: 2168: {
  4680                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  4681  159E  0020               	movlb	0	; select bank0
  4682  159F  0854               	movf	84,w	;volatile
  4683  15A0  390F               	andlw	15
  4684  15A1  0709               	addwf	9,w
  4685  15A2  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  4686  15A3  0086               	movwf	6
  4687  15A4  0187               	clrf	7
  4688  15A5  3F40               	moviw [0]fsr1
  4689  15A6  0021               	movlb	1	; select bank1
  4690  15A7  00AF               	movwf	USBStdGetStatusHandler@p^(0+128)
  4691  15A8  3F41               	moviw [1]fsr1
  4692  15A9                     L2:	
  4693  15A9  00B0               	movwf	(USBStdGetStatusHandler@p+1)^(0+128)
  4694                           
  4695                           ;usb_device.c: 2170: }
  4696                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  4697  15AA  082F               	movf	USBStdGetStatusHandler@p^(0+128),w
  4698  15AB  0086               	movwf	6
  4699  15AC  0830               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  4700  15AD  0087               	movwf	7
  4701  15AE  1F81               	btfss	1,7
  4702  15AF  2DC8               	goto	l576
  4703  15B0  082F               	movf	USBStdGetStatusHandler@p^(0+128),w
  4704  15B1  0086               	movwf	6
  4705  15B2  0830               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  4706  15B3  0087               	movwf	7
  4707  15B4  1D01               	btfss	1,2
  4708  15B5  2DC8               	goto	l576
  4709                           
  4710                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  4711  15B6  3001               	movlw	1
  4712  15B7  00AE               	movwf	??_USBStdGetStatusHandler^(0+128)
  4713  15B8  082E               	movf	??_USBStdGetStatusHandler^(0+128),w
  4714  15B9  0020               	movlb	0	; select bank0
  4715  15BA  00E0               	movwf	96	;volatile
  4716                           
  4717                           ;usb_device.c: 2175: }
  4718                           ;usb_device.c: 2176: }
  4719                           
  4720                           ;usb_device.c: 2174: break;
  4721  15BB  2DC8               	goto	l576
  4722  15BC                     l5993:	
  4723  15BC  0850               	movf	80,w	;volatile
  4724  15BD  391F               	andlw	31
  4725                           
  4726                           ; Switch size 1, requested type "space"
  4727                           ; Number of cases is 3, Range of values is 0 to 2
  4728                           ; switch strategies available:
  4729                           ; Name         Instructions Cycles
  4730                           ; simple_byte           10     6 (average)
  4731                           ; direct_byte           12     6 (fixed)
  4732                           ; jumptable            260     6 (fixed)
  4733                           ;	Chosen strategy is simple_byte
  4734  15BE  3A00               	xorlw	0	; case 0
  4735  15BF  1903               	skipnz
  4736  15C0  2D81               	goto	l573
  4737  15C1  3A01               	xorlw	1	; case 1
  4738  15C2  1903               	skipnz
  4739  15C3  2D8A               	goto	l577
  4740  15C4  3A03               	xorlw	3	; case 2
  4741  15C5  1903               	skipnz
  4742  15C6  2D8D               	goto	l578
  4743  15C7  2DC8               	goto	l576
  4744  15C8                     l576:	
  4745                           
  4746                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  4747  15C8  0021               	movlb	1	; select bank1
  4748  15C9  1FD5               	btfss	(_inPipes^(0+128)+2),7	;volatile
  4749  15CA  0008               	return
  4750                           
  4751                           ;usb_device.c: 2179: {
  4752                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  4753  15CB  3060               	movlw	96
  4754  15CC  00D3               	movwf	_inPipes^(0+128)	;volatile
  4755  15CD  3000               	movlw	0
  4756  15CE  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4757                           
  4758                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4759  15CF  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4760                           
  4761                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  4762  15D0  3002               	movlw	2
  4763  15D1  00AE               	movwf	??_USBStdGetStatusHandler^(0+128)
  4764  15D2  082E               	movf	??_USBStdGetStatusHandler^(0+128),w
  4765  15D3  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4766  15D4  0008               	return
  4767  15D5                     __end_of_USBStdGetStatusHandler:	
  4768                           
  4769                           	psect	text15
  4770  0BA0                     __ptext15:	
  4771 ;; *************** function _USBStdGetDscHandler *****************
  4772 ;; Defined at:
  4773 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;		None
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4789 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;Total ram usage:        3 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:   10
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_USBCheckStdRequest
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           
  4802                           ;psect for function _USBStdGetDscHandler
  4803  0BA0                     _USBStdGetDscHandler:	
  4804                           
  4805                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  4806                           
  4807                           ;incstack = 0
  4808                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  4809  0BA0  3080               	movlw	128
  4810  0BA1  0020               	movlb	0	; select bank0
  4811  0BA2  0650               	xorwf	80,w	;volatile
  4812  0BA3  1D03               	btfss	3,2
  4813  0BA4  0008               	return
  4814                           
  4815                           ;usb_device.c: 2046: {
  4816                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  4817  0BA5  30C0               	movlw	192
  4818  0BA6  0021               	movlb	1	; select bank1
  4819  0BA7  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4820  0BA8  082E               	movf	??_USBStdGetDscHandler^(0+128),w
  4821  0BA9  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
  4822                           
  4823                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  4824  0BAA  2C12               	goto	l5971
  4825  0BAB                     l5945:	
  4826                           ;usb_device.c: 2050: {
  4827                           ;usb_device.c: 2051: case 0x01:
  4828                           
  4829                           
  4830                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  4831  0BAB  307D               	movlw	low (_device_dsc| (0+32768))
  4832  0BAC  0021               	movlb	1	; select bank1
  4833  0BAD  00D3               	movwf	_inPipes^(0+128)	;volatile
  4834  0BAE  3098               	movlw	high (_device_dsc| (0+32768))
  4835  0BAF  00D4               	movwf	(_inPipes^(0+128)+1)	;volatile
  4836                           
  4837                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  4838  0BB0  3000               	movlw	0
  4839  0BB1  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  4840  0BB2  3012               	movlw	18
  4841  0BB3  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4842                           
  4843                           ;usb_device.c: 2058: break;
  4844  0BB4  0008               	return
  4845  0BB5                     l5949:	
  4846                           ;usb_device.c: 2059: case 0x02:
  4847                           
  4848                           
  4849                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  4850  0BB5  0020               	movlb	0	; select bank0
  4851  0BB6  0852               	movf	82,w	;volatile
  4852  0BB7  1D03               	btfss	3,2
  4853  0BB8  2BE8               	goto	l5957
  4854                           
  4855                           ;usb_device.c: 2064: {
  4856                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  4857  0BB9  0852               	movf	82,w	;volatile
  4858  0BBA  0021               	movlb	1	; select bank1
  4859  0BBB  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4860  0BBC  01AF               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  4861  0BBD  35AE               	lslf	??_USBStdGetDscHandler^(0+128),f
  4862  0BBE  0DAF               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  4863  0BBF  3099               	movlw	low (_USB_CD_Ptr| (0+32768))
  4864  0BC0  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4865  0BC1  0084               	movwf	4
  4866  0BC2  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
  4867  0BC3  3D2F               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  4868  0BC4  0085               	movwf	5
  4869  0BC5  3F00               	moviw [0]fsr0
  4870  0BC6  00D3               	movwf	_inPipes^(0+128)	;volatile
  4871  0BC7  3F01               	moviw [1]fsr0
  4872  0BC8  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4873                           
  4874                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  4875  0BC9  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  4876  0BCA  00AF               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  4877  0BCB  0853               	movf	_inPipes^(0+128),w	;volatile
  4878  0BCC  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4879  0BCD  3002               	movlw	2
  4880  0BCE  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4881  0BCF  0084               	movwf	4
  4882  0BD0  082F               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  4883  0BD1  1803               	skipnc
  4884  0BD2  0A2F               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  4885  0BD3  0085               	movwf	5
  4886  0BD4  0800               	movf	0,w	;code access
  4887  0BD5  00B0               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  4888  0BD6  0830               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  4889  0BD7  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4890                           
  4891                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  4892  0BD8  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  4893  0BD9  00AF               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  4894  0BDA  0853               	movf	_inPipes^(0+128),w	;volatile
  4895  0BDB  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4896  0BDC  3003               	movlw	3
  4897  0BDD  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4898  0BDE  0084               	movwf	4
  4899  0BDF  082F               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  4900  0BE0  1803               	skipnc
  4901  0BE1  0A2F               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  4902  0BE2  0085               	movwf	5
  4903  0BE3  0800               	movf	0,w	;code access
  4904  0BE4  00B0               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  4905  0BE5  0830               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  4906  0BE6  00D7               	movwf	(_inPipes^(0+128)+4)	;volatile
  4907                           
  4908                           ;usb_device.c: 2076: }
  4909  0BE7  0008               	return
  4910  0BE8                     l5957:	
  4911                           
  4912                           ;usb_device.c: 2077: else
  4913                           ;usb_device.c: 2078: {
  4914                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  4915  0BE8  0021               	movlb	1	; select bank1
  4916  0BE9  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4917                           
  4918                           ;usb_device.c: 2080: }
  4919                           ;usb_device.c: 2081: break;
  4920  0BEA  0008               	return
  4921  0BEB                     l5959:	
  4922                           ;usb_device.c: 2082: case 0x03:
  4923                           
  4924                           
  4925                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  4926  0BEB  3003               	movlw	3
  4927  0BEC  0020               	movlb	0	; select bank0
  4928  0BED  0252               	subwf	82,w	;volatile
  4929  0BEE  1803               	skipnc
  4930  0BEF  2C0C               	goto	l5965
  4931                           
  4932                           ;usb_device.c: 2087: {
  4933                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  4934  0BF0  0852               	movf	82,w	;volatile
  4935  0BF1  0021               	movlb	1	; select bank1
  4936  0BF2  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4937  0BF3  01AF               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  4938  0BF4  35AE               	lslf	??_USBStdGetDscHandler^(0+128),f
  4939  0BF5  0DAF               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  4940  0BF6  308F               	movlw	low (_USB_SD_Ptr| (0+32768))
  4941  0BF7  072E               	addwf	??_USBStdGetDscHandler^(0+128),w
  4942  0BF8  0084               	movwf	4
  4943  0BF9  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
  4944  0BFA  3D2F               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  4945  0BFB  0085               	movwf	5
  4946  0BFC  3F00               	moviw [0]fsr0
  4947  0BFD  00D3               	movwf	_inPipes^(0+128)	;volatile
  4948  0BFE  3F01               	moviw [1]fsr0
  4949  0BFF  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4950                           
  4951                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  4952  0C00  0853               	movf	_inPipes^(0+128),w	;volatile
  4953  0C01  0084               	movwf	4
  4954  0C02  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  4955  0C03  0085               	movwf	5
  4956  0C04  0800               	movf	0,w	;code access
  4957  0C05  00AE               	movwf	??_USBStdGetDscHandler^(0+128)
  4958  0C06  01AF               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  4959  0C07  082E               	movf	??_USBStdGetDscHandler^(0+128),w
  4960  0C08  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4961  0C09  082F               	movf	(??_USBStdGetDscHandler+1)^(0+128),w
  4962  0C0A  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  4963                           
  4964                           ;usb_device.c: 2092: }
  4965  0C0B  0008               	return
  4966  0C0C                     l5965:	
  4967                           
  4968                           ;usb_device.c: 2102: else
  4969                           ;usb_device.c: 2103: {
  4970                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  4971  0C0C  0021               	movlb	1	; select bank1
  4972  0C0D  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4973                           
  4974                           ;usb_device.c: 2105: }
  4975                           ;usb_device.c: 2106: break;
  4976  0C0E  0008               	return
  4977  0C0F                     l5967:	
  4978                           ;usb_device.c: 2107: default:
  4979                           
  4980                           
  4981                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  4982  0C0F  0021               	movlb	1	; select bank1
  4983  0C10  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4984                           
  4985                           ;usb_device.c: 2110: }
  4986                           
  4987                           ;usb_device.c: 2109: break;
  4988  0C11  0008               	return
  4989  0C12                     l5971:	
  4990  0C12  0020               	movlb	0	; select bank0
  4991  0C13  0853               	movf	83,w	;volatile
  4992                           
  4993                           ; Switch size 1, requested type "space"
  4994                           ; Number of cases is 3, Range of values is 1 to 3
  4995                           ; switch strategies available:
  4996                           ; Name         Instructions Cycles
  4997                           ; simple_byte           10     6 (average)
  4998                           ; direct_byte           15     9 (fixed)
  4999                           ; jumptable            263     9 (fixed)
  5000                           ;	Chosen strategy is simple_byte
  5001  0C14  3A01               	xorlw	1	; case 1
  5002  0C15  1903               	skipnz
  5003  0C16  2BAB               	goto	l5945
  5004  0C17  3A03               	xorlw	3	; case 2
  5005  0C18  1903               	skipnz
  5006  0C19  2BB5               	goto	l5949
  5007  0C1A  3A01               	xorlw	1	; case 3
  5008  0C1B  1903               	skipnz
  5009  0C1C  2BEB               	goto	l5959
  5010  0C1D  2C0F               	goto	l5967
  5011  0C1E  0008               	return
  5012  0C1F                     __end_of_USBStdGetDscHandler:	
  5013                           
  5014                           	psect	text16
  5015  004D                     __ptext16:	
  5016 ;; *************** function _USBStdFeatureReqHandler *****************
  5017 ;; Defined at:
  5018 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;  p               2    3[BANK2 ] PTR struct __BDT
  5023 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  5024 ;;  pUEP            2    0[BANK2 ] PTR unsigned char 
  5025 ;;		 -> UEP0(1), 
  5026 ;;  current_ep_d    1    2[BANK2 ] struct .
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5037 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  5038 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5039 ;;      Totals:         0       0       2       5       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;Total ram usage:        7 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:   14
  5043 ;; This function calls:
  5044 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5045 ;; This function is called by:
  5046 ;;		_USBCheckStdRequest
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           
  5051                           ;psect for function _USBStdFeatureReqHandler
  5052  004D                     _USBStdFeatureReqHandler:	
  5053                           
  5054                           ;usb_device.c: 2756: BDT_ENTRY *p;
  5055                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  5056                           ;usb_device.c: 2761: unsigned char* pUEP;
  5057                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  5058                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  5059                           
  5060                           ;incstack = 0
  5061 ;; hardware stack exceeded
  5062                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5063  004D  0020               	movlb	0	; select bank0
  5064  004E  0352               	decf	82,w	;volatile
  5065  004F  1D03               	btfss	3,2
  5066  0050  2866               	goto	l6013
  5067  0051  0850               	movf	80,w	;volatile
  5068  0052  391F               	andlw	31
  5069  0053  3A00               	xorlw	0
  5070  0054  1D03               	skipz
  5071  0055  2866               	goto	l6013
  5072                           
  5073                           ;usb_device.c: 2801: {
  5074                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  5075  0056  0021               	movlb	1	; select bank1
  5076  0057  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5077                           
  5078                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  5079  0058  3003               	movlw	3
  5080  0059  0020               	movlb	0	; select bank0
  5081  005A  0651               	xorwf	81,w	;volatile
  5082  005B  1D03               	btfss	3,2
  5083  005C  2864               	goto	l6011
  5084                           
  5085                           ;usb_device.c: 2804: RemoteWakeup = 1;
  5086  005D  3001               	movlw	1
  5087  005E  0021               	movlb	1	; select bank1
  5088  005F  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5089  0060  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5090  0061  0022               	movlb	2	; select bank2
  5091  0062  00CE               	movwf	_RemoteWakeup^(0+256)	;volatile
  5092  0063  2866               	goto	l6013
  5093  0064                     l6011:	
  5094                           
  5095                           ;usb_device.c: 2805: else
  5096                           ;usb_device.c: 2806: RemoteWakeup = 0;
  5097  0064  0022               	movlb	2	; select bank2
  5098  0065  01CE               	clrf	_RemoteWakeup^(0+256)	;volatile
  5099  0066                     l6013:	
  5100                           
  5101                           ;usb_device.c: 2807: }
  5102                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  5103                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  5104                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  5105                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  5106  0066  0020               	movlb	0	; select bank0
  5107  0067  0852               	movf	82,w	;volatile
  5108  0068  1D03               	btfss	3,2
  5109  0069  0008               	return
  5110  006A  0850               	movf	80,w	;volatile
  5111  006B  391F               	andlw	31
  5112  006C  3A02               	xorlw	2
  5113  006D  1D03               	skipz
  5114  006E  0008               	return
  5115  006F  0854               	movf	84,w	;volatile
  5116  0070  390F               	andlw	15
  5117  0071  3A00               	xorlw	0
  5118  0072  1903               	skipnz
  5119  0073  0008               	return
  5120  0074  0854               	movf	84,w	;volatile
  5121  0075  390F               	andlw	15
  5122  0076  0021               	movlb	1	; select bank1
  5123  0077  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5124  0078  3003               	movlw	3
  5125  0079  0242               	subwf	??_USBStdFeatureReqHandler^(0+128),w
  5126  007A  1803               	skipnc
  5127  007B  0008               	return
  5128  007C  3020               	movlw	32
  5129  007D  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
  5130  007E  1D03               	btfss	3,2
  5131  007F  0008               	return
  5132                           
  5133                           ;usb_device.c: 2814: {
  5134                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  5135  0080  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5136                           
  5137                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  5138  0081  0020               	movlb	0	; select bank0
  5139  0082  1BD4               	btfsc	84,7	;volatile
  5140  0083  2895               	goto	l6027
  5141                           
  5142                           ;usb_device.c: 2821: {
  5143                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5144  0084  0854               	movf	84,w	;volatile
  5145  0085  390F               	andlw	15
  5146  0086  0709               	addwf	9,w
  5147  0087  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5148  0088  0086               	movwf	6
  5149  0089  3001               	movlw	1	; select bank2/3
  5150  008A  0087               	movwf	7
  5151  008B  3F40               	moviw [0]fsr1
  5152  008C  0022               	movlb	2	; select bank2
  5153  008D  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5154  008E  3F41               	moviw [1]fsr1
  5155  008F  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5156                           
  5157                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  5158  0090  0020               	movlb	0	; select bank0
  5159  0091  0854               	movf	84,w	;volatile
  5160  0092  390F               	andlw	15
  5161  0093  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5162  0094  28A5               	goto	L3
  5163  0095                     l6027:	
  5164                           ;usb_device.c: 2824: }
  5165                           
  5166                           
  5167                           ;usb_device.c: 2825: else
  5168                           ;usb_device.c: 2826: {
  5169                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5170  0095  0020               	movlb	0	; select bank0
  5171  0096  0854               	movf	84,w	;volatile
  5172  0097  390F               	andlw	15
  5173  0098  0709               	addwf	9,w
  5174  0099  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5175  009A  0086               	movwf	6
  5176  009B  0187               	clrf	7
  5177  009C  3F40               	moviw [0]fsr1
  5178  009D  0022               	movlb	2	; select bank2
  5179  009E  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5180  009F  3F41               	moviw [1]fsr1
  5181  00A0  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5182                           
  5183                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  5184  00A1  0020               	movlb	0	; select bank0
  5185  00A2  0854               	movf	84,w	;volatile
  5186  00A3  390F               	andlw	15
  5187  00A4  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5188  00A5                     L3:	
  5189  00A5  0086               	movwf	6
  5190  00A6  3001               	movlw	1	; select bank2/3
  5191  00A7  0087               	movwf	7
  5192  00A8  0801               	movf	1,w
  5193  00A9  0021               	movlb	1	; select bank1
  5194  00AA  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5195  00AB  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5196  00AC  0022               	movlb	2	; select bank2
  5197  00AD  00E9               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+256)
  5198                           
  5199                           ;usb_device.c: 2829: }
  5200                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  5201  00AE  1869               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+256),0
  5202  00AF  28C0               	goto	l6033
  5203                           
  5204                           ;usb_device.c: 2836: {
  5205                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  5206  00B0  30FB               	movlw	251
  5207  00B1  0021               	movlb	1	; select bank1
  5208  00B2  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5209  00B3  30FF               	movlw	255
  5210  00B4  00C3               	movwf	(??_USBStdFeatureReqHandler^(0+128)+1)
  5211  00B5  0022               	movlb	2	; select bank2
  5212  00B6  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5213  00B7  0021               	movlb	1	; select bank1
  5214  00B8  0542               	andwf	??_USBStdFeatureReqHandler^(0+128),w
  5215  00B9  0022               	movlb	2	; select bank2
  5216  00BA  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5217  00BB  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5218  00BC  0021               	movlb	1	; select bank1
  5219  00BD  0543               	andwf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  5220  00BE  0022               	movlb	2	; select bank2
  5221  00BF  28C5               	goto	L4
  5222  00C0                     l6033:	
  5223                           ;usb_device.c: 2838: }
  5224                           
  5225                           
  5226                           ;usb_device.c: 2839: else
  5227                           ;usb_device.c: 2840: {
  5228                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  5229  00C0  3004               	movlw	4
  5230  00C1  046A               	iorwf	USBStdFeatureReqHandler@p^(0+256),w
  5231  00C2  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5232  00C3  3000               	movlw	0
  5233  00C4  046B               	iorwf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5234  00C5                     L4:	
  5235  00C5  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5236                           
  5237                           ;usb_device.c: 2842: }
  5238                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  5239  00C6  0020               	movlb	0	; select bank0
  5240  00C7  1BD4               	btfsc	84,7	;volatile
  5241  00C8  28D6               	goto	l6039
  5242                           
  5243                           ;usb_device.c: 2848: {
  5244                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5245  00C9  0854               	movf	84,w	;volatile
  5246  00CA  390F               	andlw	15
  5247  00CB  0709               	addwf	9,w
  5248  00CC  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5249  00CD  0086               	movwf	6
  5250  00CE  3001               	movlw	1	; select bank2/3
  5251  00CF  0087               	movwf	7
  5252  00D0  0022               	movlb	2	; select bank2
  5253  00D1  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5254  00D2  3FC0               	movwi [0]fsr1
  5255  00D3  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5256  00D4  3FC1               	movwi [1]fsr1
  5257                           
  5258                           ;usb_device.c: 2850: }
  5259  00D5  28E2               	goto	l6041
  5260  00D6                     l6039:	
  5261                           
  5262                           ;usb_device.c: 2851: else
  5263                           ;usb_device.c: 2852: {
  5264                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5265  00D6  0020               	movlb	0	; select bank0
  5266  00D7  0854               	movf	84,w	;volatile
  5267  00D8  390F               	andlw	15
  5268  00D9  0709               	addwf	9,w
  5269  00DA  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5270  00DB  0086               	movwf	6
  5271  00DC  0187               	clrf	7
  5272  00DD  0022               	movlb	2	; select bank2
  5273  00DE  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5274  00DF  3FC0               	movwi [0]fsr1
  5275  00E0  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5276  00E1  3FC1               	movwi [1]fsr1
  5277  00E2                     l6041:	
  5278                           
  5279                           ;usb_device.c: 2854: }
  5280                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  5281  00E2  3003               	movlw	3
  5282  00E3  0020               	movlb	0	; select bank0
  5283  00E4  0651               	xorwf	81,w	;volatile
  5284  00E5  1D03               	btfss	3,2
  5285  00E6  2908               	goto	l6055
  5286                           
  5287                           ;usb_device.c: 2858: {
  5288                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  5289  00E7  0022               	movlb	2	; select bank2
  5290  00E8  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5291  00E9  0086               	movwf	6
  5292  00EA  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5293  00EB  0087               	movwf	7
  5294  00EC  1F81               	btfss	1,7
  5295  00ED  28FC               	goto	l6051
  5296                           
  5297                           ;usb_device.c: 2860: {
  5298                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  5299  00EE  0020               	movlb	0	; select bank0
  5300  00EF  1BD4               	btfsc	84,7	;volatile
  5301  00F0  28F5               	goto	l6049
  5302                           
  5303                           ;usb_device.c: 2864: {
  5304                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5305  00F1  0854               	movf	84,w	;volatile
  5306  00F2  390F               	andlw	15
  5307  00F3  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5308  00F4  28F8               	goto	L5
  5309  00F5                     l6049:	
  5310                           ;usb_device.c: 2866: }
  5311                           
  5312                           
  5313                           ;usb_device.c: 2867: else
  5314                           ;usb_device.c: 2868: {
  5315                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5316  00F5  0854               	movf	84,w	;volatile
  5317  00F6  390F               	andlw	15
  5318  00F7  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5319  00F8                     L5:	
  5320  00F8  0086               	movwf	6
  5321  00F9  3001               	movlw	1	; select bank2/3
  5322  00FA  0087               	movwf	7
  5323  00FB  1481               	bsf	1,1
  5324  00FC                     l6051:	
  5325                           
  5326                           ;usb_device.c: 2870: }
  5327                           ;usb_device.c: 2871: }
  5328                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  5329  00FC  0022               	movlb	2	; select bank2
  5330  00FD  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5331  00FE  0086               	movwf	6
  5332  00FF  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5333  0100  0087               	movwf	7
  5334  0101  1501               	bsf	1,2
  5335                           
  5336                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  5337  0102  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5338  0103  0086               	movwf	6
  5339  0104  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5340  0105  0087               	movwf	7
  5341  0106  1781               	bsf	1,7
  5342                           
  5343                           ;usb_device.c: 2876: }
  5344  0107  0008               	return
  5345  0108                     l6055:	
  5346                           
  5347                           ;usb_device.c: 2877: else
  5348                           ;usb_device.c: 2878: {
  5349                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  5350  0108  3004               	movlw	4
  5351  0109  0022               	movlb	2	; select bank2
  5352  010A  066A               	xorwf	USBStdFeatureReqHandler@p^(0+256),w
  5353  010B  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5354  010C  3000               	movlw	0
  5355  010D  066B               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5356  010E  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5357                           
  5358                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  5359  010F  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5360  0110  0086               	movwf	6
  5361  0111  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5362  0112  0087               	movwf	7
  5363  0113  1F81               	btfss	1,7
  5364  0114  293B               	goto	l6065
  5365                           
  5366                           ;usb_device.c: 2885: {
  5367                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  5368  0115  307F               	movlw	127
  5369  0116  0021               	movlb	1	; select bank1
  5370  0117  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5371  0118  0022               	movlb	2	; select bank2
  5372  0119  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5373  011A  0086               	movwf	6
  5374  011B  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5375  011C  0087               	movwf	7
  5376  011D  0021               	movlb	1	; select bank1
  5377  011E  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5378  011F  0581               	andwf	1,f
  5379                           
  5380                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  5381  0120  0022               	movlb	2	; select bank2
  5382  0121  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5383  0122  0086               	movwf	6
  5384  0123  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5385  0124  0087               	movwf	7
  5386  0125  1701               	bsf	1,6
  5387                           
  5388                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5389  0126  3000               	movlw	0
  5390  0127  0021               	movlb	1	; select bank1
  5391  0128  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5392  0129  3005               	movlw	5
  5393  012A  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5394  012B  0022               	movlb	2	; select bank2
  5395  012C  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5396  012D  0021               	movlb	1	; select bank1
  5397  012E  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5398  012F  0022               	movlb	2	; select bank2
  5399  0130  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5400  0131  0021               	movlb	1	; select bank1
  5401  0132  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5402  0133  3002               	movlw	2
  5403  0134  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5404  0135  3000               	movlw	0
  5405  0136  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  5406  0137  3192  2265  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5407                           
  5408                           ;usb_device.c: 2891: }
  5409  013A  2941               	goto	l6067
  5410  013B                     l6065:	
  5411                           
  5412                           ;usb_device.c: 2892: else
  5413                           ;usb_device.c: 2893: {
  5414                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  5415  013B  0022               	movlb	2	; select bank2
  5416  013C  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5417  013D  0086               	movwf	6
  5418  013E  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5419  013F  0087               	movwf	7
  5420  0140  1701               	bsf	1,6
  5421  0141                     l6067:	
  5422                           
  5423                           ;usb_device.c: 2896: }
  5424                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  5425  0141  3004               	movlw	4
  5426  0142  0022               	movlb	2	; select bank2
  5427  0143  066A               	xorwf	USBStdFeatureReqHandler@p^(0+256),w
  5428  0144  00EA               	movwf	USBStdFeatureReqHandler@p^(0+256)
  5429  0145  3000               	movlw	0
  5430  0146  066B               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5431  0147  00EB               	movwf	(USBStdFeatureReqHandler@p+1)^(0+256)
  5432                           
  5433                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  5434  0148  18E9               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+256),1
  5435  0149  2950               	goto	l669
  5436  014A  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5437  014B  0086               	movwf	6
  5438  014C  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5439  014D  0087               	movwf	7
  5440  014E  1F81               	btfss	1,7
  5441  014F  297D               	goto	l6079
  5442  0150                     l669:	
  5443                           
  5444                           ;usb_device.c: 2907: {
  5445                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  5446  0150  0020               	movlb	0	; select bank0
  5447  0151  1BD4               	btfsc	84,7	;volatile
  5448  0152  2957               	goto	l6075
  5449                           
  5450                           ;usb_device.c: 2909: {
  5451                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5452  0153  0854               	movf	84,w	;volatile
  5453  0154  390F               	andlw	15
  5454  0155  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5455  0156  295A               	goto	L6
  5456  0157                     l6075:	
  5457                           ;usb_device.c: 2911: }
  5458                           
  5459                           
  5460                           ;usb_device.c: 2912: else
  5461                           ;usb_device.c: 2913: {
  5462                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5463  0157  0854               	movf	84,w	;volatile
  5464  0158  390F               	andlw	15
  5465  0159  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5466  015A                     L6:	
  5467  015A  0086               	movwf	6
  5468  015B  3001               	movlw	1	; select bank2/3
  5469  015C  0087               	movwf	7
  5470  015D  1081               	bcf	1,1
  5471                           
  5472                           ;usb_device.c: 2915: }
  5473                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5474  015E  303B               	movlw	59
  5475  015F  0021               	movlb	1	; select bank1
  5476  0160  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5477  0161  0022               	movlb	2	; select bank2
  5478  0162  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5479  0163  0086               	movwf	6
  5480  0164  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5481  0165  0087               	movwf	7
  5482  0166  0021               	movlb	1	; select bank1
  5483  0167  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5484  0168  0581               	andwf	1,f
  5485                           
  5486                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5487  0169  3000               	movlw	0
  5488  016A  00BD               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5489  016B  3005               	movlw	5
  5490  016C  00BC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5491  016D  0022               	movlb	2	; select bank2
  5492  016E  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5493  016F  0021               	movlb	1	; select bank1
  5494  0170  00BF               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5495  0171  0022               	movlb	2	; select bank2
  5496  0172  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5497  0173  0021               	movlb	1	; select bank1
  5498  0174  00BE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5499  0175  3002               	movlw	2
  5500  0176  00C0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5501  0177  3000               	movlw	0
  5502  0178  00C1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  5503  0179  3192  2265  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5504                           
  5505                           ;usb_device.c: 2921: }
  5506  017C  2988               	goto	l6081
  5507  017D                     l6079:	
  5508                           
  5509                           ;usb_device.c: 2922: else
  5510                           ;usb_device.c: 2923: {
  5511                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5512  017D  303B               	movlw	59
  5513  017E  0021               	movlb	1	; select bank1
  5514  017F  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5515  0180  0022               	movlb	2	; select bank2
  5516  0181  086A               	movf	USBStdFeatureReqHandler@p^(0+256),w
  5517  0182  0086               	movwf	6
  5518  0183  086B               	movf	(USBStdFeatureReqHandler@p+1)^(0+256),w
  5519  0184  0087               	movwf	7
  5520  0185  0021               	movlb	1	; select bank1
  5521  0186  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5522  0187  0581               	andwf	1,f
  5523  0188                     l6081:	
  5524                           
  5525                           ;usb_device.c: 2926: }
  5526                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  5527  0188  0020               	movlb	0	; select bank0
  5528  0189  0854               	movf	84,w	;volatile
  5529  018A  390F               	andlw	15
  5530  018B  3E98               	addlw	152
  5531  018C  0021               	movlb	1	; select bank1
  5532  018D  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5533  018E  01C3               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
  5534  018F  300E               	movlw	14
  5535  0190  3DC3               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
  5536  0191  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5537  0192  0022               	movlb	2	; select bank2
  5538  0193  00E7               	movwf	USBStdFeatureReqHandler@pUEP^(0+256)
  5539  0194  0021               	movlb	1	; select bank1
  5540  0195  0843               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  5541  0196  0022               	movlb	2	; select bank2
  5542  0197  00E8               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+256)
  5543                           
  5544                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  5545  0198  30FE               	movlw	254
  5546  0199  0021               	movlb	1	; select bank1
  5547  019A  00C2               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5548  019B  0022               	movlb	2	; select bank2
  5549  019C  0867               	movf	USBStdFeatureReqHandler@pUEP^(0+256),w
  5550  019D  0086               	movwf	6
  5551  019E  0868               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+256),w
  5552  019F  0087               	movwf	7
  5553  01A0  0021               	movlb	1	; select bank1
  5554  01A1  0842               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5555  01A2  0581               	andwf	1,f
  5556  01A3  0008               	return
  5557  01A4                     __end_of_USBStdFeatureReqHandler:	
  5558                           
  5559                           	psect	text17
  5560  1265                     __ptext17:	
  5561 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  5562 ;; Defined at:
  5563 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  event           2   28[BANK1 ] enum E34
  5566 ;;  pdata           2   30[BANK1 ] PTR void 
  5567 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
  5568 ;;		 -> NULL(0), 
  5569 ;;  size            2   32[BANK1 ] unsigned int 
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      unsigned char 
  5574 ;; Registers used:
  5575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5581 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5584 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;Total ram usage:        6 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:   13
  5588 ;; This function calls:
  5589 ;;		_CDCInitEP
  5590 ;;		_USBCheckCDCRequest
  5591 ;; This function is called by:
  5592 ;;		_USBDeviceTasks
  5593 ;;		_USBStdSetCfgHandler
  5594 ;;		_USBSuspend
  5595 ;;		_USBWakeFromSuspend
  5596 ;;		_USBCtrlTrfSetupHandler
  5597 ;;		_USBCheckStdRequest
  5598 ;;		_USBStdFeatureReqHandler
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           
  5603                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  5604  1265                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  5605                           
  5606                           ;usb_device_events.c: 51: switch( (int) event )
  5607                           
  5608                           ;incstack = 0
  5609                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5610  1265  2A6C               	goto	l5753
  5611  1266                     l5747:	
  5612                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
  5613                           
  5614                           ;usb_device_events.c: 73: break;
  5615                           
  5616                           ;usb_device_events.c: 68: case EVENT_RESUME:
  5617                           
  5618                           ;usb_device_events.c: 66: break;
  5619                           
  5620                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
  5621                           
  5622                           ;usb_device_events.c: 57: break;
  5623                           
  5624                           ;usb_device_events.c: 56: case EVENT_SOF:
  5625                           
  5626                           ;usb_device_events.c: 54: break;
  5627                           
  5628                           ;usb_device_events.c: 52: {
  5629                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
  5630                           
  5631                           
  5632                           ;usb_device_events.c: 76: CDCInitEP();
  5633  1266  3193  2301         	fcall	_CDCInitEP
  5634                           
  5635                           ;usb_device_events.c: 80: break;
  5636                           
  5637                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
  5638                           
  5639                           ;usb_device_events.c: 77: break;
  5640  1268  0008               	return
  5641  1269                     l5749:	
  5642                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
  5643                           
  5644                           
  5645                           ;usb_device_events.c: 85: USBCheckCDCRequest();
  5646  1269  3188  2098         	fcall	_USBCheckCDCRequest
  5647                           
  5648                           ;usb_device_events.c: 96: }
  5649                           
  5650                           ;usb_device_events.c: 95: break;
  5651                           
  5652                           ;usb_device_events.c: 94: default:
  5653                           
  5654                           ;usb_device_events.c: 92: break;
  5655                           
  5656                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
  5657                           
  5658                           ;usb_device_events.c: 89: break;
  5659                           
  5660                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
  5661                           
  5662                           ;usb_device_events.c: 86: break;
  5663  126B  0008               	return
  5664  126C                     l5753:	
  5665                           
  5666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5667                           ; Switch size 1, requested type "space"
  5668                           ; Number of cases is 2, Range of values is 0 to 127
  5669                           ; switch strategies available:
  5670                           ; Name         Instructions Cycles
  5671                           ; simple_byte            7     4 (average)
  5672                           ; direct_byte          262     6 (fixed)
  5673                           ; jumptable            260     6 (fixed)
  5674                           ;	Chosen strategy is simple_byte
  5675  126C  0021               	movlb	1	; select bank1
  5676  126D  083D               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
  5677  126E  3A00               	xorlw	0	; case 0
  5678  126F  1903               	skipnz
  5679  1270  2A75               	goto	l7217
  5680  1271  3A7F               	xorlw	127	; case 127
  5681  1272  1903               	skipnz
  5682  1273  2A8F               	goto	l7219
  5683  1274  2A94               	goto	l285
  5684  1275                     l7217:	
  5685                           
  5686                           ; Switch size 1, requested type "space"
  5687                           ; Number of cases is 8, Range of values is 1 to 117
  5688                           ; switch strategies available:
  5689                           ; Name         Instructions Cycles
  5690                           ; simple_byte           25    13 (average)
  5691                           ; direct_byte          243     9 (fixed)
  5692                           ; jumptable            263     9 (fixed)
  5693                           ;	Chosen strategy is simple_byte
  5694  1275  083C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  5695  1276  3A01               	xorlw	1	; case 1
  5696  1277  1903               	skipnz
  5697  1278  2A66               	goto	l5747
  5698  1279  3A03               	xorlw	3	; case 2
  5699  127A  1903               	skipnz
  5700  127B  2A94               	goto	l285
  5701  127C  3A01               	xorlw	1	; case 3
  5702  127D  1903               	skipnz
  5703  127E  2A69               	goto	l5749
  5704  127F  3A06               	xorlw	6	; case 5
  5705  1280  1903               	skipnz
  5706  1281  2A94               	goto	l285
  5707  1282  3A77               	xorlw	119	; case 114
  5708  1283  1903               	skipnz
  5709  1284  2A94               	goto	l285
  5710  1285  3A01               	xorlw	1	; case 115
  5711  1286  1903               	skipnz
  5712  1287  2A94               	goto	l285
  5713  1288  3A07               	xorlw	7	; case 116
  5714  1289  1903               	skipnz
  5715  128A  2A94               	goto	l285
  5716  128B  3A01               	xorlw	1	; case 117
  5717  128C  1903               	skipnz
  5718  128D  2A94               	goto	l285
  5719  128E  2A94               	goto	l285
  5720  128F                     l7219:	
  5721                           
  5722                           ; Switch size 1, requested type "space"
  5723                           ; Number of cases is 1, Range of values is 255 to 255
  5724                           ; switch strategies available:
  5725                           ; Name         Instructions Cycles
  5726                           ; simple_byte            4     3 (average)
  5727                           ; direct_byte            7     5 (fixed)
  5728                           ; jumptable            263     9 (fixed)
  5729                           ;	Chosen strategy is simple_byte
  5730  128F  083C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  5731  1290  3AFF               	xorlw	255	; case 255
  5732  1291  1903               	skipnz
  5733  1292  2A94               	goto	l285
  5734  1293  2A94               	goto	l285
  5735  1294                     l285:	
  5736                           ;usb_device_events.c: 97: return 1;
  5737                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  5738                           
  5739  1294  0008               	return
  5740  1295                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  5741                           
  5742                           	psect	text18
  5743  0898                     __ptext18:	
  5744 ;; *************** function _USBCheckCDCRequest *****************
  5745 ;; Defined at:
  5746 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5762 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5764 ;;Total ram usage:        1 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; Hardware stack levels required when called:   10
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           
  5775                           ;psect for function _USBCheckCDCRequest
  5776  0898                     _USBCheckCDCRequest:	
  5777                           
  5778                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
  5779                           
  5780                           ;incstack = 0
  5781                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  5782  0898  0020               	movlb	0	; select bank0
  5783  0899  0850               	movf	80,w	;volatile
  5784  089A  391F               	andlw	31
  5785  089B  3A01               	xorlw	1
  5786  089C  1D03               	btfss	3,2
  5787  089D  0008               	return
  5788                           
  5789                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
  5790  089E  0E50               	swapf	80,w	;volatile
  5791  089F  0C89               	rrf	9,f
  5792  08A0  3903               	andlw	3
  5793  08A1  3A01               	xorlw	1
  5794  08A2  1D03               	btfss	3,2
  5795  08A3  0008               	return
  5796                           
  5797                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
  5798                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
  5799  08A4  0854               	movf	84,w	;volatile
  5800  08A5  1903               	btfsc	3,2
  5801  08A6  28E6               	goto	l5725
  5802  08A7  0354               	decf	84,w	;volatile
  5803  08A8  1D03               	btfss	3,2
  5804  08A9  0008               	return
  5805  08AA  28E6               	goto	l5725
  5806  08AB                     l5695:	
  5807                           ;usb_device_cdc.c: 166: {
  5808                           ;usb_device_cdc.c: 168: case 0x00:
  5809                           
  5810                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
  5811                           
  5812                           
  5813                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  5814  08AB  3056               	movlw	low _dummy_encapsulated_cmd_response
  5815  08AC  0021               	movlb	1	; select bank1
  5816  08AD  00D3               	movwf	_inPipes^(0+128)	;volatile
  5817  08AE  3001               	movlw	high _dummy_encapsulated_cmd_response
  5818  08AF  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5819                           
  5820                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
  5821  08B0  3000               	movlw	0
  5822  08B1  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5823  08B2  3008               	movlw	8
  5824  08B3  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5825                           
  5826                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5827  08B4  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5828                           
  5829                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
  5830  08B5  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5831                           
  5832                           ;usb_device_cdc.c: 174: break;
  5833  08B6  0008               	return
  5834  08B7                     l5703:	
  5835                           ;usb_device_cdc.c: 175: case 0x01:
  5836                           
  5837                           
  5838                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  5839  08B7  3056               	movlw	low _dummy_encapsulated_cmd_response
  5840  08B8  0021               	movlb	1	; select bank1
  5841  08B9  00D3               	movwf	_inPipes^(0+128)	;volatile
  5842  08BA  3001               	movlw	high _dummy_encapsulated_cmd_response
  5843  08BB  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5844                           
  5845                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
  5846  08BC  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5847                           
  5848                           ;usb_device_cdc.c: 179: break;
  5849  08BD  0008               	return
  5850  08BE                     l5707:	
  5851                           ;usb_device_cdc.c: 183: case 0x20:
  5852                           
  5853                           
  5854                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
  5855  08BE  0020               	movlb	0	; select bank0
  5856  08BF  0857               	movf	87,w	;volatile
  5857  08C0  0021               	movlb	1	; select bank1
  5858  08C1  00CA               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
  5859  08C2  0020               	movlb	0	; select bank0
  5860  08C3  0856               	movf	86,w	;volatile
  5861  08C4  0021               	movlb	1	; select bank1
  5862  08C5  00C9               	movwf	(_outPipes^(0+128)+3)	;volatile
  5863                           
  5864                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  5865  08C6  305E               	movlw	(low (_line_coding| (0+256)))& (0+255)
  5866  08C7  00AE               	movwf	??_USBCheckCDCRequest^(0+128)
  5867  08C8  082E               	movf	??_USBCheckCDCRequest^(0+128),w
  5868  08C9  00C6               	movwf	_outPipes^(0+128)	;volatile
  5869                           
  5870                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
  5871  08CA  01CB               	clrf	(low ((_outPipes| 0+5)))^(0+128)	;volatile
  5872  08CB  01CC               	clrf	((low ((_outPipes| 0+5))+1))^(0+128)	;volatile
  5873                           
  5874                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
  5875  08CC  17C8               	bsf	(_outPipes^(0+128)+2),7	;volatile
  5876                           
  5877                           ;usb_device_cdc.c: 188: break;
  5878  08CD  0008               	return
  5879  08CE                     l5713:	
  5880                           ;usb_device_cdc.c: 190: case 0x21:
  5881                           
  5882                           
  5883                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  5884  08CE  305E               	movlw	low _line_coding
  5885  08CF  0021               	movlb	1	; select bank1
  5886  08D0  00D3               	movwf	_inPipes^(0+128)	;volatile
  5887  08D1  3001               	movlw	high _line_coding
  5888  08D2  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5889  08D3  3000               	movlw	0
  5890  08D4  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5891  08D5  3007               	movlw	7
  5892  08D6  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5893  08D7  30C1               	movlw	193
  5894  08D8  00AE               	movwf	??_USBCheckCDCRequest^(0+128)
  5895  08D9  082E               	movf	??_USBCheckCDCRequest^(0+128),w
  5896  08DA  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
  5897                           
  5898                           ;usb_device_cdc.c: 195: break;
  5899  08DB  0008               	return
  5900  08DC                     l5719:	
  5901                           ;usb_device_cdc.c: 197: case 0x22:
  5902                           
  5903                           
  5904                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  5905  08DC  0020               	movlb	0	; select bank0
  5906  08DD  0852               	movf	82,w	;volatile
  5907  08DE  0021               	movlb	1	; select bank1
  5908  08DF  00AE               	movwf	??_USBCheckCDCRequest^(0+128)
  5909  08E0  082E               	movf	??_USBCheckCDCRequest^(0+128),w
  5910  08E1  0022               	movlb	2	; select bank2
  5911  08E2  00D1               	movwf	_control_signal_bitmap^(0+256)
  5912                           
  5913                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
  5914  08E3  0021               	movlb	1	; select bank1
  5915  08E4  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5916                           
  5917                           ;usb_device_cdc.c: 257: }
  5918                           
  5919                           ;usb_device_cdc.c: 256: break;
  5920                           
  5921                           ;usb_device_cdc.c: 255: default:
  5922                           
  5923                           ;usb_device_cdc.c: 231: break;
  5924  08E5  0008               	return
  5925  08E6                     l5725:	
  5926  08E6  0020               	movlb	0	; select bank0
  5927  08E7  0851               	movf	81,w	;volatile
  5928                           
  5929                           ; Switch size 1, requested type "space"
  5930                           ; Number of cases is 5, Range of values is 0 to 34
  5931                           ; switch strategies available:
  5932                           ; Name         Instructions Cycles
  5933                           ; simple_byte           16     9 (average)
  5934                           ; direct_byte           76     6 (fixed)
  5935                           ; jumptable            260     6 (fixed)
  5936                           ;	Chosen strategy is simple_byte
  5937  08E8  3A00               	xorlw	0	; case 0
  5938  08E9  1903               	skipnz
  5939  08EA  28AB               	goto	l5695
  5940  08EB  3A01               	xorlw	1	; case 1
  5941  08EC  1903               	skipnz
  5942  08ED  28B7               	goto	l5703
  5943  08EE  3A21               	xorlw	33	; case 32
  5944  08EF  1903               	skipnz
  5945  08F0  28BE               	goto	l5707
  5946  08F1  3A01               	xorlw	1	; case 33
  5947  08F2  1903               	skipnz
  5948  08F3  28CE               	goto	l5713
  5949  08F4  3A03               	xorlw	3	; case 34
  5950  08F5  1903               	skipnz
  5951  08F6  28DC               	goto	l5719
  5952  08F7  28F8               	goto	l46
  5953  08F8                     l46:	
  5954  08F8  0008               	return
  5955  08F9                     __end_of_USBCheckCDCRequest:	
  5956                           
  5957                           	psect	text19
  5958  1301                     __ptext19:	
  5959 ;; *************** function _CDCInitEP *****************
  5960 ;; Defined at:
  5961 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;		None
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      void 
  5968 ;; Registers used:
  5969 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5978 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;Total ram usage:        1 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:   12
  5982 ;; This function calls:
  5983 ;;		_USBEnableEndpoint
  5984 ;;		_USBTransferOnePacket
  5985 ;; This function is called by:
  5986 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           
  5991                           ;psect for function _CDCInitEP
  5992  1301                     _CDCInitEP:	
  5993                           
  5994                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
  5995                           
  5996                           ;incstack = 0
  5997                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5998  1301  3000               	movlw	0
  5999  1302  0022               	movlb	2	; select bank2
  6000  1303  00E1               	movwf	(_line_coding+3)^(0+256)
  6001  1304  3000               	movlw	0
  6002  1305  00E0               	movwf	(_line_coding+2)^(0+256)
  6003  1306  304B               	movlw	75
  6004  1307  00DF               	movwf	(_line_coding+1)^(0+256)
  6005  1308  3000               	movlw	0
  6006  1309  00DE               	movwf	_line_coding^(0+256)
  6007                           
  6008                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
  6009  130A  01E2               	clrf	(_line_coding^(0+256)+4)
  6010                           
  6011                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
  6012  130B  01E3               	clrf	(_line_coding^(0+256)+5)
  6013                           
  6014                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
  6015  130C  3008               	movlw	8
  6016  130D  0021               	movlb	1	; select bank1
  6017  130E  00BB               	movwf	??_CDCInitEP^(0+128)
  6018  130F  083B               	movf	??_CDCInitEP^(0+128),w
  6019  1310  0022               	movlb	2	; select bank2
  6020  1311  00E4               	movwf	(_line_coding^(0+256)+6)
  6021                           
  6022                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
  6023  1312  01D5               	clrf	_cdc_rx_len^(0+256)
  6024                           
  6025                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
  6026  1313  301A               	movlw	26
  6027  1314  0021               	movlb	1	; select bank1
  6028  1315  00BB               	movwf	??_CDCInitEP^(0+128)
  6029  1316  083B               	movf	??_CDCInitEP^(0+128),w
  6030  1317  00B5               	movwf	USBEnableEndpoint@options^(0+128)
  6031  1318  3001               	movlw	1
  6032  1319  3191  21C6  3193   	fcall	_USBEnableEndpoint
  6033                           
  6034                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  6035  131C  301E               	movlw	30
  6036  131D  0021               	movlb	1	; select bank1
  6037  131E  00BB               	movwf	??_CDCInitEP^(0+128)
  6038  131F  083B               	movf	??_CDCInitEP^(0+128),w
  6039  1320  00B5               	movwf	USBEnableEndpoint@options^(0+128)
  6040  1321  3002               	movlw	2
  6041  1322  3191  21C6  3193   	fcall	_USBEnableEndpoint
  6042                           
  6043                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  6044  1325  0021               	movlb	1	; select bank1
  6045  1326  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  6046  1327  30A0               	movlw	low _cdc_data_rx
  6047  1328  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  6048  1329  3001               	movlw	high _cdc_data_rx
  6049  132A  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  6050  132B  3040               	movlw	64
  6051  132C  00BB               	movwf	??_CDCInitEP^(0+128)
  6052  132D  083B               	movf	??_CDCInitEP^(0+128),w
  6053  132E  00B1               	movwf	USBTransferOnePacket@len^(0+128)
  6054  132F  3002               	movlw	2
  6055  1330  318C  249F         	fcall	_USBTransferOnePacket
  6056  1332  0021               	movlb	1	; select bank1
  6057  1333  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  6058  1334  0022               	movlb	2	; select bank2
  6059  1335  00C1               	movwf	(_CDCDataOutHandle+1)^(0+256)
  6060  1336  0021               	movlb	1	; select bank1
  6061  1337  082E               	movf	?_USBTransferOnePacket^(0+128),w
  6062  1338  0022               	movlb	2	; select bank2
  6063  1339  00C0               	movwf	_CDCDataOutHandle^(0+256)
  6064                           
  6065                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
  6066  133A  01BE               	clrf	_CDCDataInHandle^(0+256)
  6067  133B  01BF               	clrf	(_CDCDataInHandle+1)^(0+256)
  6068                           
  6069                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
  6070  133C  01D4               	clrf	_cdc_trf_state^(0+256)
  6071  133D  0008               	return
  6072  133E                     __end_of_CDCInitEP:	
  6073                           
  6074                           	psect	text20
  6075  11C6                     __ptext20:	
  6076 ;; *************** function _USBEnableEndpoint *****************
  6077 ;; Defined at:
  6078 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  ep              1    wreg     unsigned char 
  6081 ;;  options         1   21[BANK1 ] unsigned char 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  ep              1   26[BANK1 ] unsigned char 
  6084 ;;  p               2   24[BANK1 ] PTR unsigned char 
  6085 ;;		 -> UEP0(1), 
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  1    wreg      void 
  6088 ;; Registers used:
  6089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6095 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6096 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6097 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;Total ram usage:        6 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:   11
  6102 ;; This function calls:
  6103 ;;		_USBConfigureEndpoint
  6104 ;; This function is called by:
  6105 ;;		_CDCInitEP
  6106 ;; This function uses a non-reentrant model
  6107 ;;
  6108                           
  6109                           
  6110                           ;psect for function _USBEnableEndpoint
  6111  11C6                     _USBEnableEndpoint:	
  6112                           
  6113                           ;incstack = 0
  6114                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6115                           ;USBEnableEndpoint@ep stored from wreg
  6116  11C6  0021               	movlb	1	; select bank1
  6117  11C7  00BA               	movwf	USBEnableEndpoint@ep^(0+128)
  6118                           
  6119                           ;usb_device.c: 880: unsigned char* p;
  6120                           ;usb_device.c: 884: if(options & 0x04)
  6121  11C8  1D35               	btfss	USBEnableEndpoint@options^(0+128),2
  6122  11C9  29CF               	goto	l5645
  6123                           
  6124                           ;usb_device.c: 885: {
  6125                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  6126  11CA  01AE               	clrf	USBConfigureEndpoint@direction^(0+128)
  6127  11CB  083A               	movf	USBEnableEndpoint@ep^(0+128),w
  6128  11CC  3194  2400  3191   	fcall	_USBConfigureEndpoint
  6129  11CF                     l5645:	
  6130                           
  6131                           ;usb_device.c: 887: }
  6132                           ;usb_device.c: 888: if(options & 0x02)
  6133  11CF  0021               	movlb	1	; select bank1
  6134  11D0  1CB5               	btfss	USBEnableEndpoint@options^(0+128),1
  6135  11D1  29D7               	goto	l5649
  6136                           
  6137                           ;usb_device.c: 889: {
  6138                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  6139  11D2  01AE               	clrf	USBConfigureEndpoint@direction^(0+128)
  6140  11D3  0AAE               	incf	USBConfigureEndpoint@direction^(0+128),f
  6141  11D4  083A               	movf	USBEnableEndpoint@ep^(0+128),w
  6142  11D5  3194  2400         	fcall	_USBConfigureEndpoint
  6143  11D7                     l5649:	
  6144                           
  6145                           ;usb_device.c: 891: }
  6146                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  6147  11D7  0021               	movlb	1	; select bank1
  6148  11D8  083A               	movf	USBEnableEndpoint@ep^(0+128),w
  6149  11D9  3E98               	addlw	152
  6150  11DA  00B6               	movwf	??_USBEnableEndpoint^(0+128)
  6151  11DB  01B7               	clrf	(??_USBEnableEndpoint^(0+128)+1)
  6152  11DC  300E               	movlw	14
  6153  11DD  3DB7               	addwfc	(??_USBEnableEndpoint^(0+128)+1),f
  6154  11DE  0836               	movf	??_USBEnableEndpoint^(0+128),w
  6155  11DF  00B8               	movwf	USBEnableEndpoint@p^(0+128)
  6156  11E0  0837               	movf	(??_USBEnableEndpoint+1)^(0+128),w
  6157  11E1  00B9               	movwf	(USBEnableEndpoint@p+1)^(0+128)
  6158                           
  6159                           ;usb_device.c: 901: *p = options;
  6160  11E2  0838               	movf	USBEnableEndpoint@p^(0+128),w
  6161  11E3  0086               	movwf	6
  6162  11E4  0839               	movf	(USBEnableEndpoint@p+1)^(0+128),w
  6163  11E5  0087               	movwf	7
  6164  11E6  0835               	movf	USBEnableEndpoint@options^(0+128),w
  6165  11E7  0081               	movwf	1
  6166  11E8  0008               	return
  6167  11E9                     __end_of_USBEnableEndpoint:	
  6168                           
  6169                           	psect	text21
  6170  1400                     __ptext21:	
  6171 ;; *************** function _USBConfigureEndpoint *****************
  6172 ;; Defined at:
  6173 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  EPNum           1    wreg     unsigned char 
  6176 ;;  direction       1   14[BANK1 ] unsigned char 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  EPNum           1   19[BANK1 ] unsigned char 
  6179 ;;  handle          1   20[BANK1 ] PTR volatile struct __BD
  6180 ;;		 -> BDT(48), 
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      void 
  6183 ;; Registers used:
  6184 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6190 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6194 ;;Total ram usage:        7 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:   10
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_USBEnableEndpoint
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           
  6205                           ;psect for function _USBConfigureEndpoint
  6206  1400                     _USBConfigureEndpoint:	
  6207                           
  6208                           ;incstack = 0
  6209                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  6210                           ;USBConfigureEndpoint@EPNum stored from wreg
  6211  1400  0021               	movlb	1	; select bank1
  6212  1401  00B3               	movwf	USBConfigureEndpoint@EPNum^(0+128)
  6213                           
  6214                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  6215                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  6216  1402  3020               	movlw	32
  6217  1403  00AF               	movwf	??_USBConfigureEndpoint^(0+128)
  6218  1404  082F               	movf	??_USBConfigureEndpoint^(0+128),w
  6219  1405  00B4               	movwf	USBConfigureEndpoint@handle^(0+128)
  6220                           
  6221                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  6222  1406  082E               	movf	USBConfigureEndpoint@direction^(0+128),w
  6223  1407  00AF               	movwf	??_USBConfigureEndpoint^(0+128)
  6224  1408  3001               	movlw	1
  6225  1409                     u5675:	
  6226  1409  35AF               	lslf	??_USBConfigureEndpoint^(0+128),f
  6227  140A  0B89               	decfsz	9,f
  6228  140B  2C09               	goto	u5675
  6229  140C  0833               	movf	USBConfigureEndpoint@EPNum^(0+128),w
  6230  140D  00B0               	movwf	(??_USBConfigureEndpoint+1)^(0+128)
  6231  140E  3001               	movlw	1
  6232  140F                     u5685:	
  6233  140F  35B0               	lslf	(??_USBConfigureEndpoint+1)^(0+128),f
  6234  1410  3EFF               	addlw	-1
  6235  1411  1D03               	skipz
  6236  1412  2C0F               	goto	u5685
  6237  1413  3530               	lslf	(??_USBConfigureEndpoint+1)^(0+128),w
  6238  1414  072F               	addwf	??_USBConfigureEndpoint^(0+128),w
  6239  1415  00B1               	movwf	(??_USBConfigureEndpoint+2)^(0+128)
  6240  1416  3001               	movlw	1
  6241  1417                     u5695:	
  6242  1417  35B1               	lslf	(??_USBConfigureEndpoint+2)^(0+128),f
  6243  1418  3EFF               	addlw	-1
  6244  1419  1D03               	skipz
  6245  141A  2C17               	goto	u5695
  6246  141B  3531               	lslf	(??_USBConfigureEndpoint+2)^(0+128),w
  6247  141C  00B2               	movwf	(??_USBConfigureEndpoint+3)^(0+128)
  6248  141D  0832               	movf	(??_USBConfigureEndpoint+3)^(0+128),w
  6249  141E  07B4               	addwf	USBConfigureEndpoint@handle^(0+128),f
  6250                           
  6251                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  6252  141F  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6253  1420  0086               	movwf	6
  6254  1421  0187               	clrf	7
  6255  1422  1381               	bcf	1,7
  6256                           
  6257                           ;usb_device.c: 1557: if(direction == 0)
  6258  1423  082E               	movf	USBConfigureEndpoint@direction^(0+128),w
  6259  1424  1D03               	btfss	3,2
  6260  1425  2C30               	goto	l5635
  6261                           
  6262                           ;usb_device.c: 1558: {
  6263                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  6264  1426  3533               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  6265  1427  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6266  1428  0086               	movwf	6
  6267  1429  3001               	movlw	1	; select bank2/3
  6268  142A  0087               	movwf	7
  6269  142B  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6270  142C  3FC0               	movwi [0]fsr1
  6271  142D  3000               	movlw	0
  6272  142E  3FC1               	movwi [1]fsr1
  6273                           
  6274                           ;usb_device.c: 1560: }
  6275  142F  2C38               	goto	l5637
  6276  1430                     l5635:	
  6277                           
  6278                           ;usb_device.c: 1561: else
  6279                           ;usb_device.c: 1562: {
  6280                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  6281  1430  3533               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  6282  1431  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6283  1432  0086               	movwf	6
  6284  1433  0187               	clrf	7
  6285  1434  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6286  1435  3FC0               	movwi [0]fsr1
  6287  1436  3000               	movlw	0
  6288  1437  3FC1               	movwi [1]fsr1
  6289  1438                     l5637:	
  6290                           
  6291                           ;usb_device.c: 1564: }
  6292                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  6293  1438  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6294  1439  0086               	movwf	6
  6295  143A  0187               	clrf	7
  6296  143B  1301               	bcf	1,6
  6297                           
  6298                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  6299  143C  0834               	movf	USBConfigureEndpoint@handle^(0+128),w
  6300  143D  3E04               	addlw	4
  6301  143E  0086               	movwf	6
  6302  143F  0187               	clrf	7
  6303  1440  1701               	bsf	1,6
  6304  1441  0008               	return
  6305  1442                     __end_of_USBConfigureEndpoint:	
  6306                           
  6307                           	psect	text22
  6308  0801                     __ptext22:	
  6309 ;; *************** function _USBCtrlTrfOutHandler *****************
  6310 ;; Defined at:
  6311 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;		None
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;		None
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      void 
  6318 ;; Registers used:
  6319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6327 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;Total ram usage:        2 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:   12
  6332 ;; This function calls:
  6333 ;;		_USBCtrlTrfRxService
  6334 ;; This function is called by:
  6335 ;;		_USBCtrlEPService
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           
  6340                           ;psect for function _USBCtrlTrfOutHandler
  6341  0801                     _USBCtrlTrfOutHandler:	
  6342                           
  6343                           ;usb_device.c: 2540: if(controlTransferState == 2)
  6344                           
  6345                           ;incstack = 0
  6346                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6347  0801  3002               	movlw	2
  6348  0802  0021               	movlb	1	; select bank1
  6349  0803  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
  6350  0804  1D03               	btfss	3,2
  6351  0805  2809               	goto	l6409
  6352                           
  6353                           ;usb_device.c: 2541: {
  6354                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  6355  0806  3186  26F2         	fcall	_USBCtrlTrfRxService
  6356                           
  6357                           ;usb_device.c: 2543: }
  6358  0808  0008               	return
  6359  0809                     l6409:	
  6360                           
  6361                           ;usb_device.c: 2544: else
  6362                           ;usb_device.c: 2545: {
  6363                           ;usb_device.c: 2548: controlTransferState = 0;
  6364  0809  0021               	movlb	1	; select bank1
  6365  080A  01DC               	clrf	_controlTransferState^(0+128)	;volatile
  6366                           
  6367                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  6368  080B  0022               	movlb	2	; select bank2
  6369  080C  084C               	movf	_BothEP0OutUOWNsSet^(0+256),w	;volatile
  6370  080D  1D03               	btfss	3,2
  6371  080E  2835               	goto	l6421
  6372                           
  6373                           ;usb_device.c: 2556: {
  6374                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 16;
  6375  080F  0021               	movlb	1	; select bank1
  6376  0810  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6377  0811  3E01               	addlw	1
  6378  0812  00B4               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  6379  0813  3000               	movlw	0
  6380  0814  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6381  0815  00B5               	movwf	(??_USBCtrlTrfOutHandler+1)^(0+128)
  6382  0816  0834               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  6383  0817  0086               	movwf	6
  6384  0818  0835               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
  6385  0819  0087               	movwf	7
  6386  081A  3010               	movlw	16
  6387  081B  0081               	movwf	1
  6388                           
  6389                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6390  081C  3050               	movlw	80
  6391  081D  00B4               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  6392  081E  3000               	movlw	0
  6393  081F  00B5               	movwf	(??_USBCtrlTrfOutHandler^(0+128)+1)
  6394  0820  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6395  0821  0086               	movwf	6
  6396  0822  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6397  0823  0087               	movwf	7
  6398  0824  3142               	addfsr 1,2
  6399  0825  0834               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  6400  0826  3FC0               	movwi [0]fsr1
  6401  0827  0835               	movf	(??_USBCtrlTrfOutHandler^(0+128)+1),w
  6402  0828  3FC1               	movwi [1]fsr1
  6403                           
  6404                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6405  0829  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6406  082A  0086               	movwf	6
  6407  082B  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6408  082C  0087               	movwf	7
  6409  082D  300C               	movlw	12
  6410  082E  0081               	movwf	1
  6411                           
  6412                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6413  082F  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6414  0830  0086               	movwf	6
  6415  0831  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6416  0832  0087               	movwf	7
  6417  0833  1781               	bsf	1,7
  6418                           
  6419                           ;usb_device.c: 2561: }
  6420  0834  0008               	return
  6421  0835                     l6421:	
  6422                           
  6423                           ;usb_device.c: 2562: else
  6424                           ;usb_device.c: 2563: {
  6425                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  6426  0835  0022               	movlb	2	; select bank2
  6427  0836  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  6428  0837  0008               	return
  6429  0838                     __end_of_USBCtrlTrfOutHandler:	
  6430                           
  6431                           	psect	text23
  6432  06F2                     __ptext23:	
  6433 ;; *************** function _USBCtrlTrfRxService *****************
  6434 ;; Defined at:
  6435 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  byteToRead      1   19[BANK1 ] unsigned char 
  6440 ;;  i               1   18[BANK1 ] unsigned char 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      void 
  6443 ;; Registers used:
  6444 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;Total ram usage:        4 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:   11
  6457 ;; This function calls:
  6458 ;;		_USBCtrlEPAllowStatusStage
  6459 ;; This function is called by:
  6460 ;;		_USBCtrlTrfOutHandler
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           
  6465                           ;psect for function _USBCtrlTrfRxService
  6466  06F2                     _USBCtrlTrfRxService:	
  6467                           
  6468                           ;usb_device.c: 1854: uint8_t byteToRead;
  6469                           ;usb_device.c: 1855: uint8_t i;
  6470                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  6471                           
  6472                           ;incstack = 0
  6473                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6474  06F2  0021               	movlb	1	; select bank1
  6475  06F3  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6476  06F4  0086               	movwf	6
  6477  06F5  0187               	clrf	7
  6478  06F6  3F41               	moviw [1]fsr1
  6479  06F7  00B3               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  6480                           
  6481                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  6482  06F8  0833               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  6483  06F9  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6484  06FA  01B1               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  6485  06FB  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6486  06FC  024A               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
  6487  06FD  1D03               	skipz
  6488  06FE  2F01               	goto	u6315
  6489  06FF  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6490  0700  0249               	subwf	(_outPipes^(0+128)+3),w	;volatile
  6491  0701                     u6315:	
  6492  0701  1803               	skipnc
  6493  0702  2F07               	goto	l536
  6494                           
  6495                           ;usb_device.c: 1866: {
  6496                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  6497  0703  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
  6498  0704  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6499  0705  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6500  0706  00B3               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  6501  0707                     l536:	
  6502                           
  6503                           ;usb_device.c: 1868: }
  6504                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  6505  0707  0833               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  6506  0708  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6507  0709  01B1               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  6508  070A  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6509  070B  02C9               	subwf	(_outPipes^(0+128)+3),f	;volatile
  6510  070C  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6511  070D  3BCA               	subwfb	((_outPipes+1)^(0+128)+3),f	;volatile
  6512                           
  6513                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  6514  070E  01B2               	clrf	USBCtrlTrfRxService@i^(0+128)
  6515  070F                     l6173:	
  6516  070F  0833               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  6517  0710  0232               	subwf	USBCtrlTrfRxService@i^(0+128),w
  6518  0711  1803               	btfsc	3,0
  6519  0712  2F28               	goto	l6175
  6520                           
  6521                           ;usb_device.c: 1875: {
  6522                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  6523  0713  0832               	movf	USBCtrlTrfRxService@i^(0+128),w
  6524  0714  3E60               	addlw	96
  6525  0715  0086               	movwf	6
  6526  0716  0187               	clrf	7
  6527  0717  0801               	movf	1,w
  6528  0718  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6529  0719  0846               	movf	_outPipes^(0+128),w	;volatile
  6530  071A  0086               	movwf	6
  6531  071B  3001               	movlw	1	; select bank2/3
  6532  071C  0087               	movwf	7
  6533  071D  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6534  071E  0081               	movwf	1
  6535  071F  3001               	movlw	1
  6536  0720  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6537  0721  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6538  0722  07C6               	addwf	_outPipes^(0+128),f	;volatile
  6539  0723  3001               	movlw	1
  6540  0724  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6541  0725  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6542  0726  07B2               	addwf	USBCtrlTrfRxService@i^(0+128),f
  6543  0727  2F0F               	goto	l6173
  6544  0728                     l6175:	
  6545                           
  6546                           ;usb_device.c: 1877: }
  6547                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  6548  0728  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
  6549  0729  044A               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
  6550  072A  1903               	btfsc	3,2
  6551  072B  2F62               	goto	l6187
  6552                           
  6553                           ;usb_device.c: 1882: {
  6554                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 16;
  6555  072C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6556  072D  3E01               	addlw	1
  6557  072E  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6558  072F  3000               	movlw	0
  6559  0730  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6560  0731  00B1               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  6561  0732  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6562  0733  0086               	movwf	6
  6563  0734  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6564  0735  0087               	movwf	7
  6565  0736  3010               	movlw	16
  6566  0737  0081               	movwf	1
  6567                           
  6568                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6569  0738  3060               	movlw	96
  6570  0739  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6571  073A  3000               	movlw	0
  6572  073B  00B1               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  6573  073C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6574  073D  0086               	movwf	6
  6575  073E  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6576  073F  0087               	movwf	7
  6577  0740  3142               	addfsr 1,2
  6578  0741  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6579  0742  3FC0               	movwi [0]fsr1
  6580  0743  0831               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  6581  0744  3FC1               	movwi [1]fsr1
  6582                           
  6583                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  6584  0745  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6585  0746  0086               	movwf	6
  6586  0747  0187               	clrf	7
  6587  0748  1B01               	btfsc	1,6
  6588  0749  2F56               	goto	l6185
  6589                           
  6590                           ;usb_device.c: 1886: {
  6591                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6592  074A  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6593  074B  0086               	movwf	6
  6594  074C  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6595  074D  0087               	movwf	7
  6596  074E  3048               	movlw	72
  6597  074F  0081               	movwf	1
  6598                           
  6599                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6600  0750  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6601  0751  0086               	movwf	6
  6602  0752  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6603  0753  0087               	movwf	7
  6604  0754  1781               	bsf	1,7
  6605                           
  6606                           ;usb_device.c: 1889: }
  6607  0755  0008               	return
  6608  0756                     l6185:	
  6609                           
  6610                           ;usb_device.c: 1890: else
  6611                           ;usb_device.c: 1891: {
  6612                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  6613  0756  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6614  0757  0086               	movwf	6
  6615  0758  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6616  0759  0087               	movwf	7
  6617  075A  3008               	movlw	8
  6618  075B  0081               	movwf	1
  6619                           
  6620                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6621  075C  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6622  075D  0086               	movwf	6
  6623  075E  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6624  075F  0087               	movwf	7
  6625  0760  1781               	bsf	1,7
  6626                           
  6627                           ;usb_device.c: 1894: }
  6628                           ;usb_device.c: 1895: }
  6629  0761  0008               	return
  6630  0762                     l6187:	
  6631                           
  6632                           ;usb_device.c: 1896: else
  6633                           ;usb_device.c: 1897: {
  6634                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 16;
  6635  0762  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6636  0763  3E01               	addlw	1
  6637  0764  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6638  0765  3000               	movlw	0
  6639  0766  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6640  0767  00B1               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  6641  0768  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6642  0769  0086               	movwf	6
  6643  076A  0831               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  6644  076B  0087               	movwf	7
  6645  076C  3010               	movlw	16
  6646  076D  0081               	movwf	1
  6647                           
  6648                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6649  076E  3050               	movlw	80
  6650  076F  00B0               	movwf	??_USBCtrlTrfRxService^(0+128)
  6651  0770  3000               	movlw	0
  6652  0771  00B1               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  6653  0772  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6654  0773  0086               	movwf	6
  6655  0774  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6656  0775  0087               	movwf	7
  6657  0776  3142               	addfsr 1,2
  6658  0777  0830               	movf	??_USBCtrlTrfRxService^(0+128),w
  6659  0778  3FC0               	movwi [0]fsr1
  6660  0779  0831               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  6661  077A  3FC1               	movwi [1]fsr1
  6662                           
  6663                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6664  077B  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6665  077C  0086               	movwf	6
  6666  077D  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6667  077E  0087               	movwf	7
  6668  077F  3004               	movlw	4
  6669  0780  0081               	movwf	1
  6670                           
  6671                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6672  0781  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6673  0782  0086               	movwf	6
  6674  0783  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6675  0784  0087               	movwf	7
  6676  0785  1781               	bsf	1,7
  6677                           
  6678                           ;usb_device.c: 1915: {
  6679                           ;usb_device.c: 1921: outPipes[0].pFunc();
  6680  0786  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  6681  0787  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  6682                           
  6683                           ;usb_device.c: 1926: }
  6684                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  6685  0788  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
  6686                           
  6687                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  6688  0789  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  6689  078A  1D03               	btfss	3,2
  6690  078B  0008               	return
  6691                           
  6692                           ;usb_device.c: 1942: {
  6693                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  6694  078C  318A  22AD         	fcall	_USBCtrlEPAllowStatusStage
  6695  078E  0008               	return
  6696  078F                     __end_of_USBCtrlTrfRxService:	
  6697                           
  6698                           	psect	text24
  6699  0AAD                     __ptext24:	
  6700 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  6701 ;; Defined at:
  6702 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;		None
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;		None
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  1    wreg      void 
  6709 ;; Registers used:
  6710 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6718 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6719 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6720 ;;Total ram usage:        2 bytes
  6721 ;; Hardware stack levels used:    1
  6722 ;; Hardware stack levels required when called:   10
  6723 ;; This function calls:
  6724 ;;		Nothing
  6725 ;; This function is called by:
  6726 ;;		_USBDeviceTasks
  6727 ;;		_USBCtrlEPServiceComplete
  6728 ;;		_USBCtrlTrfRxService
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           
  6733                           ;psect for function _USBCtrlEPAllowStatusStage
  6734  0AAD                     _USBCtrlEPAllowStatusStage:	
  6735                           
  6736                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  6737                           
  6738                           ;incstack = 0
  6739                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  6740  0AAD  0022               	movlb	2	; select bank2
  6741  0AAE  084A               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
  6742  0AAF  1D03               	btfss	3,2
  6743  0AB0  0008               	return
  6744                           
  6745                           ;usb_device.c: 1424: {
  6746                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  6747  0AB1  3001               	movlw	1
  6748  0AB2  0021               	movlb	1	; select bank1
  6749  0AB3  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6750  0AB4  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6751  0AB5  0022               	movlb	2	; select bank2
  6752  0AB6  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  6753                           
  6754                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  6755  0AB7  0849               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
  6756  0AB8  1D03               	btfss	3,2
  6757  0AB9  0008               	return
  6758                           
  6759                           ;usb_device.c: 1427: {
  6760                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  6761  0ABA  3001               	movlw	1
  6762  0ABB  0021               	movlb	1	; select bank1
  6763  0ABC  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6764  0ABD  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6765  0ABE  0022               	movlb	2	; select bank2
  6766  0ABF  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  6767                           
  6768                           ;usb_device.c: 1432: if(controlTransferState == 2)
  6769  0AC0  3002               	movlw	2
  6770  0AC1  0021               	movlb	1	; select bank1
  6771  0AC2  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
  6772  0AC3  1D03               	btfss	3,2
  6773  0AC4  2AD7               	goto	l5845
  6774                           
  6775                           ;usb_device.c: 1433: {
  6776                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  6777  0AC5  084D               	movf	_pBDTEntryIn^(0+128),w
  6778  0AC6  0086               	movwf	6
  6779  0AC7  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6780  0AC8  0087               	movwf	7
  6781  0AC9  3141               	addfsr 1,1
  6782  0ACA  0181               	clrf	1
  6783                           
  6784                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6785  0ACB  084D               	movf	_pBDTEntryIn^(0+128),w
  6786  0ACC  0086               	movwf	6
  6787  0ACD  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6788  0ACE  0087               	movwf	7
  6789  0ACF  3048               	movlw	72
  6790  0AD0  0081               	movwf	1
  6791                           
  6792                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6793  0AD1  084D               	movf	_pBDTEntryIn^(0+128),w
  6794  0AD2  0086               	movwf	6
  6795  0AD3  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6796  0AD4  0087               	movwf	7
  6797  0AD5  1781               	bsf	1,7
  6798                           
  6799                           ;usb_device.c: 1437: }
  6800  0AD6  0008               	return
  6801  0AD7                     l5845:	
  6802                           
  6803                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  6804  0AD7  035C               	decf	_controlTransferState^(0+128),w	;volatile
  6805  0AD8  1D03               	btfss	3,2
  6806  0AD9  0008               	return
  6807                           
  6808                           ;usb_device.c: 1439: {
  6809                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  6810  0ADA  0022               	movlb	2	; select bank2
  6811  0ADB  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  6812                           
  6813                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 16;
  6814  0ADC  3010               	movlw	16
  6815  0ADD  0021               	movlb	1	; select bank1
  6816  0ADE  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6817  0ADF  0A5E               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  6818  0AE0  0086               	movwf	6
  6819  0AE1  0187               	clrf	7
  6820  0AE2  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6821  0AE3  0081               	movwf	1
  6822                           
  6823                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6824  0AE4  3050               	movlw	80
  6825  0AE5  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6826  0AE6  3000               	movlw	0
  6827  0AE7  00AF               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  6828  0AE8  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6829  0AE9  3E02               	addlw	2
  6830  0AEA  0086               	movwf	6
  6831  0AEB  0187               	clrf	7
  6832  0AEC  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6833  0AED  3FC0               	movwi [0]fsr1
  6834  0AEE  082F               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  6835  0AEF  3FC1               	movwi [1]fsr1
  6836                           
  6837                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  6838  0AF0  3004               	movlw	4
  6839  0AF1  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6840  0AF2  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6841  0AF3  0086               	movwf	6
  6842  0AF4  0187               	clrf	7
  6843  0AF5  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6844  0AF6  0081               	movwf	1
  6845                           
  6846                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6847  0AF7  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6848  0AF8  0086               	movwf	6
  6849  0AF9  0187               	clrf	7
  6850  0AFA  1781               	bsf	1,7
  6851                           
  6852                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  6853  0AFB  3001               	movlw	1
  6854  0AFC  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6855  0AFD  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6856  0AFE  0022               	movlb	2	; select bank2
  6857  0AFF  00CC               	movwf	_BothEP0OutUOWNsSet^(0+256)	;volatile
  6858                           
  6859                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 16;
  6860  0B00  0021               	movlb	1	; select bank1
  6861  0B01  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6862  0B02  3E01               	addlw	1
  6863  0B03  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6864  0B04  3000               	movlw	0
  6865  0B05  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6866  0B06  00AF               	movwf	(??_USBCtrlEPAllowStatusStage+1)^(0+128)
  6867  0B07  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6868  0B08  0086               	movwf	6
  6869  0B09  082F               	movf	(??_USBCtrlEPAllowStatusStage+1)^(0+128),w
  6870  0B0A  0087               	movwf	7
  6871  0B0B  3010               	movlw	16
  6872  0B0C  0081               	movwf	1
  6873                           
  6874                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6875  0B0D  3050               	movlw	80
  6876  0B0E  00AE               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  6877  0B0F  3000               	movlw	0
  6878  0B10  00AF               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  6879  0B11  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6880  0B12  0086               	movwf	6
  6881  0B13  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6882  0B14  0087               	movwf	7
  6883  0B15  3142               	addfsr 1,2
  6884  0B16  082E               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  6885  0B17  3FC0               	movwi [0]fsr1
  6886  0B18  082F               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  6887  0B19  3FC1               	movwi [1]fsr1
  6888                           
  6889                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  6890  0B1A  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6891  0B1B  0086               	movwf	6
  6892  0B1C  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6893  0B1D  0087               	movwf	7
  6894  0B1E  3080               	movlw	128
  6895  0B1F  0081               	movwf	1
  6896  0B20  0008               	return
  6897  0B21                     __end_of_USBCtrlEPAllowStatusStage:	
  6898                           
  6899                           	psect	text25
  6900  0961                     __ptext25:	
  6901 ;; *************** function _USBCtrlTrfInHandler *****************
  6902 ;; Defined at:
  6903 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;		None
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;  lastDTS         1   19[BANK1 ] unsigned char 
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  1    wreg      void 
  6910 ;; Registers used:
  6911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6918 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6919 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6920 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6921 ;;Total ram usage:        3 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:   11
  6924 ;; This function calls:
  6925 ;;		_USBCtrlTrfTxService
  6926 ;; This function is called by:
  6927 ;;		_USBCtrlEPService
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _USBCtrlTrfInHandler
  6933  0961                     _USBCtrlTrfInHandler:	
  6934                           
  6935                           ;usb_device.c: 2594: uint8_t lastDTS;
  6936                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  6937                           
  6938                           ;incstack = 0
  6939                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6940  0961  0021               	movlb	1	; select bank1
  6941  0962  084D               	movf	_pBDTEntryIn^(0+128),w
  6942  0963  0086               	movwf	6
  6943  0964  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  6944  0965  0087               	movwf	7
  6945  0966  3000               	movlw	0
  6946  0967  1B01               	btfsc	1,6
  6947  0968  3001               	movlw	1
  6948  0969  00B3               	movwf	USBCtrlTrfInHandler@lastDTS^(0+128)
  6949                           
  6950                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6951  096A  3004               	movlw	4
  6952  096B  064D               	xorwf	_pBDTEntryIn^(0+128),w
  6953  096C  00CD               	movwf	_pBDTEntryIn^(0+128)
  6954  096D  3000               	movlw	0
  6955  096E  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
  6956  096F  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  6957                           
  6958                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  6959  0970  3008               	movlw	8
  6960  0971  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
  6961  0972  1D03               	btfss	3,2
  6962  0973  2983               	goto	l6437
  6963                           
  6964                           ;usb_device.c: 2605: {
  6965                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  6966  0974  0020               	movlb	0	; select bank0
  6967  0975  0852               	movf	82,w	;volatile
  6968  0976  397F               	andlw	127
  6969  0977  003D               	movlb	29	; select bank29
  6970  0978  0096               	movwf	22	;volatile
  6971                           
  6972                           ;usb_device.c: 2607: if(UADDR != 0u)
  6973  0979  0816               	movf	22,w	;volatile
  6974  097A  1903               	btfsc	3,2
  6975  097B  297E               	goto	l6435
  6976                           
  6977                           ;usb_device.c: 2608: {
  6978                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  6979  097C  3010               	movlw	16
  6980  097D  297F               	goto	L7
  6981  097E                     l6435:	
  6982                           ;usb_device.c: 2610: }
  6983                           
  6984                           
  6985                           ;usb_device.c: 2611: else
  6986                           ;usb_device.c: 2612: {
  6987                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  6988  097E  3004               	movlw	4
  6989  097F                     L7:	
  6990  097F  0021               	movlb	1	; select bank1
  6991  0980  00B1               	movwf	??_USBCtrlTrfInHandler^(0+128)
  6992  0981  0831               	movf	??_USBCtrlTrfInHandler^(0+128),w
  6993  0982  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  6994  0983                     l6437:	
  6995                           
  6996                           ;usb_device.c: 2614: }
  6997                           ;usb_device.c: 2615: }
  6998                           ;usb_device.c: 2618: if(controlTransferState == 1)
  6999  0983  035C               	decf	_controlTransferState^(0+128),w	;volatile
  7000  0984  1D03               	btfss	3,2
  7001  0985  29C2               	goto	l621
  7002                           
  7003                           ;usb_device.c: 2619: {
  7004                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  7005  0986  3060               	movlw	96
  7006  0987  00B1               	movwf	??_USBCtrlTrfInHandler^(0+128)
  7007  0988  3000               	movlw	0
  7008  0989  00B2               	movwf	(??_USBCtrlTrfInHandler^(0+128)+1)
  7009  098A  084D               	movf	_pBDTEntryIn^(0+128),w
  7010  098B  0086               	movwf	6
  7011  098C  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7012  098D  0087               	movwf	7
  7013  098E  3142               	addfsr 1,2
  7014  098F  0831               	movf	??_USBCtrlTrfInHandler^(0+128),w
  7015  0990  3FC0               	movwi [0]fsr1
  7016  0991  0832               	movf	(??_USBCtrlTrfInHandler^(0+128)+1),w
  7017  0992  3FC1               	movwi [1]fsr1
  7018                           
  7019                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  7020  0993  318A  223B  3189   	fcall	_USBCtrlTrfTxService
  7021                           
  7022                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  7023  0996  3002               	movlw	2
  7024  0997  0021               	movlb	1	; select bank1
  7025  0998  065D               	xorwf	_shortPacketStatus^(0+128),w	;volatile
  7026  0999  1D03               	btfss	3,2
  7027  099A  29A7               	goto	l6447
  7028                           
  7029                           ;usb_device.c: 2628: {
  7030                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  7031  099B  084D               	movf	_pBDTEntryIn^(0+128),w
  7032  099C  0086               	movwf	6
  7033  099D  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7034  099E  0087               	movwf	7
  7035  099F  3004               	movlw	4
  7036  09A0  0081               	movwf	1
  7037                           
  7038                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7039  09A1  084D               	movf	_pBDTEntryIn^(0+128),w
  7040  09A2  0086               	movwf	6
  7041  09A3  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7042  09A4  0087               	movwf	7
  7043  09A5  1781               	bsf	1,7
  7044                           
  7045                           ;usb_device.c: 2633: }
  7046  09A6  0008               	return
  7047  09A7                     l6447:	
  7048                           
  7049                           ;usb_device.c: 2634: else
  7050                           ;usb_device.c: 2635: {
  7051                           ;usb_device.c: 2636: if(lastDTS == 0)
  7052  09A7  0833               	movf	USBCtrlTrfInHandler@lastDTS^(0+128),w
  7053  09A8  1D03               	btfss	3,2
  7054  09A9  29B6               	goto	l6451
  7055                           
  7056                           ;usb_device.c: 2637: {
  7057                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7058  09AA  084D               	movf	_pBDTEntryIn^(0+128),w
  7059  09AB  0086               	movwf	6
  7060  09AC  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7061  09AD  0087               	movwf	7
  7062  09AE  3048               	movlw	72
  7063  09AF  0081               	movwf	1
  7064                           
  7065                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7066  09B0  084D               	movf	_pBDTEntryIn^(0+128),w
  7067  09B1  0086               	movwf	6
  7068  09B2  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7069  09B3  0087               	movwf	7
  7070  09B4  1781               	bsf	1,7
  7071                           
  7072                           ;usb_device.c: 2640: }
  7073  09B5  0008               	return
  7074  09B6                     l6451:	
  7075                           
  7076                           ;usb_device.c: 2641: else
  7077                           ;usb_device.c: 2642: {
  7078                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  7079  09B6  084D               	movf	_pBDTEntryIn^(0+128),w
  7080  09B7  0086               	movwf	6
  7081  09B8  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7082  09B9  0087               	movwf	7
  7083  09BA  3008               	movlw	8
  7084  09BB  0081               	movwf	1
  7085                           
  7086                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7087  09BC  084D               	movf	_pBDTEntryIn^(0+128),w
  7088  09BD  0086               	movwf	6
  7089  09BE  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  7090  09BF  0087               	movwf	7
  7091  09C0  1781               	bsf	1,7
  7092                           
  7093                           ;usb_device.c: 2645: }
  7094                           ;usb_device.c: 2646: }
  7095                           ;usb_device.c: 2647: }
  7096  09C1  0008               	return
  7097  09C2                     l621:	
  7098                           
  7099                           ;usb_device.c: 2648: else
  7100                           ;usb_device.c: 2649: {
  7101                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  7102  09C2  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
  7103  09C3  29C7               	goto	l6455
  7104                           
  7105                           ;usb_device.c: 2656: {
  7106                           ;usb_device.c: 2657: outPipes[0].pFunc();
  7107  09C4  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  7108  09C5  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  7109                           
  7110                           ;usb_device.c: 2658: }
  7111                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  7112  09C6  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
  7113  09C7                     l6455:	
  7114                           
  7115                           ;usb_device.c: 2660: }
  7116                           ;usb_device.c: 2662: controlTransferState = 0;
  7117  09C7  01DC               	clrf	_controlTransferState^(0+128)	;volatile
  7118  09C8  0008               	return
  7119  09C9                     __end_of_USBCtrlTrfInHandler:	
  7120                           
  7121                           	psect	text26
  7122  0A3B                     __ptext26:	
  7123 ;; *************** function _USBCtrlTrfTxService *****************
  7124 ;; Defined at:
  7125 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;		None
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;  byteToSend      1   16[BANK1 ] unsigned char 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  1    wreg      void 
  7132 ;; Registers used:
  7133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7140 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7141 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7142 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;Total ram usage:        3 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:   10
  7146 ;; This function calls:
  7147 ;;		Nothing
  7148 ;; This function is called by:
  7149 ;;		_USBCtrlEPAllowDataStage
  7150 ;;		_USBCtrlTrfInHandler
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           
  7155                           ;psect for function _USBCtrlTrfTxService
  7156  0A3B                     _USBCtrlTrfTxService:	
  7157                           
  7158                           ;usb_device.c: 1773: uint8_t byteToSend;
  7159                           ;usb_device.c: 1777: byteToSend = 16;
  7160                           
  7161                           ;incstack = 0
  7162 ;; hardware stack exceeded
  7163                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  7164  0A3B  3010               	movlw	16
  7165  0A3C  0021               	movlb	1	; select bank1
  7166  0A3D  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7167  0A3E  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7168  0A3F  00B0               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  7169                           
  7170                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)16)
  7171  0A40  3000               	movlw	0
  7172  0A41  0257               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  7173  0A42  3010               	movlw	16
  7174  0A43  1903               	skipnz
  7175  0A44  0256               	subwf	(_inPipes^(0+128)+3),w	;volatile
  7176  0A45  1803               	skipnc
  7177  0A46  2A57               	goto	l521
  7178                           
  7179                           ;usb_device.c: 1779: {
  7180                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  7181  0A47  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
  7182  0A48  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7183  0A49  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7184  0A4A  00B0               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  7185                           
  7186                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  7187  0A4B  085D               	movf	_shortPacketStatus^(0+128),w	;volatile
  7188  0A4C  1D03               	btfss	3,2
  7189  0A4D  2A50               	goto	l5771
  7190                           
  7191                           ;usb_device.c: 1788: {
  7192                           ;usb_device.c: 1789: shortPacketStatus = 1;
  7193  0A4E  3001               	movlw	1
  7194  0A4F  2A54               	goto	L8
  7195  0A50                     l5771:	
  7196                           ;usb_device.c: 1790: }
  7197                           
  7198                           
  7199                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  7200  0A50  035D               	decf	_shortPacketStatus^(0+128),w	;volatile
  7201  0A51  1D03               	btfss	3,2
  7202  0A52  2A57               	goto	l521
  7203                           
  7204                           ;usb_device.c: 1792: {
  7205                           ;usb_device.c: 1793: shortPacketStatus = 2;
  7206  0A53  3002               	movlw	2
  7207  0A54                     L8:	
  7208  0A54  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7209  0A55  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7210  0A56  00DD               	movwf	_shortPacketStatus^(0+128)	;volatile
  7211  0A57                     l521:	
  7212                           
  7213                           ;usb_device.c: 1794: }
  7214                           ;usb_device.c: 1795: }
  7215                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  7216  0A57  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7217  0A58  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7218  0A59  01AF               	clrf	(??_USBCtrlTrfTxService^(0+128)+1)
  7219  0A5A  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7220  0A5B  02D6               	subwf	(_inPipes^(0+128)+3),f	;volatile
  7221  0A5C  082F               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  7222  0A5D  3BD7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
  7223                           
  7224                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  7225  0A5E  084D               	movf	_pBDTEntryIn^(0+128),w
  7226  0A5F  3E01               	addlw	1
  7227  0A60  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7228  0A61  3000               	movlw	0
  7229  0A62  3D4E               	addwfc	(_pBDTEntryIn+1)^(0+128),w
  7230  0A63  00AF               	movwf	(??_USBCtrlTrfTxService+1)^(0+128)
  7231  0A64  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7232  0A65  0086               	movwf	6
  7233  0A66  082F               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  7234  0A67  0087               	movwf	7
  7235  0A68  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7236  0A69  0081               	movwf	1
  7237                           
  7238                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  7239  0A6A  3060               	movlw	96
  7240  0A6B  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7241  0A6C  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7242  0A6D  0022               	movlb	2	; select bank2
  7243  0A6E  00CF               	movwf	_pDst^(0+256)
  7244                           
  7245                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  7246  0A6F  0021               	movlb	1	; select bank1
  7247  0A70  1C55               	btfss	(_inPipes^(0+128)+2),0	;volatile
  7248  0A71  2A8C               	goto	l5791
  7249  0A72  2AA9               	goto	l5801
  7250  0A73                     l5783:	
  7251                           ;usb_device.c: 1810: {
  7252                           ;usb_device.c: 1811: while(byteToSend)
  7253                           
  7254                           
  7255                           ;usb_device.c: 1812: {
  7256                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  7257  0A73  0853               	movf	_inPipes^(0+128),w	;volatile
  7258  0A74  0084               	movwf	4
  7259  0A75  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  7260  0A76  0085               	movwf	5
  7261  0A77  0800               	movf	0,w	;code access
  7262  0A78  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7263  0A79  0022               	movlb	2	; select bank2
  7264  0A7A  084F               	movf	_pDst^(0+256),w
  7265  0A7B  0086               	movwf	6
  7266  0A7C  0187               	clrf	7
  7267  0A7D  0021               	movlb	1	; select bank1
  7268  0A7E  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7269  0A7F  0081               	movwf	1
  7270  0A80  3001               	movlw	1
  7271  0A81  07D3               	addwf	_inPipes^(0+128),f	;volatile
  7272  0A82  3000               	movlw	0
  7273  0A83  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  7274  0A84  3001               	movlw	1
  7275  0A85  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7276  0A86  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7277  0A87  0022               	movlb	2	; select bank2
  7278  0A88  07CF               	addwf	_pDst^(0+256),f
  7279                           
  7280                           ;usb_device.c: 1814: byteToSend--;
  7281  0A89  3001               	movlw	1
  7282  0A8A  0021               	movlb	1	; select bank1
  7283  0A8B  02B0               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  7284  0A8C                     l5791:	
  7285  0A8C  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7286  0A8D  1903               	btfsc	3,2
  7287  0A8E  0008               	return
  7288  0A8F  2A73               	goto	l5783
  7289  0A90                     l5793:	
  7290                           ;usb_device.c: 1817: else
  7291                           ;usb_device.c: 1818: {
  7292                           ;usb_device.c: 1819: while(byteToSend)
  7293                           
  7294                           ;usb_device.c: 1815: }
  7295                           ;usb_device.c: 1816: }
  7296                           
  7297                           
  7298                           ;usb_device.c: 1820: {
  7299                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  7300  0A90  0853               	movf	_inPipes^(0+128),w	;volatile
  7301  0A91  0084               	movwf	4
  7302  0A92  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
  7303  0A93  0085               	movwf	5
  7304  0A94  0800               	movf	0,w	;code access
  7305  0A95  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7306  0A96  0022               	movlb	2	; select bank2
  7307  0A97  084F               	movf	_pDst^(0+256),w
  7308  0A98  0086               	movwf	6
  7309  0A99  0187               	clrf	7
  7310  0A9A  0021               	movlb	1	; select bank1
  7311  0A9B  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7312  0A9C  0081               	movwf	1
  7313  0A9D  3001               	movlw	1
  7314  0A9E  07D3               	addwf	_inPipes^(0+128),f	;volatile
  7315  0A9F  3000               	movlw	0
  7316  0AA0  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  7317  0AA1  3001               	movlw	1
  7318  0AA2  00AE               	movwf	??_USBCtrlTrfTxService^(0+128)
  7319  0AA3  082E               	movf	??_USBCtrlTrfTxService^(0+128),w
  7320  0AA4  0022               	movlb	2	; select bank2
  7321  0AA5  07CF               	addwf	_pDst^(0+256),f
  7322                           
  7323                           ;usb_device.c: 1822: byteToSend--;
  7324  0AA6  3001               	movlw	1
  7325  0AA7  0021               	movlb	1	; select bank1
  7326  0AA8  02B0               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  7327  0AA9                     l5801:	
  7328  0AA9  0830               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  7329  0AAA  1903               	btfsc	3,2
  7330  0AAB  0008               	return
  7331  0AAC  2A90               	goto	l5793
  7332  0AAD                     __end_of_USBCtrlTrfTxService:	
  7333                           
  7334                           	psect	text27
  7335  04BD                     __ptext27:	
  7336 ;; *************** function _CDCTxService *****************
  7337 ;; Defined at:
  7338 ;;		line 835 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;		None
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;  byte_to_send    1   27[BANK1 ] unsigned char 
  7343 ;;  i               1   26[BANK1 ] unsigned char 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      void 
  7346 ;; Registers used:
  7347 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7355 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7356 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7357 ;;Total ram usage:        3 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:   11
  7360 ;; This function calls:
  7361 ;;		_USBTransferOnePacket
  7362 ;; This function is called by:
  7363 ;;		_usb_task
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           
  7368                           ;psect for function _CDCTxService
  7369  04BD                     _CDCTxService:	
  7370                           
  7371                           ;usb_device_cdc.c: 837: uint8_t byte_to_send;
  7372                           ;usb_device_cdc.c: 838: uint8_t i;
  7373                           ;usb_device_cdc.c: 840: {PIE2bits.USBIE = 0;};
  7374                           
  7375                           ;incstack = 0
  7376                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7377  04BD  0021               	movlb	1	; select bank1
  7378  04BE  1112               	bcf	18,2	;volatile
  7379                           
  7380                           ;usb_device_cdc.c: 842: {};
  7381                           ;usb_device_cdc.c: 844: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  7382  04BF  0022               	movlb	2	; select bank2
  7383  04C0  083E               	movf	_CDCDataInHandle^(0+256),w
  7384  04C1  043F               	iorwf	(_CDCDataInHandle+1)^(0+256),w
  7385  04C2  1903               	btfsc	3,2
  7386  04C3  2CCD               	goto	l6711
  7387  04C4  083E               	movf	_CDCDataInHandle^(0+256),w
  7388  04C5  0086               	movwf	6
  7389  04C6  083F               	movf	(_CDCDataInHandle+1)^(0+256),w
  7390  04C7  0087               	movwf	7
  7391  04C8  1F81               	btfss	1,7
  7392  04C9  2CCD               	goto	l6711
  7393                           
  7394                           ;usb_device_cdc.c: 845: {
  7395                           ;usb_device_cdc.c: 846: {PIE2bits.USBIE = 1;};
  7396  04CA  0021               	movlb	1	; select bank1
  7397  04CB  1512               	bsf	18,2	;volatile
  7398                           
  7399                           ;usb_device_cdc.c: 847: return;
  7400  04CC  0008               	return
  7401  04CD                     l6711:	
  7402                           
  7403                           ;usb_device_cdc.c: 848: }
  7404                           ;usb_device_cdc.c: 855: if(cdc_trf_state == 3)
  7405  04CD  3003               	movlw	3
  7406  04CE  0022               	movlb	2	; select bank2
  7407  04CF  0654               	xorwf	_cdc_trf_state^(0+256),w
  7408  04D0  1903               	btfsc	3,2
  7409                           
  7410                           ;usb_device_cdc.c: 856: cdc_trf_state = 0;
  7411  04D1  01D4               	clrf	_cdc_trf_state^(0+256)
  7412                           
  7413                           ;usb_device_cdc.c: 861: if(cdc_trf_state == 0)
  7414  04D2  0854               	movf	_cdc_trf_state^(0+256),w
  7415  04D3  1D03               	btfss	3,2
  7416  04D4  2CD8               	goto	l6719
  7417                           
  7418                           ;usb_device_cdc.c: 862: {
  7419                           ;usb_device_cdc.c: 863: {PIE2bits.USBIE = 1;};
  7420  04D5  0021               	movlb	1	; select bank1
  7421  04D6  1512               	bsf	18,2	;volatile
  7422                           
  7423                           ;usb_device_cdc.c: 864: return;
  7424  04D7  0008               	return
  7425  04D8                     l6719:	
  7426                           
  7427                           ;usb_device_cdc.c: 865: }
  7428                           ;usb_device_cdc.c: 870: if(cdc_trf_state == 2)
  7429  04D8  3002               	movlw	2
  7430  04D9  0022               	movlb	2	; select bank2
  7431  04DA  0654               	xorwf	_cdc_trf_state^(0+256),w
  7432  04DB  1D03               	btfss	3,2
  7433  04DC  2CF8               	goto	l6725
  7434                           
  7435                           ;usb_device_cdc.c: 871: {
  7436                           ;usb_device_cdc.c: 872: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  7437  04DD  0021               	movlb	1	; select bank1
  7438  04DE  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  7439  04DF  0AAE               	incf	USBTransferOnePacket@dir^(0+128),f
  7440  04E0  3000               	movlw	0
  7441  04E1  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  7442  04E2  3000               	movlw	0
  7443  04E3  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  7444  04E4  01B1               	clrf	USBTransferOnePacket@len^(0+128)
  7445  04E5  3002               	movlw	2
  7446  04E6  318C  249F  3184   	fcall	_USBTransferOnePacket
  7447  04E9  0021               	movlb	1	; select bank1
  7448  04EA  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  7449  04EB  0022               	movlb	2	; select bank2
  7450  04EC  00BF               	movwf	(_CDCDataInHandle+1)^(0+256)
  7451  04ED  0021               	movlb	1	; select bank1
  7452  04EE  082E               	movf	?_USBTransferOnePacket^(0+128),w
  7453  04EF  0022               	movlb	2	; select bank2
  7454  04F0  00BE               	movwf	_CDCDataInHandle^(0+256)
  7455                           
  7456                           ;usb_device_cdc.c: 874: cdc_trf_state = 3;
  7457  04F1  3003               	movlw	3
  7458  04F2  0021               	movlb	1	; select bank1
  7459  04F3  00B9               	movwf	??_CDCTxService^(0+128)
  7460  04F4  0839               	movf	??_CDCTxService^(0+128),w
  7461  04F5  0022               	movlb	2	; select bank2
  7462  04F6  00D4               	movwf	_cdc_trf_state^(0+256)
  7463                           
  7464                           ;usb_device_cdc.c: 875: }
  7465  04F7  2D8C               	goto	l6773
  7466  04F8                     l6725:	
  7467                           
  7468                           ;usb_device_cdc.c: 876: else if(cdc_trf_state == 1)
  7469  04F8  0354               	decf	_cdc_trf_state^(0+256),w
  7470  04F9  1D03               	btfss	3,2
  7471  04FA  2D8C               	goto	l6773
  7472                           
  7473                           ;usb_device_cdc.c: 877: {
  7474                           ;usb_device_cdc.c: 881: if(cdc_tx_len > sizeof(cdc_data_tx))
  7475  04FB  3041               	movlw	65
  7476  04FC  0253               	subwf	_cdc_tx_len^(0+256),w
  7477  04FD  1C03               	skipc
  7478  04FE  2D01               	goto	l6731
  7479                           
  7480                           ;usb_device_cdc.c: 882: byte_to_send = sizeof(cdc_data_tx);
  7481  04FF  3040               	movlw	64
  7482  0500  2D03               	goto	L9
  7483  0501                     l6731:	
  7484                           
  7485                           ;usb_device_cdc.c: 883: else
  7486                           ;usb_device_cdc.c: 884: byte_to_send = cdc_tx_len;
  7487  0501  0022               	movlb	2	; select bank2
  7488  0502  0853               	movf	_cdc_tx_len^(0+256),w
  7489  0503                     L9:	
  7490  0503  0021               	movlb	1	; select bank1
  7491  0504  00B9               	movwf	??_CDCTxService^(0+128)
  7492  0505  0839               	movf	??_CDCTxService^(0+128),w
  7493  0506  00BB               	movwf	CDCTxService@byte_to_send^(0+128)
  7494                           
  7495                           ;usb_device_cdc.c: 889: cdc_tx_len = cdc_tx_len - byte_to_send;
  7496  0507  033B               	decf	CDCTxService@byte_to_send^(0+128),w
  7497  0508  3AFF               	xorlw	255
  7498  0509  0022               	movlb	2	; select bank2
  7499  050A  0753               	addwf	_cdc_tx_len^(0+256),w
  7500  050B  0021               	movlb	1	; select bank1
  7501  050C  00B9               	movwf	??_CDCTxService^(0+128)
  7502  050D  0839               	movf	??_CDCTxService^(0+128),w
  7503  050E  0022               	movlb	2	; select bank2
  7504  050F  00D3               	movwf	_cdc_tx_len^(0+256)
  7505                           
  7506                           ;usb_device_cdc.c: 891: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  7507  0510  3020               	movlw	(low (_cdc_data_tx| (0+512)))& (0+255)
  7508  0511  0021               	movlb	1	; select bank1
  7509  0512  00B9               	movwf	??_CDCTxService^(0+128)
  7510  0513  0839               	movf	??_CDCTxService^(0+128),w
  7511  0514  0022               	movlb	2	; select bank2
  7512  0515  00C2               	movwf	_pCDCDst^(0+256)
  7513                           
  7514                           ;usb_device_cdc.c: 893: i = byte_to_send;
  7515  0516  0021               	movlb	1	; select bank1
  7516  0517  083B               	movf	CDCTxService@byte_to_send^(0+128),w
  7517  0518  00B9               	movwf	??_CDCTxService^(0+128)
  7518  0519  0839               	movf	??_CDCTxService^(0+128),w
  7519  051A  00BA               	movwf	CDCTxService@i^(0+128)
  7520                           
  7521                           ;usb_device_cdc.c: 894: if(cdc_mem_type == 0x00)
  7522  051B  0022               	movlb	2	; select bank2
  7523  051C  0852               	movf	_cdc_mem_type^(0+256),w
  7524  051D  1903               	btfsc	3,2
  7525  051E  2D3E               	goto	l6751
  7526  051F  2D61               	goto	l6761
  7527  0520                     l6743:	
  7528                           ;usb_device_cdc.c: 895: {
  7529                           ;usb_device_cdc.c: 896: while(i)
  7530                           
  7531                           
  7532                           ;usb_device_cdc.c: 897: {
  7533                           ;usb_device_cdc.c: 898: *pCDCDst.bRam = *pCDCSrc.bRom;
  7534  0520  0022               	movlb	2	; select bank2
  7535  0521  0844               	movf	_pCDCSrc^(0+256),w
  7536  0522  0086               	movwf	6
  7537  0523  3003               	movlw	3	; select bank6/7
  7538  0524  0087               	movwf	7
  7539  0525  0801               	movf	1,w
  7540  0526  0021               	movlb	1	; select bank1
  7541  0527  00B9               	movwf	??_CDCTxService^(0+128)
  7542  0528  0022               	movlb	2	; select bank2
  7543  0529  0842               	movf	_pCDCDst^(0+256),w
  7544  052A  0086               	movwf	6
  7545  052B  3002               	movlw	2	; select bank4/5
  7546  052C  0087               	movwf	7
  7547  052D  0021               	movlb	1	; select bank1
  7548  052E  0839               	movf	??_CDCTxService^(0+128),w
  7549  052F  0081               	movwf	1
  7550                           
  7551                           ;usb_device_cdc.c: 899: pCDCDst.bRam++;
  7552  0530  3001               	movlw	1
  7553  0531  00B9               	movwf	??_CDCTxService^(0+128)
  7554  0532  0839               	movf	??_CDCTxService^(0+128),w
  7555  0533  0022               	movlb	2	; select bank2
  7556  0534  07C2               	addwf	_pCDCDst^(0+256),f
  7557                           
  7558                           ;usb_device_cdc.c: 900: pCDCSrc.bRom++;
  7559  0535  3001               	movlw	1
  7560  0536  0021               	movlb	1	; select bank1
  7561  0537  00B9               	movwf	??_CDCTxService^(0+128)
  7562  0538  0839               	movf	??_CDCTxService^(0+128),w
  7563  0539  0022               	movlb	2	; select bank2
  7564  053A  07C4               	addwf	_pCDCSrc^(0+256),f
  7565                           
  7566                           ;usb_device_cdc.c: 901: i--;
  7567  053B  3001               	movlw	1
  7568  053C  0021               	movlb	1	; select bank1
  7569  053D  02BA               	subwf	CDCTxService@i^(0+128),f
  7570  053E                     l6751:	
  7571  053E  0021               	movlb	1	; select bank1
  7572  053F  083A               	movf	CDCTxService@i^(0+128),w
  7573  0540  1903               	btfsc	3,2
  7574  0541  2D65               	goto	l6763
  7575  0542  2D20               	goto	l6743
  7576  0543                     l6753:	
  7577                           ;usb_device_cdc.c: 904: else
  7578                           ;usb_device_cdc.c: 905: {
  7579                           ;usb_device_cdc.c: 906: while(i)
  7580                           
  7581                           ;usb_device_cdc.c: 902: }
  7582                           ;usb_device_cdc.c: 903: }
  7583                           
  7584                           
  7585                           ;usb_device_cdc.c: 907: {
  7586                           ;usb_device_cdc.c: 908: *pCDCDst.bRam = *pCDCSrc.bRam;
  7587  0543  0022               	movlb	2	; select bank2
  7588  0544  0844               	movf	_pCDCSrc^(0+256),w
  7589  0545  0086               	movwf	6
  7590  0546  3003               	movlw	3	; select bank6/7
  7591  0547  0087               	movwf	7
  7592  0548  0801               	movf	1,w
  7593  0549  0021               	movlb	1	; select bank1
  7594  054A  00B9               	movwf	??_CDCTxService^(0+128)
  7595  054B  0022               	movlb	2	; select bank2
  7596  054C  0842               	movf	_pCDCDst^(0+256),w
  7597  054D  0086               	movwf	6
  7598  054E  3002               	movlw	2	; select bank4/5
  7599  054F  0087               	movwf	7
  7600  0550  0021               	movlb	1	; select bank1
  7601  0551  0839               	movf	??_CDCTxService^(0+128),w
  7602  0552  0081               	movwf	1
  7603                           
  7604                           ;usb_device_cdc.c: 909: pCDCDst.bRam++;
  7605  0553  3001               	movlw	1
  7606  0554  00B9               	movwf	??_CDCTxService^(0+128)
  7607  0555  0839               	movf	??_CDCTxService^(0+128),w
  7608  0556  0022               	movlb	2	; select bank2
  7609  0557  07C2               	addwf	_pCDCDst^(0+256),f
  7610                           
  7611                           ;usb_device_cdc.c: 910: pCDCSrc.bRam++;
  7612  0558  3001               	movlw	1
  7613  0559  0021               	movlb	1	; select bank1
  7614  055A  00B9               	movwf	??_CDCTxService^(0+128)
  7615  055B  0839               	movf	??_CDCTxService^(0+128),w
  7616  055C  0022               	movlb	2	; select bank2
  7617  055D  07C4               	addwf	_pCDCSrc^(0+256),f
  7618                           
  7619                           ;usb_device_cdc.c: 911: i--;
  7620  055E  3001               	movlw	1
  7621  055F  0021               	movlb	1	; select bank1
  7622  0560  02BA               	subwf	CDCTxService@i^(0+128),f
  7623  0561                     l6761:	
  7624  0561  0021               	movlb	1	; select bank1
  7625  0562  083A               	movf	CDCTxService@i^(0+128),w
  7626  0563  1D03               	btfss	3,2
  7627  0564  2D43               	goto	l6753
  7628  0565                     l6763:	
  7629                           
  7630                           ;usb_device_cdc.c: 912: }
  7631                           ;usb_device_cdc.c: 913: }
  7632                           ;usb_device_cdc.c: 919: if(cdc_tx_len == 0)
  7633  0565  0022               	movlb	2	; select bank2
  7634  0566  0853               	movf	_cdc_tx_len^(0+256),w
  7635  0567  1D03               	btfss	3,2
  7636  0568  2D76               	goto	l6771
  7637                           
  7638                           ;usb_device_cdc.c: 920: {
  7639                           ;usb_device_cdc.c: 921: if(byte_to_send == 64)
  7640  0569  3040               	movlw	64
  7641  056A  0021               	movlb	1	; select bank1
  7642  056B  063B               	xorwf	CDCTxService@byte_to_send^(0+128),w
  7643  056C  1D03               	btfss	3,2
  7644  056D  2D70               	goto	l6769
  7645                           
  7646                           ;usb_device_cdc.c: 922: cdc_trf_state = 2;
  7647  056E  3002               	movlw	2
  7648  056F  2D72               	goto	L10
  7649  0570                     l6769:	
  7650                           
  7651                           ;usb_device_cdc.c: 923: else
  7652                           ;usb_device_cdc.c: 924: cdc_trf_state = 3;
  7653  0570  3003               	movlw	3
  7654  0571  0021               	movlb	1	; select bank1
  7655  0572                     L10:	
  7656  0572  00B9               	movwf	??_CDCTxService^(0+128)
  7657  0573  0839               	movf	??_CDCTxService^(0+128),w
  7658  0574  0022               	movlb	2	; select bank2
  7659  0575  00D4               	movwf	_cdc_trf_state^(0+256)
  7660  0576                     l6771:	
  7661                           
  7662                           ;usb_device_cdc.c: 925: }
  7663                           ;usb_device_cdc.c: 926: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  7664  0576  0021               	movlb	1	; select bank1
  7665  0577  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  7666  0578  0AAE               	incf	USBTransferOnePacket@dir^(0+128),f
  7667  0579  3020               	movlw	low _cdc_data_tx
  7668  057A  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  7669  057B  3002               	movlw	high _cdc_data_tx
  7670  057C  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  7671  057D  083B               	movf	CDCTxService@byte_to_send^(0+128),w
  7672  057E  00B9               	movwf	??_CDCTxService^(0+128)
  7673  057F  0839               	movf	??_CDCTxService^(0+128),w
  7674  0580  00B1               	movwf	USBTransferOnePacket@len^(0+128)
  7675  0581  3002               	movlw	2
  7676  0582  318C  249F         	fcall	_USBTransferOnePacket
  7677  0584  0021               	movlb	1	; select bank1
  7678  0585  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  7679  0586  0022               	movlb	2	; select bank2
  7680  0587  00BF               	movwf	(_CDCDataInHandle+1)^(0+256)
  7681  0588  0021               	movlb	1	; select bank1
  7682  0589  082E               	movf	?_USBTransferOnePacket^(0+128),w
  7683  058A  0022               	movlb	2	; select bank2
  7684  058B  00BE               	movwf	_CDCDataInHandle^(0+256)
  7685  058C                     l6773:	
  7686                           
  7687                           ;usb_device_cdc.c: 928: }
  7688                           ;usb_device_cdc.c: 930: {PIE2bits.USBIE = 1;};
  7689  058C  0021               	movlb	1	; select bank1
  7690  058D  1512               	bsf	18,2	;volatile
  7691  058E  0008               	return
  7692  058F                     __end_of_CDCTxService:	
  7693                           
  7694                           	psect	text28
  7695  133E                     __ptext28:	
  7696 ;; *************** function _gpio_task *****************
  7697 ;; Defined at:
  7698 ;;		line 96 in file "main.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;		None
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;  has_output      1   32[BANK1 ] unsigned char 
  7703 ;;  rx_ptr          1   33[BANK1 ] unsigned char 
  7704 ;;  tx_ptr          1   34[BANK1 ] unsigned char 
  7705 ;;  bytes_rcvd      1   31[BANK1 ] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      void 
  7708 ;; Registers used:
  7709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;Total ram usage:        6 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:   12
  7722 ;; This function calls:
  7723 ;;		_getsUSBUSART
  7724 ;;		_process_gpio_cmd
  7725 ;;		_putUSBUSART
  7726 ;; This function is called by:
  7727 ;;		_main
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           
  7732                           ;psect for function _gpio_task
  7733  133E                     _gpio_task:	
  7734                           
  7735                           ;main.c: 97: static uint8_t usb_rx_buf[64];
  7736                           ;main.c: 98: static uint8_t usb_tx_buf[64];
  7737                           ;main.c: 100: if ((cdc_trf_state == 0)) {
  7738                           
  7739                           ;incstack = 0
  7740                           ; Regs used in _gpio_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7741  133E  0022               	movlb	2	; select bank2
  7742  133F  0854               	movf	_cdc_trf_state^(0+256),w
  7743  1340  1D03               	btfss	3,2
  7744  1341  0008               	return
  7745                           
  7746                           ;main.c: 101: uint8_t bytes_rcvd = getsUSBUSART(usb_rx_buf, 64);
  7747  1342  3040               	movlw	64
  7748  1343  0021               	movlb	1	; select bank1
  7749  1344  00BD               	movwf	??_gpio_task^(0+128)
  7750  1345  083D               	movf	??_gpio_task^(0+128),w
  7751  1346  00B9               	movwf	getsUSBUSART@len^(0+128)
  7752  1347  30A0               	movlw	(low (gpio_task@usb_rx_buf| (0+512)))& (0+255)
  7753  1348  3196  268A  3193   	fcall	_getsUSBUSART
  7754  134B  0021               	movlb	1	; select bank1
  7755  134C  00BE               	movwf	(??_gpio_task+1)^(0+128)
  7756  134D  083E               	movf	(??_gpio_task+1)^(0+128),w
  7757  134E  00BF               	movwf	gpio_task@bytes_rcvd^(0+128)
  7758                           
  7759                           ;main.c: 102: uint8_t tx_ptr = 0;
  7760  134F  01C2               	clrf	gpio_task@tx_ptr^(0+128)
  7761                           
  7762                           ;main.c: 104: for (uint8_t rx_ptr = 0; rx_ptr < bytes_rcvd; rx_ptr++) {
  7763  1350  01C1               	clrf	gpio_task@rx_ptr^(0+128)
  7764  1351                     l6953:	
  7765  1351  083F               	movf	gpio_task@bytes_rcvd^(0+128),w
  7766  1352  0241               	subwf	gpio_task@rx_ptr^(0+128),w
  7767  1353  1803               	btfsc	3,0
  7768  1354  2B73               	goto	l6955
  7769                           
  7770                           ;main.c: 105: bool has_output = process_gpio_cmd(usb_rx_buf[rx_ptr], &(usb_tx_buf[tx_ptr
      +                          ]));
  7771  1355  0842               	movf	gpio_task@tx_ptr^(0+128),w
  7772  1356  3E20               	addlw	(low (gpio_task@usb_tx_buf| (0+768)))& (0+255)
  7773  1357  00BD               	movwf	??_gpio_task^(0+128)
  7774  1358  083D               	movf	??_gpio_task^(0+128),w
  7775  1359  00AE               	movwf	process_gpio_cmd@rsp^(0+128)
  7776  135A  0841               	movf	gpio_task@rx_ptr^(0+128),w
  7777  135B  3EA0               	addlw	(low (gpio_task@usb_rx_buf| (0+512)))& (0+255)
  7778  135C  0086               	movwf	6
  7779  135D  3002               	movlw	2	; select bank5/6
  7780  135E  0087               	movwf	7
  7781  135F  0801               	movf	1,w
  7782  1360  3193  23BF  3193   	fcall	_process_gpio_cmd
  7783  1363  0021               	movlb	1	; select bank1
  7784  1364  00BE               	movwf	(??_gpio_task+1)^(0+128)
  7785  1365  083E               	movf	(??_gpio_task+1)^(0+128),w
  7786  1366  00C0               	movwf	gpio_task@has_output^(0+128)
  7787                           
  7788                           ;main.c: 107: if (has_output) {
  7789  1367  0840               	movf	gpio_task@has_output^(0+128),w
  7790  1368  1903               	btfsc	3,2
  7791  1369  2B6E               	goto	l241
  7792                           
  7793                           ;main.c: 108: tx_ptr += 1;
  7794  136A  3001               	movlw	1
  7795  136B  00BD               	movwf	??_gpio_task^(0+128)
  7796  136C  083D               	movf	??_gpio_task^(0+128),w
  7797  136D  07C2               	addwf	gpio_task@tx_ptr^(0+128),f
  7798  136E                     l241:	
  7799  136E  3001               	movlw	1
  7800  136F  00BD               	movwf	??_gpio_task^(0+128)
  7801  1370  083D               	movf	??_gpio_task^(0+128),w
  7802  1371  07C1               	addwf	gpio_task@rx_ptr^(0+128),f
  7803  1372  2B51               	goto	l6953
  7804  1373                     l6955:	
  7805                           
  7806                           ;main.c: 109: }
  7807                           ;main.c: 110: }
  7808                           ;main.c: 112: if (tx_ptr > 0) {
  7809  1373  0842               	movf	gpio_task@tx_ptr^(0+128),w
  7810  1374  1903               	btfsc	3,2
  7811  1375  0008               	return
  7812                           
  7813                           ;main.c: 113: putUSBUSART(usb_tx_buf, tx_ptr);
  7814  1376  0842               	movf	gpio_task@tx_ptr^(0+128),w
  7815  1377  00BD               	movwf	??_gpio_task^(0+128)
  7816  1378  083D               	movf	??_gpio_task^(0+128),w
  7817  1379  00AE               	movwf	putUSBUSART@length^(0+128)
  7818  137A  3020               	movlw	(low (gpio_task@usb_tx_buf| (0+768)))& (0+255)
  7819  137B  3190  20D6         	fcall	_putUSBUSART
  7820  137D  0008               	return
  7821  137E                     __end_of_gpio_task:	
  7822                           
  7823                           	psect	text29
  7824  10D6                     __ptext29:	
  7825 ;; *************** function _putUSBUSART *****************
  7826 ;; Defined at:
  7827 ;;		line 555 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;  data            1    wreg     PTR unsigned char 
  7830 ;;		 -> gpio_task@usb_tx_buf(64), 
  7831 ;;  length          1   14[BANK1 ] unsigned char 
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;  data            1   16[BANK1 ] PTR unsigned char 
  7834 ;;		 -> gpio_task@usb_tx_buf(64), 
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		wreg, status,2, status,0
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7844 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7845 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7846 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;Total ram usage:        3 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:   10
  7851 ;; This function calls:
  7852 ;;		Nothing
  7853 ;; This function is called by:
  7854 ;;		_gpio_task
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           
  7859                           ;psect for function _putUSBUSART
  7860  10D6                     _putUSBUSART:	
  7861                           
  7862                           ;incstack = 0
  7863                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  7864                           ;putUSBUSART@data stored from wreg
  7865  10D6  0021               	movlb	1	; select bank1
  7866  10D7  00B0               	movwf	putUSBUSART@data^(0+128)
  7867                           
  7868                           ;usb_device_cdc.c: 580: {PIE2bits.USBIE = 0;};
  7869  10D8  1112               	bcf	18,2	;volatile
  7870                           
  7871                           ;usb_device_cdc.c: 581: if(cdc_trf_state == 0)
  7872  10D9  0022               	movlb	2	; select bank2
  7873  10DA  0854               	movf	_cdc_trf_state^(0+256),w
  7874  10DB  1D03               	btfss	3,2
  7875  10DC  28ED               	goto	l4843
  7876                           
  7877                           ;usb_device_cdc.c: 582: {
  7878                           ;usb_device_cdc.c: 583: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  7879  10DD  0021               	movlb	1	; select bank1
  7880  10DE  0830               	movf	putUSBUSART@data^(0+128),w
  7881  10DF  00AF               	movwf	??_putUSBUSART^(0+128)
  7882  10E0  082F               	movf	??_putUSBUSART^(0+128),w
  7883  10E1  0022               	movlb	2	; select bank2
  7884  10E2  00C4               	movwf	_pCDCSrc^(0+256)
  7885  10E3  0021               	movlb	1	; select bank1
  7886  10E4  082E               	movf	putUSBUSART@length^(0+128),w
  7887  10E5  00AF               	movwf	??_putUSBUSART^(0+128)
  7888  10E6  082F               	movf	??_putUSBUSART^(0+128),w
  7889  10E7  0022               	movlb	2	; select bank2
  7890  10E8  00D3               	movwf	_cdc_tx_len^(0+256)
  7891  10E9  01D2               	clrf	_cdc_mem_type^(0+256)
  7892  10EA  0AD2               	incf	_cdc_mem_type^(0+256),f
  7893  10EB  01D4               	clrf	_cdc_trf_state^(0+256)
  7894  10EC  0AD4               	incf	_cdc_trf_state^(0+256),f
  7895  10ED                     l4843:	
  7896                           
  7897                           ;usb_device_cdc.c: 584: }
  7898                           ;usb_device_cdc.c: 585: {PIE2bits.USBIE = 1;};
  7899  10ED  0021               	movlb	1	; select bank1
  7900  10EE  1512               	bsf	18,2	;volatile
  7901  10EF  0008               	return
  7902  10F0                     __end_of_putUSBUSART:	
  7903                           
  7904                           	psect	text30
  7905  13BF                     __ptext30:	
  7906 ;; *************** function _process_gpio_cmd *****************
  7907 ;; Defined at:
  7908 ;;		line 64 in file "main.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  cmd             1    wreg     unsigned char 
  7911 ;;  rsp             1   14[BANK1 ] PTR unsigned char 
  7912 ;;		 -> gpio_task@usb_tx_buf(64), 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  cmd             1   17[BANK1 ] unsigned char 
  7915 ;;  cmd_type        1   16[BANK1 ] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      unsigned char 
  7918 ;; Registers used:
  7919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7925 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7926 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7927 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;Total ram usage:        4 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:   10
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_gpio_task
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           
  7940                           ;psect for function _process_gpio_cmd
  7941  13BF                     _process_gpio_cmd:	
  7942                           
  7943                           ;incstack = 0
  7944                           ; Regs used in _process_gpio_cmd: [wreg-fsr1h+status,2+status,0]
  7945                           ;process_gpio_cmd@cmd stored from wreg
  7946  13BF  0021               	movlb	1	; select bank1
  7947  13C0  00B1               	movwf	process_gpio_cmd@cmd^(0+128)
  7948                           
  7949                           ;main.c: 65: static uint8_t gpio_dir = 0;
  7950                           ;main.c: 66: uint8_t cmd_type = cmd & 0xC0;
  7951  13C1  0831               	movf	process_gpio_cmd@cmd^(0+128),w
  7952  13C2  39C0               	andlw	192
  7953  13C3  00AF               	movwf	??_process_gpio_cmd^(0+128)
  7954  13C4  082F               	movf	??_process_gpio_cmd^(0+128),w
  7955  13C5  00B0               	movwf	process_gpio_cmd@cmd_type^(0+128)
  7956                           
  7957                           ;main.c: 68: switch (cmd_type) {
  7958  13C6  2BF0               	goto	l5091
  7959  13C7                     l5063:	
  7960                           ;main.c: 69: case 0x00:
  7961                           
  7962                           
  7963                           ;main.c: 70: gpio_dir = cmd & 0x3f;
  7964  13C7  0831               	movf	process_gpio_cmd@cmd^(0+128),w
  7965  13C8  393F               	andlw	63
  7966  13C9  00AF               	movwf	??_process_gpio_cmd^(0+128)
  7967  13CA  082F               	movf	??_process_gpio_cmd^(0+128),w
  7968  13CB  0022               	movlb	2	; select bank2
  7969  13CC  00D0               	movwf	process_gpio_cmd@gpio_dir^(0+256)
  7970                           
  7971                           ;main.c: 71: TRISC = gpio_dir;
  7972  13CD  0850               	movf	process_gpio_cmd@gpio_dir^(0+256),w
  7973  13CE  0021               	movlb	1	; select bank1
  7974  13CF  008E               	movwf	14	;volatile
  7975                           
  7976                           ;main.c: 72: return 0;
  7977  13D0  3000               	movlw	0
  7978  13D1  0008               	return
  7979  13D2                     l5071:	
  7980                           ;main.c: 74: case 0x40:
  7981                           
  7982                           
  7983                           ;main.c: 75: return 0;
  7984  13D2  3000               	movlw	0
  7985  13D3  0008               	return
  7986  13D4                     l5075:	
  7987                           ;main.c: 77: case 0x80:
  7988                           
  7989                           
  7990                           ;main.c: 78: LATC = cmd & ~gpio_dir;
  7991  13D4  0022               	movlb	2	; select bank2
  7992  13D5  0950               	comf	process_gpio_cmd@gpio_dir^(0+256),w
  7993  13D6  0021               	movlb	1	; select bank1
  7994  13D7  0531               	andwf	process_gpio_cmd@cmd^(0+128),w
  7995  13D8  0022               	movlb	2	; select bank2
  7996  13D9  008E               	movwf	14	;volatile
  7997                           
  7998                           ;main.c: 79: return 0;
  7999  13DA  3000               	movlw	0
  8000  13DB  0008               	return
  8001  13DC                     l5081:	
  8002                           ;main.c: 81: case 0xC0:
  8003                           
  8004                           
  8005                           ;main.c: 82: (*rsp) = PORTC & gpio_dir;
  8006  13DC  0020               	movlb	0	; select bank0
  8007  13DD  080E               	movf	14,w	;volatile
  8008  13DE  0022               	movlb	2	; select bank2
  8009  13DF  0550               	andwf	process_gpio_cmd@gpio_dir^(0+256),w
  8010  13E0  0021               	movlb	1	; select bank1
  8011  13E1  00AF               	movwf	??_process_gpio_cmd^(0+128)
  8012  13E2  082E               	movf	process_gpio_cmd@rsp^(0+128),w
  8013  13E3  0086               	movwf	6
  8014  13E4  3003               	movlw	3	; select bank6/7
  8015  13E5  0087               	movwf	7
  8016  13E6  082F               	movf	??_process_gpio_cmd^(0+128),w
  8017  13E7  0081               	movwf	1
  8018                           
  8019                           ;main.c: 83: LATC = cmd & ~gpio_dir;
  8020  13E8  0022               	movlb	2	; select bank2
  8021  13E9  0950               	comf	process_gpio_cmd@gpio_dir^(0+256),w
  8022  13EA  0021               	movlb	1	; select bank1
  8023  13EB  0531               	andwf	process_gpio_cmd@cmd^(0+128),w
  8024  13EC  0022               	movlb	2	; select bank2
  8025  13ED  008E               	movwf	14	;volatile
  8026                           
  8027                           ;main.c: 84: return 1;
  8028  13EE  3001               	movlw	1
  8029                           
  8030                           ;main.c: 85: }
  8031  13EF  0008               	return
  8032  13F0                     l5091:	
  8033  13F0  0021               	movlb	1	; select bank1
  8034  13F1  0830               	movf	process_gpio_cmd@cmd_type^(0+128),w
  8035                           
  8036                           ; Switch size 1, requested type "space"
  8037                           ; Number of cases is 4, Range of values is 0 to 192
  8038                           ; switch strategies available:
  8039                           ; Name         Instructions Cycles
  8040                           ; simple_byte           13     7 (average)
  8041                           ; jumptable            260     6 (fixed)
  8042                           ;	Chosen strategy is simple_byte
  8043  13F2  3A00               	xorlw	0	; case 0
  8044  13F3  1903               	skipnz
  8045  13F4  2BC7               	goto	l5063
  8046  13F5  3A40               	xorlw	64	; case 64
  8047  13F6  1903               	skipnz
  8048  13F7  2BD2               	goto	l5071
  8049  13F8  3AC0               	xorlw	192	; case 128
  8050  13F9  1903               	skipnz
  8051  13FA  2BD4               	goto	l5075
  8052  13FB  3A40               	xorlw	64	; case 192
  8053  13FC  1903               	skipnz
  8054  13FD  2BDC               	goto	l5081
  8055  13FE  2BFF               	goto	l224
  8056  13FF                     l224:	
  8057  13FF  0008               	return
  8058  1400                     __end_of_process_gpio_cmd:	
  8059                           
  8060                           	psect	text31
  8061  168A                     __ptext31:	
  8062 ;; *************** function _getsUSBUSART *****************
  8063 ;; Defined at:
  8064 ;;		line 484 in file "mcc_generated_files/usb/usb_device_cdc.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  buffer          1    wreg     PTR unsigned char 
  8067 ;;		 -> gpio_task@usb_rx_buf(64), 
  8068 ;;  len             1   25[BANK1 ] unsigned char 
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;  buffer          1   28[BANK1 ] PTR unsigned char 
  8071 ;;		 -> gpio_task@usb_rx_buf(64), 
  8072 ;; Return value:  Size  Location     Type
  8073 ;;                  1    wreg      unsigned char 
  8074 ;; Registers used:
  8075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8076 ;; Tracked objects:
  8077 ;;		On entry : 0/0
  8078 ;;		On exit  : 0/0
  8079 ;;		Unchanged: 0/0
  8080 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8081 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8084 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;Total ram usage:        4 bytes
  8086 ;; Hardware stack levels used:    1
  8087 ;; Hardware stack levels required when called:   11
  8088 ;; This function calls:
  8089 ;;		_USBTransferOnePacket
  8090 ;; This function is called by:
  8091 ;;		_gpio_task
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           
  8096                           ;psect for function _getsUSBUSART
  8097  168A                     _getsUSBUSART:	
  8098                           
  8099                           ;incstack = 0
  8100                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8101                           ;getsUSBUSART@buffer stored from wreg
  8102  168A  0021               	movlb	1	; select bank1
  8103  168B  00BC               	movwf	getsUSBUSART@buffer^(0+128)
  8104                           
  8105                           ;usb_device_cdc.c: 486: cdc_rx_len = 0;
  8106  168C  0022               	movlb	2	; select bank2
  8107  168D  01D5               	clrf	_cdc_rx_len^(0+256)
  8108                           
  8109                           ;usb_device_cdc.c: 488: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  8110  168E  0840               	movf	_CDCDataOutHandle^(0+256),w
  8111  168F  0441               	iorwf	(_CDCDataOutHandle+1)^(0+256),w
  8112  1690  1903               	btfsc	3,2
  8113  1691  2E98               	goto	l6685
  8114  1692  0840               	movf	_CDCDataOutHandle^(0+256),w
  8115  1693  0086               	movwf	6
  8116  1694  0841               	movf	(_CDCDataOutHandle+1)^(0+256),w
  8117  1695  0087               	movwf	7
  8118  1696  1B81               	btfsc	1,7
  8119  1697  2EE3               	goto	l6699
  8120  1698                     l6685:	
  8121                           
  8122                           ;usb_device_cdc.c: 489: {
  8123                           ;usb_device_cdc.c: 494: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  8124  1698  0840               	movf	_CDCDataOutHandle^(0+256),w
  8125  1699  0086               	movwf	6
  8126  169A  0841               	movf	(_CDCDataOutHandle+1)^(0+256),w
  8127  169B  0087               	movwf	7
  8128  169C  3141               	addfsr 1,1
  8129  169D  0021               	movlb	1	; select bank1
  8130  169E  0839               	movf	getsUSBUSART@len^(0+128),w
  8131  169F  0201               	subwf	1,w
  8132  16A0  1803               	skipnc
  8133  16A1  2EAD               	goto	l6689
  8134                           
  8135                           ;usb_device_cdc.c: 495: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  8136  16A2  0022               	movlb	2	; select bank2
  8137  16A3  0840               	movf	_CDCDataOutHandle^(0+256),w
  8138  16A4  0086               	movwf	6
  8139  16A5  0841               	movf	(_CDCDataOutHandle+1)^(0+256),w
  8140  16A6  0087               	movwf	7
  8141  16A7  3141               	addfsr 1,1
  8142  16A8  0801               	movf	1,w
  8143  16A9  0021               	movlb	1	; select bank1
  8144  16AA  00BA               	movwf	??_getsUSBUSART^(0+128)
  8145  16AB  083A               	movf	??_getsUSBUSART^(0+128),w
  8146  16AC  00B9               	movwf	getsUSBUSART@len^(0+128)
  8147  16AD                     l6689:	
  8148                           
  8149                           ;usb_device_cdc.c: 500: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  8150  16AD  0022               	movlb	2	; select bank2
  8151  16AE  01D5               	clrf	_cdc_rx_len^(0+256)
  8152  16AF                     l6695:	
  8153  16AF  0021               	movlb	1	; select bank1
  8154  16B0  0839               	movf	getsUSBUSART@len^(0+128),w
  8155  16B1  0022               	movlb	2	; select bank2
  8156  16B2  0255               	subwf	_cdc_rx_len^(0+256),w
  8157  16B3  1803               	btfsc	3,0
  8158  16B4  2ECE               	goto	l6697
  8159                           
  8160                           ;usb_device_cdc.c: 501: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  8161  16B5  0855               	movf	_cdc_rx_len^(0+256),w
  8162  16B6  3EA0               	addlw	(low (_cdc_data_rx| (0+256)))& (0+255)
  8163  16B7  0086               	movwf	6
  8164  16B8  3001               	movlw	1	; select bank3/4
  8165  16B9  0087               	movwf	7
  8166  16BA  0801               	movf	1,w
  8167  16BB  0021               	movlb	1	; select bank1
  8168  16BC  00BA               	movwf	??_getsUSBUSART^(0+128)
  8169  16BD  0022               	movlb	2	; select bank2
  8170  16BE  0855               	movf	_cdc_rx_len^(0+256),w
  8171  16BF  0021               	movlb	1	; select bank1
  8172  16C0  073C               	addwf	getsUSBUSART@buffer^(0+128),w
  8173  16C1  00BB               	movwf	(??_getsUSBUSART+1)^(0+128)
  8174  16C2  083B               	movf	(??_getsUSBUSART+1)^(0+128),w
  8175  16C3  0086               	movwf	6
  8176  16C4  3002               	movlw	2	; select bank4/5
  8177  16C5  0087               	movwf	7
  8178  16C6  083A               	movf	??_getsUSBUSART^(0+128),w
  8179  16C7  0081               	movwf	1
  8180  16C8  3001               	movlw	1
  8181  16C9  00BA               	movwf	??_getsUSBUSART^(0+128)
  8182  16CA  083A               	movf	??_getsUSBUSART^(0+128),w
  8183  16CB  0022               	movlb	2	; select bank2
  8184  16CC  07D5               	addwf	_cdc_rx_len^(0+256),f
  8185  16CD  2EAF               	goto	l6695
  8186  16CE                     l6697:	
  8187                           
  8188                           ;usb_device_cdc.c: 507: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8189  16CE  0021               	movlb	1	; select bank1
  8190  16CF  01AE               	clrf	USBTransferOnePacket@dir^(0+128)
  8191  16D0  30A0               	movlw	low _cdc_data_rx
  8192  16D1  00AF               	movwf	USBTransferOnePacket@data^(0+128)
  8193  16D2  3001               	movlw	high _cdc_data_rx
  8194  16D3  00B0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  8195  16D4  3040               	movlw	64
  8196  16D5  00BA               	movwf	??_getsUSBUSART^(0+128)
  8197  16D6  083A               	movf	??_getsUSBUSART^(0+128),w
  8198  16D7  00B1               	movwf	USBTransferOnePacket@len^(0+128)
  8199  16D8  3002               	movlw	2
  8200  16D9  318C  249F         	fcall	_USBTransferOnePacket
  8201  16DB  0021               	movlb	1	; select bank1
  8202  16DC  082F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  8203  16DD  0022               	movlb	2	; select bank2
  8204  16DE  00C1               	movwf	(_CDCDataOutHandle+1)^(0+256)
  8205  16DF  0021               	movlb	1	; select bank1
  8206  16E0  082E               	movf	?_USBTransferOnePacket^(0+128),w
  8207  16E1  0022               	movlb	2	; select bank2
  8208  16E2  00C0               	movwf	_CDCDataOutHandle^(0+256)
  8209  16E3                     l6699:	
  8210                           
  8211                           ;usb_device_cdc.c: 509: }
  8212                           ;usb_device_cdc.c: 511: return cdc_rx_len;
  8213  16E3  0855               	movf	_cdc_rx_len^(0+256),w
  8214  16E4  0008               	return
  8215  16E5                     __end_of_getsUSBUSART:	
  8216                           
  8217                           	psect	text32
  8218  0C9F                     __ptext32:	
  8219 ;; *************** function _USBTransferOnePacket *****************
  8220 ;; Defined at:
  8221 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  ep              1    wreg     unsigned char 
  8224 ;;  dir             1   14[BANK1 ] unsigned char 
  8225 ;;  data            2   15[BANK1 ] PTR unsigned char 
  8226 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
  8227 ;;  len             1   17[BANK1 ] unsigned char 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;  ep              1   22[BANK1 ] unsigned char 
  8230 ;;  handle          2   23[BANK1 ] PTR volatile struct __BD
  8231 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  2   14[BANK1 ] PTR void 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8241 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8242 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;Total ram usage:       11 bytes
  8246 ;; Hardware stack levels used:    1
  8247 ;; Hardware stack levels required when called:   10
  8248 ;; This function calls:
  8249 ;;		Nothing
  8250 ;; This function is called by:
  8251 ;;		_CDCInitEP
  8252 ;;		_getsUSBUSART
  8253 ;;		_CDCTxService
  8254 ;;		_USBCDCEventHandler
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           
  8259                           ;psect for function _USBTransferOnePacket
  8260  0C9F                     _USBTransferOnePacket:	
  8261                           
  8262                           ;incstack = 0
  8263                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  8264                           ;USBTransferOnePacket@ep stored from wreg
  8265  0C9F  0021               	movlb	1	; select bank1
  8266  0CA0  00B6               	movwf	USBTransferOnePacket@ep^(0+128)
  8267                           
  8268                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8269                           ;usb_device.c: 1000: if(dir != 0)
  8270  0CA1  082E               	movf	USBTransferOnePacket@dir^(0+128),w
  8271  0CA2  1903               	btfsc	3,2
  8272  0CA3  2CAC               	goto	l5657
  8273                           
  8274                           ;usb_device.c: 1001: {
  8275                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8276  0CA4  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8277  0CA5  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8278  0CA6  0086               	movwf	6
  8279  0CA7  0187               	clrf	7
  8280  0CA8  3F40               	moviw [0]fsr1
  8281  0CA9  00B7               	movwf	USBTransferOnePacket@handle^(0+128)
  8282  0CAA  3F41               	moviw [1]fsr1
  8283  0CAB  2CB4               	goto	L11
  8284  0CAC                     l5657:	
  8285                           ;usb_device.c: 1004: }
  8286                           
  8287                           
  8288                           ;usb_device.c: 1005: else
  8289                           ;usb_device.c: 1006: {
  8290                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8291  0CAC  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8292  0CAD  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8293  0CAE  0086               	movwf	6
  8294  0CAF  3001               	movlw	1	; select bank2/3
  8295  0CB0  0087               	movwf	7
  8296  0CB1  3F40               	moviw [0]fsr1
  8297  0CB2  00B7               	movwf	USBTransferOnePacket@handle^(0+128)
  8298  0CB3  3F41               	moviw [1]fsr1
  8299  0CB4                     L11:	
  8300  0CB4  00B8               	movwf	(USBTransferOnePacket@handle+1)^(0+128)
  8301                           
  8302                           ;usb_device.c: 1009: }
  8303                           ;usb_device.c: 1013: if(handle == 0)
  8304  0CB5  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8305  0CB6  0438               	iorwf	(USBTransferOnePacket@handle+1)^(0+128),w
  8306  0CB7  1D03               	btfss	3,2
  8307  0CB8  2CBC               	goto	l5665
  8308                           
  8309                           ;usb_device.c: 1014: {
  8310                           ;usb_device.c: 1015: return 0;
  8311  0CB9  01AE               	clrf	?_USBTransferOnePacket^(0+128)
  8312  0CBA  01AF               	clrf	(?_USBTransferOnePacket+1)^(0+128)
  8313  0CBB  0008               	return
  8314  0CBC                     l5665:	
  8315                           
  8316                           ;usb_device.c: 1016: }
  8317                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8318  0CBC  30FF               	movlw	255
  8319  0CBD  052F               	andwf	USBTransferOnePacket@data^(0+128),w
  8320  0CBE  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8321  0CBF  307F               	movlw	127
  8322  0CC0  0530               	andwf	(USBTransferOnePacket@data+1)^(0+128),w
  8323  0CC1  00B3               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  8324  0CC2  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8325  0CC3  0086               	movwf	6
  8326  0CC4  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8327  0CC5  0087               	movwf	7
  8328  0CC6  3142               	addfsr 1,2
  8329  0CC7  0832               	movf	??_USBTransferOnePacket^(0+128),w
  8330  0CC8  3FC0               	movwi [0]fsr1
  8331  0CC9  0833               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  8332  0CCA  3FC1               	movwi [1]fsr1
  8333                           
  8334                           ;usb_device.c: 1030: handle->CNT = len;
  8335  0CCB  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8336  0CCC  3E01               	addlw	1
  8337  0CCD  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8338  0CCE  3000               	movlw	0
  8339  0CCF  3D38               	addwfc	(USBTransferOnePacket@handle+1)^(0+128),w
  8340  0CD0  00B3               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  8341  0CD1  0832               	movf	??_USBTransferOnePacket^(0+128),w
  8342  0CD2  0086               	movwf	6
  8343  0CD3  0833               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  8344  0CD4  0087               	movwf	7
  8345  0CD5  0831               	movf	USBTransferOnePacket@len^(0+128),w
  8346  0CD6  0081               	movwf	1
  8347                           
  8348                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8349  0CD7  3040               	movlw	64
  8350  0CD8  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8351  0CD9  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8352  0CDA  0086               	movwf	6
  8353  0CDB  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8354  0CDC  0087               	movwf	7
  8355  0CDD  0832               	movf	??_USBTransferOnePacket^(0+128),w
  8356  0CDE  0581               	andwf	1,f
  8357                           
  8358                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8359  0CDF  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8360  0CE0  0086               	movwf	6
  8361  0CE1  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8362  0CE2  0087               	movwf	7
  8363  0CE3  1581               	bsf	1,3
  8364                           
  8365                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8366  0CE4  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8367  0CE5  0086               	movwf	6
  8368  0CE6  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8369  0CE7  0087               	movwf	7
  8370  0CE8  1781               	bsf	1,7
  8371                           
  8372                           ;usb_device.c: 1036: if(dir != 0)
  8373  0CE9  082E               	movf	USBTransferOnePacket@dir^(0+128),w
  8374  0CEA  1903               	btfsc	3,2
  8375  0CEB  2D03               	goto	l5675
  8376                           
  8377                           ;usb_device.c: 1037: {
  8378                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8379  0CEC  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8380  0CED  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8381  0CEE  0086               	movwf	6
  8382  0CEF  0187               	clrf	7
  8383  0CF0  3F40               	moviw [0]fsr1
  8384  0CF1  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8385  0CF2  3F41               	moviw [1]fsr1
  8386  0CF3  00B3               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  8387  0CF4  3004               	movlw	4
  8388  0CF5  0632               	xorwf	??_USBTransferOnePacket^(0+128),w
  8389  0CF6  00B4               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  8390  0CF7  3000               	movlw	0
  8391  0CF8  0633               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  8392  0CF9  00B5               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  8393  0CFA  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8394  0CFB  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8395  0CFC  0086               	movwf	6
  8396  0CFD  0187               	clrf	7
  8397  0CFE  0834               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  8398  0CFF  3FC0               	movwi [0]fsr1
  8399  0D00  0835               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  8400  0D01  3FC1               	movwi [1]fsr1
  8401                           
  8402                           ;usb_device.c: 1040: }
  8403  0D02  2D1B               	goto	l5677
  8404  0D03                     l5675:	
  8405                           
  8406                           ;usb_device.c: 1041: else
  8407                           ;usb_device.c: 1042: {
  8408                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8409  0D03  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8410  0D04  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8411  0D05  0086               	movwf	6
  8412  0D06  3001               	movlw	1	; select bank2/3
  8413  0D07  0087               	movwf	7
  8414  0D08  3F40               	moviw [0]fsr1
  8415  0D09  00B2               	movwf	??_USBTransferOnePacket^(0+128)
  8416  0D0A  3F41               	moviw [1]fsr1
  8417  0D0B  00B3               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  8418  0D0C  3004               	movlw	4
  8419  0D0D  0632               	xorwf	??_USBTransferOnePacket^(0+128),w
  8420  0D0E  00B4               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  8421  0D0F  3000               	movlw	0
  8422  0D10  0633               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  8423  0D11  00B5               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  8424  0D12  3536               	lslf	USBTransferOnePacket@ep^(0+128),w
  8425  0D13  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8426  0D14  0086               	movwf	6
  8427  0D15  3001               	movlw	1	; select bank2/3
  8428  0D16  0087               	movwf	7
  8429  0D17  0834               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  8430  0D18  3FC0               	movwi [0]fsr1
  8431  0D19  0835               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  8432  0D1A  3FC1               	movwi [1]fsr1
  8433  0D1B                     l5677:	
  8434                           
  8435                           ;usb_device.c: 1045: }
  8436                           ;usb_device.c: 1046: return (void*)handle;
  8437  0D1B  0838               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  8438  0D1C  00AF               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  8439  0D1D  0837               	movf	USBTransferOnePacket@handle^(0+128),w
  8440  0D1E  00AE               	movwf	?_USBTransferOnePacket^(0+128)
  8441  0D1F  0008               	return
  8442  0D20                     __end_of_USBTransferOnePacket:	
  8443                           
  8444                           	psect	text33
  8445  1037                     __ptext33:	
  8446 ;; *************** function _gpio_init *****************
  8447 ;; Defined at:
  8448 ;;		line 88 in file "main.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1    wreg      void 
  8455 ;; Registers used:
  8456 ;;		wreg
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;Total ram usage:        0 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; Hardware stack levels required when called:   10
  8469 ;; This function calls:
  8470 ;;		Nothing
  8471 ;; This function is called by:
  8472 ;;		_main
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           
  8477                           ;psect for function _gpio_init
  8478  1037                     _gpio_init:	
  8479                           
  8480                           ;main.c: 89: TRISC = 0b111111;
  8481                           
  8482                           ;incstack = 0
  8483                           ; Regs used in _gpio_init: [wreg]
  8484  1037  303F               	movlw	63
  8485  1038  0021               	movlb	1	; select bank1
  8486  1039  008E               	movwf	14	;volatile
  8487  103A  0008               	return
  8488  103B                     __end_of_gpio_init:	
  8489                           
  8490                           	psect	text34
  8491  1059                     __ptext34:	
  8492 ;; *************** function _SYSTEM_Initialize *****************
  8493 ;; Defined at:
  8494 ;;		line 72 in file "mcc_generated_files/mcc.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;		None
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  1    wreg      void 
  8501 ;; Registers used:
  8502 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;Total ram usage:        0 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:   11
  8515 ;; This function calls:
  8516 ;;		_OSCILLATOR_Initialize
  8517 ;;		_PIN_MANAGER_Initialize
  8518 ;;		_USBDeviceAttach
  8519 ;;		_USBDeviceInit
  8520 ;;		_WDT_Initialize
  8521 ;; This function is called by:
  8522 ;;		_main
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           
  8527                           ;psect for function _SYSTEM_Initialize
  8528  1059                     _SYSTEM_Initialize:	
  8529                           
  8530                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  8531                           
  8532                           ;incstack = 0
  8533                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8534  1059  3190  2078  3190   	fcall	_PIN_MANAGER_Initialize
  8535                           
  8536                           ;mcc.c: 76: OSCILLATOR_Initialize();
  8537  105C  3190  2041  3190   	fcall	_OSCILLATOR_Initialize
  8538                           
  8539                           ;mcc.c: 77: WDT_Initialize();
  8540  105F  319F  27FC  3190   	fcall	_WDT_Initialize
  8541                           
  8542                           ;mcc.c: 78: USBDeviceInit();
  8543  1062  3185  258F  3190   	fcall	_USBDeviceInit
  8544                           
  8545                           ;mcc.c: 79: USBDeviceAttach();
  8546  1065  3190  20F0         	fcall	_USBDeviceAttach
  8547  1067  0008               	return
  8548  1068                     __end_of_SYSTEM_Initialize:	
  8549                           
  8550                           	psect	text35
  8551  1FFC                     __ptext35:	
  8552 ;; *************** function _WDT_Initialize *****************
  8553 ;; Defined at:
  8554 ;;		line 96 in file "mcc_generated_files/mcc.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;		None
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;		None
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  1    wreg      void 
  8561 ;; Registers used:
  8562 ;;		wreg
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8572 ;;Total ram usage:        0 bytes
  8573 ;; Hardware stack levels used:    1
  8574 ;; Hardware stack levels required when called:   10
  8575 ;; This function calls:
  8576 ;;		Nothing
  8577 ;; This function is called by:
  8578 ;;		_SYSTEM_Initialize
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           
  8583                           ;psect for function _WDT_Initialize
  8584  1FFC                     _WDT_Initialize:	
  8585                           
  8586                           ;mcc.c: 99: WDTCON = 0x16;
  8587                           
  8588                           ;incstack = 0
  8589                           ; Regs used in _WDT_Initialize: [wreg]
  8590  1FFC  3016               	movlw	22
  8591  1FFD  0021               	movlb	1	; select bank1
  8592  1FFE  0097               	movwf	23	;volatile
  8593  1FFF  0008               	return
  8594  2000                     __end_of_WDT_Initialize:	
  8595                           
  8596                           	psect	text36
  8597  058F                     __ptext36:	
  8598 ;; *************** function _USBDeviceInit *****************
  8599 ;; Defined at:
  8600 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;		None
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;  p               2   15[BANK1 ] PTR unsigned char 
  8605 ;;		 -> UEP1(1), 
  8606 ;;  i               1   17[BANK1 ] unsigned char 
  8607 ;;  i               1   18[BANK1 ] unsigned char 
  8608 ;; Return value:  Size  Location     Type
  8609 ;;                  1    wreg      void 
  8610 ;; Registers used:
  8611 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8612 ;; Tracked objects:
  8613 ;;		On entry : 0/0
  8614 ;;		On exit  : 0/0
  8615 ;;		Unchanged: 0/0
  8616 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8618 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8619 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8620 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8621 ;;Total ram usage:        5 bytes
  8622 ;; Hardware stack levels used:    1
  8623 ;; Hardware stack levels required when called:   10
  8624 ;; This function calls:
  8625 ;;		Nothing
  8626 ;; This function is called by:
  8627 ;;		_SYSTEM_Initialize
  8628 ;;		_main
  8629 ;;		_USBDeviceTasks
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           
  8634                           ;psect for function _USBDeviceInit
  8635  058F                     _USBDeviceInit:	
  8636                           
  8637                           ;usb_device.c: 279: uint8_t i;
  8638                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  8639                           
  8640                           ;incstack = 0
  8641                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8642  058F  0021               	movlb	1	; select bank1
  8643  0590  1112               	bcf	18,2	;volatile
  8644                           
  8645                           ;usb_device.c: 285: ;
  8646                           ;usb_device.c: 288: {UEIR = 0;};
  8647  0591  003D               	movlb	29	; select bank29
  8648  0592  0193               	clrf	19	;volatile
  8649                           
  8650                           ;usb_device.c: 291: {UIR = 0;};
  8651  0593  0190               	clrf	16	;volatile
  8652                           
  8653                           ;usb_device.c: 294: UEP0 = 0;
  8654  0594  0198               	clrf	24	;volatile
  8655                           
  8656                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  8657  0595  300E               	movlw	14
  8658  0596  0021               	movlb	1	; select bank1
  8659  0597  00B0               	movwf	(USBDeviceInit@p+1)^(0+128)
  8660  0598  3099               	movlw	153
  8661  0599  00AF               	movwf	USBDeviceInit@p^(0+128)
  8662  059A  01B1               	clrf	USBDeviceInit@i_1508^(0+128)
  8663  059B  3002               	movlw	2
  8664  059C  0231               	subwf	USBDeviceInit@i_1508^(0+128),w
  8665  059D  1803               	btfsc	3,0
  8666  059E  2DB0               	goto	l6517
  8667  059F                     l6509:	
  8668  059F  082F               	movf	USBDeviceInit@p^(0+128),w
  8669  05A0  0086               	movwf	6
  8670  05A1  0830               	movf	(USBDeviceInit@p+1)^(0+128),w
  8671  05A2  0087               	movwf	7
  8672  05A3  0181               	clrf	1
  8673  05A4  3001               	movlw	1
  8674  05A5  07AF               	addwf	USBDeviceInit@p^(0+128),f
  8675  05A6  3000               	movlw	0
  8676  05A7  3DB0               	addwfc	(USBDeviceInit@p+1)^(0+128),f
  8677  05A8  3001               	movlw	1
  8678  05A9  00AE               	movwf	??_USBDeviceInit^(0+128)
  8679  05AA  082E               	movf	??_USBDeviceInit^(0+128),w
  8680  05AB  07B1               	addwf	USBDeviceInit@i_1508^(0+128),f
  8681  05AC  3002               	movlw	2
  8682  05AD  0231               	subwf	USBDeviceInit@i_1508^(0+128),w
  8683  05AE  1C03               	skipc
  8684  05AF  2D9F               	goto	l6509
  8685  05B0                     l6517:	
  8686                           
  8687                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8688  05B0  3016               	movlw	22
  8689  05B1  003D               	movlb	29	; select bank29
  8690  05B2  0091               	movwf	17	;volatile
  8691  05B3  309F               	movlw	159
  8692  05B4  0097               	movwf	23	;volatile
  8693  05B5  307B               	movlw	123
  8694  05B6  0092               	movwf	18	;volatile
  8695                           
  8696                           ;usb_device.c: 301: ;
  8697                           ;usb_device.c: 304: ;
  8698                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8699  05B7  0021               	movlb	1	; select bank1
  8700  05B8  01B2               	clrf	USBDeviceInit@i^(0+128)
  8701  05B9  300C               	movlw	12
  8702  05BA  0232               	subwf	USBDeviceInit@i^(0+128),w
  8703  05BB  1803               	btfsc	3,0
  8704  05BC  2DD6               	goto	l423
  8705  05BD                     l6525:	
  8706                           
  8707                           ;usb_device.c: 308: {
  8708                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  8709  05BD  0832               	movf	USBDeviceInit@i^(0+128),w
  8710  05BE  00AE               	movwf	??_USBDeviceInit^(0+128)
  8711  05BF  3001               	movlw	1
  8712  05C0                     u6725:	
  8713  05C0  35AE               	lslf	??_USBDeviceInit^(0+128),f
  8714  05C1  3EFF               	addlw	-1
  8715  05C2  1D03               	skipz
  8716  05C3  2DC0               	goto	u6725
  8717  05C4  352E               	lslf	??_USBDeviceInit^(0+128),w
  8718  05C5  3E20               	addlw	32
  8719  05C6  0086               	movwf	6
  8720  05C7  0187               	clrf	7
  8721  05C8  3000               	movlw	0
  8722  05C9  3FC0               	movwi [0]fsr1
  8723  05CA  3000               	movlw	0
  8724  05CB  3FC1               	movwi [1]fsr1
  8725  05CC  3FC2               	movwi [2]fsr1
  8726  05CD  3FC3               	movwi [3]fsr1
  8727  05CE  3001               	movlw	1
  8728  05CF  00AE               	movwf	??_USBDeviceInit^(0+128)
  8729  05D0  082E               	movf	??_USBDeviceInit^(0+128),w
  8730  05D1  07B2               	addwf	USBDeviceInit@i^(0+128),f
  8731  05D2  300C               	movlw	12
  8732  05D3  0232               	subwf	USBDeviceInit@i^(0+128),w
  8733  05D4  1C03               	skipc
  8734  05D5  2DBD               	goto	l6525
  8735  05D6                     l423:	
  8736                           
  8737                           ;usb_device.c: 310: }
  8738                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  8739  05D6  003D               	movlb	29	; select bank29
  8740  05D7  170E               	bsf	14,6	;volatile
  8741                           
  8742                           ;usb_device.c: 316: UADDR = 0x00;
  8743  05D8  0196               	clrf	22	;volatile
  8744                           
  8745                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  8746  05D9  120E               	bcf	14,4	;volatile
  8747                           
  8748                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  8749  05DA  130E               	bcf	14,6	;volatile
  8750  05DB                     l6537:	
  8751                           ;usb_device.c: 325: do
  8752                           
  8753                           
  8754                           ;usb_device.c: 326: {
  8755                           ;usb_device.c: 327: (UIR &= 0xF7);
  8756  05DB  30F7               	movlw	247
  8757  05DC  0021               	movlb	1	; select bank1
  8758  05DD  00AE               	movwf	??_USBDeviceInit^(0+128)
  8759  05DE  082E               	movf	??_USBDeviceInit^(0+128),w
  8760  05DF  003D               	movlb	29	; select bank29
  8761  05E0  0590               	andwf	16,f	;volatile
  8762                           
  8763                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  8764  05E1  0021               	movlb	1	; select bank1
  8765  05E2  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
  8766                           
  8767                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  8768  05E3  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
  8769                           
  8770                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  8771  05E4  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
  8772  05E5  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  8773                           
  8774                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  8775  05E6  003D               	movlb	29	; select bank29
  8776  05E7  1990               	btfsc	16,3	;volatile
  8777  05E8  2DDB               	goto	l6537
  8778                           
  8779                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  8780  05E9  3001               	movlw	1
  8781  05EA  0021               	movlb	1	; select bank1
  8782  05EB  00AE               	movwf	??_USBDeviceInit^(0+128)
  8783  05EC  082E               	movf	??_USBDeviceInit^(0+128),w
  8784  05ED  0022               	movlb	2	; select bank2
  8785  05EE  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  8786                           
  8787                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  8788  05EF  3001               	movlw	1
  8789  05F0  0021               	movlb	1	; select bank1
  8790  05F1  00AE               	movwf	??_USBDeviceInit^(0+128)
  8791  05F2  082E               	movf	??_USBDeviceInit^(0+128),w
  8792  05F3  0022               	movlb	2	; select bank2
  8793  05F4  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  8794                           
  8795                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  8796  05F5  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  8797                           
  8798                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  8799  05F6  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  8800                           
  8801                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  8802  05F7  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
  8803                           
  8804                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  8805  05F8  0021               	movlb	1	; select bank1
  8806  05F9  01B2               	clrf	USBDeviceInit@i^(0+128)
  8807  05FA  3003               	movlw	3
  8808  05FB  0232               	subwf	USBDeviceInit@i^(0+128),w
  8809  05FC  1803               	btfsc	3,0
  8810  05FD  2E21               	goto	l6565
  8811  05FE                     l6559:	
  8812                           
  8813                           ;usb_device.c: 346: {
  8814                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  8815  05FE  3532               	lslf	USBDeviceInit@i^(0+128),w
  8816  05FF  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8817  0600  0086               	movwf	6
  8818  0601  0187               	clrf	7
  8819  0602  3000               	movlw	0
  8820  0603  3FC0               	movwi [0]fsr1
  8821  0604  3FC1               	movwi [1]fsr1
  8822                           
  8823                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  8824  0605  3532               	lslf	USBDeviceInit@i^(0+128),w
  8825  0606  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8826  0607  0086               	movwf	6
  8827  0608  3001               	movlw	1	; select bank2/3
  8828  0609  0087               	movwf	7
  8829  060A  3000               	movlw	0
  8830  060B  3FC0               	movwi [0]fsr1
  8831  060C  3FC1               	movwi [1]fsr1
  8832                           
  8833                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  8834  060D  0832               	movf	USBDeviceInit@i^(0+128),w
  8835  060E  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8836  060F  0086               	movwf	6
  8837  0610  3001               	movlw	1	; select bank2/3
  8838  0611  0087               	movwf	7
  8839  0612  0181               	clrf	1
  8840                           
  8841                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  8842  0613  0832               	movf	USBDeviceInit@i^(0+128),w
  8843  0614  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8844  0615  0086               	movwf	6
  8845  0616  3001               	movlw	1	; select bank2/3
  8846  0617  0087               	movwf	7
  8847  0618  0181               	clrf	1
  8848  0619  3001               	movlw	1
  8849  061A  00AE               	movwf	??_USBDeviceInit^(0+128)
  8850  061B  082E               	movf	??_USBDeviceInit^(0+128),w
  8851  061C  07B2               	addwf	USBDeviceInit@i^(0+128),f
  8852  061D  3003               	movlw	3
  8853  061E  0232               	subwf	USBDeviceInit@i^(0+128),w
  8854  061F  1C03               	skipc
  8855  0620  2DFE               	goto	l6559
  8856  0621                     l6565:	
  8857                           
  8858                           ;usb_device.c: 351: }
  8859                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8860  0621  3028               	movlw	40
  8861  0622  00CD               	movwf	_pBDTEntryIn^(0+128)
  8862  0623  3000               	movlw	0
  8863  0624  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
  8864                           
  8865                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  8866  0625  3016               	movlw	22
  8867  0626  003D               	movlb	29	; select bank29
  8868  0627  0098               	movwf	24	;volatile
  8869                           
  8870                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8871  0628  3000               	movlw	0
  8872  0629  0020               	movlb	0	; select bank0
  8873  062A  00A3               	movwf	35	;volatile
  8874  062B  3050               	movlw	80
  8875  062C  00A2               	movwf	34	;volatile
  8876                           
  8877                           ;usb_device.c: 359: BDT[0].CNT = 16;
  8878  062D  3010               	movlw	16
  8879  062E  00A1               	movwf	33	;volatile
  8880                           
  8881                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  8882  062F  3004               	movlw	4
  8883  0630  0021               	movlb	1	; select bank1
  8884  0631  00AE               	movwf	??_USBDeviceInit^(0+128)
  8885  0632  082E               	movf	??_USBDeviceInit^(0+128),w
  8886  0633  0020               	movlb	0	; select bank0
  8887  0634  00A0               	movwf	32	;volatile
  8888                           
  8889                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  8890  0635  17A0               	bsf	32,7	;volatile
  8891                           
  8892                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  8893  0636  0021               	movlb	1	; select bank1
  8894  0637  01E1               	clrf	_USBActiveConfiguration^(0+128)	;volatile
  8895                           
  8896                           ;usb_device.c: 366: USB1msTickCount = 0;
  8897  0638  3000               	movlw	0
  8898  0639  0022               	movlb	2	; select bank2
  8899  063A  00B3               	movwf	(_USB1msTickCount+3)^(0+256)	;volatile
  8900  063B  3000               	movlw	0
  8901  063C  00B2               	movwf	(_USB1msTickCount+2)^(0+256)	;volatile
  8902  063D  3000               	movlw	0
  8903  063E  00B1               	movwf	(_USB1msTickCount+1)^(0+256)	;volatile
  8904  063F  3000               	movlw	0
  8905  0640  00B0               	movwf	_USB1msTickCount^(0+256)	;volatile
  8906                           
  8907                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  8908  0641  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  8909                           
  8910                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  8911  0642  0021               	movlb	1	; select bank1
  8912  0643  01DF               	clrf	_USBDeviceState^(0+128)	;volatile
  8913  0644  0008               	return
  8914  0645                     __end_of_USBDeviceInit:	
  8915                           
  8916                           	psect	text37
  8917  10F0                     __ptext37:	
  8918 ;; *************** function _USBDeviceAttach *****************
  8919 ;; Defined at:
  8920 ;;		line 1352 in file "mcc_generated_files/usb/usb_device.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;		None
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;		None
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      void 
  8927 ;; Registers used:
  8928 ;;		wreg, status,2, status,0
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;Total ram usage:        1 bytes
  8939 ;; Hardware stack levels used:    1
  8940 ;; Hardware stack levels required when called:   10
  8941 ;; This function calls:
  8942 ;;		Nothing
  8943 ;; This function is called by:
  8944 ;;		_SYSTEM_Initialize
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           
  8949                           ;psect for function _USBDeviceAttach
  8950  10F0                     _USBDeviceAttach:	
  8951                           
  8952                           ;usb_device.c: 1356: {
  8953                           ;usb_device.c: 1357: if(1 == 1)
  8954                           
  8955                           ;incstack = 0
  8956                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  8957  10F0  0021               	movlb	1	; select bank1
  8958  10F1  085F               	movf	_USBDeviceState^(0+128),w	;volatile
  8959  10F2  1D03               	btfss	3,2
  8960  10F3  0008               	return
  8961                           
  8962                           ;usb_device.c: 1358: {
  8963                           ;usb_device.c: 1360: UCON = 0;
  8964  10F4  003D               	movlb	29	; select bank29
  8965  10F5  018E               	clrf	14	;volatile
  8966                           
  8967                           ;usb_device.c: 1363: UIE = 0;
  8968  10F6  0192               	clrf	18	;volatile
  8969                           
  8970                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  8971  10F7  3016               	movlw	22
  8972  10F8  0091               	movwf	17	;volatile
  8973  10F9  309F               	movlw	159
  8974  10FA  0097               	movwf	23	;volatile
  8975  10FB  307B               	movlw	123
  8976  10FC  0092               	movwf	18	;volatile
  8977                           
  8978                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  8979  10FD  0021               	movlb	1	; select bank1
  8980  10FE  1512               	bsf	18,2	;volatile
  8981  10FF  170B               	bsf	11,6	;volatile
  8982  1100  178B               	bsf	11,7	;volatile
  8983  1101                     l483:	
  8984                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  8985                           
  8986  1101  003D               	movlb	29	; select bank29
  8987  1102  198E               	btfsc	14,3	;volatile
  8988  1103  2906               	goto	l5059
  8989  1104  158E               	bsf	14,3	;volatile
  8990  1105  2901               	goto	l483
  8991  1106                     l5059:	
  8992                           
  8993                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  8994  1106  3001               	movlw	1
  8995  1107  0021               	movlb	1	; select bank1
  8996  1108  00AE               	movwf	??_USBDeviceAttach^(0+128)
  8997  1109  082E               	movf	??_USBDeviceAttach^(0+128),w
  8998  110A  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  8999  110B  0008               	return
  9000  110C                     __end_of_USBDeviceAttach:	
  9001                           
  9002                           	psect	text38
  9003  1078                     __ptext38:	
  9004 ;; *************** function _PIN_MANAGER_Initialize *****************
  9005 ;; Defined at:
  9006 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;		None
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;		None
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, status,2
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;Total ram usage:        0 bytes
  9025 ;; Hardware stack levels used:    1
  9026 ;; Hardware stack levels required when called:   10
  9027 ;; This function calls:
  9028 ;;		Nothing
  9029 ;; This function is called by:
  9030 ;;		_SYSTEM_Initialize
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           
  9035                           ;psect for function _PIN_MANAGER_Initialize
  9036  1078                     _PIN_MANAGER_Initialize:	
  9037                           
  9038                           ;pin_manager.c: 57: LATA = 0x00;
  9039                           
  9040                           ;incstack = 0
  9041                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9042  1078  0022               	movlb	2	; select bank2
  9043  1079  018C               	clrf	12	;volatile
  9044                           
  9045                           ;pin_manager.c: 58: LATC = 0x00;
  9046  107A  018E               	clrf	14	;volatile
  9047                           
  9048                           ;pin_manager.c: 63: TRISA = 0x30;
  9049  107B  3030               	movlw	48
  9050  107C  0021               	movlb	1	; select bank1
  9051  107D  008C               	movwf	12	;volatile
  9052                           
  9053                           ;pin_manager.c: 64: TRISC = 0x07;
  9054  107E  3007               	movlw	7
  9055  107F  008E               	movwf	14	;volatile
  9056                           
  9057                           ;pin_manager.c: 69: ANSELC = 0x08;
  9058  1080  3008               	movlw	8
  9059  1081  0023               	movlb	3	; select bank3
  9060  1082  008E               	movwf	14	;volatile
  9061                           
  9062                           ;pin_manager.c: 70: ANSELA = 0x10;
  9063  1083  3010               	movlw	16
  9064  1084  008C               	movwf	12	;volatile
  9065                           
  9066                           ;pin_manager.c: 75: WPUA = 0x38;
  9067  1085  3038               	movlw	56
  9068  1086  0024               	movlb	4	; select bank4
  9069  1087  008C               	movwf	12	;volatile
  9070                           
  9071                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 0;
  9072  1088  0021               	movlb	1	; select bank1
  9073  1089  1395               	bcf	21,7	;volatile
  9074                           
  9075                           ;pin_manager.c: 82: APFCON = 0x00;
  9076  108A  0022               	movlb	2	; select bank2
  9077  108B  019D               	clrf	29	;volatile
  9078  108C  0008               	return
  9079  108D                     __end_of_PIN_MANAGER_Initialize:	
  9080                           
  9081                           	psect	text39
  9082  1041                     __ptext39:	
  9083 ;; *************** function _OSCILLATOR_Initialize *****************
  9084 ;; Defined at:
  9085 ;;		line 82 in file "mcc_generated_files/mcc.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;		None
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      void 
  9092 ;; Registers used:
  9093 ;;		wreg, status,2
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;Total ram usage:        0 bytes
  9104 ;; Hardware stack levels used:    1
  9105 ;; Hardware stack levels required when called:   10
  9106 ;; This function calls:
  9107 ;;		Nothing
  9108 ;; This function is called by:
  9109 ;;		_SYSTEM_Initialize
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           
  9114                           ;psect for function _OSCILLATOR_Initialize
  9115  1041                     _OSCILLATOR_Initialize:	
  9116                           
  9117                           ;mcc.c: 85: OSCCON = 0x3C;
  9118                           
  9119                           ;incstack = 0
  9120                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9121  1041  303C               	movlw	60
  9122  1042  0021               	movlb	1	; select bank1
  9123  1043  0099               	movwf	25	;volatile
  9124                           
  9125                           ;mcc.c: 87: OSCTUNE = 0x00;
  9126  1044  0198               	clrf	24	;volatile
  9127                           
  9128                           ;mcc.c: 89: ACTCON = 0x00;
  9129  1045  0027               	movlb	7	; select bank7
  9130  1046  019B               	clrf	27	;volatile
  9131  1047                     l183:	
  9132                           ;mcc.c: 92: {
  9133                           
  9134                           ;mcc.c: 91: while(PLLRDY == 0)
  9135                           
  9136  1047  0021               	movlb	1	; select bank1
  9137  1048  1B1A               	btfsc	26,6	;volatile
  9138  1049  0008               	return
  9139  104A  2847               	goto	l183
  9140  104B                     __end_of_OSCILLATOR_Initialize:	
  9141                           
  9142                           	psect	intentry
  9143  0004                     __pintentry:	
  9144 ;; *************** function _INTERRUPT_InterruptManager *****************
  9145 ;; Defined at:
  9146 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;		None
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;		None
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      void 
  9153 ;; Registers used:
  9154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9163 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;Total ram usage:        1 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    9
  9167 ;; This function calls:
  9168 ;;		i1_USBDeviceTasks
  9169 ;; This function is called by:
  9170 ;;		Interrupt level 1
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174  0004                     _INTERRUPT_InterruptManager:	
  9175                           
  9176                           ;incstack = 0
  9177 ;; hardware stack exceeded
  9178  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9179                           
  9180                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9181  0005  3180               	pagesel	$
  9182  0006  0020               	movlb	0	; select bank0
  9183  0007  087F               	movf	127,w
  9184  0008  0021               	movlb	1	; select bank1
  9185  0009  00AD               	movwf	??_INTERRUPT_InterruptManager^(0+128)
  9186                           
  9187                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE2bits.USBIE == 1 && PIR2bits.USB
      +                          IF == 1)
  9188  000A  1B0B               	btfsc	11,6	;volatile
  9189  000B  1D12               	btfss	18,2	;volatile
  9190  000C  2812               	goto	i1l133
  9191  000D  0020               	movlb	0	; select bank0
  9192  000E  1D12               	btfss	18,2	;volatile
  9193  000F  2812               	goto	i1l133
  9194                           
  9195                           ;interrupt_manager.c: 55: {
  9196                           ;interrupt_manager.c: 56: USBDeviceTasks();
  9197  0010  3183  23E0         	fcall	i1_USBDeviceTasks
  9198  0012                     i1l133:	
  9199                           ;interrupt_manager.c: 58: else
  9200                           ;interrupt_manager.c: 59: {
  9201                           
  9202                           ;interrupt_manager.c: 57: }
  9203                           
  9204  0012  0021               	movlb	1	; select bank1
  9205  0013  082D               	movf	??_INTERRUPT_InterruptManager^(0+128),w
  9206  0014  0020               	movlb	0	; select bank0
  9207  0015  00FF               	movwf	127
  9208  0016  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9209  0017  0009               	retfie
  9210  0018                     __end_of_INTERRUPT_InterruptManager:	
  9211                           
  9212                           	psect	text41
  9213  03E0                     __ptext41:	
  9214 ;; *************** function i1_USBDeviceTasks *****************
  9215 ;; Defined at:
  9216 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;  USBDeviceTas    1   12[BANK1 ] unsigned char 
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;Total ram usage:        3 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:    8
  9237 ;; This function calls:
  9238 ;;		i1_USBCtrlEPAllowStatusStage
  9239 ;;		i1_USBCtrlEPService
  9240 ;;		i1_USBDeviceInit
  9241 ;;		i1_USBIncrement1msInternalTimers
  9242 ;;		i1_USBStallHandler
  9243 ;;		i1_USBSuspend
  9244 ;;		i1_USBWakeFromSuspend
  9245 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9246 ;; This function is called by:
  9247 ;;		_INTERRUPT_InterruptManager
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251                           
  9252                           ;psect for function i1_USBDeviceTasks
  9253  03E0                     i1_USBDeviceTasks:	
  9254                           
  9255                           ;usb_device.c: 479: uint8_t i;
  9256                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  9257                           
  9258                           ;incstack = 0
  9259 ;; hardware stack exceeded
  9260                           ; Regs used in i1_USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9261  03E0  0021               	movlb	1	; select bank1
  9262  03E1  035F               	decf	_USBDeviceState^(0+128),w	;volatile
  9263  03E2  1D03               	btfss	3,2
  9264  03E3  2BEF               	goto	i1l6971
  9265                           
  9266                           ;usb_device.c: 591: {
  9267                           ;usb_device.c: 601: if(!UCONbits.SE0)
  9268  03E4  003D               	movlb	29	; select bank29
  9269  03E5  1A8E               	btfsc	14,5	;volatile
  9270  03E6  2BEF               	goto	i1l6971
  9271                           
  9272                           ;usb_device.c: 602: {
  9273                           ;usb_device.c: 608: {UIR = 0;};
  9274  03E7  0190               	clrf	16	;volatile
  9275                           
  9276                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  9277  03E8  1412               	bsf	18,0	;volatile
  9278                           
  9279                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  9280  03E9  1612               	bsf	18,4	;volatile
  9281                           
  9282                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  9283  03EA  3002               	movlw	2
  9284  03EB  0021               	movlb	1	; select bank1
  9285  03EC  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9286  03ED  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9287  03EE  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  9288  03EF                     i1l6971:	
  9289                           
  9290                           ;usb_device.c: 617: }
  9291                           ;usb_device.c: 618: }
  9292                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  9293  03EF  003D               	movlb	29	; select bank29
  9294  03F0  1910               	btfsc	16,2	;volatile
  9295  03F1  1D12               	btfss	18,2	;volatile
  9296  03F2  2BFC               	goto	i1l6979
  9297                           
  9298                           ;usb_device.c: 635: {
  9299                           ;usb_device.c: 636: (UIR &= 0xFB);
  9300  03F3  30FB               	movlw	251
  9301  03F4  0021               	movlb	1	; select bank1
  9302  03F5  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9303  03F6  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9304  03F7  003D               	movlb	29	; select bank29
  9305  03F8  0590               	andwf	16,f	;volatile
  9306                           
  9307                           ;usb_device.c: 640: USBWakeFromSuspend();
  9308  03F9  3191  2186  3183   	fcall	i1_USBWakeFromSuspend
  9309  03FC                     i1l6979:	
  9310                           
  9311                           ;usb_device.c: 642: }
  9312                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  9313  03FC  003D               	movlb	29	; select bank29
  9314  03FD  1C8E               	btfss	14,1	;volatile
  9315  03FE  2C02               	goto	i1l434
  9316                           
  9317                           ;usb_device.c: 648: {
  9318                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  9319  03FF  0020               	movlb	0	; select bank0
  9320  0400  1112               	bcf	18,2	;volatile
  9321                           
  9322                           ;usb_device.c: 650: return;
  9323  0401  0008               	return
  9324  0402                     i1l434:	
  9325                           
  9326                           ;usb_device.c: 651: }
  9327                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  9328  0402  1810               	btfsc	16,0	;volatile
  9329  0403  1C12               	btfss	18,0	;volatile
  9330  0404  2C13               	goto	i1l6993
  9331                           
  9332                           ;usb_device.c: 664: {
  9333                           ;usb_device.c: 665: USBDeviceInit();
  9334  0405  3186  2645  3183   	fcall	i1_USBDeviceInit
  9335                           
  9336                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  9337  0408  0021               	movlb	1	; select bank1
  9338  0409  1512               	bsf	18,2	;volatile
  9339                           
  9340                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  9341  040A  3004               	movlw	4
  9342  040B  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9343  040C  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9344  040D  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
  9345                           
  9346                           ;usb_device.c: 681: (UIR &= 0xFE);
  9347  040E  30FE               	movlw	254
  9348  040F  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9349  0410  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9350  0411  003D               	movlb	29	; select bank29
  9351  0412  0590               	andwf	16,f	;volatile
  9352  0413                     i1l6993:	
  9353                           
  9354                           ;usb_device.c: 682: }
  9355                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  9356  0413  1A10               	btfsc	16,4	;volatile
  9357  0414  1E12               	btfss	18,4	;volatile
  9358  0415  2C19               	goto	i1l6999
  9359                           
  9360                           ;usb_device.c: 688: {
  9361                           ;usb_device.c: 694: USBSuspend();
  9362  0416  3191  2128  3183   	fcall	i1_USBSuspend
  9363  0419                     i1l6999:	
  9364                           
  9365                           ;usb_device.c: 696: }
  9366                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  9367  0419  003D               	movlb	29	; select bank29
  9368  041A  1F10               	btfss	16,6	;volatile
  9369  041B  2C43               	goto	i1l7015
  9370                           
  9371                           ;usb_device.c: 709: {
  9372                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  9373  041C  1F12               	btfss	18,6	;volatile
  9374  041D  2C2E               	goto	i1l7005
  9375                           
  9376                           ;usb_device.c: 712: {
  9377                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  9378  041E  3073               	movlw	115
  9379  041F  0020               	movlb	0	; select bank0
  9380  0420  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9381  0421  3000               	movlw	0
  9382  0422  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9383  0423  3000               	movlw	0
  9384  0424  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9385  0425  3000               	movlw	0
  9386  0426  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9387  0427  3001               	movlw	1
  9388  0428  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9389  0429  3000               	movlw	0
  9390  042A  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9391  042B  3192  2235  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9392  042E                     i1l7005:	
  9393                           
  9394                           ;usb_device.c: 714: }
  9395                           ;usb_device.c: 715: (UIR &= 0xBF);
  9396  042E  30BF               	movlw	191
  9397  042F  0021               	movlb	1	; select bank1
  9398  0430  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9399  0431  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9400  0432  003D               	movlb	29	; select bank29
  9401  0433  0590               	andwf	16,f	;volatile
  9402                           
  9403                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  9404  0434  3190  20A5  3183   	fcall	i1_USBIncrement1msInternalTimers
  9405                           
  9406                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  9407  0437  0022               	movlb	2	; select bank2
  9408  0438  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  9409  0439  1903               	btfsc	3,2
  9410  043A  2C3D               	goto	i1l440
  9411                           
  9412                           ;usb_device.c: 736: {
  9413                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  9414  043B  3001               	movlw	1
  9415  043C  02CB               	subwf	_USBStatusStageTimeoutCounter^(0+256),f	;volatile
  9416  043D                     i1l440:	
  9417                           
  9418                           ;usb_device.c: 738: }
  9419                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  9420  043D  084B               	movf	_USBStatusStageTimeoutCounter^(0+256),w	;volatile
  9421  043E  1D03               	btfss	3,2
  9422  043F  2C43               	goto	i1l7015
  9423                           
  9424                           ;usb_device.c: 745: {
  9425                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  9426  0440  3187  278F  3183   	fcall	i1_USBCtrlEPAllowStatusStage
  9427  0443                     i1l7015:	
  9428                           
  9429                           ;usb_device.c: 747: }
  9430                           ;usb_device.c: 749: }
  9431                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  9432  0443  003D               	movlb	29	; select bank29
  9433  0444  1A90               	btfsc	16,5	;volatile
  9434  0445  1E92               	btfss	18,5	;volatile
  9435  0446  2C4A               	goto	i1l7021
  9436                           
  9437                           ;usb_device.c: 752: {
  9438                           ;usb_device.c: 753: USBStallHandler();
  9439  0447  3191  21E9  3183   	fcall	i1_USBStallHandler
  9440  044A                     i1l7021:	
  9441                           
  9442                           ;usb_device.c: 754: }
  9443                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  9444  044A  003D               	movlb	29	; select bank29
  9445  044B  1890               	btfsc	16,1	;volatile
  9446  044C  1C92               	btfss	18,1	;volatile
  9447  044D  2C60               	goto	i1l7029
  9448                           
  9449                           ;usb_device.c: 757: {
  9450                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  9451  044E  30FF               	movlw	255
  9452  044F  0020               	movlb	0	; select bank0
  9453  0450  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9454  0451  307F               	movlw	127
  9455  0452  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9456  0453  3000               	movlw	0
  9457  0454  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9458  0455  3000               	movlw	0
  9459  0456  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9460  0457  3001               	movlw	1
  9461  0458  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9462  0459  3000               	movlw	0
  9463  045A  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9464  045B  3192  2235  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9465                           
  9466                           ;usb_device.c: 759: {UEIR = 0;};
  9467  045E  003D               	movlb	29	; select bank29
  9468  045F  0193               	clrf	19	;volatile
  9469  0460                     i1l7029:	
  9470                           
  9471                           ;usb_device.c: 767: }
  9472                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  9473  0460  3004               	movlw	4
  9474  0461  0021               	movlb	1	; select bank1
  9475  0462  025F               	subwf	_USBDeviceState^(0+128),w	;volatile
  9476  0463  1803               	skipnc
  9477  0464  2C68               	goto	i1l444
  9478                           
  9479                           ;usb_device.c: 775: {
  9480                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  9481  0465  0020               	movlb	0	; select bank0
  9482  0466  1112               	bcf	18,2	;volatile
  9483                           
  9484                           ;usb_device.c: 777: return;
  9485  0467  0008               	return
  9486  0468                     i1l444:	
  9487                           
  9488                           ;usb_device.c: 778: }
  9489                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  9490  0468  003D               	movlb	29	; select bank29
  9491  0469  1D92               	btfss	18,3	;volatile
  9492  046A  2CBA               	goto	i1l445
  9493                           
  9494                           ;usb_device.c: 784: {
  9495                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  9496  046B  0021               	movlb	1	; select bank1
  9497  046C  01AC               	clrf	i1USBDeviceTasks@i^(0+128)
  9498  046D  3004               	movlw	4
  9499  046E  022C               	subwf	i1USBDeviceTasks@i^(0+128),w
  9500  046F  1803               	btfsc	3,0
  9501  0470  2CBA               	goto	i1l445
  9502  0471                     i1l446:	
  9503                           
  9504                           ;usb_device.c: 786: {
  9505                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  9506  0471  003D               	movlb	29	; select bank29
  9507  0472  1D90               	btfss	16,3	;volatile
  9508  0473  2CBA               	goto	i1l445
  9509                           
  9510                           ;usb_device.c: 788: {
  9511                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  9512  0474  080F               	movf	15,w	;volatile
  9513  0475  0021               	movlb	1	; select bank1
  9514  0476  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9515  0477  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9516  0478  00E0               	movwf	_USTATcopy^(0+128)	;volatile
  9517                           
  9518                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  9519  0479  0C60               	rrf	_USTATcopy^(0+128),w	;volatile
  9520  047A  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9521  047B  0CAA               	rrf	??i1_USBDeviceTasks^(0+128),f
  9522  047C  0C2A               	rrf	??i1_USBDeviceTasks^(0+128),w
  9523  047D  390F               	andlw	15
  9524  047E  00AB               	movwf	(??i1_USBDeviceTasks+1)^(0+128)
  9525  047F  082B               	movf	(??i1_USBDeviceTasks+1)^(0+128),w
  9526  0480  00DB               	movwf	_endpoint_number^(0+128)	;volatile
  9527                           
  9528                           ;usb_device.c: 793: (UIR &= 0xF7);
  9529  0481  30F7               	movlw	247
  9530  0482  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9531  0483  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9532  0484  003D               	movlb	29	; select bank29
  9533  0485  0590               	andwf	16,f	;volatile
  9534                           
  9535                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  9536  0486  0021               	movlb	1	; select bank1
  9537  0487  1960               	btfsc	_USTATcopy^(0+128),2	;volatile
  9538  0488  2C8C               	goto	i1l7049
  9539                           
  9540                           ;usb_device.c: 799: {
  9541                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  9542  0489  085B               	movf	_endpoint_number^(0+128),w	;volatile
  9543  048A  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  9544  048B  2C8E               	goto	L12
  9545  048C                     i1l7049:	
  9546                           ;usb_device.c: 801: }
  9547                           
  9548                           
  9549                           ;usb_device.c: 802: else
  9550                           ;usb_device.c: 803: {
  9551                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  9552  048C  085B               	movf	_endpoint_number^(0+128),w	;volatile
  9553  048D  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  9554  048E                     L12:	
  9555  048E  0086               	movwf	6
  9556  048F  3001               	movlw	1	; select bank2/3
  9557  0490  0087               	movwf	7
  9558  0491  0801               	movf	1,w
  9559  0492  3901               	andlw	1
  9560  0493  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9561  0494  3001               	movlw	1
  9562  0495  06AA               	xorwf	??i1_USBDeviceTasks^(0+128),f
  9563  0496  0801               	movf	1,w
  9564  0497  062A               	xorwf	??i1_USBDeviceTasks^(0+128),w
  9565  0498  39FE               	andlw	-2
  9566  0499  062A               	xorwf	??i1_USBDeviceTasks^(0+128),w
  9567  049A  0081               	movwf	1
  9568                           
  9569                           ;usb_device.c: 805: }
  9570                           ;usb_device.c: 810: if(endpoint_number == 0)
  9571  049B  085B               	movf	_endpoint_number^(0+128),w	;volatile
  9572  049C  1D03               	btfss	3,2
  9573  049D  2CA2               	goto	i1l7055
  9574                           
  9575                           ;usb_device.c: 811: {
  9576                           ;usb_device.c: 812: USBCtrlEPService();
  9577  049E  3195  2526  3183   	fcall	i1_USBCtrlEPService
  9578                           
  9579                           ;usb_device.c: 813: }
  9580  04A1  2CB1               	goto	i1l7057
  9581  04A2                     i1l7055:	
  9582                           
  9583                           ;usb_device.c: 814: else
  9584                           ;usb_device.c: 815: {
  9585                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  9586  04A2  3072               	movlw	114
  9587  04A3  0020               	movlb	0	; select bank0
  9588  04A4  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9589  04A5  3000               	movlw	0
  9590  04A6  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9591  04A7  30E0               	movlw	low _USTATcopy
  9592  04A8  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9593  04A9  3000               	movlw	high _USTATcopy
  9594  04AA  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9595  04AB  3000               	movlw	0
  9596  04AC  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9597  04AD  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9598  04AE  3192  2235  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9599  04B1                     i1l7057:	
  9600                           ;usb_device.c: 819: else
  9601                           ;usb_device.c: 820: {
  9602                           ;usb_device.c: 821: break;
  9603                           
  9604                           ;usb_device.c: 817: }
  9605                           ;usb_device.c: 818: }
  9606                           
  9607  04B1  3001               	movlw	1
  9608  04B2  0021               	movlb	1	; select bank1
  9609  04B3  00AA               	movwf	??i1_USBDeviceTasks^(0+128)
  9610  04B4  082A               	movf	??i1_USBDeviceTasks^(0+128),w
  9611  04B5  07AC               	addwf	i1USBDeviceTasks@i^(0+128),f
  9612  04B6  3004               	movlw	4
  9613  04B7  022C               	subwf	i1USBDeviceTasks@i^(0+128),w
  9614  04B8  1C03               	skipc
  9615  04B9  2C71               	goto	i1l446
  9616  04BA                     i1l445:	
  9617                           
  9618                           ;usb_device.c: 822: }
  9619                           ;usb_device.c: 823: }
  9620                           ;usb_device.c: 824: }
  9621                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  9622  04BA  0020               	movlb	0	; select bank0
  9623  04BB  1112               	bcf	18,2	;volatile
  9624  04BC  0008               	return
  9625  04BD                     __end_ofi1_USBDeviceTasks:	
  9626                           
  9627                           	psect	text42
  9628  1186                     __ptext42:	
  9629 ;; *************** function i1_USBWakeFromSuspend *****************
  9630 ;; Defined at:
  9631 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;		None
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      void 
  9638 ;; Registers used:
  9639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9647 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9649 ;;Total ram usage:        1 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:    4
  9652 ;; This function calls:
  9653 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9654 ;; This function is called by:
  9655 ;;		i1_USBDeviceTasks
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           
  9660                           ;psect for function i1_USBWakeFromSuspend
  9661  1186                     i1_USBWakeFromSuspend:	
  9662                           
  9663                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  9664                           
  9665                           ;incstack = 0
  9666 ;; hardware stack exceeded
  9667                           ; Regs used in i1_USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9668  1186  0022               	movlb	2	; select bank2
  9669  1187  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
  9670                           
  9671                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  9672  1188  3074               	movlw	116
  9673  1189  0020               	movlb	0	; select bank0
  9674  118A  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9675  118B  3000               	movlw	0
  9676  118C  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9677  118D  3000               	movlw	0
  9678  118E  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9679  118F  3000               	movlw	0
  9680  1190  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9681  1191  3000               	movlw	0
  9682  1192  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9683  1193  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9684  1194  3192  2235  3191   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9685                           
  9686                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  9687  1197  003D               	movlb	29	; select bank29
  9688  1198  108E               	bcf	14,1	;volatile
  9689                           
  9690                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  9691  1199  1112               	bcf	18,2	;volatile
  9692  119A                     i1l6899:	
  9693                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  9694                           
  9695  119A  1D10               	btfss	16,2	;volatile
  9696  119B  29A3               	goto	i1l6901
  9697                           
  9698                           ;usb_device.c: 2343: {
  9699                           ;usb_device.c: 2344: (UIR &= 0xFB);
  9700  119C  30FB               	movlw	251
  9701  119D  0020               	movlb	0	; select bank0
  9702  119E  00DE               	movwf	??i1_USBWakeFromSuspend
  9703  119F  085E               	movf	??i1_USBWakeFromSuspend,w
  9704  11A0  003D               	movlb	29	; select bank29
  9705  11A1  0590               	andwf	16,f	;volatile
  9706  11A2  299A               	goto	i1l6899
  9707  11A3                     i1l6901:	
  9708                           
  9709                           ;usb_device.c: 2345: }
  9710                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  9711  11A3  0022               	movlb	2	; select bank2
  9712  11A4  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  9713  11A5  0008               	return
  9714  11A6                     __end_ofi1_USBWakeFromSuspend:	
  9715                           
  9716                           	psect	text43
  9717  1128                     __ptext43:	
  9718 ;; *************** function i1_USBSuspend *****************
  9719 ;; Defined at:
  9720 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;		None
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;		None
  9725 ;; Return value:  Size  Location     Type
  9726 ;;                  1    wreg      void 
  9727 ;; Registers used:
  9728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;Total ram usage:        1 bytes
  9739 ;; Hardware stack levels used:    1
  9740 ;; Hardware stack levels required when called:    4
  9741 ;; This function calls:
  9742 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9743 ;; This function is called by:
  9744 ;;		i1_USBDeviceTasks
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           
  9749                           ;psect for function i1_USBSuspend
  9750  1128                     i1_USBSuspend:	
  9751                           
  9752                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  9753                           
  9754                           ;incstack = 0
  9755 ;; hardware stack exceeded
  9756                           ; Regs used in i1_USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9757  1128  003D               	movlb	29	; select bank29
  9758  1129  1512               	bsf	18,2	;volatile
  9759                           
  9760                           ;usb_device.c: 2271: (UIR &= 0xEF);
  9761  112A  30EF               	movlw	239
  9762  112B  0020               	movlb	0	; select bank0
  9763  112C  00DE               	movwf	??i1_USBSuspend
  9764  112D  085E               	movf	??i1_USBSuspend,w
  9765  112E  003D               	movlb	29	; select bank29
  9766  112F  0590               	andwf	16,f	;volatile
  9767                           
  9768                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  9769  1130  148E               	bsf	14,1	;volatile
  9770                           
  9771                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  9772  1131  3001               	movlw	1
  9773  1132  0020               	movlb	0	; select bank0
  9774  1133  00DE               	movwf	??i1_USBSuspend
  9775  1134  085E               	movf	??i1_USBSuspend,w
  9776  1135  0022               	movlb	2	; select bank2
  9777  1136  00CD               	movwf	_USBBusIsSuspended^(0+256)	;volatile
  9778                           
  9779                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  9780  1137  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  9781                           
  9782                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  9783  1138  3075               	movlw	117
  9784  1139  0020               	movlb	0	; select bank0
  9785  113A  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9786  113B  3000               	movlw	0
  9787  113C  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9788  113D  3000               	movlw	0
  9789  113E  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9790  113F  3000               	movlw	0
  9791  1140  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9792  1141  3000               	movlw	0
  9793  1142  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9794  1143  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9795  1144  3192  2235         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9796  1146  0008               	return
  9797  1147                     __end_ofi1_USBSuspend:	
  9798                           
  9799                           	psect	text44
  9800  11E9                     __ptext44:	
  9801 ;; *************** function i1_USBStallHandler *****************
  9802 ;; Defined at:
  9803 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;		None
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;		None
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  1    wreg      void 
  9810 ;; Registers used:
  9811 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9812 ;; Tracked objects:
  9813 ;;		On entry : 0/0
  9814 ;;		On exit  : 0/0
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;Total ram usage:        1 bytes
  9822 ;; Hardware stack levels used:    1
  9823 ;; This function calls:
  9824 ;;		Nothing
  9825 ;; This function is called by:
  9826 ;;		i1_USBDeviceTasks
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           
  9831                           ;psect for function i1_USBStallHandler
  9832  11E9                     i1_USBStallHandler:	
  9833                           
  9834                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  9835                           
  9836                           ;incstack = 0
  9837                           ; Regs used in i1_USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  9838  11E9  003D               	movlb	29	; select bank29
  9839  11EA  1C18               	btfss	24,0	;volatile
  9840  11EB  2A09               	goto	i1l5189
  9841                           
  9842                           ;usb_device.c: 2215: {
  9843                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  9844  11EC  0021               	movlb	1	; select bank1
  9845  11ED  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9846  11EE  0086               	movwf	6
  9847  11EF  0187               	clrf	7
  9848  11F0  3080               	movlw	128
  9849  11F1  0601               	xorwf	1,w
  9850  11F2  1D03               	btfss	3,2
  9851  11F3  2A07               	goto	i1l5187
  9852  11F4  084D               	movf	_pBDTEntryIn^(0+128),w
  9853  11F5  0086               	movwf	6
  9854  11F6  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
  9855  11F7  0087               	movwf	7
  9856  11F8  3084               	movlw	132
  9857  11F9  0601               	xorwf	1,w
  9858  11FA  1D03               	btfss	3,2
  9859  11FB  2A07               	goto	i1l5187
  9860                           
  9861                           ;usb_device.c: 2218: {
  9862                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9863  11FC  300C               	movlw	12
  9864  11FD  00F0               	movwf	??i1_USBStallHandler
  9865  11FE  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9866  11FF  0086               	movwf	6
  9867  1200  0187               	clrf	7
  9868  1201  0870               	movf	??i1_USBStallHandler,w
  9869  1202  0081               	movwf	1
  9870                           
  9871                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9872  1203  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9873  1204  0086               	movwf	6
  9874  1205  0187               	clrf	7
  9875  1206  1781               	bsf	1,7
  9876  1207                     i1l5187:	
  9877                           
  9878                           ;usb_device.c: 2222: }
  9879                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  9880  1207  003D               	movlb	29	; select bank29
  9881  1208  1018               	bcf	24,0	;volatile
  9882  1209                     i1l5189:	
  9883                           
  9884                           ;usb_device.c: 2224: }
  9885                           ;usb_device.c: 2226: (UIR &= 0xDF);
  9886  1209  30DF               	movlw	223
  9887  120A  00F0               	movwf	??i1_USBStallHandler
  9888  120B  0870               	movf	??i1_USBStallHandler,w
  9889  120C  0590               	andwf	16,f	;volatile
  9890  120D  0008               	return
  9891  120E                     __end_ofi1_USBStallHandler:	
  9892                           
  9893                           	psect	text45
  9894  10A5                     __ptext45:	
  9895 ;; *************** function i1_USBIncrement1msInternalTimers *****************
  9896 ;; Defined at:
  9897 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;		None
  9900 ;; Auto vars:     Size  Location     Type
  9901 ;;		None
  9902 ;; Return value:  Size  Location     Type
  9903 ;;                  1    wreg      void 
  9904 ;; Registers used:
  9905 ;;		wreg, status,2, status,0
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 0/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9913 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9914 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9915 ;;Total ram usage:        1 bytes
  9916 ;; Hardware stack levels used:    1
  9917 ;; This function calls:
  9918 ;;		Nothing
  9919 ;; This function is called by:
  9920 ;;		i1_USBDeviceTasks
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924                           
  9925                           ;psect for function i1_USBIncrement1msInternalTimers
  9926  10A5                     i1_USBIncrement1msInternalTimers:	
  9927                           
  9928                           ;usb_device.c: 3033: USB1msTickCount++;
  9929                           
  9930                           ;incstack = 0
  9931                           ; Regs used in i1_USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  9932  10A5  3001               	movlw	1
  9933  10A6  0022               	movlb	2	; select bank2
  9934  10A7  07B0               	addwf	_USB1msTickCount^(0+256),f	;volatile
  9935  10A8  3000               	movlw	0
  9936  10A9  3DB1               	addwfc	(_USB1msTickCount+1)^(0+256),f	;volatile
  9937  10AA  3000               	movlw	0
  9938  10AB  3DB2               	addwfc	(_USB1msTickCount+2)^(0+256),f	;volatile
  9939  10AC  3000               	movlw	0
  9940  10AD  3DB3               	addwfc	(_USB1msTickCount+3)^(0+256),f	;volatile
  9941                           
  9942                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  9943  10AE  084D               	movf	_USBBusIsSuspended^(0+256),w	;volatile
  9944  10AF  1D03               	btfss	3,2
  9945  10B0  0008               	return
  9946                           
  9947                           ;usb_device.c: 3035: {
  9948                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  9949  10B1  3001               	movlw	1
  9950  10B2  00F0               	movwf	??i1_USBIncrement1msInternalTimers
  9951  10B3  0870               	movf	??i1_USBIncrement1msInternalTimers,w
  9952  10B4  07C6               	addwf	_USBTicksSinceSuspendEnd^(0+256),f	;volatile
  9953                           
  9954                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  9955  10B5  0846               	movf	_USBTicksSinceSuspendEnd^(0+256),w	;volatile
  9956  10B6  1D03               	btfss	3,2
  9957  10B7  0008               	return
  9958                           
  9959                           ;usb_device.c: 3039: {
  9960                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  9961  10B8  30FF               	movlw	255
  9962  10B9  00F0               	movwf	??i1_USBIncrement1msInternalTimers
  9963  10BA  0870               	movf	??i1_USBIncrement1msInternalTimers,w
  9964  10BB  00C6               	movwf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
  9965  10BC  0008               	return
  9966  10BD                     __end_ofi1_USBIncrement1msInternalTimers:	
  9967                           
  9968                           	psect	text46
  9969  0645                     __ptext46:	
  9970 ;; *************** function i1_USBDeviceInit *****************
  9971 ;; Defined at:
  9972 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;		None
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  9977 ;;		 -> UEP1(1), 
  9978 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  9979 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  1    wreg      void 
  9982 ;; Registers used:
  9983 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;Total ram usage:        5 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; This function calls:
  9996 ;;		Nothing
  9997 ;; This function is called by:
  9998 ;;		i1_USBDeviceTasks
  9999 ;; This function uses a non-reentrant model
 10000 ;;
 10001                           
 10002                           
 10003                           ;psect for function i1_USBDeviceInit
 10004  0645                     i1_USBDeviceInit:	
 10005                           
 10006                           ;usb_device.c: 279: uint8_t i;
 10007                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 10008                           
 10009                           ;incstack = 0
 10010                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 10011  0645  0021               	movlb	1	; select bank1
 10012  0646  1112               	bcf	18,2	;volatile
 10013                           
 10014                           ;usb_device.c: 285: ;
 10015                           ;usb_device.c: 288: {UEIR = 0;};
 10016  0647  003D               	movlb	29	; select bank29
 10017  0648  0193               	clrf	19	;volatile
 10018                           
 10019                           ;usb_device.c: 291: {UIR = 0;};
 10020  0649  0190               	clrf	16	;volatile
 10021                           
 10022                           ;usb_device.c: 294: UEP0 = 0;
 10023  064A  0198               	clrf	24	;volatile
 10024                           
 10025                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
 10026  064B  300E               	movlw	14
 10027  064C  00F2               	movwf	i1USBDeviceInit@p+1
 10028  064D  3099               	movlw	153
 10029  064E  00F1               	movwf	i1USBDeviceInit@p
 10030  064F  01F3               	clrf	i1USBDeviceInit@i_1508
 10031  0650  3002               	movlw	2
 10032  0651  0273               	subwf	i1USBDeviceInit@i_1508,w
 10033  0652  1803               	btfsc	3,0
 10034  0653  2E65               	goto	i1l5111
 10035  0654                     i1l5103:	
 10036  0654  0871               	movf	i1USBDeviceInit@p,w
 10037  0655  0086               	movwf	6
 10038  0656  0872               	movf	i1USBDeviceInit@p+1,w
 10039  0657  0087               	movwf	7
 10040  0658  0181               	clrf	1
 10041  0659  3001               	movlw	1
 10042  065A  07F1               	addwf	i1USBDeviceInit@p,f
 10043  065B  3000               	movlw	0
 10044  065C  3DF2               	addwfc	i1USBDeviceInit@p+1,f
 10045  065D  3001               	movlw	1
 10046  065E  00F0               	movwf	??i1_USBDeviceInit
 10047  065F  0870               	movf	??i1_USBDeviceInit,w
 10048  0660  07F3               	addwf	i1USBDeviceInit@i_1508,f
 10049  0661  3002               	movlw	2
 10050  0662  0273               	subwf	i1USBDeviceInit@i_1508,w
 10051  0663  1C03               	skipc
 10052  0664  2E54               	goto	i1l5103
 10053  0665                     i1l5111:	
 10054                           
 10055                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10056  0665  3016               	movlw	22
 10057  0666  003D               	movlb	29	; select bank29
 10058  0667  0091               	movwf	17	;volatile
 10059  0668  309F               	movlw	159
 10060  0669  0097               	movwf	23	;volatile
 10061  066A  307B               	movlw	123
 10062  066B  0092               	movwf	18	;volatile
 10063                           
 10064                           ;usb_device.c: 301: ;
 10065                           ;usb_device.c: 304: ;
 10066                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 10067  066C  01F4               	clrf	i1USBDeviceInit@i
 10068  066D  300C               	movlw	12
 10069  066E  0274               	subwf	i1USBDeviceInit@i,w
 10070  066F  1803               	btfsc	3,0
 10071  0670  2E8A               	goto	i1l423
 10072  0671                     i1l5119:	
 10073                           
 10074                           ;usb_device.c: 308: {
 10075                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 10076  0671  0874               	movf	i1USBDeviceInit@i,w
 10077  0672  00F0               	movwf	??i1_USBDeviceInit
 10078  0673  3001               	movlw	1
 10079  0674                     u501_25:	
 10080  0674  35F0               	lslf	??i1_USBDeviceInit,f
 10081  0675  3EFF               	addlw	-1
 10082  0676  1D03               	skipz
 10083  0677  2E74               	goto	u501_25
 10084  0678  3570               	lslf	??i1_USBDeviceInit,w
 10085  0679  3E20               	addlw	32
 10086  067A  0086               	movwf	6
 10087  067B  0187               	clrf	7
 10088  067C  3000               	movlw	0
 10089  067D  3FC0               	movwi [0]fsr1
 10090  067E  3000               	movlw	0
 10091  067F  3FC1               	movwi [1]fsr1
 10092  0680  3FC2               	movwi [2]fsr1
 10093  0681  3FC3               	movwi [3]fsr1
 10094  0682  3001               	movlw	1
 10095  0683  00F0               	movwf	??i1_USBDeviceInit
 10096  0684  0870               	movf	??i1_USBDeviceInit,w
 10097  0685  07F4               	addwf	i1USBDeviceInit@i,f
 10098  0686  300C               	movlw	12
 10099  0687  0274               	subwf	i1USBDeviceInit@i,w
 10100  0688  1C03               	skipc
 10101  0689  2E71               	goto	i1l5119
 10102  068A                     i1l423:	
 10103                           
 10104                           ;usb_device.c: 310: }
 10105                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 10106  068A  003D               	movlb	29	; select bank29
 10107  068B  170E               	bsf	14,6	;volatile
 10108                           
 10109                           ;usb_device.c: 316: UADDR = 0x00;
 10110  068C  0196               	clrf	22	;volatile
 10111                           
 10112                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 10113  068D  120E               	bcf	14,4	;volatile
 10114                           
 10115                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 10116  068E  130E               	bcf	14,6	;volatile
 10117  068F                     i1l5131:	
 10118                           ;usb_device.c: 325: do
 10119                           
 10120                           
 10121                           ;usb_device.c: 326: {
 10122                           ;usb_device.c: 327: (UIR &= 0xF7);
 10123  068F  30F7               	movlw	247
 10124  0690  00F0               	movwf	??i1_USBDeviceInit
 10125  0691  0870               	movf	??i1_USBDeviceInit,w
 10126  0692  0590               	andwf	16,f	;volatile
 10127                           
 10128                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 10129  0693  0021               	movlb	1	; select bank1
 10130  0694  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 10131                           
 10132                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 10133  0695  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
 10134                           
 10135                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 10136  0696  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
 10137  0697  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
 10138                           
 10139                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 10140  0698  003D               	movlb	29	; select bank29
 10141  0699  1990               	btfsc	16,3	;volatile
 10142  069A  2E8F               	goto	i1l5131
 10143                           
 10144                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 10145  069B  3001               	movlw	1
 10146  069C  00F0               	movwf	??i1_USBDeviceInit
 10147  069D  0870               	movf	??i1_USBDeviceInit,w
 10148  069E  0022               	movlb	2	; select bank2
 10149  069F  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10150                           
 10151                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 10152  06A0  3001               	movlw	1
 10153  06A1  00F0               	movwf	??i1_USBDeviceInit
 10154  06A2  0870               	movf	??i1_USBDeviceInit,w
 10155  06A3  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10156                           
 10157                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 10158  06A4  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10159                           
 10160                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 10161  06A5  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10162                           
 10163                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 10164  06A6  01CD               	clrf	_USBBusIsSuspended^(0+256)	;volatile
 10165                           
 10166                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 10167  06A7  01F4               	clrf	i1USBDeviceInit@i
 10168  06A8  3003               	movlw	3
 10169  06A9  0274               	subwf	i1USBDeviceInit@i,w
 10170  06AA  1803               	btfsc	3,0
 10171  06AB  2ECF               	goto	i1l5159
 10172  06AC                     i1l5153:	
 10173                           
 10174                           ;usb_device.c: 346: {
 10175                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 10176  06AC  3574               	lslf	i1USBDeviceInit@i,w
 10177  06AD  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 10178  06AE  0086               	movwf	6
 10179  06AF  0187               	clrf	7
 10180  06B0  3000               	movlw	0
 10181  06B1  3FC0               	movwi [0]fsr1
 10182  06B2  3FC1               	movwi [1]fsr1
 10183                           
 10184                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 10185  06B3  3574               	lslf	i1USBDeviceInit@i,w
 10186  06B4  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10187  06B5  0086               	movwf	6
 10188  06B6  3001               	movlw	1	; select bank2/3
 10189  06B7  0087               	movwf	7
 10190  06B8  3000               	movlw	0
 10191  06B9  3FC0               	movwi [0]fsr1
 10192  06BA  3FC1               	movwi [1]fsr1
 10193                           
 10194                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 10195  06BB  0874               	movf	i1USBDeviceInit@i,w
 10196  06BC  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 10197  06BD  0086               	movwf	6
 10198  06BE  3001               	movlw	1	; select bank2/3
 10199  06BF  0087               	movwf	7
 10200  06C0  0181               	clrf	1
 10201                           
 10202                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 10203  06C1  0874               	movf	i1USBDeviceInit@i,w
 10204  06C2  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 10205  06C3  0086               	movwf	6
 10206  06C4  3001               	movlw	1	; select bank2/3
 10207  06C5  0087               	movwf	7
 10208  06C6  0181               	clrf	1
 10209  06C7  3001               	movlw	1
 10210  06C8  00F0               	movwf	??i1_USBDeviceInit
 10211  06C9  0870               	movf	??i1_USBDeviceInit,w
 10212  06CA  07F4               	addwf	i1USBDeviceInit@i,f
 10213  06CB  3003               	movlw	3
 10214  06CC  0274               	subwf	i1USBDeviceInit@i,w
 10215  06CD  1C03               	skipc
 10216  06CE  2EAC               	goto	i1l5153
 10217  06CF                     i1l5159:	
 10218                           
 10219                           ;usb_device.c: 351: }
 10220                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10221  06CF  3028               	movlw	40
 10222  06D0  0021               	movlb	1	; select bank1
 10223  06D1  00CD               	movwf	_pBDTEntryIn^(0+128)
 10224  06D2  3000               	movlw	0
 10225  06D3  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 10226                           
 10227                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 10228  06D4  3016               	movlw	22
 10229  06D5  003D               	movlb	29	; select bank29
 10230  06D6  0098               	movwf	24	;volatile
 10231                           
 10232                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10233  06D7  3000               	movlw	0
 10234  06D8  0020               	movlb	0	; select bank0
 10235  06D9  00A3               	movwf	35	;volatile
 10236  06DA  3050               	movlw	80
 10237  06DB  00A2               	movwf	34	;volatile
 10238                           
 10239                           ;usb_device.c: 359: BDT[0].CNT = 16;
 10240  06DC  3010               	movlw	16
 10241  06DD  00A1               	movwf	33	;volatile
 10242                           
 10243                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 10244  06DE  3004               	movlw	4
 10245  06DF  00F0               	movwf	??i1_USBDeviceInit
 10246  06E0  0870               	movf	??i1_USBDeviceInit,w
 10247  06E1  00A0               	movwf	32	;volatile
 10248                           
 10249                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 10250  06E2  17A0               	bsf	32,7	;volatile
 10251                           
 10252                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 10253  06E3  0021               	movlb	1	; select bank1
 10254  06E4  01E1               	clrf	_USBActiveConfiguration^(0+128)	;volatile
 10255                           
 10256                           ;usb_device.c: 366: USB1msTickCount = 0;
 10257  06E5  3000               	movlw	0
 10258  06E6  0022               	movlb	2	; select bank2
 10259  06E7  00B3               	movwf	(_USB1msTickCount+3)^(0+256)	;volatile
 10260  06E8  3000               	movlw	0
 10261  06E9  00B2               	movwf	(_USB1msTickCount+2)^(0+256)	;volatile
 10262  06EA  3000               	movlw	0
 10263  06EB  00B1               	movwf	(_USB1msTickCount+1)^(0+256)	;volatile
 10264  06EC  3000               	movlw	0
 10265  06ED  00B0               	movwf	_USB1msTickCount^(0+256)	;volatile
 10266                           
 10267                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 10268  06EE  01C6               	clrf	_USBTicksSinceSuspendEnd^(0+256)	;volatile
 10269                           
 10270                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 10271  06EF  0021               	movlb	1	; select bank1
 10272  06F0  01DF               	clrf	_USBDeviceState^(0+128)	;volatile
 10273  06F1  0008               	return
 10274  06F2                     __end_ofi1_USBDeviceInit:	
 10275                           
 10276                           	psect	text47
 10277  1526                     __ptext47:	
 10278 ;; *************** function i1_USBCtrlEPService *****************
 10279 ;; Defined at:
 10280 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
 10281 ;; Parameters:    Size  Location     Type
 10282 ;;		None
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;		None
 10285 ;; Return value:  Size  Location     Type
 10286 ;;                  1    wreg      void 
 10287 ;; Registers used:
 10288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10289 ;; Tracked objects:
 10290 ;;		On entry : 0/0
 10291 ;;		On exit  : 0/0
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10296 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10297 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10298 ;;Total ram usage:        3 bytes
 10299 ;; Hardware stack levels used:    1
 10300 ;; Hardware stack levels required when called:    7
 10301 ;; This function calls:
 10302 ;;		i1_USBCtrlTrfInHandler
 10303 ;;		i1_USBCtrlTrfOutHandler
 10304 ;;		i1_USBCtrlTrfSetupHandler
 10305 ;; This function is called by:
 10306 ;;		i1_USBDeviceTasks
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309                           
 10310                           
 10311                           ;psect for function i1_USBCtrlEPService
 10312  1526                     i1_USBCtrlEPService:	
 10313                           
 10314                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 10315                           
 10316                           ;incstack = 0
 10317 ;; hardware stack exceeded
 10318                           ; Regs used in i1_USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10319  1526  302D               	movlw	45
 10320  1527  0021               	movlb	1	; select bank1
 10321  1528  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10322  1529  0827               	movf	??i1_USBCtrlEPService^(0+128),w
 10323  152A  0022               	movlb	2	; select bank2
 10324  152B  00CB               	movwf	_USBStatusStageTimeoutCounter^(0+256)	;volatile
 10325                           
 10326                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 10327  152C  0021               	movlb	1	; select bank1
 10328  152D  0860               	movf	_USTATcopy^(0+128),w	;volatile
 10329  152E  39FD               	andlw	253
 10330  152F  1D03               	btfss	3,2
 10331  1530  2D72               	goto	i1l6921
 10332                           
 10333                           ;usb_device.c: 2383: {
 10334                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 10335  1531  3660               	lsrf	_USTATcopy^(0+128),w	;volatile
 10336  1532  393F               	andlw	63
 10337  1533  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10338  1534  3001               	movlw	1
 10339  1535                     u730_25:	
 10340  1535  35A7               	lslf	??i1_USBCtrlEPService^(0+128),f
 10341  1536  3EFF               	addlw	-1
 10342  1537  1D03               	skipz
 10343  1538  2D35               	goto	u730_25
 10344  1539  3527               	lslf	??i1_USBCtrlEPService^(0+128),w
 10345  153A  3E20               	addlw	32
 10346  153B  00A8               	movwf	(??i1_USBCtrlEPService+1)^(0+128)
 10347  153C  0828               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 10348  153D  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
 10349                           
 10350                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10351  153E  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 10352  153F  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 10353  1540  39FF               	andlw	255
 10354  1541  1D03               	skipz
 10355  1542  3000               	movlw	0
 10356  1543  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 10357                           
 10358                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 10359  1544  3004               	movlw	4
 10360  1545  0658               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
 10361  1546  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 10362  1547  3000               	movlw	0
 10363  1548  0659               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10364  1549  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 10365                           
 10366                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 10367  154A  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 10368  154B  0086               	movwf	6
 10369  154C  0187               	clrf	7
 10370  154D  0C01               	rrf	1,w
 10371  154E  0C89               	rrf	9,f
 10372  154F  390F               	andlw	15
 10373  1550  3A0D               	xorlw	13
 10374  1551  1D03               	skipz
 10375  1552  2D6F               	goto	i1l6919
 10376                           
 10377                           ;usb_device.c: 2400: {
 10378                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
 10379  1553  3050               	movlw	80
 10380  1554  0086               	movwf	6
 10381  1555  0187               	clrf	7
 10382  1556  0021               	movlb	1	; select bank1
 10383  1557  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 10384  1558  3E02               	addlw	2
 10385  1559  0084               	movwf	4
 10386  155A  0185               	clrf	5
 10387  155B  3F00               	moviw [0]fsr0
 10388  155C  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10389  155D  3F01               	moviw [1]fsr0
 10390  155E  00A8               	movwf	(??i1_USBCtrlEPService^(0+128)+1)
 10391  155F  0827               	movf	??i1_USBCtrlEPService^(0+128),w
 10392  1560  0084               	movwf	4
 10393  1561  0828               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 10394  1562  0085               	movwf	5
 10395  1563  3008               	movlw	8
 10396  1564  00A9               	movwf	(??i1_USBCtrlEPService+2)^(0+128)
 10397  1565  0829               	movf	(??i1_USBCtrlEPService+2)^(0+128),w
 10398  1566  1903               	skipnz
 10399  1567  2D6C               	goto	i1l6917
 10400  1568                     u732_2m0:	
 10401  1568  0012               	moviw fsr0++
 10402  1569  001E               	movwi fsr1++
 10403  156A  0BA9               	decfsz	(??i1_USBCtrlEPService+2)^(0+128),f
 10404  156B  2D68               	goto	u732_2m0
 10405  156C                     i1l6917:	
 10406                           
 10407                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 10408  156C  3194  2442         	fcall	i1_USBCtrlTrfSetupHandler
 10409                           
 10410                           ;usb_device.c: 2409: }
 10411  156E  0008               	return
 10412  156F                     i1l6919:	
 10413                           
 10414                           ;usb_device.c: 2410: else
 10415                           ;usb_device.c: 2411: {
 10416                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 10417  156F  3192  22CA         	fcall	i1_USBCtrlTrfOutHandler
 10418                           
 10419                           ;usb_device.c: 2414: }
 10420                           ;usb_device.c: 2415: }
 10421  1571  0008               	return
 10422  1572                     i1l6921:	
 10423                           
 10424                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 10425  1572  30FD               	movlw	253
 10426  1573  0021               	movlb	1	; select bank1
 10427  1574  0560               	andwf	_USTATcopy^(0+128),w	;volatile
 10428  1575  00A7               	movwf	??i1_USBCtrlEPService^(0+128)
 10429  1576  3004               	movlw	4
 10430  1577  0627               	xorwf	??i1_USBCtrlEPService^(0+128),w
 10431  1578  1D03               	btfss	3,2
 10432  1579  0008               	return
 10433                           
 10434                           ;usb_device.c: 2417: {
 10435                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 10436  157A  3188  20F9         	fcall	i1_USBCtrlTrfInHandler
 10437  157C  0008               	return
 10438  157D                     __end_ofi1_USBCtrlEPService:	
 10439                           
 10440                           	psect	text48
 10441  1442                     __ptext48:	
 10442 ;; *************** function i1_USBCtrlTrfSetupHandler *****************
 10443 ;; Defined at:
 10444 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
 10445 ;; Parameters:    Size  Location     Type
 10446 ;;		None
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;		None
 10449 ;; Return value:  Size  Location     Type
 10450 ;;                  1    wreg      void 
 10451 ;; Registers used:
 10452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10453 ;; Tracked objects:
 10454 ;;		On entry : 0/0
 10455 ;;		On exit  : 0/0
 10456 ;;		Unchanged: 0/0
 10457 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10460 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10461 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10462 ;;Total ram usage:        1 bytes
 10463 ;; Hardware stack levels used:    1
 10464 ;; Hardware stack levels required when called:    6
 10465 ;; This function calls:
 10466 ;;		i1_USBCheckStdRequest
 10467 ;;		i1_USBCtrlEPServiceComplete
 10468 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10469 ;; This function is called by:
 10470 ;;		i1_USBCtrlEPService
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           
 10474                           
 10475                           ;psect for function i1_USBCtrlTrfSetupHandler
 10476  1442                     i1_USBCtrlTrfSetupHandler:	
 10477                           
 10478                           ;usb_device.c: 2470: shortPacketStatus = 0;
 10479                           
 10480                           ;incstack = 0
 10481 ;; hardware stack exceeded
 10482                           ; Regs used in i1_USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10483  1442  0021               	movlb	1	; select bank1
 10484  1443  01DD               	clrf	_shortPacketStatus^(0+128)	;volatile
 10485                           
 10486                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 10487  1444  01DA               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
 10488                           
 10489                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 10490  1445  0022               	movlb	2	; select bank2
 10491  1446  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10492                           
 10493                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 10494  1447  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10495                           
 10496                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 10497  1448  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 10498                           
 10499                           ;usb_device.c: 2475: controlTransferState = 0;
 10500  1449  0021               	movlb	1	; select bank1
 10501  144A  01DC               	clrf	_controlTransferState^(0+128)	;volatile
 10502                           
 10503                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10504  144B  307F               	movlw	127
 10505  144C  00A6               	movwf	??i1_USBCtrlTrfSetupHandler^(0+128)
 10506  144D  084D               	movf	_pBDTEntryIn^(0+128),w
 10507  144E  0086               	movwf	6
 10508  144F  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10509  1450  0087               	movwf	7
 10510  1451  0826               	movf	??i1_USBCtrlTrfSetupHandler^(0+128),w
 10511  1452  0581               	andwf	1,f
 10512                           
 10513                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10514  1453  3004               	movlw	4
 10515  1454  064D               	xorwf	_pBDTEntryIn^(0+128),w
 10516  1455  00CD               	movwf	_pBDTEntryIn^(0+128)
 10517  1456  3000               	movlw	0
 10518  1457  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
 10519  1458  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 10520                           
 10521                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10522  1459  307F               	movlw	127
 10523  145A  00A6               	movwf	??i1_USBCtrlTrfSetupHandler^(0+128)
 10524  145B  084D               	movf	_pBDTEntryIn^(0+128),w
 10525  145C  0086               	movwf	6
 10526  145D  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10527  145E  0087               	movwf	7
 10528  145F  0826               	movf	??i1_USBCtrlTrfSetupHandler^(0+128),w
 10529  1460  0581               	andwf	1,f
 10530                           
 10531                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10532  1461  3004               	movlw	4
 10533  1462  064D               	xorwf	_pBDTEntryIn^(0+128),w
 10534  1463  00CD               	movwf	_pBDTEntryIn^(0+128)
 10535  1464  3000               	movlw	0
 10536  1465  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
 10537  1466  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 10538                           
 10539                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 10540  1467  307F               	movlw	127
 10541  1468  00A6               	movwf	??i1_USBCtrlTrfSetupHandler^(0+128)
 10542  1469  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10543  146A  0086               	movwf	6
 10544  146B  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10545  146C  0087               	movwf	7
 10546  146D  0826               	movf	??i1_USBCtrlTrfSetupHandler^(0+128),w
 10547  146E  0581               	andwf	1,f
 10548                           
 10549                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 10550  146F  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 10551                           
 10552                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 10553  1470  01D6               	clrf	(_inPipes^(0+128)+3)	;volatile
 10554  1471  01D7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 10555                           
 10556                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 10557  1472  01C8               	clrf	(_outPipes^(0+128)+2)	;volatile
 10558                           
 10559                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 10560  1473  01C9               	clrf	(_outPipes^(0+128)+3)	;volatile
 10561  1474  01CA               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
 10562                           
 10563                           ;usb_device.c: 2500: USBCheckStdRequest();
 10564  1475  3197  27A0  3194   	fcall	i1_USBCheckStdRequest
 10565                           
 10566                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 10567  1478  3000               	movlw	0
 10568  1479  0020               	movlb	0	; select bank0
 10569  147A  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10570  147B  3003               	movlw	3
 10571  147C  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10572  147D  3000               	movlw	0
 10573  147E  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10574  147F  3000               	movlw	0
 10575  1480  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10576  1481  3000               	movlw	0
 10577  1482  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10578  1483  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10579  1484  3192  2235  3194   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10580                           
 10581                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 10582  1487  318E  263F         	fcall	i1_USBCtrlEPServiceComplete
 10583  1489  0008               	return
 10584  148A                     __end_ofi1_USBCtrlTrfSetupHandler:	
 10585                           
 10586                           	psect	text49
 10587  0E3F                     __ptext49:	
 10588 ;; *************** function i1_USBCtrlEPServiceComplete *****************
 10589 ;; Defined at:
 10590 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      void 
 10597 ;; Registers used:
 10598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;Total ram usage:        2 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:    2
 10611 ;; This function calls:
 10612 ;;		i1_USBCtrlEPAllowDataStage
 10613 ;;		i1_USBCtrlEPAllowStatusStage
 10614 ;; This function is called by:
 10615 ;;		i1_USBCtrlTrfSetupHandler
 10616 ;; This function uses a non-reentrant model
 10617 ;;
 10618                           
 10619                           
 10620                           ;psect for function i1_USBCtrlEPServiceComplete
 10621  0E3F                     i1_USBCtrlEPServiceComplete:	
 10622                           
 10623                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 10624                           
 10625                           ;incstack = 0
 10626 ;; hardware stack exceeded
 10627                           ; Regs used in i1_USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10628  0E3F  003D               	movlb	29	; select bank29
 10629  0E40  120E               	bcf	14,4	;volatile
 10630                           
 10631                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 10632  0E41  0021               	movlb	1	; select bank1
 10633  0E42  1BD5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
 10634  0E43  2E85               	goto	i1l508
 10635                           
 10636                           ;usb_device.c: 1629: {
 10637                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 10638  0E44  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
 10639  0E45  2E54               	goto	i1l4451
 10640                           
 10641                           ;usb_device.c: 1631: {
 10642                           ;usb_device.c: 1632: controlTransferState = 2;
 10643  0E46  3002               	movlw	2
 10644  0E47  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10645  0E48  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10646  0E49  00DC               	movwf	_controlTransferState^(0+128)	;volatile
 10647                           
 10648                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 10649  0E4A  0022               	movlb	2	; select bank2
 10650  0E4B  0847               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
 10651  0E4C  1D03               	btfss	3,2
 10652  0E4D  2E50               	goto	i1l4447
 10653                           
 10654                           ;usb_device.c: 1644: {
 10655                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 10656  0E4E  3196  262F         	fcall	i1_USBCtrlEPAllowDataStage
 10657  0E50                     i1l4447:	
 10658                           
 10659                           ;usb_device.c: 1646: }
 10660                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 10661  0E50  0022               	movlb	2	; select bank2
 10662  0E51  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10663                           
 10664                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 10665  0E52  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10666                           
 10667                           ;usb_device.c: 1652: }
 10668  0E53  0008               	return
 10669  0E54                     i1l4451:	
 10670                           
 10671                           ;usb_device.c: 1653: else
 10672                           ;usb_device.c: 1654: {
 10673                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 16;
 10674  0E54  0021               	movlb	1	; select bank1
 10675  0E55  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10676  0E56  3E01               	addlw	1
 10677  0E57  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10678  0E58  3000               	movlw	0
 10679  0E59  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10680  0E5A  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10681  0E5B  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10682  0E5C  0086               	movwf	6
 10683  0E5D  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10684  0E5E  0087               	movwf	7
 10685  0E5F  3010               	movlw	16
 10686  0E60  0081               	movwf	1
 10687                           
 10688                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10689  0E61  3050               	movlw	80
 10690  0E62  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10691  0E63  3000               	movlw	0
 10692  0E64  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10693  0E65  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10694  0E66  0086               	movwf	6
 10695  0E67  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10696  0E68  0087               	movwf	7
 10697  0E69  3142               	addfsr 1,2
 10698  0E6A  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10699  0E6B  3FC0               	movwi [0]fsr1
 10700  0E6C  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10701  0E6D  3FC1               	movwi [1]fsr1
 10702                           
 10703                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10704  0E6E  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10705  0E6F  0086               	movwf	6
 10706  0E70  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10707  0E71  0087               	movwf	7
 10708  0E72  300C               	movlw	12
 10709  0E73  0081               	movwf	1
 10710                           
 10711                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10712  0E74  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10713  0E75  0086               	movwf	6
 10714  0E76  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10715  0E77  0087               	movwf	7
 10716  0E78  1781               	bsf	1,7
 10717                           
 10718                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 10719  0E79  084D               	movf	_pBDTEntryIn^(0+128),w
 10720  0E7A  0086               	movwf	6
 10721  0E7B  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10722  0E7C  0087               	movwf	7
 10723  0E7D  3004               	movlw	4
 10724  0E7E  0081               	movwf	1
 10725                           
 10726                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10727  0E7F  084D               	movf	_pBDTEntryIn^(0+128),w
 10728  0E80  0086               	movwf	6
 10729  0E81  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 10730  0E82  0087               	movwf	7
 10731  0E83  1781               	bsf	1,7
 10732                           
 10733                           ;usb_device.c: 1665: }
 10734                           ;usb_device.c: 1666: }
 10735  0E84  0008               	return
 10736  0E85                     i1l508:	
 10737                           
 10738                           ;usb_device.c: 1667: else
 10739                           ;usb_device.c: 1668: {
 10740                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 10741  0E85  0020               	movlb	0	; select bank0
 10742  0E86  1FD0               	btfss	80,7	;volatile
 10743  0E87  2E9E               	goto	i1l4477
 10744                           
 10745                           ;usb_device.c: 1670: {
 10746                           ;usb_device.c: 1671: controlTransferState = 1;
 10747  0E88  3001               	movlw	1
 10748  0E89  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10749  0E8A  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10750  0E8B  0021               	movlb	1	; select bank1
 10751  0E8C  00DC               	movwf	_controlTransferState^(0+128)	;volatile
 10752                           
 10753                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 10754  0E8D  0022               	movlb	2	; select bank2
 10755  0E8E  0848               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
 10756  0E8F  1D03               	btfss	3,2
 10757  0E90  2E94               	goto	i1l4469
 10758                           
 10759                           ;usb_device.c: 1686: {
 10760                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 10761  0E91  3196  262F  318E   	fcall	i1_USBCtrlEPAllowDataStage
 10762  0E94                     i1l4469:	
 10763                           
 10764                           ;usb_device.c: 1688: }
 10765                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 10766  0E94  0022               	movlb	2	; select bank2
 10767  0E95  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10768                           
 10769                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 10770  0E96  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10771                           
 10772                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 10773  0E97  0021               	movlb	1	; select bank1
 10774  0E98  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
 10775  0E99  1D03               	btfss	3,2
 10776  0E9A  0008               	return
 10777                           
 10778                           ;usb_device.c: 1713: {
 10779                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 10780  0E9B  3187  278F         	fcall	i1_USBCtrlEPAllowStatusStage
 10781                           
 10782                           ;usb_device.c: 1715: }
 10783                           ;usb_device.c: 1716: }
 10784  0E9D  0008               	return
 10785  0E9E                     i1l4477:	
 10786                           
 10787                           ;usb_device.c: 1717: else
 10788                           ;usb_device.c: 1718: {
 10789                           ;usb_device.c: 1729: controlTransferState = 2;
 10790  0E9E  3002               	movlw	2
 10791  0E9F  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10792  0EA0  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10793  0EA1  0021               	movlb	1	; select bank1
 10794  0EA2  00DC               	movwf	_controlTransferState^(0+128)	;volatile
 10795                           
 10796                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 16;
 10797  0EA3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10798  0EA4  3E01               	addlw	1
 10799  0EA5  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10800  0EA6  3000               	movlw	0
 10801  0EA7  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10802  0EA8  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10803  0EA9  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10804  0EAA  0086               	movwf	6
 10805  0EAB  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10806  0EAC  0087               	movwf	7
 10807  0EAD  3010               	movlw	16
 10808  0EAE  0081               	movwf	1
 10809                           
 10810                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10811  0EAF  3050               	movlw	80
 10812  0EB0  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10813  0EB1  3000               	movlw	0
 10814  0EB2  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10815  0EB3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10816  0EB4  0086               	movwf	6
 10817  0EB5  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10818  0EB6  0087               	movwf	7
 10819  0EB7  3142               	addfsr 1,2
 10820  0EB8  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10821  0EB9  3FC0               	movwi [0]fsr1
 10822  0EBA  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10823  0EBB  3FC1               	movwi [1]fsr1
 10824                           
 10825                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 10826  0EBC  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10827  0EBD  0086               	movwf	6
 10828  0EBE  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10829  0EBF  0087               	movwf	7
 10830  0EC0  3004               	movlw	4
 10831  0EC1  0081               	movwf	1
 10832                           
 10833                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10834  0EC2  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10835  0EC3  0086               	movwf	6
 10836  0EC4  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10837  0EC5  0087               	movwf	7
 10838  0EC6  1781               	bsf	1,7
 10839                           
 10840                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 10841  0EC7  0022               	movlb	2	; select bank2
 10842  0EC8  01C9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 10843                           
 10844                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 10845  0EC9  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 10846                           
 10847                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 10848  0ECA  0021               	movlb	1	; select bank1
 10849  0ECB  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
 10850  0ECC  1D03               	btfss	3,2
 10851  0ECD  0008               	return
 10852                           
 10853                           ;usb_device.c: 1741: {
 10854                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 10855  0ECE  3187  278F         	fcall	i1_USBCtrlEPAllowStatusStage
 10856  0ED0  0008               	return
 10857  0ED1                     __end_ofi1_USBCtrlEPServiceComplete:	
 10858                           
 10859                           	psect	text50
 10860  162F                     __ptext50:	
 10861 ;; *************** function i1_USBCtrlEPAllowDataStage *****************
 10862 ;; Defined at:
 10863 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
 10864 ;; Parameters:    Size  Location     Type
 10865 ;;		None
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;		None
 10868 ;; Return value:  Size  Location     Type
 10869 ;;                  1    wreg      void 
 10870 ;; Registers used:
 10871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10872 ;; Tracked objects:
 10873 ;;		On entry : 0/0
 10874 ;;		On exit  : 0/0
 10875 ;;		Unchanged: 0/0
 10876 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10881 ;;Total ram usage:        2 bytes
 10882 ;; Hardware stack levels used:    1
 10883 ;; Hardware stack levels required when called:    1
 10884 ;; This function calls:
 10885 ;;		i1_USBCtrlTrfTxService
 10886 ;; This function is called by:
 10887 ;;		i1_USBCtrlEPServiceComplete
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891                           
 10892                           ;psect for function i1_USBCtrlEPAllowDataStage
 10893  162F                     i1_USBCtrlEPAllowDataStage:	
 10894                           
 10895                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 10896                           
 10897                           ;incstack = 0
 10898 ;; hardware stack exceeded
 10899                           ; Regs used in i1_USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10900  162F  0022               	movlb	2	; select bank2
 10901  1630  01C8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10902                           
 10903                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 10904  1631  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10905                           
 10906                           ;usb_device.c: 1493: if(controlTransferState == 2)
 10907  1632  3002               	movlw	2
 10908  1633  0021               	movlb	1	; select bank1
 10909  1634  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
 10910  1635  1D03               	btfss	3,2
 10911  1636  2E5C               	goto	i1l4151
 10912                           
 10913                           ;usb_device.c: 1494: {
 10914                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 16;
 10915  1637  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10916  1638  3E01               	addlw	1
 10917  1639  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 10918  163A  3000               	movlw	0
 10919  163B  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10920  163C  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 10921  163D  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 10922  163E  0086               	movwf	6
 10923  163F  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 10924  1640  0087               	movwf	7
 10925  1641  3010               	movlw	16
 10926  1642  0081               	movwf	1
 10927                           
 10928                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 10929  1643  3060               	movlw	96
 10930  1644  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 10931  1645  3000               	movlw	0
 10932  1646  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 10933  1647  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10934  1648  0086               	movwf	6
 10935  1649  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10936  164A  0087               	movwf	7
 10937  164B  3142               	addfsr 1,2
 10938  164C  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 10939  164D  3FC0               	movwi [0]fsr1
 10940  164E  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 10941  164F  3FC1               	movwi [1]fsr1
 10942                           
 10943                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10944  1650  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10945  1651  0086               	movwf	6
 10946  1652  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10947  1653  0087               	movwf	7
 10948  1654  3048               	movlw	72
 10949  1655  0081               	movwf	1
 10950                           
 10951                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10952  1656  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10953  1657  0086               	movwf	6
 10954  1658  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10955  1659  0087               	movwf	7
 10956  165A  1781               	bsf	1,7
 10957                           
 10958                           ;usb_device.c: 1500: }
 10959  165B  0008               	return
 10960  165C                     i1l4151:	
 10961                           
 10962                           ;usb_device.c: 1501: else
 10963                           ;usb_device.c: 1502: {
 10964                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 10965  165C  0857               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
 10966  165D  0020               	movlb	0	; select bank0
 10967  165E  0257               	subwf	87,w	;volatile
 10968  165F  1D03               	skipz
 10969  1660  2E65               	goto	u374_25
 10970  1661  0021               	movlb	1	; select bank1
 10971  1662  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
 10972  1663  0020               	movlb	0	; select bank0
 10973  1664  0256               	subwf	86,w	;volatile
 10974  1665                     u374_25:	
 10975  1665  1803               	skipnc
 10976  1666  2E6E               	goto	i1l4155
 10977                           
 10978                           ;usb_device.c: 1506: {
 10979                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 10980  1667  0857               	movf	87,w	;volatile
 10981  1668  0021               	movlb	1	; select bank1
 10982  1669  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 10983  166A  0020               	movlb	0	; select bank0
 10984  166B  0856               	movf	86,w	;volatile
 10985  166C  0021               	movlb	1	; select bank1
 10986  166D  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 10987  166E                     i1l4155:	
 10988                           
 10989                           ;usb_device.c: 1508: }
 10990                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 10991  166E  3189  21C9         	fcall	i1_USBCtrlTrfTxService
 10992                           
 10993                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 10994  1670  3060               	movlw	96
 10995  1671  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 10996  1672  3000               	movlw	0
 10997  1673  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 10998  1674  0021               	movlb	1	; select bank1
 10999  1675  084D               	movf	_pBDTEntryIn^(0+128),w
 11000  1676  0086               	movwf	6
 11001  1677  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 11002  1678  0087               	movwf	7
 11003  1679  3142               	addfsr 1,2
 11004  167A  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11005  167B  3FC0               	movwi [0]fsr1
 11006  167C  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11007  167D  3FC1               	movwi [1]fsr1
 11008                           
 11009                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11010  167E  084D               	movf	_pBDTEntryIn^(0+128),w
 11011  167F  0086               	movwf	6
 11012  1680  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 11013  1681  0087               	movwf	7
 11014  1682  3048               	movlw	72
 11015  1683  0081               	movwf	1
 11016                           
 11017                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11018  1684  084D               	movf	_pBDTEntryIn^(0+128),w
 11019  1685  0086               	movwf	6
 11020  1686  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 11021  1687  0087               	movwf	7
 11022  1688  1781               	bsf	1,7
 11023  1689  0008               	return
 11024  168A                     __end_ofi1_USBCtrlEPAllowDataStage:	
 11025                           
 11026                           	psect	text51
 11027  17A0                     __ptext51:	
 11028 ;; *************** function i1_USBCheckStdRequest *****************
 11029 ;; Defined at:
 11030 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;		None
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;		None
 11035 ;; Return value:  Size  Location     Type
 11036 ;;                  1    wreg      void 
 11037 ;; Registers used:
 11038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/0
 11041 ;;		On exit  : 0/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11046 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11047 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11048 ;;Total ram usage:        1 bytes
 11049 ;; Hardware stack levels used:    1
 11050 ;; Hardware stack levels required when called:    5
 11051 ;; This function calls:
 11052 ;;		i1_USBStdFeatureReqHandler
 11053 ;;		i1_USBStdGetDscHandler
 11054 ;;		i1_USBStdGetStatusHandler
 11055 ;;		i1_USBStdSetCfgHandler
 11056 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11057 ;; This function is called by:
 11058 ;;		i1_USBCtrlTrfSetupHandler
 11059 ;; This function uses a non-reentrant model
 11060 ;;
 11061                           
 11062                           
 11063                           ;psect for function i1_USBCheckStdRequest
 11064  17A0                     i1_USBCheckStdRequest:	
 11065                           
 11066                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 11067                           
 11068                           ;incstack = 0
 11069 ;; hardware stack exceeded
 11070                           ; Regs used in i1_USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11071  17A0  0020               	movlb	0	; select bank0
 11072  17A1  0E50               	swapf	80,w	;volatile
 11073  17A2  0C89               	rrf	9,f
 11074  17A3  3903               	andlw	3
 11075  17A4  3A00               	xorlw	0
 11076  17A5  1D03               	btfss	3,2
 11077  17A6  0008               	return
 11078  17A7  2FF4               	goto	i1l6493
 11079  17A8                     i1l635:	
 11080                           ;usb_device.c: 2691: {
 11081                           ;usb_device.c: 2692: case 5:
 11082                           
 11083                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
 11084                           
 11085                           
 11086                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 11087  17A8  0021               	movlb	1	; select bank1
 11088  17A9  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11089                           
 11090                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 11091  17AA  3008               	movlw	8
 11092  17AB  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11093  17AC  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11094  17AD  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 11095                           
 11096                           ;usb_device.c: 2696: break;
 11097  17AE  0008               	return
 11098  17AF                     i1l6463:	
 11099                           ;usb_device.c: 2697: case 6:
 11100                           
 11101                           
 11102                           ;usb_device.c: 2698: USBStdGetDscHandler();
 11103  17AF  318B  2321         	fcall	i1_USBStdGetDscHandler
 11104                           
 11105                           ;usb_device.c: 2699: break;
 11106  17B1  0008               	return
 11107  17B2                     i1l6465:	
 11108                           ;usb_device.c: 2700: case 9:
 11109                           
 11110                           
 11111                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 11112  17B2  318D  25AE         	fcall	i1_USBStdSetCfgHandler
 11113                           
 11114                           ;usb_device.c: 2702: break;
 11115  17B4  0008               	return
 11116  17B5                     i1l6467:	
 11117                           ;usb_device.c: 2703: case 8:
 11118                           
 11119                           
 11120                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 11121  17B5  30E1               	movlw	low _USBActiveConfiguration
 11122  17B6  0021               	movlb	1	; select bank1
 11123  17B7  00D3               	movwf	_inPipes^(0+128)	;volatile
 11124  17B8  3000               	movlw	high _USBActiveConfiguration
 11125  17B9  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11126                           
 11127                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11128  17BA  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11129                           
 11130                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 11131  17BB  3001               	movlw	1
 11132  17BC  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11133  17BD  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11134  17BE  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11135                           
 11136                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 11137  17BF  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11138                           
 11139                           ;usb_device.c: 2708: break;
 11140  17C0  0008               	return
 11141  17C1                     i1l6475:	
 11142                           ;usb_device.c: 2709: case 0:
 11143                           
 11144                           
 11145                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 11146  17C1  3194  24D2         	fcall	i1_USBStdGetStatusHandler
 11147                           
 11148                           ;usb_device.c: 2711: break;
 11149  17C3  0008               	return
 11150  17C4                     i1l6477:	
 11151                           ;usb_device.c: 2712: case 1:
 11152                           
 11153                           
 11154                           ;usb_device.c: 2713: case 3:
 11155                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 11156  17C4  3181  21A4         	fcall	i1_USBStdFeatureReqHandler
 11157                           
 11158                           ;usb_device.c: 2715: break;
 11159  17C6  0008               	return
 11160  17C7                     i1l6479:	
 11161                           ;usb_device.c: 2716: case 10:
 11162                           
 11163                           
 11164                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 11165  17C7  0020               	movlb	0	; select bank0
 11166  17C8  0854               	movf	84,w	;volatile
 11167  17C9  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 11168  17CA  0021               	movlb	1	; select bank1
 11169  17CB  00D3               	movwf	_inPipes^(0+128)	;volatile
 11170  17CC  3001               	movlw	1
 11171  17CD  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11172                           
 11173                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11174  17CE  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11175                           
 11176                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 11177  17CF  3001               	movlw	1
 11178  17D0  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11179  17D1  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11180  17D2  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11181                           
 11182                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 11183  17D3  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11184                           
 11185                           ;usb_device.c: 2721: break;
 11186  17D4  0008               	return
 11187  17D5                     i1l644:	
 11188                           ;usb_device.c: 2722: case 11:
 11189                           
 11190                           
 11191                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 11192  17D5  0021               	movlb	1	; select bank1
 11193  17D6  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11194                           
 11195                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 11196  17D7  0020               	movlb	0	; select bank0
 11197  17D8  0852               	movf	82,w	;volatile
 11198  17D9  0021               	movlb	1	; select bank1
 11199  17DA  00A5               	movwf	??i1_USBCheckStdRequest^(0+128)
 11200  17DB  0020               	movlb	0	; select bank0
 11201  17DC  0854               	movf	84,w	;volatile
 11202  17DD  3E65               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 11203  17DE  0086               	movwf	6
 11204  17DF  3001               	movlw	1	; select bank2/3
 11205  17E0  0087               	movwf	7
 11206  17E1  0021               	movlb	1	; select bank1
 11207  17E2  0825               	movf	??i1_USBCheckStdRequest^(0+128),w
 11208  17E3  0081               	movwf	1
 11209                           
 11210                           ;usb_device.c: 2725: break;
 11211  17E4  0008               	return
 11212  17E5                     i1l6489:	
 11213                           ;usb_device.c: 2726: case 7:
 11214                           
 11215                           
 11216                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 11217  17E5  3000               	movlw	0
 11218  17E6  0020               	movlb	0	; select bank0
 11219  17E7  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11220  17E8  3002               	movlw	2
 11221  17E9  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11222  17EA  3000               	movlw	0
 11223  17EB  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11224  17EC  3000               	movlw	0
 11225  17ED  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11226  17EE  3000               	movlw	0
 11227  17EF  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11228  17F0  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11229  17F1  3192  2235         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11230                           
 11231                           ;usb_device.c: 2732: }
 11232                           
 11233                           ;usb_device.c: 2731: break;
 11234                           
 11235                           ;usb_device.c: 2730: default:
 11236                           
 11237                           ;usb_device.c: 2729: case 12:
 11238                           
 11239                           ;usb_device.c: 2728: break;
 11240  17F3  0008               	return
 11241  17F4                     i1l6493:	
 11242  17F4  0020               	movlb	0	; select bank0
 11243  17F5  0851               	movf	81,w	;volatile
 11244                           
 11245                           ; Switch size 1, requested type "space"
 11246                           ; Number of cases is 11, Range of values is 0 to 12
 11247                           ; switch strategies available:
 11248                           ; Name         Instructions Cycles
 11249                           ; direct_byte           32     6 (fixed)
 11250                           ; simple_byte           34    18 (average)
 11251                           ; jumptable            260     6 (fixed)
 11252                           ;	Chosen strategy is direct_byte
 11253  17F6  0084               	movwf	4
 11254  17F7  300D               	movlw	13
 11255  17F8  0204               	subwf	4,w
 11256  17F9  1803               	skipnc
 11257  17FA  0008               	return
 11258  17FB  3190               	movlp	high i1S7221
 11259  17FC  3504               	lslf	4,w
 11260  17FD  3E1A               	addlw	low i1S7221
 11261  17FE  0082               	movwf	2
 11262  17FF                     i1l633:	
 11263  17FF  0008               	return
 11264  1800                     __end_ofi1_USBCheckStdRequest:	
 11265                           
 11266                           	psect	swtext2
 11267  101A                     __pswtext2:	
 11268  101A                     i1S7221:	
 11269  101A  3197  2FC1         	ljmp	i1l6475
 11270  101C  3197  2FC4         	ljmp	i1l6477
 11271  101E  3197  2FFF         	ljmp	i1l633
 11272  1020  3197  2FC4         	ljmp	i1l6477
 11273  1022  3197  2FFF         	ljmp	i1l633
 11274  1024  3197  2FA8         	ljmp	i1l635
 11275  1026  3197  2FAF         	ljmp	i1l6463
 11276  1028  3197  2FE5         	ljmp	i1l6489
 11277  102A  3197  2FB5         	ljmp	i1l6467
 11278  102C  3197  2FB2         	ljmp	i1l6465
 11279  102E  3197  2FC7         	ljmp	i1l6479
 11280  1030  3197  2FD5         	ljmp	i1l644
 11281  1032  3197  2FFF         	ljmp	i1l633
 11282                           
 11283                           	psect	text52
 11284  0DAE                     __ptext52:	
 11285 ;; *************** function i1_USBStdSetCfgHandler *****************
 11286 ;; Defined at:
 11287 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;		None
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;  USBStdSetCfg    2    0[BANK1 ] PTR unsigned char 
 11292 ;;		 -> UEP1(1), 
 11293 ;;  USBStdSetCfg    1    3[BANK1 ] unsigned char 
 11294 ;;  USBStdSetCfg    1    2[BANK1 ] unsigned char 
 11295 ;; Return value:  Size  Location     Type
 11296 ;;                  1    wreg      void 
 11297 ;; Registers used:
 11298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11299 ;; Tracked objects:
 11300 ;;		On entry : 0/0
 11301 ;;		On exit  : 0/0
 11302 ;;		Unchanged: 0/0
 11303 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11305 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11306 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11307 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11308 ;;Total ram usage:        5 bytes
 11309 ;; Hardware stack levels used:    1
 11310 ;; Hardware stack levels required when called:    4
 11311 ;; This function calls:
 11312 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11313 ;;		i1_memset
 11314 ;; This function is called by:
 11315 ;;		i1_USBCheckStdRequest
 11316 ;; This function uses a non-reentrant model
 11317 ;;
 11318                           
 11319                           
 11320                           ;psect for function i1_USBStdSetCfgHandler
 11321  0DAE                     i1_USBStdSetCfgHandler:	
 11322                           
 11323                           ;usb_device.c: 1970: uint8_t i;
 11324                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 11325                           
 11326                           ;incstack = 0
 11327 ;; hardware stack exceeded
 11328                           ; Regs used in i1_USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11329  0DAE  0021               	movlb	1	; select bank1
 11330  0DAF  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11331                           
 11332                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
 11333  0DB0  300E               	movlw	14
 11334  0DB1  00A1               	movwf	(i1USBStdSetCfgHandler@p+1)^(0+128)
 11335  0DB2  3099               	movlw	153
 11336  0DB3  00A0               	movwf	i1USBStdSetCfgHandler@p^(0+128)
 11337  0DB4  01A2               	clrf	i1USBStdSetCfgHandler@i_2173^(0+128)
 11338  0DB5  3002               	movlw	2
 11339  0DB6  0222               	subwf	i1USBStdSetCfgHandler@i_2173^(0+128),w
 11340  0DB7  1803               	btfsc	3,0
 11341  0DB8  2DCC               	goto	i1l6259
 11342  0DB9                     i1l6251:	
 11343  0DB9  0820               	movf	i1USBStdSetCfgHandler@p^(0+128),w
 11344  0DBA  0086               	movwf	6
 11345  0DBB  0821               	movf	(i1USBStdSetCfgHandler@p+1)^(0+128),w
 11346  0DBC  0087               	movwf	7
 11347  0DBD  0181               	clrf	1
 11348  0DBE  3001               	movlw	1
 11349  0DBF  07A0               	addwf	i1USBStdSetCfgHandler@p^(0+128),f
 11350  0DC0  3000               	movlw	0
 11351  0DC1  3DA1               	addwfc	(i1USBStdSetCfgHandler@p+1)^(0+128),f
 11352  0DC2  3001               	movlw	1
 11353  0DC3  0020               	movlb	0	; select bank0
 11354  0DC4  00DE               	movwf	??i1_USBStdSetCfgHandler
 11355  0DC5  085E               	movf	??i1_USBStdSetCfgHandler,w
 11356  0DC6  0021               	movlb	1	; select bank1
 11357  0DC7  07A2               	addwf	i1USBStdSetCfgHandler@i_2173^(0+128),f
 11358  0DC8  3002               	movlw	2
 11359  0DC9  0222               	subwf	i1USBStdSetCfgHandler@i_2173^(0+128),w
 11360  0DCA  1C03               	skipc
 11361  0DCB  2DB9               	goto	i1l6251
 11362  0DCC                     i1l6259:	
 11363                           
 11364                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 11365  0DCC  3020               	movlw	32
 11366  0DCD  00F0               	movwf	i1memset@p1
 11367  0DCE  3000               	movlw	0
 11368  0DCF  00F1               	movwf	i1memset@p1+1
 11369  0DD0  3000               	movlw	0
 11370  0DD1  00F2               	movwf	i1memset@c
 11371  0DD2  00F3               	movwf	i1memset@c+1
 11372  0DD3  3030               	movlw	48
 11373  0DD4  00F4               	movwf	i1memset@n
 11374  0DD5  3000               	movlw	0
 11375  0DD6  00F5               	movwf	i1memset@n+1
 11376  0DD7  3190  208D  318D   	fcall	i1_memset
 11377                           
 11378                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 11379  0DDA  003D               	movlb	29	; select bank29
 11380  0DDB  170E               	bsf	14,6	;volatile
 11381                           
 11382                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 11383  0DDC  0021               	movlb	1	; select bank1
 11384  0DDD  01A3               	clrf	i1USBStdSetCfgHandler@i^(0+128)
 11385  0DDE  3003               	movlw	3
 11386  0DDF  0223               	subwf	i1USBStdSetCfgHandler@i^(0+128),w
 11387  0DE0  1803               	btfsc	3,0
 11388  0DE1  2DF8               	goto	i1l6275
 11389  0DE2                     i1l6269:	
 11390                           
 11391                           ;usb_device.c: 1988: {
 11392                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 11393  0DE2  0823               	movf	i1USBStdSetCfgHandler@i^(0+128),w
 11394  0DE3  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 11395  0DE4  0086               	movwf	6
 11396  0DE5  3001               	movlw	1	; select bank2/3
 11397  0DE6  0087               	movwf	7
 11398  0DE7  0181               	clrf	1
 11399                           
 11400                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 11401  0DE8  0823               	movf	i1USBStdSetCfgHandler@i^(0+128),w
 11402  0DE9  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 11403  0DEA  0086               	movwf	6
 11404  0DEB  3001               	movlw	1	; select bank2/3
 11405  0DEC  0087               	movwf	7
 11406  0DED  0181               	clrf	1
 11407  0DEE  3001               	movlw	1
 11408  0DEF  0020               	movlb	0	; select bank0
 11409  0DF0  00DE               	movwf	??i1_USBStdSetCfgHandler
 11410  0DF1  085E               	movf	??i1_USBStdSetCfgHandler,w
 11411  0DF2  0021               	movlb	1	; select bank1
 11412  0DF3  07A3               	addwf	i1USBStdSetCfgHandler@i^(0+128),f
 11413  0DF4  3003               	movlw	3
 11414  0DF5  0223               	subwf	i1USBStdSetCfgHandler@i^(0+128),w
 11415  0DF6  1C03               	skipc
 11416  0DF7  2DE2               	goto	i1l6269
 11417  0DF8                     i1l6275:	
 11418                           
 11419                           ;usb_device.c: 1991: }
 11420                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 11421  0DF8  3065               	movlw	low _USBAlternateInterface
 11422  0DF9  00F0               	movwf	i1memset@p1
 11423  0DFA  3001               	movlw	high _USBAlternateInterface
 11424  0DFB  00F1               	movwf	i1memset@p1+1
 11425  0DFC  3000               	movlw	0
 11426  0DFD  00F2               	movwf	i1memset@c
 11427  0DFE  00F3               	movwf	i1memset@c+1
 11428  0DFF  3002               	movlw	2
 11429  0E00  00F4               	movwf	i1memset@n
 11430  0E01  3000               	movlw	0
 11431  0E02  00F5               	movwf	i1memset@n+1
 11432  0E03  3190  208D  318D   	fcall	i1_memset
 11433                           
 11434                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 11435  0E06  003D               	movlb	29	; select bank29
 11436  0E07  130E               	bcf	14,6	;volatile
 11437                           
 11438                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11439  0E08  3028               	movlw	40
 11440  0E09  0021               	movlb	1	; select bank1
 11441  0E0A  00CD               	movwf	_pBDTEntryIn^(0+128)
 11442  0E0B  3000               	movlw	0
 11443  0E0C  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 11444                           
 11445                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 11446  0E0D  3020               	movlw	32
 11447  0E0E  0020               	movlb	0	; select bank0
 11448  0E0F  00DE               	movwf	??i1_USBStdSetCfgHandler
 11449  0E10  085E               	movf	??i1_USBStdSetCfgHandler,w
 11450  0E11  0021               	movlb	1	; select bank1
 11451  0E12  00DE               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
 11452                           
 11453                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11454  0E13  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 11455  0E14  00D8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 11456  0E15  39FF               	andlw	255
 11457  0E16  1D03               	skipz
 11458  0E17  3000               	movlw	0
 11459  0E18  00D9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 11460                           
 11461                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 11462  0E19  0020               	movlb	0	; select bank0
 11463  0E1A  0852               	movf	82,w	;volatile
 11464  0E1B  00DE               	movwf	??i1_USBStdSetCfgHandler
 11465  0E1C  085E               	movf	??i1_USBStdSetCfgHandler,w
 11466  0E1D  0021               	movlb	1	; select bank1
 11467  0E1E  00E1               	movwf	_USBActiveConfiguration^(0+128)	;volatile
 11468                           
 11469                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 11470  0E1F  0861               	movf	_USBActiveConfiguration^(0+128),w	;volatile
 11471  0E20  1D03               	btfss	3,2
 11472  0E21  2E29               	goto	i1l6291
 11473                           
 11474                           ;usb_device.c: 2010: {
 11475                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 11476  0E22  3010               	movlw	16
 11477  0E23  0020               	movlb	0	; select bank0
 11478  0E24  00DE               	movwf	??i1_USBStdSetCfgHandler
 11479  0E25  085E               	movf	??i1_USBStdSetCfgHandler,w
 11480  0E26  0021               	movlb	1	; select bank1
 11481  0E27  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 11482                           
 11483                           ;usb_device.c: 2013: }
 11484  0E28  0008               	return
 11485  0E29                     i1l6291:	
 11486                           
 11487                           ;usb_device.c: 2014: else
 11488                           ;usb_device.c: 2015: {
 11489                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 11490  0E29  3000               	movlw	0
 11491  0E2A  0020               	movlb	0	; select bank0
 11492  0E2B  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11493  0E2C  3001               	movlw	1
 11494  0E2D  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11495  0E2E  30E1               	movlw	low _USBActiveConfiguration
 11496  0E2F  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11497  0E30  3000               	movlw	high _USBActiveConfiguration
 11498  0E31  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11499  0E32  3001               	movlw	1
 11500  0E33  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11501  0E34  3000               	movlw	0
 11502  0E35  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11503  0E36  3192  2235         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11504                           
 11505                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 11506  0E38  3020               	movlw	32
 11507  0E39  0020               	movlb	0	; select bank0
 11508  0E3A  00DE               	movwf	??i1_USBStdSetCfgHandler
 11509  0E3B  085E               	movf	??i1_USBStdSetCfgHandler,w
 11510  0E3C  0021               	movlb	1	; select bank1
 11511  0E3D  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 11512  0E3E  0008               	return
 11513  0E3F                     __end_ofi1_USBStdSetCfgHandler:	
 11514                           
 11515                           	psect	text53
 11516  108D                     __ptext53:	
 11517 ;; *************** function i1_memset *****************
 11518 ;; Defined at:
 11519 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 11520 ;; Parameters:    Size  Location     Type
 11521 ;;  p1              2    0[COMMON] PTR void 
 11522 ;;		 -> USBAlternateInterface(2), BDT(48), 
 11523 ;;  c               2    2[COMMON] int 
 11524 ;;  n               2    4[COMMON] unsigned int 
 11525 ;; Auto vars:     Size  Location     Type
 11526 ;;  memset          2    6[COMMON] PTR unsigned char 
 11527 ;;		 -> USBAlternateInterface(2), BDT(48), 
 11528 ;; Return value:  Size  Location     Type
 11529 ;;                  1    wreg      PTR void 
 11530 ;; Registers used:
 11531 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11532 ;; Tracked objects:
 11533 ;;		On entry : 0/0
 11534 ;;		On exit  : 0/0
 11535 ;;		Unchanged: 0/0
 11536 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11537 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11540 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11541 ;;Total ram usage:        8 bytes
 11542 ;; Hardware stack levels used:    1
 11543 ;; This function calls:
 11544 ;;		Nothing
 11545 ;; This function is called by:
 11546 ;;		i1_USBStdSetCfgHandler
 11547 ;; This function uses a non-reentrant model
 11548 ;;
 11549                           
 11550                           
 11551                           ;psect for function i1_memset
 11552  108D                     i1_memset:	
 11553                           
 11554                           ;incstack = 0
 11555 ;; hardware stack exceeded
 11556                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11557  108D  0871               	movf	i1memset@p1+1,w
 11558  108E  00F7               	movwf	i1memset@p+1
 11559  108F  0870               	movf	i1memset@p1,w
 11560  1090  00F6               	movwf	i1memset@p
 11561  1091                     i1l3961:	
 11562  1091  3001               	movlw	1
 11563  1092  02F4               	subwf	i1memset@n,f
 11564  1093  3000               	movlw	0
 11565  1094  3BF5               	subwfb	i1memset@n+1,f
 11566  1095  0A74               	incf	i1memset@n,w
 11567  1096  1903               	btfsc	3,2
 11568  1097  0A75               	incf	i1memset@n+1,w
 11569  1098  1903               	btfsc	3,2
 11570  1099  0008               	return
 11571  109A  0876               	movf	i1memset@p,w
 11572  109B  0086               	movwf	6
 11573  109C  0877               	movf	i1memset@p+1,w
 11574  109D  0087               	movwf	7
 11575  109E  0872               	movf	i1memset@c,w
 11576  109F  0081               	movwf	1
 11577  10A0  3001               	movlw	1
 11578  10A1  07F6               	addwf	i1memset@p,f
 11579  10A2  3000               	movlw	0
 11580  10A3  3DF7               	addwfc	i1memset@p+1,f
 11581  10A4  2891               	goto	i1l3961
 11582  10A5                     __end_ofi1_memset:	
 11583                           ;	Return value of i1_memset is never used
 11584                           
 11585                           
 11586                           	psect	text54
 11587  14D2                     __ptext54:	
 11588 ;; *************** function i1_USBStdGetStatusHandler *****************
 11589 ;; Defined at:
 11590 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
 11591 ;; Parameters:    Size  Location     Type
 11592 ;;		None
 11593 ;; Auto vars:     Size  Location     Type
 11594 ;;  USBStdGetSta    2    1[COMMON] PTR struct __BDT
 11595 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 11596 ;; Return value:  Size  Location     Type
 11597 ;;                  1    wreg      void 
 11598 ;; Registers used:
 11599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11600 ;; Tracked objects:
 11601 ;;		On entry : 0/0
 11602 ;;		On exit  : 0/0
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11608 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11609 ;;Total ram usage:        3 bytes
 11610 ;; Hardware stack levels used:    1
 11611 ;; This function calls:
 11612 ;;		Nothing
 11613 ;; This function is called by:
 11614 ;;		i1_USBCheckStdRequest
 11615 ;; This function uses a non-reentrant model
 11616 ;;
 11617                           
 11618                           
 11619                           ;psect for function i1_USBStdGetStatusHandler
 11620  14D2                     i1_USBStdGetStatusHandler:	
 11621                           
 11622                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 11623                           
 11624                           ;incstack = 0
 11625                           ; Regs used in i1_USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 11626  14D2  0020               	movlb	0	; select bank0
 11627  14D3  01E0               	clrf	96	;volatile
 11628                           
 11629                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 11630  14D4  01E1               	clrf	97	;volatile
 11631                           
 11632                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 11633  14D5  2D0D               	goto	i1l4267
 11634  14D6                     i1l573:	
 11635                           ;usb_device.c: 2135: {
 11636                           ;usb_device.c: 2136: case (0x00):
 11637                           
 11638                           
 11639                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 11640  14D6  0021               	movlb	1	; select bank1
 11641  14D7  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11642                           
 11643                           ;usb_device.c: 2145: }
 11644                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 11645                           
 11646                           ;usb_device.c: 2143: {
 11647                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 11648                           
 11649                           ;usb_device.c: 2142: if(0 == 1)
 11650  14D8  0022               	movlb	2	; select bank2
 11651  14D9  034E               	decf	_RemoteWakeup^(0+256),w	;volatile
 11652  14DA  1D03               	btfss	3,2
 11653  14DB  2D19               	goto	i1l576
 11654                           
 11655                           ;usb_device.c: 2148: {
 11656                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 11657  14DC  0020               	movlb	0	; select bank0
 11658  14DD  14E0               	bsf	96,1	;volatile
 11659                           
 11660                           ;usb_device.c: 2150: }
 11661                           ;usb_device.c: 2151: break;
 11662  14DE  2D19               	goto	i1l576
 11663  14DF                     i1l577:	
 11664                           ;usb_device.c: 2152: case (0x01):
 11665                           
 11666                           
 11667                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 11668  14DF  0021               	movlb	1	; select bank1
 11669  14E0  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11670                           
 11671                           ;usb_device.c: 2154: break;
 11672  14E1  2D19               	goto	i1l576
 11673  14E2                     i1l578:	
 11674                           ;usb_device.c: 2155: case (0x02):
 11675                           
 11676                           
 11677                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 11678  14E2  0021               	movlb	1	; select bank1
 11679  14E3  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11680                           
 11681                           ;usb_device.c: 2160: {
 11682                           ;usb_device.c: 2161: BDT_ENTRY *p;
 11683                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 11684  14E4  0020               	movlb	0	; select bank0
 11685  14E5  1BD4               	btfsc	84,7	;volatile
 11686  14E6  2CF2               	goto	i1l4257
 11687                           
 11688                           ;usb_device.c: 2164: {
 11689                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11690  14E7  0854               	movf	84,w	;volatile
 11691  14E8  390F               	andlw	15
 11692  14E9  0709               	addwf	9,w
 11693  14EA  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11694  14EB  0086               	movwf	6
 11695  14EC  3001               	movlw	1	; select bank2/3
 11696  14ED  0087               	movwf	7
 11697  14EE  3F40               	moviw [0]fsr1
 11698  14EF  00F1               	movwf	i1USBStdGetStatusHandler@p
 11699  14F0  3F41               	moviw [1]fsr1
 11700  14F1  2CFB               	goto	L13
 11701  14F2                     i1l4257:	
 11702                           ;usb_device.c: 2166: }
 11703                           
 11704                           
 11705                           ;usb_device.c: 2167: else
 11706                           ;usb_device.c: 2168: {
 11707                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11708  14F2  0854               	movf	84,w	;volatile
 11709  14F3  390F               	andlw	15
 11710  14F4  0709               	addwf	9,w
 11711  14F5  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 11712  14F6  0086               	movwf	6
 11713  14F7  0187               	clrf	7
 11714  14F8  3F40               	moviw [0]fsr1
 11715  14F9  00F1               	movwf	i1USBStdGetStatusHandler@p
 11716  14FA  3F41               	moviw [1]fsr1
 11717  14FB                     L13:	
 11718  14FB  00F2               	movwf	i1USBStdGetStatusHandler@p+1
 11719                           
 11720                           ;usb_device.c: 2170: }
 11721                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 11722  14FC  0871               	movf	i1USBStdGetStatusHandler@p,w
 11723  14FD  0086               	movwf	6
 11724  14FE  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 11725  14FF  0087               	movwf	7
 11726  1500  1F81               	btfss	1,7
 11727  1501  2D19               	goto	i1l576
 11728  1502  0871               	movf	i1USBStdGetStatusHandler@p,w
 11729  1503  0086               	movwf	6
 11730  1504  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 11731  1505  0087               	movwf	7
 11732  1506  1D01               	btfss	1,2
 11733  1507  2D19               	goto	i1l576
 11734                           
 11735                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 11736  1508  3001               	movlw	1
 11737  1509  00F0               	movwf	??i1_USBStdGetStatusHandler
 11738  150A  0870               	movf	??i1_USBStdGetStatusHandler,w
 11739  150B  00E0               	movwf	96	;volatile
 11740                           
 11741                           ;usb_device.c: 2175: }
 11742                           ;usb_device.c: 2176: }
 11743                           
 11744                           ;usb_device.c: 2174: break;
 11745  150C  2D19               	goto	i1l576
 11746  150D                     i1l4267:	
 11747  150D  0850               	movf	80,w	;volatile
 11748  150E  391F               	andlw	31
 11749                           
 11750                           ; Switch size 1, requested type "space"
 11751                           ; Number of cases is 3, Range of values is 0 to 2
 11752                           ; switch strategies available:
 11753                           ; Name         Instructions Cycles
 11754                           ; simple_byte           10     6 (average)
 11755                           ; direct_byte           12     6 (fixed)
 11756                           ; jumptable            260     6 (fixed)
 11757                           ;	Chosen strategy is simple_byte
 11758  150F  3A00               	xorlw	0	; case 0
 11759  1510  1903               	skipnz
 11760  1511  2CD6               	goto	i1l573
 11761  1512  3A01               	xorlw	1	; case 1
 11762  1513  1903               	skipnz
 11763  1514  2CDF               	goto	i1l577
 11764  1515  3A03               	xorlw	3	; case 2
 11765  1516  1903               	skipnz
 11766  1517  2CE2               	goto	i1l578
 11767  1518  2D19               	goto	i1l576
 11768  1519                     i1l576:	
 11769                           
 11770                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 11771  1519  0021               	movlb	1	; select bank1
 11772  151A  1FD5               	btfss	(_inPipes^(0+128)+2),7	;volatile
 11773  151B  0008               	return
 11774                           
 11775                           ;usb_device.c: 2179: {
 11776                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 11777  151C  3060               	movlw	96
 11778  151D  00D3               	movwf	_inPipes^(0+128)	;volatile
 11779  151E  3000               	movlw	0
 11780  151F  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11781                           
 11782                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11783  1520  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11784                           
 11785                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 11786  1521  3002               	movlw	2
 11787  1522  00F0               	movwf	??i1_USBStdGetStatusHandler
 11788  1523  0870               	movf	??i1_USBStdGetStatusHandler,w
 11789  1524  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11790  1525  0008               	return
 11791  1526                     __end_ofi1_USBStdGetStatusHandler:	
 11792                           
 11793                           	psect	text55
 11794  0B21                     __ptext55:	
 11795 ;; *************** function i1_USBStdGetDscHandler *****************
 11796 ;; Defined at:
 11797 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
 11798 ;; Parameters:    Size  Location     Type
 11799 ;;		None
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;		None
 11802 ;; Return value:  Size  Location     Type
 11803 ;;                  1    wreg      void 
 11804 ;; Registers used:
 11805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11806 ;; Tracked objects:
 11807 ;;		On entry : 0/0
 11808 ;;		On exit  : 0/0
 11809 ;;		Unchanged: 0/0
 11810 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11813 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11815 ;;Total ram usage:        3 bytes
 11816 ;; Hardware stack levels used:    1
 11817 ;; This function calls:
 11818 ;;		Nothing
 11819 ;; This function is called by:
 11820 ;;		i1_USBCheckStdRequest
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           
 11825                           ;psect for function i1_USBStdGetDscHandler
 11826  0B21                     i1_USBStdGetDscHandler:	
 11827                           
 11828                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 11829                           
 11830                           ;incstack = 0
 11831                           ; Regs used in i1_USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 11832  0B21  3080               	movlw	128
 11833  0B22  0020               	movlb	0	; select bank0
 11834  0B23  0650               	xorwf	80,w	;volatile
 11835  0B24  1D03               	btfss	3,2
 11836  0B25  0008               	return
 11837                           
 11838                           ;usb_device.c: 2046: {
 11839                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 11840  0B26  30C0               	movlw	192
 11841  0B27  00F0               	movwf	??i1_USBStdGetDscHandler
 11842  0B28  0870               	movf	??i1_USBStdGetDscHandler,w
 11843  0B29  0021               	movlb	1	; select bank1
 11844  0B2A  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
 11845                           
 11846                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 11847  0B2B  2B93               	goto	i1l4245
 11848  0B2C                     i1l4219:	
 11849                           ;usb_device.c: 2050: {
 11850                           ;usb_device.c: 2051: case 0x01:
 11851                           
 11852                           
 11853                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 11854  0B2C  307D               	movlw	low (_device_dsc| (0+32768))
 11855  0B2D  0021               	movlb	1	; select bank1
 11856  0B2E  00D3               	movwf	_inPipes^(0+128)	;volatile
 11857  0B2F  3098               	movlw	high (_device_dsc| (0+32768))
 11858  0B30  00D4               	movwf	(_inPipes^(0+128)+1)	;volatile
 11859                           
 11860                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 11861  0B31  3000               	movlw	0
 11862  0B32  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 11863  0B33  3012               	movlw	18
 11864  0B34  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11865                           
 11866                           ;usb_device.c: 2058: break;
 11867  0B35  0008               	return
 11868  0B36                     i1l4223:	
 11869                           ;usb_device.c: 2059: case 0x02:
 11870                           
 11871                           
 11872                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 11873  0B36  0020               	movlb	0	; select bank0
 11874  0B37  0852               	movf	82,w	;volatile
 11875  0B38  1D03               	btfss	3,2
 11876  0B39  2B69               	goto	i1l4231
 11877                           
 11878                           ;usb_device.c: 2064: {
 11879                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 11880  0B3A  0852               	movf	82,w	;volatile
 11881  0B3B  00F0               	movwf	??i1_USBStdGetDscHandler
 11882  0B3C  01F1               	clrf	??i1_USBStdGetDscHandler+1
 11883  0B3D  35F0               	lslf	??i1_USBStdGetDscHandler,f
 11884  0B3E  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 11885  0B3F  3099               	movlw	low (_USB_CD_Ptr| (0+32768))
 11886  0B40  0770               	addwf	??i1_USBStdGetDscHandler,w
 11887  0B41  0084               	movwf	4
 11888  0B42  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
 11889  0B43  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 11890  0B44  0085               	movwf	5
 11891  0B45  3F00               	moviw [0]fsr0
 11892  0B46  0021               	movlb	1	; select bank1
 11893  0B47  00D3               	movwf	_inPipes^(0+128)	;volatile
 11894  0B48  3F01               	moviw [1]fsr0
 11895  0B49  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11896                           
 11897                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 11898  0B4A  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 11899  0B4B  00F1               	movwf	??i1_USBStdGetDscHandler+1
 11900  0B4C  0853               	movf	_inPipes^(0+128),w	;volatile
 11901  0B4D  00F0               	movwf	??i1_USBStdGetDscHandler
 11902  0B4E  3002               	movlw	2
 11903  0B4F  0770               	addwf	??i1_USBStdGetDscHandler,w
 11904  0B50  0084               	movwf	4
 11905  0B51  0871               	movf	??i1_USBStdGetDscHandler+1,w
 11906  0B52  1803               	skipnc
 11907  0B53  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 11908  0B54  0085               	movwf	5
 11909  0B55  0800               	movf	0,w	;code access
 11910  0B56  00F2               	movwf	??i1_USBStdGetDscHandler+2
 11911  0B57  0872               	movf	??i1_USBStdGetDscHandler+2,w
 11912  0B58  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11913                           
 11914                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 11915  0B59  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 11916  0B5A  00F1               	movwf	??i1_USBStdGetDscHandler+1
 11917  0B5B  0853               	movf	_inPipes^(0+128),w	;volatile
 11918  0B5C  00F0               	movwf	??i1_USBStdGetDscHandler
 11919  0B5D  3003               	movlw	3
 11920  0B5E  0770               	addwf	??i1_USBStdGetDscHandler,w
 11921  0B5F  0084               	movwf	4
 11922  0B60  0871               	movf	??i1_USBStdGetDscHandler+1,w
 11923  0B61  1803               	skipnc
 11924  0B62  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 11925  0B63  0085               	movwf	5
 11926  0B64  0800               	movf	0,w	;code access
 11927  0B65  00F2               	movwf	??i1_USBStdGetDscHandler+2
 11928  0B66  0872               	movf	??i1_USBStdGetDscHandler+2,w
 11929  0B67  00D7               	movwf	(_inPipes^(0+128)+4)	;volatile
 11930                           
 11931                           ;usb_device.c: 2076: }
 11932  0B68  0008               	return
 11933  0B69                     i1l4231:	
 11934                           
 11935                           ;usb_device.c: 2077: else
 11936                           ;usb_device.c: 2078: {
 11937                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 11938  0B69  0021               	movlb	1	; select bank1
 11939  0B6A  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11940                           
 11941                           ;usb_device.c: 2080: }
 11942                           ;usb_device.c: 2081: break;
 11943  0B6B  0008               	return
 11944  0B6C                     i1l4233:	
 11945                           ;usb_device.c: 2082: case 0x03:
 11946                           
 11947                           
 11948                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 11949  0B6C  3003               	movlw	3
 11950  0B6D  0020               	movlb	0	; select bank0
 11951  0B6E  0252               	subwf	82,w	;volatile
 11952  0B6F  1803               	skipnc
 11953  0B70  2B8D               	goto	i1l4239
 11954                           
 11955                           ;usb_device.c: 2087: {
 11956                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11957  0B71  0852               	movf	82,w	;volatile
 11958  0B72  00F0               	movwf	??i1_USBStdGetDscHandler
 11959  0B73  01F1               	clrf	??i1_USBStdGetDscHandler+1
 11960  0B74  35F0               	lslf	??i1_USBStdGetDscHandler,f
 11961  0B75  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 11962  0B76  308F               	movlw	low (_USB_SD_Ptr| (0+32768))
 11963  0B77  0770               	addwf	??i1_USBStdGetDscHandler,w
 11964  0B78  0084               	movwf	4
 11965  0B79  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
 11966  0B7A  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 11967  0B7B  0085               	movwf	5
 11968  0B7C  3F00               	moviw [0]fsr0
 11969  0B7D  0021               	movlb	1	; select bank1
 11970  0B7E  00D3               	movwf	_inPipes^(0+128)	;volatile
 11971  0B7F  3F01               	moviw [1]fsr0
 11972  0B80  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11973                           
 11974                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11975  0B81  0853               	movf	_inPipes^(0+128),w	;volatile
 11976  0B82  0084               	movwf	4
 11977  0B83  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 11978  0B84  0085               	movwf	5
 11979  0B85  0800               	movf	0,w	;code access
 11980  0B86  00F0               	movwf	??i1_USBStdGetDscHandler
 11981  0B87  01F1               	clrf	??i1_USBStdGetDscHandler+1
 11982  0B88  0870               	movf	??i1_USBStdGetDscHandler,w
 11983  0B89  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11984  0B8A  0871               	movf	??i1_USBStdGetDscHandler+1,w
 11985  0B8B  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 11986                           
 11987                           ;usb_device.c: 2092: }
 11988  0B8C  0008               	return
 11989  0B8D                     i1l4239:	
 11990                           
 11991                           ;usb_device.c: 2102: else
 11992                           ;usb_device.c: 2103: {
 11993                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 11994  0B8D  0021               	movlb	1	; select bank1
 11995  0B8E  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11996                           
 11997                           ;usb_device.c: 2105: }
 11998                           ;usb_device.c: 2106: break;
 11999  0B8F  0008               	return
 12000  0B90                     i1l4241:	
 12001                           ;usb_device.c: 2107: default:
 12002                           
 12003                           
 12004                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 12005  0B90  0021               	movlb	1	; select bank1
 12006  0B91  01D5               	clrf	(_inPipes^(0+128)+2)	;volatile
 12007                           
 12008                           ;usb_device.c: 2110: }
 12009                           
 12010                           ;usb_device.c: 2109: break;
 12011  0B92  0008               	return
 12012  0B93                     i1l4245:	
 12013  0B93  0020               	movlb	0	; select bank0
 12014  0B94  0853               	movf	83,w	;volatile
 12015                           
 12016                           ; Switch size 1, requested type "space"
 12017                           ; Number of cases is 3, Range of values is 1 to 3
 12018                           ; switch strategies available:
 12019                           ; Name         Instructions Cycles
 12020                           ; simple_byte           10     6 (average)
 12021                           ; direct_byte           15     9 (fixed)
 12022                           ; jumptable            263     9 (fixed)
 12023                           ;	Chosen strategy is simple_byte
 12024  0B95  3A01               	xorlw	1	; case 1
 12025  0B96  1903               	skipnz
 12026  0B97  2B2C               	goto	i1l4219
 12027  0B98  3A03               	xorlw	3	; case 2
 12028  0B99  1903               	skipnz
 12029  0B9A  2B36               	goto	i1l4223
 12030  0B9B  3A01               	xorlw	1	; case 3
 12031  0B9C  1903               	skipnz
 12032  0B9D  2B6C               	goto	i1l4233
 12033  0B9E  2B90               	goto	i1l4241
 12034  0B9F  0008               	return
 12035  0BA0                     __end_ofi1_USBStdGetDscHandler:	
 12036                           
 12037                           	psect	text56
 12038  01A4                     __ptext56:	
 12039 ;; *************** function i1_USBStdFeatureReqHandler *****************
 12040 ;; Defined at:
 12041 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;		None
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;  USBStdFeatur    2    3[BANK1 ] PTR struct __BDT
 12046 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 12047 ;;  USBStdFeatur    2    0[BANK1 ] PTR unsigned char 
 12048 ;;		 -> UEP0(1), 
 12049 ;;  USBStdFeatur    1    2[BANK1 ] struct .
 12050 ;; Return value:  Size  Location     Type
 12051 ;;                  1    wreg      void 
 12052 ;; Registers used:
 12053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12054 ;; Tracked objects:
 12055 ;;		On entry : 0/0
 12056 ;;		On exit  : 0/0
 12057 ;;		Unchanged: 0/0
 12058 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12060 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12061 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12062 ;;      Totals:         0       2       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12063 ;;Total ram usage:        7 bytes
 12064 ;; Hardware stack levels used:    1
 12065 ;; Hardware stack levels required when called:    4
 12066 ;; This function calls:
 12067 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12068 ;; This function is called by:
 12069 ;;		i1_USBCheckStdRequest
 12070 ;; This function uses a non-reentrant model
 12071 ;;
 12072                           
 12073                           
 12074                           ;psect for function i1_USBStdFeatureReqHandler
 12075  01A4                     i1_USBStdFeatureReqHandler:	
 12076                           
 12077                           ;usb_device.c: 2756: BDT_ENTRY *p;
 12078                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 12079                           ;usb_device.c: 2761: unsigned char* pUEP;
 12080                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 12081                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 12082                           
 12083                           ;incstack = 0
 12084 ;; hardware stack exceeded
 12085                           ; Regs used in i1_USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12086  01A4  0020               	movlb	0	; select bank0
 12087  01A5  0352               	decf	82,w	;volatile
 12088  01A6  1D03               	btfss	3,2
 12089  01A7  29BC               	goto	i1l6307
 12090  01A8  0850               	movf	80,w	;volatile
 12091  01A9  391F               	andlw	31
 12092  01AA  3A00               	xorlw	0
 12093  01AB  1D03               	skipz
 12094  01AC  29BC               	goto	i1l6307
 12095                           
 12096                           ;usb_device.c: 2801: {
 12097                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 12098  01AD  0021               	movlb	1	; select bank1
 12099  01AE  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12100                           
 12101                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 12102  01AF  3003               	movlw	3
 12103  01B0  0020               	movlb	0	; select bank0
 12104  01B1  0651               	xorwf	81,w	;volatile
 12105  01B2  1D03               	btfss	3,2
 12106  01B3  29BA               	goto	i1l6305
 12107                           
 12108                           ;usb_device.c: 2804: RemoteWakeup = 1;
 12109  01B4  3001               	movlw	1
 12110  01B5  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12111  01B6  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12112  01B7  0022               	movlb	2	; select bank2
 12113  01B8  00CE               	movwf	_RemoteWakeup^(0+256)	;volatile
 12114  01B9  29BC               	goto	i1l6307
 12115  01BA                     i1l6305:	
 12116                           
 12117                           ;usb_device.c: 2805: else
 12118                           ;usb_device.c: 2806: RemoteWakeup = 0;
 12119  01BA  0022               	movlb	2	; select bank2
 12120  01BB  01CE               	clrf	_RemoteWakeup^(0+256)	;volatile
 12121  01BC                     i1l6307:	
 12122                           
 12123                           ;usb_device.c: 2807: }
 12124                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 12125                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 12126                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 12127                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 12128  01BC  0020               	movlb	0	; select bank0
 12129  01BD  0852               	movf	82,w	;volatile
 12130  01BE  1D03               	btfss	3,2
 12131  01BF  0008               	return
 12132  01C0  0850               	movf	80,w	;volatile
 12133  01C1  391F               	andlw	31
 12134  01C2  3A02               	xorlw	2
 12135  01C3  1D03               	skipz
 12136  01C4  0008               	return
 12137  01C5  0854               	movf	84,w	;volatile
 12138  01C6  390F               	andlw	15
 12139  01C7  3A00               	xorlw	0
 12140  01C8  1903               	skipnz
 12141  01C9  0008               	return
 12142  01CA  0854               	movf	84,w	;volatile
 12143  01CB  390F               	andlw	15
 12144  01CC  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12145  01CD  3003               	movlw	3
 12146  01CE  025E               	subwf	??i1_USBStdFeatureReqHandler,w
 12147  01CF  1803               	skipnc
 12148  01D0  0008               	return
 12149  01D1  3020               	movlw	32
 12150  01D2  0021               	movlb	1	; select bank1
 12151  01D3  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
 12152  01D4  1D03               	btfss	3,2
 12153  01D5  0008               	return
 12154                           
 12155                           ;usb_device.c: 2814: {
 12156                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 12157  01D6  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12158                           
 12159                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 12160  01D7  0020               	movlb	0	; select bank0
 12161  01D8  1BD4               	btfsc	84,7	;volatile
 12162  01D9  29EB               	goto	i1l6321
 12163                           
 12164                           ;usb_device.c: 2821: {
 12165                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12166  01DA  0854               	movf	84,w	;volatile
 12167  01DB  390F               	andlw	15
 12168  01DC  0709               	addwf	9,w
 12169  01DD  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12170  01DE  0086               	movwf	6
 12171  01DF  3001               	movlw	1	; select bank2/3
 12172  01E0  0087               	movwf	7
 12173  01E1  3F40               	moviw [0]fsr1
 12174  01E2  0021               	movlb	1	; select bank1
 12175  01E3  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12176  01E4  3F41               	moviw [1]fsr1
 12177  01E5  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12178                           
 12179                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 12180  01E6  0020               	movlb	0	; select bank0
 12181  01E7  0854               	movf	84,w	;volatile
 12182  01E8  390F               	andlw	15
 12183  01E9  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12184  01EA  29FB               	goto	L14
 12185  01EB                     i1l6321:	
 12186                           ;usb_device.c: 2824: }
 12187                           
 12188                           
 12189                           ;usb_device.c: 2825: else
 12190                           ;usb_device.c: 2826: {
 12191                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12192  01EB  0020               	movlb	0	; select bank0
 12193  01EC  0854               	movf	84,w	;volatile
 12194  01ED  390F               	andlw	15
 12195  01EE  0709               	addwf	9,w
 12196  01EF  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 12197  01F0  0086               	movwf	6
 12198  01F1  0187               	clrf	7
 12199  01F2  3F40               	moviw [0]fsr1
 12200  01F3  0021               	movlb	1	; select bank1
 12201  01F4  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12202  01F5  3F41               	moviw [1]fsr1
 12203  01F6  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12204                           
 12205                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 12206  01F7  0020               	movlb	0	; select bank0
 12207  01F8  0854               	movf	84,w	;volatile
 12208  01F9  390F               	andlw	15
 12209  01FA  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12210  01FB                     L14:	
 12211  01FB  0086               	movwf	6
 12212  01FC  3001               	movlw	1	; select bank2/3
 12213  01FD  0087               	movwf	7
 12214  01FE  0801               	movf	1,w
 12215  01FF  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12216  0200  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12217  0201  0021               	movlb	1	; select bank1
 12218  0202  00A2               	movwf	i1USBStdFeatureReqHandler@current_ep_data^(0+128)
 12219                           
 12220                           ;usb_device.c: 2829: }
 12221                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 12222  0203  1822               	btfsc	i1USBStdFeatureReqHandler@current_ep_data^(0+128),0
 12223  0204  2A15               	goto	i1l6327
 12224                           
 12225                           ;usb_device.c: 2836: {
 12226                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 12227  0205  30FB               	movlw	251
 12228  0206  0020               	movlb	0	; select bank0
 12229  0207  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12230  0208  30FF               	movlw	255
 12231  0209  00DF               	movwf	??i1_USBStdFeatureReqHandler+1
 12232  020A  0021               	movlb	1	; select bank1
 12233  020B  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12234  020C  0020               	movlb	0	; select bank0
 12235  020D  055E               	andwf	??i1_USBStdFeatureReqHandler,w
 12236  020E  0021               	movlb	1	; select bank1
 12237  020F  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12238  0210  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12239  0211  0020               	movlb	0	; select bank0
 12240  0212  055F               	andwf	??i1_USBStdFeatureReqHandler+1,w
 12241  0213  0021               	movlb	1	; select bank1
 12242  0214  2A1A               	goto	L15
 12243  0215                     i1l6327:	
 12244                           ;usb_device.c: 2838: }
 12245                           
 12246                           
 12247                           ;usb_device.c: 2839: else
 12248                           ;usb_device.c: 2840: {
 12249                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 12250  0215  3004               	movlw	4
 12251  0216  0423               	iorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 12252  0217  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12253  0218  3000               	movlw	0
 12254  0219  0424               	iorwf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12255  021A                     L15:	
 12256  021A  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12257                           
 12258                           ;usb_device.c: 2842: }
 12259                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 12260  021B  0020               	movlb	0	; select bank0
 12261  021C  1BD4               	btfsc	84,7	;volatile
 12262  021D  2A2B               	goto	i1l6333
 12263                           
 12264                           ;usb_device.c: 2848: {
 12265                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12266  021E  0854               	movf	84,w	;volatile
 12267  021F  390F               	andlw	15
 12268  0220  0709               	addwf	9,w
 12269  0221  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12270  0222  0086               	movwf	6
 12271  0223  3001               	movlw	1	; select bank2/3
 12272  0224  0087               	movwf	7
 12273  0225  0021               	movlb	1	; select bank1
 12274  0226  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12275  0227  3FC0               	movwi [0]fsr1
 12276  0228  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12277  0229  3FC1               	movwi [1]fsr1
 12278                           
 12279                           ;usb_device.c: 2850: }
 12280  022A  2A37               	goto	i1l6335
 12281  022B                     i1l6333:	
 12282                           
 12283                           ;usb_device.c: 2851: else
 12284                           ;usb_device.c: 2852: {
 12285                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12286  022B  0020               	movlb	0	; select bank0
 12287  022C  0854               	movf	84,w	;volatile
 12288  022D  390F               	andlw	15
 12289  022E  0709               	addwf	9,w
 12290  022F  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 12291  0230  0086               	movwf	6
 12292  0231  0187               	clrf	7
 12293  0232  0021               	movlb	1	; select bank1
 12294  0233  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12295  0234  3FC0               	movwi [0]fsr1
 12296  0235  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12297  0236  3FC1               	movwi [1]fsr1
 12298  0237                     i1l6335:	
 12299                           
 12300                           ;usb_device.c: 2854: }
 12301                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 12302  0237  3003               	movlw	3
 12303  0238  0020               	movlb	0	; select bank0
 12304  0239  0651               	xorwf	81,w	;volatile
 12305  023A  1D03               	btfss	3,2
 12306  023B  2A5D               	goto	i1l6349
 12307                           
 12308                           ;usb_device.c: 2858: {
 12309                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 12310  023C  0021               	movlb	1	; select bank1
 12311  023D  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12312  023E  0086               	movwf	6
 12313  023F  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12314  0240  0087               	movwf	7
 12315  0241  1F81               	btfss	1,7
 12316  0242  2A51               	goto	i1l6345
 12317                           
 12318                           ;usb_device.c: 2860: {
 12319                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 12320  0243  0020               	movlb	0	; select bank0
 12321  0244  1BD4               	btfsc	84,7	;volatile
 12322  0245  2A4A               	goto	i1l6343
 12323                           
 12324                           ;usb_device.c: 2864: {
 12325                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 12326  0246  0854               	movf	84,w	;volatile
 12327  0247  390F               	andlw	15
 12328  0248  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12329  0249  2A4D               	goto	L16
 12330  024A                     i1l6343:	
 12331                           ;usb_device.c: 2866: }
 12332                           
 12333                           
 12334                           ;usb_device.c: 2867: else
 12335                           ;usb_device.c: 2868: {
 12336                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 12337  024A  0854               	movf	84,w	;volatile
 12338  024B  390F               	andlw	15
 12339  024C  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12340  024D                     L16:	
 12341  024D  0086               	movwf	6
 12342  024E  3001               	movlw	1	; select bank2/3
 12343  024F  0087               	movwf	7
 12344  0250  1481               	bsf	1,1
 12345  0251                     i1l6345:	
 12346                           
 12347                           ;usb_device.c: 2870: }
 12348                           ;usb_device.c: 2871: }
 12349                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 12350  0251  0021               	movlb	1	; select bank1
 12351  0252  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12352  0253  0086               	movwf	6
 12353  0254  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12354  0255  0087               	movwf	7
 12355  0256  1501               	bsf	1,2
 12356                           
 12357                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 12358  0257  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12359  0258  0086               	movwf	6
 12360  0259  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12361  025A  0087               	movwf	7
 12362  025B  1781               	bsf	1,7
 12363                           
 12364                           ;usb_device.c: 2876: }
 12365  025C  0008               	return
 12366  025D                     i1l6349:	
 12367                           
 12368                           ;usb_device.c: 2877: else
 12369                           ;usb_device.c: 2878: {
 12370                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 12371  025D  3004               	movlw	4
 12372  025E  0021               	movlb	1	; select bank1
 12373  025F  0623               	xorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 12374  0260  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12375  0261  3000               	movlw	0
 12376  0262  0624               	xorwf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12377  0263  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12378                           
 12379                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 12380  0264  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12381  0265  0086               	movwf	6
 12382  0266  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12383  0267  0087               	movwf	7
 12384  0268  1F81               	btfss	1,7
 12385  0269  2A90               	goto	i1l6359
 12386                           
 12387                           ;usb_device.c: 2885: {
 12388                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 12389  026A  307F               	movlw	127
 12390  026B  0020               	movlb	0	; select bank0
 12391  026C  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12392  026D  0021               	movlb	1	; select bank1
 12393  026E  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12394  026F  0086               	movwf	6
 12395  0270  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12396  0271  0087               	movwf	7
 12397  0272  0020               	movlb	0	; select bank0
 12398  0273  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12399  0274  0581               	andwf	1,f
 12400                           
 12401                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 12402  0275  0021               	movlb	1	; select bank1
 12403  0276  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12404  0277  0086               	movwf	6
 12405  0278  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12406  0279  0087               	movwf	7
 12407  027A  1701               	bsf	1,6
 12408                           
 12409                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 12410  027B  3000               	movlw	0
 12411  027C  0020               	movlb	0	; select bank0
 12412  027D  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12413  027E  3005               	movlw	5
 12414  027F  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12415  0280  0021               	movlb	1	; select bank1
 12416  0281  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12417  0282  0020               	movlb	0	; select bank0
 12418  0283  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12419  0284  0021               	movlb	1	; select bank1
 12420  0285  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12421  0286  0020               	movlb	0	; select bank0
 12422  0287  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12423  0288  3002               	movlw	2
 12424  0289  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12425  028A  3000               	movlw	0
 12426  028B  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12427  028C  3192  2235  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12428                           
 12429                           ;usb_device.c: 2891: }
 12430  028F  2A96               	goto	i1l6361
 12431  0290                     i1l6359:	
 12432                           
 12433                           ;usb_device.c: 2892: else
 12434                           ;usb_device.c: 2893: {
 12435                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 12436  0290  0021               	movlb	1	; select bank1
 12437  0291  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12438  0292  0086               	movwf	6
 12439  0293  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12440  0294  0087               	movwf	7
 12441  0295  1701               	bsf	1,6
 12442  0296                     i1l6361:	
 12443                           
 12444                           ;usb_device.c: 2896: }
 12445                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 12446  0296  3004               	movlw	4
 12447  0297  0021               	movlb	1	; select bank1
 12448  0298  0623               	xorwf	i1USBStdFeatureReqHandler@p^(0+128),w
 12449  0299  00A3               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
 12450  029A  3000               	movlw	0
 12451  029B  0624               	xorwf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12452  029C  00A4               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
 12453                           
 12454                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 12455  029D  18A2               	btfsc	i1USBStdFeatureReqHandler@current_ep_data^(0+128),1
 12456  029E  2AA5               	goto	i1l669
 12457  029F  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12458  02A0  0086               	movwf	6
 12459  02A1  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12460  02A2  0087               	movwf	7
 12461  02A3  1F81               	btfss	1,7
 12462  02A4  2AD1               	goto	i1l6373
 12463  02A5                     i1l669:	
 12464                           
 12465                           ;usb_device.c: 2907: {
 12466                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 12467  02A5  0020               	movlb	0	; select bank0
 12468  02A6  1BD4               	btfsc	84,7	;volatile
 12469  02A7  2AAC               	goto	i1l6369
 12470                           
 12471                           ;usb_device.c: 2909: {
 12472                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 12473  02A8  0854               	movf	84,w	;volatile
 12474  02A9  390F               	andlw	15
 12475  02AA  3E38               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12476  02AB  2AAF               	goto	L17
 12477  02AC                     i1l6369:	
 12478                           ;usb_device.c: 2911: }
 12479                           
 12480                           
 12481                           ;usb_device.c: 2912: else
 12482                           ;usb_device.c: 2913: {
 12483                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 12484  02AC  0854               	movf	84,w	;volatile
 12485  02AD  390F               	andlw	15
 12486  02AE  3E3B               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12487  02AF                     L17:	
 12488  02AF  0086               	movwf	6
 12489  02B0  3001               	movlw	1	; select bank2/3
 12490  02B1  0087               	movwf	7
 12491  02B2  1081               	bcf	1,1
 12492                           
 12493                           ;usb_device.c: 2915: }
 12494                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 12495  02B3  303B               	movlw	59
 12496  02B4  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12497  02B5  0021               	movlb	1	; select bank1
 12498  02B6  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12499  02B7  0086               	movwf	6
 12500  02B8  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12501  02B9  0087               	movwf	7
 12502  02BA  0020               	movlb	0	; select bank0
 12503  02BB  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12504  02BC  0581               	andwf	1,f
 12505                           
 12506                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 12507  02BD  3000               	movlw	0
 12508  02BE  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12509  02BF  3005               	movlw	5
 12510  02C0  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12511  02C1  0021               	movlb	1	; select bank1
 12512  02C2  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12513  02C3  0020               	movlb	0	; select bank0
 12514  02C4  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12515  02C5  0021               	movlb	1	; select bank1
 12516  02C6  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12517  02C7  0020               	movlb	0	; select bank0
 12518  02C8  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12519  02C9  3002               	movlw	2
 12520  02CA  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12521  02CB  3000               	movlw	0
 12522  02CC  00DD               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12523  02CD  3192  2235  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12524                           
 12525                           ;usb_device.c: 2921: }
 12526  02D0  2ADC               	goto	i1l6375
 12527  02D1                     i1l6373:	
 12528                           
 12529                           ;usb_device.c: 2922: else
 12530                           ;usb_device.c: 2923: {
 12531                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 12532  02D1  303B               	movlw	59
 12533  02D2  0020               	movlb	0	; select bank0
 12534  02D3  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12535  02D4  0021               	movlb	1	; select bank1
 12536  02D5  0823               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
 12537  02D6  0086               	movwf	6
 12538  02D7  0824               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
 12539  02D8  0087               	movwf	7
 12540  02D9  0020               	movlb	0	; select bank0
 12541  02DA  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12542  02DB  0581               	andwf	1,f
 12543  02DC                     i1l6375:	
 12544                           
 12545                           ;usb_device.c: 2926: }
 12546                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 12547  02DC  0020               	movlb	0	; select bank0
 12548  02DD  0854               	movf	84,w	;volatile
 12549  02DE  390F               	andlw	15
 12550  02DF  3E98               	addlw	152
 12551  02E0  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12552  02E1  01DF               	clrf	??i1_USBStdFeatureReqHandler+1
 12553  02E2  300E               	movlw	14
 12554  02E3  3DDF               	addwfc	??i1_USBStdFeatureReqHandler+1,f
 12555  02E4  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12556  02E5  0021               	movlb	1	; select bank1
 12557  02E6  00A0               	movwf	i1USBStdFeatureReqHandler@pUEP^(0+128)
 12558  02E7  0020               	movlb	0	; select bank0
 12559  02E8  085F               	movf	??i1_USBStdFeatureReqHandler+1,w
 12560  02E9  0021               	movlb	1	; select bank1
 12561  02EA  00A1               	movwf	(i1USBStdFeatureReqHandler@pUEP+1)^(0+128)
 12562                           
 12563                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 12564  02EB  30FE               	movlw	254
 12565  02EC  0020               	movlb	0	; select bank0
 12566  02ED  00DE               	movwf	??i1_USBStdFeatureReqHandler
 12567  02EE  0021               	movlb	1	; select bank1
 12568  02EF  0820               	movf	i1USBStdFeatureReqHandler@pUEP^(0+128),w
 12569  02F0  0086               	movwf	6
 12570  02F1  0821               	movf	(i1USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 12571  02F2  0087               	movwf	7
 12572  02F3  0020               	movlb	0	; select bank0
 12573  02F4  085E               	movf	??i1_USBStdFeatureReqHandler,w
 12574  02F5  0581               	andwf	1,f
 12575  02F6  0008               	return
 12576  02F7                     __end_ofi1_USBStdFeatureReqHandler:	
 12577                           
 12578                           	psect	text57
 12579  1235                     __ptext57:	
 12580 ;; *************** function i1_USER_USB_CALLBACK_EVENT_HANDLER *****************
 12581 ;; Defined at:
 12582 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
 12583 ;; Parameters:    Size  Location     Type
 12584 ;;  event           2    0[BANK0h] enum E34
 12585 ;;  pdata           2    2[BANK0h] PTR void 
 12586 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 12587 ;;		 -> NULL(0), 
 12588 ;;  size            2    4[BANK0h] unsigned int 
 12589 ;; Auto vars:     Size  Location     Type
 12590 ;;		None
 12591 ;; Return value:  Size  Location     Type
 12592 ;;                  1    wreg      unsigned char 
 12593 ;; Registers used:
 12594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12595 ;; Tracked objects:
 12596 ;;		On entry : 0/0
 12597 ;;		On exit  : 0/0
 12598 ;;		Unchanged: 0/0
 12599 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12600 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12603 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12604 ;;Total ram usage:        6 bytes
 12605 ;; Hardware stack levels used:    1
 12606 ;; Hardware stack levels required when called:    3
 12607 ;; This function calls:
 12608 ;;		i1_CDCInitEP
 12609 ;;		i1_USBCheckCDCRequest
 12610 ;; This function is called by:
 12611 ;;		i1_USBDeviceTasks
 12612 ;;		i1_USBStdSetCfgHandler
 12613 ;;		i1_USBSuspend
 12614 ;;		i1_USBWakeFromSuspend
 12615 ;;		i1_USBCtrlTrfSetupHandler
 12616 ;;		i1_USBCheckStdRequest
 12617 ;;		i1_USBStdFeatureReqHandler
 12618 ;; This function uses a non-reentrant model
 12619 ;;
 12620                           
 12621                           
 12622                           ;psect for function i1_USER_USB_CALLBACK_EVENT_HANDLER
 12623  1235                     i1_USER_USB_CALLBACK_EVENT_HANDLER:	
 12624                           
 12625                           ;usb_device_events.c: 51: switch( (int) event )
 12626                           
 12627                           ;incstack = 0
 12628                           ; Regs used in i1_USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12629  1235  2A3C               	goto	i1l6093
 12630  1236                     i1l6087:	
 12631                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
 12632                           
 12633                           ;usb_device_events.c: 73: break;
 12634                           
 12635                           ;usb_device_events.c: 68: case EVENT_RESUME:
 12636                           
 12637                           ;usb_device_events.c: 66: break;
 12638                           
 12639                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
 12640                           
 12641                           ;usb_device_events.c: 57: break;
 12642                           
 12643                           ;usb_device_events.c: 56: case EVENT_SOF:
 12644                           
 12645                           ;usb_device_events.c: 54: break;
 12646                           
 12647                           ;usb_device_events.c: 52: {
 12648                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
 12649                           
 12650                           
 12651                           ;usb_device_events.c: 76: CDCInitEP();
 12652  1236  3192  2295         	fcall	i1_CDCInitEP
 12653                           
 12654                           ;usb_device_events.c: 80: break;
 12655                           
 12656                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
 12657                           
 12658                           ;usb_device_events.c: 77: break;
 12659  1238  0008               	return
 12660  1239                     i1l6089:	
 12661                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
 12662                           
 12663                           
 12664                           ;usb_device_events.c: 85: USBCheckCDCRequest();
 12665  1239  3197  2740         	fcall	i1_USBCheckCDCRequest
 12666                           
 12667                           ;usb_device_events.c: 96: }
 12668                           
 12669                           ;usb_device_events.c: 95: break;
 12670                           
 12671                           ;usb_device_events.c: 94: default:
 12672                           
 12673                           ;usb_device_events.c: 92: break;
 12674                           
 12675                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
 12676                           
 12677                           ;usb_device_events.c: 89: break;
 12678                           
 12679                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
 12680                           
 12681                           ;usb_device_events.c: 86: break;
 12682  123B  0008               	return
 12683  123C                     i1l6093:	
 12684                           
 12685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12686                           ; Switch size 1, requested type "space"
 12687                           ; Number of cases is 2, Range of values is 0 to 127
 12688                           ; switch strategies available:
 12689                           ; Name         Instructions Cycles
 12690                           ; simple_byte            7     4 (average)
 12691                           ; direct_byte          262     6 (fixed)
 12692                           ; jumptable            260     6 (fixed)
 12693                           ;	Chosen strategy is simple_byte
 12694  123C  0020               	movlb	0	; select bank0
 12695  123D  0859               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
 12696  123E  3A00               	xorlw	0	; case 0
 12697  123F  1903               	skipnz
 12698  1240  2A45               	goto	i1l7223
 12699  1241  3A7F               	xorlw	127	; case 127
 12700  1242  1903               	skipnz
 12701  1243  2A5F               	goto	i1l7225
 12702  1244  2A64               	goto	i1l285
 12703  1245                     i1l7223:	
 12704                           
 12705                           ; Switch size 1, requested type "space"
 12706                           ; Number of cases is 8, Range of values is 1 to 117
 12707                           ; switch strategies available:
 12708                           ; Name         Instructions Cycles
 12709                           ; simple_byte           25    13 (average)
 12710                           ; direct_byte          243     9 (fixed)
 12711                           ; jumptable            263     9 (fixed)
 12712                           ;	Chosen strategy is simple_byte
 12713  1245  0858               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 12714  1246  3A01               	xorlw	1	; case 1
 12715  1247  1903               	skipnz
 12716  1248  2A36               	goto	i1l6087
 12717  1249  3A03               	xorlw	3	; case 2
 12718  124A  1903               	skipnz
 12719  124B  2A64               	goto	i1l285
 12720  124C  3A01               	xorlw	1	; case 3
 12721  124D  1903               	skipnz
 12722  124E  2A39               	goto	i1l6089
 12723  124F  3A06               	xorlw	6	; case 5
 12724  1250  1903               	skipnz
 12725  1251  2A64               	goto	i1l285
 12726  1252  3A77               	xorlw	119	; case 114
 12727  1253  1903               	skipnz
 12728  1254  2A64               	goto	i1l285
 12729  1255  3A01               	xorlw	1	; case 115
 12730  1256  1903               	skipnz
 12731  1257  2A64               	goto	i1l285
 12732  1258  3A07               	xorlw	7	; case 116
 12733  1259  1903               	skipnz
 12734  125A  2A64               	goto	i1l285
 12735  125B  3A01               	xorlw	1	; case 117
 12736  125C  1903               	skipnz
 12737  125D  2A64               	goto	i1l285
 12738  125E  2A64               	goto	i1l285
 12739  125F                     i1l7225:	
 12740                           
 12741                           ; Switch size 1, requested type "space"
 12742                           ; Number of cases is 1, Range of values is 255 to 255
 12743                           ; switch strategies available:
 12744                           ; Name         Instructions Cycles
 12745                           ; simple_byte            4     3 (average)
 12746                           ; direct_byte            7     5 (fixed)
 12747                           ; jumptable            263     9 (fixed)
 12748                           ;	Chosen strategy is simple_byte
 12749  125F  0858               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 12750  1260  3AFF               	xorlw	255	; case 255
 12751  1261  1903               	skipnz
 12752  1262  2A64               	goto	i1l285
 12753  1263  2A64               	goto	i1l285
 12754  1264                     i1l285:	
 12755                           ;usb_device_events.c: 97: return 1;
 12756                           ;	Return value of i1_USER_USB_CALLBACK_EVENT_HANDLER is never used
 12757                           
 12758  1264  0008               	return
 12759  1265                     __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER:	
 12760                           
 12761                           	psect	text58
 12762  1740                     __ptext58:	
 12763 ;; *************** function i1_USBCheckCDCRequest *****************
 12764 ;; Defined at:
 12765 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
 12766 ;; Parameters:    Size  Location     Type
 12767 ;;		None
 12768 ;; Auto vars:     Size  Location     Type
 12769 ;;		None
 12770 ;; Return value:  Size  Location     Type
 12771 ;;                  1    wreg      void 
 12772 ;; Registers used:
 12773 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12774 ;; Tracked objects:
 12775 ;;		On entry : 0/0
 12776 ;;		On exit  : 0/0
 12777 ;;		Unchanged: 0/0
 12778 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12783 ;;Total ram usage:        1 bytes
 12784 ;; Hardware stack levels used:    1
 12785 ;; This function calls:
 12786 ;;		Nothing
 12787 ;; This function is called by:
 12788 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12789 ;; This function uses a non-reentrant model
 12790 ;;
 12791                           
 12792                           
 12793                           ;psect for function i1_USBCheckCDCRequest
 12794  1740                     i1_USBCheckCDCRequest:	
 12795                           
 12796                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
 12797                           
 12798                           ;incstack = 0
 12799                           ; Regs used in i1_USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 12800  1740  0020               	movlb	0	; select bank0
 12801  1741  0850               	movf	80,w	;volatile
 12802  1742  391F               	andlw	31
 12803  1743  3A01               	xorlw	1
 12804  1744  1D03               	btfss	3,2
 12805  1745  0008               	return
 12806                           
 12807                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
 12808  1746  0E50               	swapf	80,w	;volatile
 12809  1747  0C89               	rrf	9,f
 12810  1748  3903               	andlw	3
 12811  1749  3A01               	xorlw	1
 12812  174A  1D03               	btfss	3,2
 12813  174B  0008               	return
 12814                           
 12815                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
 12816                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
 12817  174C  0854               	movf	84,w	;volatile
 12818  174D  1903               	btfsc	3,2
 12819  174E  2F8D               	goto	i1l3621
 12820  174F  0354               	decf	84,w	;volatile
 12821  1750  1D03               	btfss	3,2
 12822  1751  0008               	return
 12823  1752  2F8D               	goto	i1l3621
 12824  1753                     i1l3591:	
 12825                           ;usb_device_cdc.c: 166: {
 12826                           ;usb_device_cdc.c: 168: case 0x00:
 12827                           
 12828                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
 12829                           
 12830                           
 12831                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12832  1753  3056               	movlw	low _dummy_encapsulated_cmd_response
 12833  1754  0021               	movlb	1	; select bank1
 12834  1755  00D3               	movwf	_inPipes^(0+128)	;volatile
 12835  1756  3001               	movlw	high _dummy_encapsulated_cmd_response
 12836  1757  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12837                           
 12838                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
 12839  1758  3000               	movlw	0
 12840  1759  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12841  175A  3008               	movlw	8
 12842  175B  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12843                           
 12844                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12845  175C  1455               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12846                           
 12847                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
 12848  175D  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12849                           
 12850                           ;usb_device_cdc.c: 174: break;
 12851  175E  0008               	return
 12852  175F                     i1l3599:	
 12853                           ;usb_device_cdc.c: 175: case 0x01:
 12854                           
 12855                           
 12856                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12857  175F  3056               	movlw	low _dummy_encapsulated_cmd_response
 12858  1760  0021               	movlb	1	; select bank1
 12859  1761  00D3               	movwf	_inPipes^(0+128)	;volatile
 12860  1762  3001               	movlw	high _dummy_encapsulated_cmd_response
 12861  1763  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12862                           
 12863                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
 12864  1764  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12865                           
 12866                           ;usb_device_cdc.c: 179: break;
 12867  1765  0008               	return
 12868  1766                     i1l3603:	
 12869                           ;usb_device_cdc.c: 183: case 0x20:
 12870                           
 12871                           
 12872                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
 12873  1766  0020               	movlb	0	; select bank0
 12874  1767  0857               	movf	87,w	;volatile
 12875  1768  0021               	movlb	1	; select bank1
 12876  1769  00CA               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
 12877  176A  0020               	movlb	0	; select bank0
 12878  176B  0856               	movf	86,w	;volatile
 12879  176C  0021               	movlb	1	; select bank1
 12880  176D  00C9               	movwf	(_outPipes^(0+128)+3)	;volatile
 12881                           
 12882                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 12883  176E  305E               	movlw	(low (_line_coding| (0+256)))& (0+255)
 12884  176F  00F0               	movwf	??i1_USBCheckCDCRequest
 12885  1770  0870               	movf	??i1_USBCheckCDCRequest,w
 12886  1771  00C6               	movwf	_outPipes^(0+128)	;volatile
 12887                           
 12888                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
 12889  1772  01CB               	clrf	(low ((_outPipes| 0+5)))^(0+128)	;volatile
 12890  1773  01CC               	clrf	((low ((_outPipes| 0+5))+1))^(0+128)	;volatile
 12891                           
 12892                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
 12893  1774  17C8               	bsf	(_outPipes^(0+128)+2),7	;volatile
 12894                           
 12895                           ;usb_device_cdc.c: 188: break;
 12896  1775  0008               	return
 12897  1776                     i1l3609:	
 12898                           ;usb_device_cdc.c: 190: case 0x21:
 12899                           
 12900                           
 12901                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 12902  1776  305E               	movlw	low _line_coding
 12903  1777  0021               	movlb	1	; select bank1
 12904  1778  00D3               	movwf	_inPipes^(0+128)	;volatile
 12905  1779  3001               	movlw	high _line_coding
 12906  177A  00D4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12907  177B  3000               	movlw	0
 12908  177C  00D7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12909  177D  3007               	movlw	7
 12910  177E  00D6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12911  177F  30C1               	movlw	193
 12912  1780  00F0               	movwf	??i1_USBCheckCDCRequest
 12913  1781  0870               	movf	??i1_USBCheckCDCRequest,w
 12914  1782  00D5               	movwf	(_inPipes^(0+128)+2)	;volatile
 12915                           
 12916                           ;usb_device_cdc.c: 195: break;
 12917  1783  0008               	return
 12918  1784                     i1l3615:	
 12919                           ;usb_device_cdc.c: 197: case 0x22:
 12920                           
 12921                           
 12922                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 12923  1784  0020               	movlb	0	; select bank0
 12924  1785  0852               	movf	82,w	;volatile
 12925  1786  00F0               	movwf	??i1_USBCheckCDCRequest
 12926  1787  0870               	movf	??i1_USBCheckCDCRequest,w
 12927  1788  0022               	movlb	2	; select bank2
 12928  1789  00D1               	movwf	_control_signal_bitmap^(0+256)
 12929                           
 12930                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
 12931  178A  0021               	movlb	1	; select bank1
 12932  178B  17D5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12933                           
 12934                           ;usb_device_cdc.c: 257: }
 12935                           
 12936                           ;usb_device_cdc.c: 256: break;
 12937                           
 12938                           ;usb_device_cdc.c: 255: default:
 12939                           
 12940                           ;usb_device_cdc.c: 231: break;
 12941  178C  0008               	return
 12942  178D                     i1l3621:	
 12943  178D  0020               	movlb	0	; select bank0
 12944  178E  0851               	movf	81,w	;volatile
 12945                           
 12946                           ; Switch size 1, requested type "space"
 12947                           ; Number of cases is 5, Range of values is 0 to 34
 12948                           ; switch strategies available:
 12949                           ; Name         Instructions Cycles
 12950                           ; simple_byte           16     9 (average)
 12951                           ; direct_byte           76     6 (fixed)
 12952                           ; jumptable            260     6 (fixed)
 12953                           ;	Chosen strategy is simple_byte
 12954  178F  3A00               	xorlw	0	; case 0
 12955  1790  1903               	skipnz
 12956  1791  2F53               	goto	i1l3591
 12957  1792  3A01               	xorlw	1	; case 1
 12958  1793  1903               	skipnz
 12959  1794  2F5F               	goto	i1l3599
 12960  1795  3A21               	xorlw	33	; case 32
 12961  1796  1903               	skipnz
 12962  1797  2F66               	goto	i1l3603
 12963  1798  3A01               	xorlw	1	; case 33
 12964  1799  1903               	skipnz
 12965  179A  2F76               	goto	i1l3609
 12966  179B  3A03               	xorlw	3	; case 34
 12967  179C  1903               	skipnz
 12968  179D  2F84               	goto	i1l3615
 12969  179E  2F9F               	goto	i1l46
 12970  179F                     i1l46:	
 12971  179F  0008               	return
 12972  17A0                     __end_ofi1_USBCheckCDCRequest:	
 12973                           
 12974                           	psect	text59
 12975  1295                     __ptext59:	
 12976 ;; *************** function i1_CDCInitEP *****************
 12977 ;; Defined at:
 12978 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;		None
 12981 ;; Auto vars:     Size  Location     Type
 12982 ;;		None
 12983 ;; Return value:  Size  Location     Type
 12984 ;;                  1    wreg      void 
 12985 ;; Registers used:
 12986 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12987 ;; Tracked objects:
 12988 ;;		On entry : 0/0
 12989 ;;		On exit  : 0/0
 12990 ;;		Unchanged: 0/0
 12991 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;Total ram usage:        1 bytes
 12997 ;; Hardware stack levels used:    1
 12998 ;; Hardware stack levels required when called:    2
 12999 ;; This function calls:
 13000 ;;		i1_USBEnableEndpoint
 13001 ;;		i1_USBTransferOnePacket
 13002 ;; This function is called by:
 13003 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13004 ;; This function uses a non-reentrant model
 13005 ;;
 13006                           
 13007                           
 13008                           ;psect for function i1_CDCInitEP
 13009  1295                     i1_CDCInitEP:	
 13010                           
 13011                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
 13012                           
 13013                           ;incstack = 0
 13014                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13015  1295  3000               	movlw	0
 13016  1296  0022               	movlb	2	; select bank2
 13017  1297  00E1               	movwf	(_line_coding+3)^(0+256)
 13018  1298  3000               	movlw	0
 13019  1299  00E0               	movwf	(_line_coding+2)^(0+256)
 13020  129A  304B               	movlw	75
 13021  129B  00DF               	movwf	(_line_coding+1)^(0+256)
 13022  129C  3000               	movlw	0
 13023  129D  00DE               	movwf	_line_coding^(0+256)
 13024                           
 13025                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
 13026  129E  01E2               	clrf	(_line_coding^(0+256)+4)
 13027                           
 13028                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
 13029  129F  01E3               	clrf	(_line_coding^(0+256)+5)
 13030                           
 13031                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
 13032  12A0  3008               	movlw	8
 13033  12A1  00FD               	movwf	??i1_CDCInitEP
 13034  12A2  087D               	movf	??i1_CDCInitEP,w
 13035  12A3  00E4               	movwf	(_line_coding^(0+256)+6)
 13036                           
 13037                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
 13038  12A4  01D5               	clrf	_cdc_rx_len^(0+256)
 13039                           
 13040                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
 13041  12A5  301A               	movlw	26
 13042  12A6  00FD               	movwf	??i1_CDCInitEP
 13043  12A7  087D               	movf	??i1_CDCInitEP,w
 13044  12A8  00F7               	movwf	i1USBEnableEndpoint@options
 13045  12A9  3001               	movlw	1
 13046  12AA  3191  2166  3192   	fcall	i1_USBEnableEndpoint
 13047                           
 13048                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 13049  12AD  301E               	movlw	30
 13050  12AE  00FD               	movwf	??i1_CDCInitEP
 13051  12AF  087D               	movf	??i1_CDCInitEP,w
 13052  12B0  00F7               	movwf	i1USBEnableEndpoint@options
 13053  12B1  3002               	movlw	2
 13054  12B2  3191  2166  3192   	fcall	i1_USBEnableEndpoint
 13055                           
 13056                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 13057  12B5  01F0               	clrf	i1USBTransferOnePacket@dir
 13058  12B6  30A0               	movlw	low _cdc_data_rx
 13059  12B7  00F1               	movwf	i1USBTransferOnePacket@data
 13060  12B8  3001               	movlw	high _cdc_data_rx
 13061  12B9  00F2               	movwf	i1USBTransferOnePacket@data+1
 13062  12BA  3040               	movlw	64
 13063  12BB  00FD               	movwf	??i1_CDCInitEP
 13064  12BC  087D               	movf	??i1_CDCInitEP,w
 13065  12BD  00F3               	movwf	i1USBTransferOnePacket@len
 13066  12BE  3002               	movlw	2
 13067  12BF  318C  241F         	fcall	i1_USBTransferOnePacket
 13068  12C1  0871               	movf	?i1_USBTransferOnePacket+1,w
 13069  12C2  0022               	movlb	2	; select bank2
 13070  12C3  00C1               	movwf	(_CDCDataOutHandle+1)^(0+256)
 13071  12C4  0870               	movf	?i1_USBTransferOnePacket,w
 13072  12C5  00C0               	movwf	_CDCDataOutHandle^(0+256)
 13073                           
 13074                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
 13075  12C6  01BE               	clrf	_CDCDataInHandle^(0+256)
 13076  12C7  01BF               	clrf	(_CDCDataInHandle+1)^(0+256)
 13077                           
 13078                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
 13079  12C8  01D4               	clrf	_cdc_trf_state^(0+256)
 13080  12C9  0008               	return
 13081  12CA                     __end_ofi1_CDCInitEP:	
 13082                           
 13083                           	psect	text60
 13084  0C1F                     __ptext60:	
 13085 ;; *************** function i1_USBTransferOnePacket *****************
 13086 ;; Defined at:
 13087 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
 13088 ;; Parameters:    Size  Location     Type
 13089 ;;  ep              1    wreg     unsigned char 
 13090 ;;  dir             1    0[COMMON] unsigned char 
 13091 ;;  data            2    1[COMMON] PTR unsigned char 
 13092 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
 13093 ;;  len             1    3[COMMON] unsigned char 
 13094 ;; Auto vars:     Size  Location     Type
 13095 ;;  ep              1    8[COMMON] unsigned char 
 13096 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
 13097 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 13098 ;; Return value:  Size  Location     Type
 13099 ;;                  2    0[COMMON] PTR void 
 13100 ;; Registers used:
 13101 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13108 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13109 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13110 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13111 ;;Total ram usage:       11 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; This function calls:
 13114 ;;		Nothing
 13115 ;; This function is called by:
 13116 ;;		i1_CDCInitEP
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           
 13120                           
 13121                           ;psect for function i1_USBTransferOnePacket
 13122  0C1F                     i1_USBTransferOnePacket:	
 13123                           
 13124                           ;incstack = 0
 13125                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 13126                           ;i1USBTransferOnePacket@ep stored from wreg
 13127  0C1F  00F8               	movwf	i1USBTransferOnePacket@ep
 13128                           
 13129                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 13130                           ;usb_device.c: 1000: if(dir != 0)
 13131  0C20  0870               	movf	i1USBTransferOnePacket@dir,w
 13132  0C21  1903               	btfsc	3,2
 13133  0C22  2C2B               	goto	i1l3487
 13134                           
 13135                           ;usb_device.c: 1001: {
 13136                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 13137  0C23  3578               	lslf	i1USBTransferOnePacket@ep,w
 13138  0C24  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13139  0C25  0086               	movwf	6
 13140  0C26  0187               	clrf	7
 13141  0C27  3F40               	moviw [0]fsr1
 13142  0C28  00F9               	movwf	i1USBTransferOnePacket@handle
 13143  0C29  3F41               	moviw [1]fsr1
 13144  0C2A  2C33               	goto	L18
 13145  0C2B                     i1l3487:	
 13146                           ;usb_device.c: 1004: }
 13147                           
 13148                           
 13149                           ;usb_device.c: 1005: else
 13150                           ;usb_device.c: 1006: {
 13151                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 13152  0C2B  3578               	lslf	i1USBTransferOnePacket@ep,w
 13153  0C2C  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13154  0C2D  0086               	movwf	6
 13155  0C2E  3001               	movlw	1	; select bank2/3
 13156  0C2F  0087               	movwf	7
 13157  0C30  3F40               	moviw [0]fsr1
 13158  0C31  00F9               	movwf	i1USBTransferOnePacket@handle
 13159  0C32  3F41               	moviw [1]fsr1
 13160  0C33                     L18:	
 13161  0C33  00FA               	movwf	i1USBTransferOnePacket@handle+1
 13162                           
 13163                           ;usb_device.c: 1009: }
 13164                           ;usb_device.c: 1013: if(handle == 0)
 13165  0C34  0879               	movf	i1USBTransferOnePacket@handle,w
 13166  0C35  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
 13167  0C36  1D03               	btfss	3,2
 13168  0C37  2C3B               	goto	i1l3495
 13169                           
 13170                           ;usb_device.c: 1014: {
 13171                           ;usb_device.c: 1015: return 0;
 13172  0C38  01F0               	clrf	?i1_USBTransferOnePacket
 13173  0C39  01F1               	clrf	?i1_USBTransferOnePacket+1
 13174  0C3A  0008               	return
 13175  0C3B                     i1l3495:	
 13176                           
 13177                           ;usb_device.c: 1016: }
 13178                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 13179  0C3B  30FF               	movlw	255
 13180  0C3C  0571               	andwf	i1USBTransferOnePacket@data,w
 13181  0C3D  00F4               	movwf	??i1_USBTransferOnePacket
 13182  0C3E  307F               	movlw	127
 13183  0C3F  0572               	andwf	i1USBTransferOnePacket@data+1,w
 13184  0C40  00F5               	movwf	??i1_USBTransferOnePacket+1
 13185  0C41  0879               	movf	i1USBTransferOnePacket@handle,w
 13186  0C42  0086               	movwf	6
 13187  0C43  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13188  0C44  0087               	movwf	7
 13189  0C45  3142               	addfsr 1,2
 13190  0C46  0874               	movf	??i1_USBTransferOnePacket,w
 13191  0C47  3FC0               	movwi [0]fsr1
 13192  0C48  0875               	movf	??i1_USBTransferOnePacket+1,w
 13193  0C49  3FC1               	movwi [1]fsr1
 13194                           
 13195                           ;usb_device.c: 1030: handle->CNT = len;
 13196  0C4A  0879               	movf	i1USBTransferOnePacket@handle,w
 13197  0C4B  3E01               	addlw	1
 13198  0C4C  00F4               	movwf	??i1_USBTransferOnePacket
 13199  0C4D  3000               	movlw	0
 13200  0C4E  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
 13201  0C4F  00F5               	movwf	??i1_USBTransferOnePacket+1
 13202  0C50  0874               	movf	??i1_USBTransferOnePacket,w
 13203  0C51  0086               	movwf	6
 13204  0C52  0875               	movf	??i1_USBTransferOnePacket+1,w
 13205  0C53  0087               	movwf	7
 13206  0C54  0873               	movf	i1USBTransferOnePacket@len,w
 13207  0C55  0081               	movwf	1
 13208                           
 13209                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 13210  0C56  3040               	movlw	64
 13211  0C57  00F4               	movwf	??i1_USBTransferOnePacket
 13212  0C58  0879               	movf	i1USBTransferOnePacket@handle,w
 13213  0C59  0086               	movwf	6
 13214  0C5A  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13215  0C5B  0087               	movwf	7
 13216  0C5C  0874               	movf	??i1_USBTransferOnePacket,w
 13217  0C5D  0581               	andwf	1,f
 13218                           
 13219                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 13220  0C5E  0879               	movf	i1USBTransferOnePacket@handle,w
 13221  0C5F  0086               	movwf	6
 13222  0C60  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13223  0C61  0087               	movwf	7
 13224  0C62  1581               	bsf	1,3
 13225                           
 13226                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 13227  0C63  0879               	movf	i1USBTransferOnePacket@handle,w
 13228  0C64  0086               	movwf	6
 13229  0C65  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13230  0C66  0087               	movwf	7
 13231  0C67  1781               	bsf	1,7
 13232                           
 13233                           ;usb_device.c: 1036: if(dir != 0)
 13234  0C68  0870               	movf	i1USBTransferOnePacket@dir,w
 13235  0C69  1903               	btfsc	3,2
 13236  0C6A  2C82               	goto	i1l3505
 13237                           
 13238                           ;usb_device.c: 1037: {
 13239                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 13240  0C6B  3578               	lslf	i1USBTransferOnePacket@ep,w
 13241  0C6C  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13242  0C6D  0086               	movwf	6
 13243  0C6E  0187               	clrf	7
 13244  0C6F  3F40               	moviw [0]fsr1
 13245  0C70  00F4               	movwf	??i1_USBTransferOnePacket
 13246  0C71  3F41               	moviw [1]fsr1
 13247  0C72  00F5               	movwf	??i1_USBTransferOnePacket+1
 13248  0C73  3004               	movlw	4
 13249  0C74  0674               	xorwf	??i1_USBTransferOnePacket,w
 13250  0C75  00F6               	movwf	??i1_USBTransferOnePacket+2
 13251  0C76  3000               	movlw	0
 13252  0C77  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 13253  0C78  00F7               	movwf	??i1_USBTransferOnePacket+3
 13254  0C79  3578               	lslf	i1USBTransferOnePacket@ep,w
 13255  0C7A  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13256  0C7B  0086               	movwf	6
 13257  0C7C  0187               	clrf	7
 13258  0C7D  0876               	movf	??i1_USBTransferOnePacket+2,w
 13259  0C7E  3FC0               	movwi [0]fsr1
 13260  0C7F  0877               	movf	??i1_USBTransferOnePacket+3,w
 13261  0C80  3FC1               	movwi [1]fsr1
 13262                           
 13263                           ;usb_device.c: 1040: }
 13264  0C81  2C9A               	goto	i1l3507
 13265  0C82                     i1l3505:	
 13266                           
 13267                           ;usb_device.c: 1041: else
 13268                           ;usb_device.c: 1042: {
 13269                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 13270  0C82  3578               	lslf	i1USBTransferOnePacket@ep,w
 13271  0C83  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13272  0C84  0086               	movwf	6
 13273  0C85  3001               	movlw	1	; select bank2/3
 13274  0C86  0087               	movwf	7
 13275  0C87  3F40               	moviw [0]fsr1
 13276  0C88  00F4               	movwf	??i1_USBTransferOnePacket
 13277  0C89  3F41               	moviw [1]fsr1
 13278  0C8A  00F5               	movwf	??i1_USBTransferOnePacket+1
 13279  0C8B  3004               	movlw	4
 13280  0C8C  0674               	xorwf	??i1_USBTransferOnePacket,w
 13281  0C8D  00F6               	movwf	??i1_USBTransferOnePacket+2
 13282  0C8E  3000               	movlw	0
 13283  0C8F  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 13284  0C90  00F7               	movwf	??i1_USBTransferOnePacket+3
 13285  0C91  3578               	lslf	i1USBTransferOnePacket@ep,w
 13286  0C92  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13287  0C93  0086               	movwf	6
 13288  0C94  3001               	movlw	1	; select bank2/3
 13289  0C95  0087               	movwf	7
 13290  0C96  0876               	movf	??i1_USBTransferOnePacket+2,w
 13291  0C97  3FC0               	movwi [0]fsr1
 13292  0C98  0877               	movf	??i1_USBTransferOnePacket+3,w
 13293  0C99  3FC1               	movwi [1]fsr1
 13294  0C9A                     i1l3507:	
 13295                           
 13296                           ;usb_device.c: 1045: }
 13297                           ;usb_device.c: 1046: return (void*)handle;
 13298  0C9A  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13299  0C9B  00F1               	movwf	?i1_USBTransferOnePacket+1
 13300  0C9C  0879               	movf	i1USBTransferOnePacket@handle,w
 13301  0C9D  00F0               	movwf	?i1_USBTransferOnePacket
 13302  0C9E  0008               	return
 13303  0C9F                     __end_ofi1_USBTransferOnePacket:	
 13304                           
 13305                           	psect	text61
 13306  1166                     __ptext61:	
 13307 ;; *************** function i1_USBEnableEndpoint *****************
 13308 ;; Defined at:
 13309 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
 13310 ;; Parameters:    Size  Location     Type
 13311 ;;  ep              1    wreg     unsigned char 
 13312 ;;  options         1    7[COMMON] unsigned char 
 13313 ;; Auto vars:     Size  Location     Type
 13314 ;;  ep              1   12[COMMON] unsigned char 
 13315 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
 13316 ;;		 -> UEP0(1), 
 13317 ;; Return value:  Size  Location     Type
 13318 ;;                  1    wreg      void 
 13319 ;; Registers used:
 13320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13321 ;; Tracked objects:
 13322 ;;		On entry : 0/0
 13323 ;;		On exit  : 0/0
 13324 ;;		Unchanged: 0/0
 13325 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13326 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13327 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13329 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13330 ;;Total ram usage:        6 bytes
 13331 ;; Hardware stack levels used:    1
 13332 ;; Hardware stack levels required when called:    1
 13333 ;; This function calls:
 13334 ;;		i1_USBConfigureEndpoint
 13335 ;; This function is called by:
 13336 ;;		i1_CDCInitEP
 13337 ;; This function uses a non-reentrant model
 13338 ;;
 13339                           
 13340                           
 13341                           ;psect for function i1_USBEnableEndpoint
 13342  1166                     i1_USBEnableEndpoint:	
 13343                           
 13344                           ;incstack = 0
 13345                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13346                           ;i1USBEnableEndpoint@ep stored from wreg
 13347  1166  00FC               	movwf	i1USBEnableEndpoint@ep
 13348                           
 13349                           ;usb_device.c: 880: unsigned char* p;
 13350                           ;usb_device.c: 884: if(options & 0x04)
 13351  1167  1D77               	btfss	i1USBEnableEndpoint@options,2
 13352  1168  296E               	goto	i1l3475
 13353                           
 13354                           ;usb_device.c: 885: {
 13355                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 13356  1169  01F0               	clrf	i1USBConfigureEndpoint@direction
 13357  116A  087C               	movf	i1USBEnableEndpoint@ep,w
 13358  116B  3193  237E  3191   	fcall	i1_USBConfigureEndpoint
 13359  116E                     i1l3475:	
 13360                           
 13361                           ;usb_device.c: 887: }
 13362                           ;usb_device.c: 888: if(options & 0x02)
 13363  116E  1CF7               	btfss	i1USBEnableEndpoint@options,1
 13364  116F  2975               	goto	i1l3479
 13365                           
 13366                           ;usb_device.c: 889: {
 13367                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 13368  1170  01F0               	clrf	i1USBConfigureEndpoint@direction
 13369  1171  0AF0               	incf	i1USBConfigureEndpoint@direction,f
 13370  1172  087C               	movf	i1USBEnableEndpoint@ep,w
 13371  1173  3193  237E         	fcall	i1_USBConfigureEndpoint
 13372  1175                     i1l3479:	
 13373                           
 13374                           ;usb_device.c: 891: }
 13375                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 13376  1175  087C               	movf	i1USBEnableEndpoint@ep,w
 13377  1176  3E98               	addlw	152
 13378  1177  00F8               	movwf	??i1_USBEnableEndpoint
 13379  1178  01F9               	clrf	??i1_USBEnableEndpoint+1
 13380  1179  300E               	movlw	14
 13381  117A  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
 13382  117B  0878               	movf	??i1_USBEnableEndpoint,w
 13383  117C  00FA               	movwf	i1USBEnableEndpoint@p
 13384  117D  0879               	movf	??i1_USBEnableEndpoint+1,w
 13385  117E  00FB               	movwf	i1USBEnableEndpoint@p+1
 13386                           
 13387                           ;usb_device.c: 901: *p = options;
 13388  117F  087A               	movf	i1USBEnableEndpoint@p,w
 13389  1180  0086               	movwf	6
 13390  1181  087B               	movf	i1USBEnableEndpoint@p+1,w
 13391  1182  0087               	movwf	7
 13392  1183  0877               	movf	i1USBEnableEndpoint@options,w
 13393  1184  0081               	movwf	1
 13394  1185  0008               	return
 13395  1186                     __end_ofi1_USBEnableEndpoint:	
 13396                           
 13397                           	psect	text62
 13398  137E                     __ptext62:	
 13399 ;; *************** function i1_USBConfigureEndpoint *****************
 13400 ;; Defined at:
 13401 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
 13402 ;; Parameters:    Size  Location     Type
 13403 ;;  EPNum           1    wreg     unsigned char 
 13404 ;;  direction       1    0[COMMON] unsigned char 
 13405 ;; Auto vars:     Size  Location     Type
 13406 ;;  EPNum           1    5[COMMON] unsigned char 
 13407 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
 13408 ;;		 -> BDT(48), 
 13409 ;; Return value:  Size  Location     Type
 13410 ;;                  1    wreg      void 
 13411 ;; Registers used:
 13412 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13413 ;; Tracked objects:
 13414 ;;		On entry : 0/0
 13415 ;;		On exit  : 0/0
 13416 ;;		Unchanged: 0/0
 13417 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13418 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13420 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13421 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13422 ;;Total ram usage:        7 bytes
 13423 ;; Hardware stack levels used:    1
 13424 ;; This function calls:
 13425 ;;		Nothing
 13426 ;; This function is called by:
 13427 ;;		i1_USBEnableEndpoint
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           
 13432                           ;psect for function i1_USBConfigureEndpoint
 13433  137E                     i1_USBConfigureEndpoint:	
 13434                           
 13435                           ;incstack = 0
 13436                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 13437                           ;i1USBConfigureEndpoint@EPNum stored from wreg
 13438  137E  00F5               	movwf	i1USBConfigureEndpoint@EPNum
 13439                           
 13440                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 13441                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 13442  137F  3020               	movlw	32
 13443  1380  00F1               	movwf	??i1_USBConfigureEndpoint
 13444  1381  0871               	movf	??i1_USBConfigureEndpoint,w
 13445  1382  00F6               	movwf	i1USBConfigureEndpoint@handle
 13446                           
 13447                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 13448  1383  0870               	movf	i1USBConfigureEndpoint@direction,w
 13449  1384  00F1               	movwf	??i1_USBConfigureEndpoint
 13450  1385  3001               	movlw	1
 13451  1386                     u288_25:	
 13452  1386  35F1               	lslf	??i1_USBConfigureEndpoint,f
 13453  1387  0B89               	decfsz	9,f
 13454  1388  2B86               	goto	u288_25
 13455  1389  0875               	movf	i1USBConfigureEndpoint@EPNum,w
 13456  138A  00F2               	movwf	??i1_USBConfigureEndpoint+1
 13457  138B  3001               	movlw	1
 13458  138C                     u289_25:	
 13459  138C  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
 13460  138D  3EFF               	addlw	-1
 13461  138E  1D03               	skipz
 13462  138F  2B8C               	goto	u289_25
 13463  1390  3572               	lslf	??i1_USBConfigureEndpoint+1,w
 13464  1391  0771               	addwf	??i1_USBConfigureEndpoint,w
 13465  1392  00F3               	movwf	??i1_USBConfigureEndpoint+2
 13466  1393  3001               	movlw	1
 13467  1394                     u290_25:	
 13468  1394  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
 13469  1395  3EFF               	addlw	-1
 13470  1396  1D03               	skipz
 13471  1397  2B94               	goto	u290_25
 13472  1398  3573               	lslf	??i1_USBConfigureEndpoint+2,w
 13473  1399  00F4               	movwf	??i1_USBConfigureEndpoint+3
 13474  139A  0874               	movf	??i1_USBConfigureEndpoint+3,w
 13475  139B  07F6               	addwf	i1USBConfigureEndpoint@handle,f
 13476                           
 13477                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 13478  139C  0876               	movf	i1USBConfigureEndpoint@handle,w
 13479  139D  0086               	movwf	6
 13480  139E  0187               	clrf	7
 13481  139F  1381               	bcf	1,7
 13482                           
 13483                           ;usb_device.c: 1557: if(direction == 0)
 13484  13A0  0870               	movf	i1USBConfigureEndpoint@direction,w
 13485  13A1  1D03               	btfss	3,2
 13486  13A2  2BAD               	goto	i1l3401
 13487                           
 13488                           ;usb_device.c: 1558: {
 13489                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 13490  13A3  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 13491  13A4  3E2A               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13492  13A5  0086               	movwf	6
 13493  13A6  3001               	movlw	1	; select bank2/3
 13494  13A7  0087               	movwf	7
 13495  13A8  0876               	movf	i1USBConfigureEndpoint@handle,w
 13496  13A9  3FC0               	movwi [0]fsr1
 13497  13AA  3000               	movlw	0
 13498  13AB  3FC1               	movwi [1]fsr1
 13499                           
 13500                           ;usb_device.c: 1560: }
 13501  13AC  2BB5               	goto	i1l3403
 13502  13AD                     i1l3401:	
 13503                           
 13504                           ;usb_device.c: 1561: else
 13505                           ;usb_device.c: 1562: {
 13506                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 13507  13AD  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 13508  13AE  3ECD               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 13509  13AF  0086               	movwf	6
 13510  13B0  0187               	clrf	7
 13511  13B1  0876               	movf	i1USBConfigureEndpoint@handle,w
 13512  13B2  3FC0               	movwi [0]fsr1
 13513  13B3  3000               	movlw	0
 13514  13B4  3FC1               	movwi [1]fsr1
 13515  13B5                     i1l3403:	
 13516                           
 13517                           ;usb_device.c: 1564: }
 13518                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 13519  13B5  0876               	movf	i1USBConfigureEndpoint@handle,w
 13520  13B6  0086               	movwf	6
 13521  13B7  0187               	clrf	7
 13522  13B8  1301               	bcf	1,6
 13523                           
 13524                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 13525  13B9  0876               	movf	i1USBConfigureEndpoint@handle,w
 13526  13BA  3E04               	addlw	4
 13527  13BB  0086               	movwf	6
 13528  13BC  0187               	clrf	7
 13529  13BD  1701               	bsf	1,6
 13530  13BE  0008               	return
 13531  13BF                     __end_ofi1_USBConfigureEndpoint:	
 13532                           
 13533                           	psect	text63
 13534  12CA                     __ptext63:	
 13535 ;; *************** function i1_USBCtrlTrfOutHandler *****************
 13536 ;; Defined at:
 13537 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
 13538 ;; Parameters:    Size  Location     Type
 13539 ;;		None
 13540 ;; Auto vars:     Size  Location     Type
 13541 ;;		None
 13542 ;; Return value:  Size  Location     Type
 13543 ;;                  1    wreg      void 
 13544 ;; Registers used:
 13545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13546 ;; Tracked objects:
 13547 ;;		On entry : 0/0
 13548 ;;		On exit  : 0/0
 13549 ;;		Unchanged: 0/0
 13550 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13555 ;;Total ram usage:        2 bytes
 13556 ;; Hardware stack levels used:    1
 13557 ;; Hardware stack levels required when called:    2
 13558 ;; This function calls:
 13559 ;;		i1_USBCtrlTrfRxService
 13560 ;; This function is called by:
 13561 ;;		i1_USBCtrlEPService
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           
 13566                           ;psect for function i1_USBCtrlTrfOutHandler
 13567  12CA                     i1_USBCtrlTrfOutHandler:	
 13568                           
 13569                           ;usb_device.c: 2540: if(controlTransferState == 2)
 13570                           
 13571                           ;incstack = 0
 13572                           ; Regs used in i1_USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13573  12CA  3002               	movlw	2
 13574  12CB  0021               	movlb	1	; select bank1
 13575  12CC  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
 13576  12CD  1D03               	btfss	3,2
 13577  12CE  2AD2               	goto	i1l4761
 13578                           
 13579                           ;usb_device.c: 2541: {
 13580                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 13581  12CF  318F  2763         	fcall	i1_USBCtrlTrfRxService
 13582                           
 13583                           ;usb_device.c: 2543: }
 13584  12D1  0008               	return
 13585  12D2                     i1l4761:	
 13586                           
 13587                           ;usb_device.c: 2544: else
 13588                           ;usb_device.c: 2545: {
 13589                           ;usb_device.c: 2548: controlTransferState = 0;
 13590  12D2  0021               	movlb	1	; select bank1
 13591  12D3  01DC               	clrf	_controlTransferState^(0+128)	;volatile
 13592                           
 13593                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 13594  12D4  0022               	movlb	2	; select bank2
 13595  12D5  084C               	movf	_BothEP0OutUOWNsSet^(0+256),w	;volatile
 13596  12D6  1D03               	btfss	3,2
 13597  12D7  2AFE               	goto	i1l4773
 13598                           
 13599                           ;usb_device.c: 2556: {
 13600                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 16;
 13601  12D8  0021               	movlb	1	; select bank1
 13602  12D9  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13603  12DA  3E01               	addlw	1
 13604  12DB  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 13605  12DC  3000               	movlw	0
 13606  12DD  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13607  12DE  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 13608  12DF  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 13609  12E0  0086               	movwf	6
 13610  12E1  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 13611  12E2  0087               	movwf	7
 13612  12E3  3010               	movlw	16
 13613  12E4  0081               	movwf	1
 13614                           
 13615                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13616  12E5  3050               	movlw	80
 13617  12E6  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 13618  12E7  3000               	movlw	0
 13619  12E8  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 13620  12E9  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13621  12EA  0086               	movwf	6
 13622  12EB  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13623  12EC  0087               	movwf	7
 13624  12ED  3142               	addfsr 1,2
 13625  12EE  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 13626  12EF  3FC0               	movwi [0]fsr1
 13627  12F0  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 13628  12F1  3FC1               	movwi [1]fsr1
 13629                           
 13630                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13631  12F2  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13632  12F3  0086               	movwf	6
 13633  12F4  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13634  12F5  0087               	movwf	7
 13635  12F6  300C               	movlw	12
 13636  12F7  0081               	movwf	1
 13637                           
 13638                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13639  12F8  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13640  12F9  0086               	movwf	6
 13641  12FA  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13642  12FB  0087               	movwf	7
 13643  12FC  1781               	bsf	1,7
 13644                           
 13645                           ;usb_device.c: 2561: }
 13646  12FD  0008               	return
 13647  12FE                     i1l4773:	
 13648                           
 13649                           ;usb_device.c: 2562: else
 13650                           ;usb_device.c: 2563: {
 13651                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 13652  12FE  0022               	movlb	2	; select bank2
 13653  12FF  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 13654  1300  0008               	return
 13655  1301                     __end_ofi1_USBCtrlTrfOutHandler:	
 13656                           
 13657                           	psect	text64
 13658  0F63                     __ptext64:	
 13659 ;; *************** function i1_USBCtrlTrfRxService *****************
 13660 ;; Defined at:
 13661 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
 13662 ;; Parameters:    Size  Location     Type
 13663 ;;		None
 13664 ;; Auto vars:     Size  Location     Type
 13665 ;;  USBCtrlTrfRx    1    5[COMMON] unsigned char 
 13666 ;;  USBCtrlTrfRx    1    4[COMMON] unsigned char 
 13667 ;; Return value:  Size  Location     Type
 13668 ;;                  1    wreg      void 
 13669 ;; Registers used:
 13670 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13671 ;; Tracked objects:
 13672 ;;		On entry : 0/0
 13673 ;;		On exit  : 0/0
 13674 ;;		Unchanged: 0/0
 13675 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13679 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13680 ;;Total ram usage:        4 bytes
 13681 ;; Hardware stack levels used:    1
 13682 ;; Hardware stack levels required when called:    1
 13683 ;; This function calls:
 13684 ;;		i1_USBCtrlEPAllowStatusStage
 13685 ;; This function is called by:
 13686 ;;		i1_USBCtrlTrfOutHandler
 13687 ;; This function uses a non-reentrant model
 13688 ;;
 13689                           
 13690                           
 13691                           ;psect for function i1_USBCtrlTrfRxService
 13692  0F63                     i1_USBCtrlTrfRxService:	
 13693                           
 13694                           ;usb_device.c: 1854: uint8_t byteToRead;
 13695                           ;usb_device.c: 1855: uint8_t i;
 13696                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 13697                           
 13698                           ;incstack = 0
 13699                           ; Regs used in i1_USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13700  0F63  0021               	movlb	1	; select bank1
 13701  0F64  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 13702  0F65  0086               	movwf	6
 13703  0F66  0187               	clrf	7
 13704  0F67  3F41               	moviw [1]fsr1
 13705  0F68  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 13706                           
 13707                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 13708  0F69  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13709  0F6A  00F2               	movwf	??i1_USBCtrlTrfRxService
 13710  0F6B  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 13711  0F6C  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13712  0F6D  024A               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
 13713  0F6E  1D03               	skipz
 13714  0F6F  2F72               	goto	u421_25
 13715  0F70  0872               	movf	??i1_USBCtrlTrfRxService,w
 13716  0F71  0249               	subwf	(_outPipes^(0+128)+3),w	;volatile
 13717  0F72                     u421_25:	
 13718  0F72  1803               	skipnc
 13719  0F73  2F78               	goto	i1l536
 13720                           
 13721                           ;usb_device.c: 1866: {
 13722                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 13723  0F74  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
 13724  0F75  00F2               	movwf	??i1_USBCtrlTrfRxService
 13725  0F76  0872               	movf	??i1_USBCtrlTrfRxService,w
 13726  0F77  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 13727  0F78                     i1l536:	
 13728                           
 13729                           ;usb_device.c: 1868: }
 13730                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 13731  0F78  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13732  0F79  00F2               	movwf	??i1_USBCtrlTrfRxService
 13733  0F7A  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 13734  0F7B  0872               	movf	??i1_USBCtrlTrfRxService,w
 13735  0F7C  02C9               	subwf	(_outPipes^(0+128)+3),f	;volatile
 13736  0F7D  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13737  0F7E  3BCA               	subwfb	((_outPipes+1)^(0+128)+3),f	;volatile
 13738                           
 13739                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 13740  0F7F  01F4               	clrf	i1USBCtrlTrfRxService@i
 13741  0F80                     i1l4507:	
 13742  0F80  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13743  0F81  0274               	subwf	i1USBCtrlTrfRxService@i,w
 13744  0F82  1803               	btfsc	3,0
 13745  0F83  2F99               	goto	i1l4509
 13746                           
 13747                           ;usb_device.c: 1875: {
 13748                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 13749  0F84  0874               	movf	i1USBCtrlTrfRxService@i,w
 13750  0F85  3E60               	addlw	96
 13751  0F86  0086               	movwf	6
 13752  0F87  0187               	clrf	7
 13753  0F88  0801               	movf	1,w
 13754  0F89  00F2               	movwf	??i1_USBCtrlTrfRxService
 13755  0F8A  0846               	movf	_outPipes^(0+128),w	;volatile
 13756  0F8B  0086               	movwf	6
 13757  0F8C  3001               	movlw	1	; select bank2/3
 13758  0F8D  0087               	movwf	7
 13759  0F8E  0872               	movf	??i1_USBCtrlTrfRxService,w
 13760  0F8F  0081               	movwf	1
 13761  0F90  3001               	movlw	1
 13762  0F91  00F2               	movwf	??i1_USBCtrlTrfRxService
 13763  0F92  0872               	movf	??i1_USBCtrlTrfRxService,w
 13764  0F93  07C6               	addwf	_outPipes^(0+128),f	;volatile
 13765  0F94  3001               	movlw	1
 13766  0F95  00F2               	movwf	??i1_USBCtrlTrfRxService
 13767  0F96  0872               	movf	??i1_USBCtrlTrfRxService,w
 13768  0F97  07F4               	addwf	i1USBCtrlTrfRxService@i,f
 13769  0F98  2F80               	goto	i1l4507
 13770  0F99                     i1l4509:	
 13771                           
 13772                           ;usb_device.c: 1877: }
 13773                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 13774  0F99  0849               	movf	(_outPipes^(0+128)+3),w	;volatile
 13775  0F9A  044A               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
 13776  0F9B  1903               	btfsc	3,2
 13777  0F9C  2FD3               	goto	i1l4521
 13778                           
 13779                           ;usb_device.c: 1882: {
 13780                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 16;
 13781  0F9D  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13782  0F9E  3E01               	addlw	1
 13783  0F9F  00F2               	movwf	??i1_USBCtrlTrfRxService
 13784  0FA0  3000               	movlw	0
 13785  0FA1  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13786  0FA2  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13787  0FA3  0872               	movf	??i1_USBCtrlTrfRxService,w
 13788  0FA4  0086               	movwf	6
 13789  0FA5  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13790  0FA6  0087               	movwf	7
 13791  0FA7  3010               	movlw	16
 13792  0FA8  0081               	movwf	1
 13793                           
 13794                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 13795  0FA9  3060               	movlw	96
 13796  0FAA  00F2               	movwf	??i1_USBCtrlTrfRxService
 13797  0FAB  3000               	movlw	0
 13798  0FAC  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13799  0FAD  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13800  0FAE  0086               	movwf	6
 13801  0FAF  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13802  0FB0  0087               	movwf	7
 13803  0FB1  3142               	addfsr 1,2
 13804  0FB2  0872               	movf	??i1_USBCtrlTrfRxService,w
 13805  0FB3  3FC0               	movwi [0]fsr1
 13806  0FB4  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13807  0FB5  3FC1               	movwi [1]fsr1
 13808                           
 13809                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 13810  0FB6  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 13811  0FB7  0086               	movwf	6
 13812  0FB8  0187               	clrf	7
 13813  0FB9  1B01               	btfsc	1,6
 13814  0FBA  2FC7               	goto	i1l4519
 13815                           
 13816                           ;usb_device.c: 1886: {
 13817                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13818  0FBB  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13819  0FBC  0086               	movwf	6
 13820  0FBD  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13821  0FBE  0087               	movwf	7
 13822  0FBF  3048               	movlw	72
 13823  0FC0  0081               	movwf	1
 13824                           
 13825                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13826  0FC1  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13827  0FC2  0086               	movwf	6
 13828  0FC3  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13829  0FC4  0087               	movwf	7
 13830  0FC5  1781               	bsf	1,7
 13831                           
 13832                           ;usb_device.c: 1889: }
 13833  0FC6  0008               	return
 13834  0FC7                     i1l4519:	
 13835                           
 13836                           ;usb_device.c: 1890: else
 13837                           ;usb_device.c: 1891: {
 13838                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 13839  0FC7  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13840  0FC8  0086               	movwf	6
 13841  0FC9  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13842  0FCA  0087               	movwf	7
 13843  0FCB  3008               	movlw	8
 13844  0FCC  0081               	movwf	1
 13845                           
 13846                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13847  0FCD  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13848  0FCE  0086               	movwf	6
 13849  0FCF  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13850  0FD0  0087               	movwf	7
 13851  0FD1  1781               	bsf	1,7
 13852                           
 13853                           ;usb_device.c: 1894: }
 13854                           ;usb_device.c: 1895: }
 13855  0FD2  0008               	return
 13856  0FD3                     i1l4521:	
 13857                           
 13858                           ;usb_device.c: 1896: else
 13859                           ;usb_device.c: 1897: {
 13860                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 16;
 13861  0FD3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13862  0FD4  3E01               	addlw	1
 13863  0FD5  00F2               	movwf	??i1_USBCtrlTrfRxService
 13864  0FD6  3000               	movlw	0
 13865  0FD7  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13866  0FD8  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13867  0FD9  0872               	movf	??i1_USBCtrlTrfRxService,w
 13868  0FDA  0086               	movwf	6
 13869  0FDB  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13870  0FDC  0087               	movwf	7
 13871  0FDD  3010               	movlw	16
 13872  0FDE  0081               	movwf	1
 13873                           
 13874                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13875  0FDF  3050               	movlw	80
 13876  0FE0  00F2               	movwf	??i1_USBCtrlTrfRxService
 13877  0FE1  3000               	movlw	0
 13878  0FE2  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13879  0FE3  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13880  0FE4  0086               	movwf	6
 13881  0FE5  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13882  0FE6  0087               	movwf	7
 13883  0FE7  3142               	addfsr 1,2
 13884  0FE8  0872               	movf	??i1_USBCtrlTrfRxService,w
 13885  0FE9  3FC0               	movwi [0]fsr1
 13886  0FEA  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13887  0FEB  3FC1               	movwi [1]fsr1
 13888                           
 13889                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13890  0FEC  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13891  0FED  0086               	movwf	6
 13892  0FEE  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13893  0FEF  0087               	movwf	7
 13894  0FF0  3004               	movlw	4
 13895  0FF1  0081               	movwf	1
 13896                           
 13897                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13898  0FF2  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13899  0FF3  0086               	movwf	6
 13900  0FF4  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13901  0FF5  0087               	movwf	7
 13902  0FF6  1781               	bsf	1,7
 13903                           
 13904                           ;usb_device.c: 1915: {
 13905                           ;usb_device.c: 1921: outPipes[0].pFunc();
 13906  0FF7  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
 13907  0FF8  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
 13908                           
 13909                           ;usb_device.c: 1926: }
 13910                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 13911  0FF9  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
 13912                           
 13913                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 13914  0FFA  085A               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
 13915  0FFB  1D03               	btfss	3,2
 13916  0FFC  0008               	return
 13917                           
 13918                           ;usb_device.c: 1942: {
 13919                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 13920  0FFD  3187  278F         	fcall	i1_USBCtrlEPAllowStatusStage
 13921  0FFF  0008               	return
 13922  1000                     __end_ofi1_USBCtrlTrfRxService:	
 13923                           
 13924                           	psect	text65
 13925  078F                     __ptext65:	
 13926 ;; *************** function i1_USBCtrlEPAllowStatusStage *****************
 13927 ;; Defined at:
 13928 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
 13929 ;; Parameters:    Size  Location     Type
 13930 ;;		None
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;		None
 13933 ;; Return value:  Size  Location     Type
 13934 ;;                  1    wreg      void 
 13935 ;; Registers used:
 13936 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13937 ;; Tracked objects:
 13938 ;;		On entry : 0/0
 13939 ;;		On exit  : 0/0
 13940 ;;		Unchanged: 0/0
 13941 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;Total ram usage:        2 bytes
 13947 ;; Hardware stack levels used:    1
 13948 ;; This function calls:
 13949 ;;		Nothing
 13950 ;; This function is called by:
 13951 ;;		i1_USBDeviceTasks
 13952 ;;		i1_USBCtrlEPServiceComplete
 13953 ;;		i1_USBCtrlTrfRxService
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957                           
 13958                           ;psect for function i1_USBCtrlEPAllowStatusStage
 13959  078F                     i1_USBCtrlEPAllowStatusStage:	
 13960                           
 13961                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 13962                           
 13963                           ;incstack = 0
 13964                           ; Regs used in i1_USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 13965  078F  0022               	movlb	2	; select bank2
 13966  0790  084A               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
 13967  0791  1D03               	btfss	3,2
 13968  0792  0008               	return
 13969                           
 13970                           ;usb_device.c: 1424: {
 13971                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 13972  0793  3001               	movlw	1
 13973  0794  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 13974  0795  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 13975  0796  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 13976                           
 13977                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 13978  0797  0849               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
 13979  0798  1D03               	btfss	3,2
 13980  0799  0008               	return
 13981                           
 13982                           ;usb_device.c: 1427: {
 13983                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 13984  079A  3001               	movlw	1
 13985  079B  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 13986  079C  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 13987  079D  00C9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 13988                           
 13989                           ;usb_device.c: 1432: if(controlTransferState == 2)
 13990  079E  3002               	movlw	2
 13991  079F  0021               	movlb	1	; select bank1
 13992  07A0  065C               	xorwf	_controlTransferState^(0+128),w	;volatile
 13993  07A1  1D03               	btfss	3,2
 13994  07A2  2FB5               	goto	i1l4119
 13995                           
 13996                           ;usb_device.c: 1433: {
 13997                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 13998  07A3  084D               	movf	_pBDTEntryIn^(0+128),w
 13999  07A4  0086               	movwf	6
 14000  07A5  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14001  07A6  0087               	movwf	7
 14002  07A7  3141               	addfsr 1,1
 14003  07A8  0181               	clrf	1
 14004                           
 14005                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14006  07A9  084D               	movf	_pBDTEntryIn^(0+128),w
 14007  07AA  0086               	movwf	6
 14008  07AB  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14009  07AC  0087               	movwf	7
 14010  07AD  3048               	movlw	72
 14011  07AE  0081               	movwf	1
 14012                           
 14013                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14014  07AF  084D               	movf	_pBDTEntryIn^(0+128),w
 14015  07B0  0086               	movwf	6
 14016  07B1  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14017  07B2  0087               	movwf	7
 14018  07B3  1781               	bsf	1,7
 14019                           
 14020                           ;usb_device.c: 1437: }
 14021  07B4  0008               	return
 14022  07B5                     i1l4119:	
 14023                           
 14024                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 14025  07B5  035C               	decf	_controlTransferState^(0+128),w	;volatile
 14026  07B6  1D03               	btfss	3,2
 14027  07B7  0008               	return
 14028                           
 14029                           ;usb_device.c: 1439: {
 14030                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 14031  07B8  0022               	movlb	2	; select bank2
 14032  07B9  01CC               	clrf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 14033                           
 14034                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 16;
 14035  07BA  3010               	movlw	16
 14036  07BB  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14037  07BC  0021               	movlb	1	; select bank1
 14038  07BD  0A5E               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
 14039  07BE  0086               	movwf	6
 14040  07BF  0187               	clrf	7
 14041  07C0  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14042  07C1  0081               	movwf	1
 14043                           
 14044                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14045  07C2  3050               	movlw	80
 14046  07C3  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14047  07C4  3000               	movlw	0
 14048  07C5  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14049  07C6  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 14050  07C7  3E02               	addlw	2
 14051  07C8  0086               	movwf	6
 14052  07C9  0187               	clrf	7
 14053  07CA  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14054  07CB  3FC0               	movwi [0]fsr1
 14055  07CC  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14056  07CD  3FC1               	movwi [1]fsr1
 14057                           
 14058                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 14059  07CE  3004               	movlw	4
 14060  07CF  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14061  07D0  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 14062  07D1  0086               	movwf	6
 14063  07D2  0187               	clrf	7
 14064  07D3  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14065  07D4  0081               	movwf	1
 14066                           
 14067                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14068  07D5  085E               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 14069  07D6  0086               	movwf	6
 14070  07D7  0187               	clrf	7
 14071  07D8  1781               	bsf	1,7
 14072                           
 14073                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 14074  07D9  3001               	movlw	1
 14075  07DA  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14076  07DB  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14077  07DC  0022               	movlb	2	; select bank2
 14078  07DD  00CC               	movwf	_BothEP0OutUOWNsSet^(0+256)	;volatile
 14079                           
 14080                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 16;
 14081  07DE  0021               	movlb	1	; select bank1
 14082  07DF  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14083  07E0  3E01               	addlw	1
 14084  07E1  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14085  07E2  3000               	movlw	0
 14086  07E3  3D59               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14087  07E4  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14088  07E5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14089  07E6  0086               	movwf	6
 14090  07E7  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14091  07E8  0087               	movwf	7
 14092  07E9  3010               	movlw	16
 14093  07EA  0081               	movwf	1
 14094                           
 14095                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14096  07EB  3050               	movlw	80
 14097  07EC  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14098  07ED  3000               	movlw	0
 14099  07EE  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14100  07EF  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14101  07F0  0086               	movwf	6
 14102  07F1  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14103  07F2  0087               	movwf	7
 14104  07F3  3142               	addfsr 1,2
 14105  07F4  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14106  07F5  3FC0               	movwi [0]fsr1
 14107  07F6  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14108  07F7  3FC1               	movwi [1]fsr1
 14109                           
 14110                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 14111  07F8  0858               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14112  07F9  0086               	movwf	6
 14113  07FA  0859               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14114  07FB  0087               	movwf	7
 14115  07FC  3080               	movlw	128
 14116  07FD  0081               	movwf	1
 14117  07FE  0008               	return
 14118  07FF                     __end_ofi1_USBCtrlEPAllowStatusStage:	
 14119                           
 14120                           	psect	text66
 14121  08F9                     __ptext66:	
 14122 ;; *************** function i1_USBCtrlTrfInHandler *****************
 14123 ;; Defined at:
 14124 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;		None
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;  USBCtrlTrfIn    1    5[COMMON] unsigned char 
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  1    wreg      void 
 14131 ;; Registers used:
 14132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14133 ;; Tracked objects:
 14134 ;;		On entry : 0/0
 14135 ;;		On exit  : 0/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14141 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14142 ;;Total ram usage:        3 bytes
 14143 ;; Hardware stack levels used:    1
 14144 ;; Hardware stack levels required when called:    1
 14145 ;; This function calls:
 14146 ;;		i1_USBCtrlTrfTxService
 14147 ;; This function is called by:
 14148 ;;		i1_USBCtrlEPService
 14149 ;; This function uses a non-reentrant model
 14150 ;;
 14151                           
 14152                           
 14153                           ;psect for function i1_USBCtrlTrfInHandler
 14154  08F9                     i1_USBCtrlTrfInHandler:	
 14155                           
 14156                           ;usb_device.c: 2594: uint8_t lastDTS;
 14157                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 14158                           
 14159                           ;incstack = 0
 14160                           ; Regs used in i1_USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14161  08F9  0021               	movlb	1	; select bank1
 14162  08FA  084D               	movf	_pBDTEntryIn^(0+128),w
 14163  08FB  0086               	movwf	6
 14164  08FC  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14165  08FD  0087               	movwf	7
 14166  08FE  3000               	movlw	0
 14167  08FF  1B01               	btfsc	1,6
 14168  0900  3001               	movlw	1
 14169  0901  00F5               	movwf	i1USBCtrlTrfInHandler@lastDTS
 14170                           
 14171                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 14172  0902  3004               	movlw	4
 14173  0903  064D               	xorwf	_pBDTEntryIn^(0+128),w
 14174  0904  00CD               	movwf	_pBDTEntryIn^(0+128)
 14175  0905  3000               	movlw	0
 14176  0906  064E               	xorwf	(_pBDTEntryIn+1)^(0+128),w
 14177  0907  00CE               	movwf	(_pBDTEntryIn+1)^(0+128)
 14178                           
 14179                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 14180  0908  3008               	movlw	8
 14181  0909  065F               	xorwf	_USBDeviceState^(0+128),w	;volatile
 14182  090A  1D03               	btfss	3,2
 14183  090B  291B               	goto	i1l4789
 14184                           
 14185                           ;usb_device.c: 2605: {
 14186                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 14187  090C  0020               	movlb	0	; select bank0
 14188  090D  0852               	movf	82,w	;volatile
 14189  090E  397F               	andlw	127
 14190  090F  003D               	movlb	29	; select bank29
 14191  0910  0096               	movwf	22	;volatile
 14192                           
 14193                           ;usb_device.c: 2607: if(UADDR != 0u)
 14194  0911  0816               	movf	22,w	;volatile
 14195  0912  1903               	btfsc	3,2
 14196  0913  2916               	goto	i1l4787
 14197                           
 14198                           ;usb_device.c: 2608: {
 14199                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 14200  0914  3010               	movlw	16
 14201  0915  2917               	goto	L19
 14202  0916                     i1l4787:	
 14203                           ;usb_device.c: 2610: }
 14204                           
 14205                           
 14206                           ;usb_device.c: 2611: else
 14207                           ;usb_device.c: 2612: {
 14208                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 14209  0916  3004               	movlw	4
 14210  0917                     L19:	
 14211  0917  00F3               	movwf	??i1_USBCtrlTrfInHandler
 14212  0918  0873               	movf	??i1_USBCtrlTrfInHandler,w
 14213  0919  0021               	movlb	1	; select bank1
 14214  091A  00DF               	movwf	_USBDeviceState^(0+128)	;volatile
 14215  091B                     i1l4789:	
 14216                           
 14217                           ;usb_device.c: 2614: }
 14218                           ;usb_device.c: 2615: }
 14219                           ;usb_device.c: 2618: if(controlTransferState == 1)
 14220  091B  035C               	decf	_controlTransferState^(0+128),w	;volatile
 14221  091C  1D03               	btfss	3,2
 14222  091D  295A               	goto	i1l621
 14223                           
 14224                           ;usb_device.c: 2619: {
 14225                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 14226  091E  3060               	movlw	96
 14227  091F  00F3               	movwf	??i1_USBCtrlTrfInHandler
 14228  0920  3000               	movlw	0
 14229  0921  00F4               	movwf	??i1_USBCtrlTrfInHandler+1
 14230  0922  084D               	movf	_pBDTEntryIn^(0+128),w
 14231  0923  0086               	movwf	6
 14232  0924  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14233  0925  0087               	movwf	7
 14234  0926  3142               	addfsr 1,2
 14235  0927  0873               	movf	??i1_USBCtrlTrfInHandler,w
 14236  0928  3FC0               	movwi [0]fsr1
 14237  0929  0874               	movf	??i1_USBCtrlTrfInHandler+1,w
 14238  092A  3FC1               	movwi [1]fsr1
 14239                           
 14240                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 14241  092B  3189  21C9  3188   	fcall	i1_USBCtrlTrfTxService
 14242                           
 14243                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 14244  092E  3002               	movlw	2
 14245  092F  0021               	movlb	1	; select bank1
 14246  0930  065D               	xorwf	_shortPacketStatus^(0+128),w	;volatile
 14247  0931  1D03               	btfss	3,2
 14248  0932  293F               	goto	i1l4799
 14249                           
 14250                           ;usb_device.c: 2628: {
 14251                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 14252  0933  084D               	movf	_pBDTEntryIn^(0+128),w
 14253  0934  0086               	movwf	6
 14254  0935  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14255  0936  0087               	movwf	7
 14256  0937  3004               	movlw	4
 14257  0938  0081               	movwf	1
 14258                           
 14259                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14260  0939  084D               	movf	_pBDTEntryIn^(0+128),w
 14261  093A  0086               	movwf	6
 14262  093B  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14263  093C  0087               	movwf	7
 14264  093D  1781               	bsf	1,7
 14265                           
 14266                           ;usb_device.c: 2633: }
 14267  093E  0008               	return
 14268  093F                     i1l4799:	
 14269                           
 14270                           ;usb_device.c: 2634: else
 14271                           ;usb_device.c: 2635: {
 14272                           ;usb_device.c: 2636: if(lastDTS == 0)
 14273  093F  0875               	movf	i1USBCtrlTrfInHandler@lastDTS,w
 14274  0940  1D03               	btfss	3,2
 14275  0941  294E               	goto	i1l4803
 14276                           
 14277                           ;usb_device.c: 2637: {
 14278                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14279  0942  084D               	movf	_pBDTEntryIn^(0+128),w
 14280  0943  0086               	movwf	6
 14281  0944  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14282  0945  0087               	movwf	7
 14283  0946  3048               	movlw	72
 14284  0947  0081               	movwf	1
 14285                           
 14286                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14287  0948  084D               	movf	_pBDTEntryIn^(0+128),w
 14288  0949  0086               	movwf	6
 14289  094A  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14290  094B  0087               	movwf	7
 14291  094C  1781               	bsf	1,7
 14292                           
 14293                           ;usb_device.c: 2640: }
 14294  094D  0008               	return
 14295  094E                     i1l4803:	
 14296                           
 14297                           ;usb_device.c: 2641: else
 14298                           ;usb_device.c: 2642: {
 14299                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 14300  094E  084D               	movf	_pBDTEntryIn^(0+128),w
 14301  094F  0086               	movwf	6
 14302  0950  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14303  0951  0087               	movwf	7
 14304  0952  3008               	movlw	8
 14305  0953  0081               	movwf	1
 14306                           
 14307                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14308  0954  084D               	movf	_pBDTEntryIn^(0+128),w
 14309  0955  0086               	movwf	6
 14310  0956  084E               	movf	(_pBDTEntryIn+1)^(0+128),w
 14311  0957  0087               	movwf	7
 14312  0958  1781               	bsf	1,7
 14313                           
 14314                           ;usb_device.c: 2645: }
 14315                           ;usb_device.c: 2646: }
 14316                           ;usb_device.c: 2647: }
 14317  0959  0008               	return
 14318  095A                     i1l621:	
 14319                           
 14320                           ;usb_device.c: 2648: else
 14321                           ;usb_device.c: 2649: {
 14322                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 14323  095A  1FC8               	btfss	(_outPipes^(0+128)+2),7	;volatile
 14324  095B  295F               	goto	i1l4807
 14325                           
 14326                           ;usb_device.c: 2656: {
 14327                           ;usb_device.c: 2657: outPipes[0].pFunc();
 14328  095C  084B               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
 14329  095D  084C               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
 14330                           
 14331                           ;usb_device.c: 2658: }
 14332                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 14333  095E  13C8               	bcf	(_outPipes^(0+128)+2),7	;volatile
 14334  095F                     i1l4807:	
 14335                           
 14336                           ;usb_device.c: 2660: }
 14337                           ;usb_device.c: 2662: controlTransferState = 0;
 14338  095F  01DC               	clrf	_controlTransferState^(0+128)	;volatile
 14339  0960  0008               	return
 14340  0961                     __end_ofi1_USBCtrlTrfInHandler:	
 14341                           
 14342                           	psect	text67
 14343  09C9                     __ptext67:	
 14344 ;; *************** function i1_USBCtrlTrfTxService *****************
 14345 ;; Defined at:
 14346 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
 14347 ;; Parameters:    Size  Location     Type
 14348 ;;		None
 14349 ;; Auto vars:     Size  Location     Type
 14350 ;;  USBCtrlTrfTx    1    2[COMMON] unsigned char 
 14351 ;; Return value:  Size  Location     Type
 14352 ;;                  1    wreg      void 
 14353 ;; Registers used:
 14354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14355 ;; Tracked objects:
 14356 ;;		On entry : 0/0
 14357 ;;		On exit  : 0/0
 14358 ;;		Unchanged: 0/0
 14359 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14364 ;;Total ram usage:        3 bytes
 14365 ;; Hardware stack levels used:    1
 14366 ;; This function calls:
 14367 ;;		Nothing
 14368 ;; This function is called by:
 14369 ;;		i1_USBCtrlEPAllowDataStage
 14370 ;;		i1_USBCtrlTrfInHandler
 14371 ;; This function uses a non-reentrant model
 14372 ;;
 14373                           
 14374                           
 14375                           ;psect for function i1_USBCtrlTrfTxService
 14376  09C9                     i1_USBCtrlTrfTxService:	
 14377                           
 14378                           ;usb_device.c: 1773: uint8_t byteToSend;
 14379                           ;usb_device.c: 1777: byteToSend = 16;
 14380                           
 14381                           ;incstack = 0
 14382 ;; hardware stack exceeded
 14383                           ; Regs used in i1_USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 14384  09C9  3010               	movlw	16
 14385  09CA  00F0               	movwf	??i1_USBCtrlTrfTxService
 14386  09CB  0870               	movf	??i1_USBCtrlTrfTxService,w
 14387  09CC  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 14388                           
 14389                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)16)
 14390  09CD  3000               	movlw	0
 14391  09CE  0021               	movlb	1	; select bank1
 14392  09CF  0257               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
 14393  09D0  3010               	movlw	16
 14394  09D1  1903               	skipnz
 14395  09D2  0256               	subwf	(_inPipes^(0+128)+3),w	;volatile
 14396  09D3  1803               	skipnc
 14397  09D4  29E5               	goto	i1l521
 14398                           
 14399                           ;usb_device.c: 1779: {
 14400                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 14401  09D5  0856               	movf	(_inPipes^(0+128)+3),w	;volatile
 14402  09D6  00F0               	movwf	??i1_USBCtrlTrfTxService
 14403  09D7  0870               	movf	??i1_USBCtrlTrfTxService,w
 14404  09D8  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 14405                           
 14406                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 14407  09D9  085D               	movf	_shortPacketStatus^(0+128),w	;volatile
 14408  09DA  1D03               	btfss	3,2
 14409  09DB  29DE               	goto	i1l3923
 14410                           
 14411                           ;usb_device.c: 1788: {
 14412                           ;usb_device.c: 1789: shortPacketStatus = 1;
 14413  09DC  3001               	movlw	1
 14414  09DD  29E2               	goto	L20
 14415  09DE                     i1l3923:	
 14416                           ;usb_device.c: 1790: }
 14417                           
 14418                           
 14419                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 14420  09DE  035D               	decf	_shortPacketStatus^(0+128),w	;volatile
 14421  09DF  1D03               	btfss	3,2
 14422  09E0  29E5               	goto	i1l521
 14423                           
 14424                           ;usb_device.c: 1792: {
 14425                           ;usb_device.c: 1793: shortPacketStatus = 2;
 14426  09E1  3002               	movlw	2
 14427  09E2                     L20:	
 14428  09E2  00F0               	movwf	??i1_USBCtrlTrfTxService
 14429  09E3  0870               	movf	??i1_USBCtrlTrfTxService,w
 14430  09E4  00DD               	movwf	_shortPacketStatus^(0+128)	;volatile
 14431  09E5                     i1l521:	
 14432                           
 14433                           ;usb_device.c: 1794: }
 14434                           ;usb_device.c: 1795: }
 14435                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 14436  09E5  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14437  09E6  00F0               	movwf	??i1_USBCtrlTrfTxService
 14438  09E7  01F1               	clrf	??i1_USBCtrlTrfTxService+1
 14439  09E8  0870               	movf	??i1_USBCtrlTrfTxService,w
 14440  09E9  02D6               	subwf	(_inPipes^(0+128)+3),f	;volatile
 14441  09EA  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 14442  09EB  3BD7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
 14443                           
 14444                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 14445  09EC  084D               	movf	_pBDTEntryIn^(0+128),w
 14446  09ED  3E01               	addlw	1
 14447  09EE  00F0               	movwf	??i1_USBCtrlTrfTxService
 14448  09EF  3000               	movlw	0
 14449  09F0  3D4E               	addwfc	(_pBDTEntryIn+1)^(0+128),w
 14450  09F1  00F1               	movwf	??i1_USBCtrlTrfTxService+1
 14451  09F2  0870               	movf	??i1_USBCtrlTrfTxService,w
 14452  09F3  0086               	movwf	6
 14453  09F4  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 14454  09F5  0087               	movwf	7
 14455  09F6  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14456  09F7  0081               	movwf	1
 14457                           
 14458                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 14459  09F8  3060               	movlw	96
 14460  09F9  00F0               	movwf	??i1_USBCtrlTrfTxService
 14461  09FA  0870               	movf	??i1_USBCtrlTrfTxService,w
 14462  09FB  0022               	movlb	2	; select bank2
 14463  09FC  00CF               	movwf	_pDst^(0+256)
 14464                           
 14465                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 14466  09FD  0021               	movlb	1	; select bank1
 14467  09FE  1C55               	btfss	(_inPipes^(0+128)+2),0	;volatile
 14468  09FF  2A1A               	goto	i1l3943
 14469  0A00  2A37               	goto	i1l3953
 14470  0A01                     i1l3935:	
 14471                           ;usb_device.c: 1810: {
 14472                           ;usb_device.c: 1811: while(byteToSend)
 14473                           
 14474                           
 14475                           ;usb_device.c: 1812: {
 14476                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 14477  0A01  0021               	movlb	1	; select bank1
 14478  0A02  0853               	movf	_inPipes^(0+128),w	;volatile
 14479  0A03  0084               	movwf	4
 14480  0A04  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 14481  0A05  0085               	movwf	5
 14482  0A06  0800               	movf	0,w	;code access
 14483  0A07  00F0               	movwf	??i1_USBCtrlTrfTxService
 14484  0A08  0022               	movlb	2	; select bank2
 14485  0A09  084F               	movf	_pDst^(0+256),w
 14486  0A0A  0086               	movwf	6
 14487  0A0B  0187               	clrf	7
 14488  0A0C  0870               	movf	??i1_USBCtrlTrfTxService,w
 14489  0A0D  0081               	movwf	1
 14490  0A0E  3001               	movlw	1
 14491  0A0F  0021               	movlb	1	; select bank1
 14492  0A10  07D3               	addwf	_inPipes^(0+128),f	;volatile
 14493  0A11  3000               	movlw	0
 14494  0A12  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 14495  0A13  3001               	movlw	1
 14496  0A14  00F0               	movwf	??i1_USBCtrlTrfTxService
 14497  0A15  0870               	movf	??i1_USBCtrlTrfTxService,w
 14498  0A16  0022               	movlb	2	; select bank2
 14499  0A17  07CF               	addwf	_pDst^(0+256),f
 14500                           
 14501                           ;usb_device.c: 1814: byteToSend--;
 14502  0A18  3001               	movlw	1
 14503  0A19  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 14504  0A1A                     i1l3943:	
 14505  0A1A  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14506  0A1B  1903               	btfsc	3,2
 14507  0A1C  0008               	return
 14508  0A1D  2A01               	goto	i1l3935
 14509  0A1E                     i1l3945:	
 14510                           ;usb_device.c: 1817: else
 14511                           ;usb_device.c: 1818: {
 14512                           ;usb_device.c: 1819: while(byteToSend)
 14513                           
 14514                           ;usb_device.c: 1815: }
 14515                           ;usb_device.c: 1816: }
 14516                           
 14517                           
 14518                           ;usb_device.c: 1820: {
 14519                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 14520  0A1E  0021               	movlb	1	; select bank1
 14521  0A1F  0853               	movf	_inPipes^(0+128),w	;volatile
 14522  0A20  0084               	movwf	4
 14523  0A21  0854               	movf	(_inPipes+1)^(0+128),w	;volatile
 14524  0A22  0085               	movwf	5
 14525  0A23  0800               	movf	0,w	;code access
 14526  0A24  00F0               	movwf	??i1_USBCtrlTrfTxService
 14527  0A25  0022               	movlb	2	; select bank2
 14528  0A26  084F               	movf	_pDst^(0+256),w
 14529  0A27  0086               	movwf	6
 14530  0A28  0187               	clrf	7
 14531  0A29  0870               	movf	??i1_USBCtrlTrfTxService,w
 14532  0A2A  0081               	movwf	1
 14533  0A2B  3001               	movlw	1
 14534  0A2C  0021               	movlb	1	; select bank1
 14535  0A2D  07D3               	addwf	_inPipes^(0+128),f	;volatile
 14536  0A2E  3000               	movlw	0
 14537  0A2F  3DD4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 14538  0A30  3001               	movlw	1
 14539  0A31  00F0               	movwf	??i1_USBCtrlTrfTxService
 14540  0A32  0870               	movf	??i1_USBCtrlTrfTxService,w
 14541  0A33  0022               	movlb	2	; select bank2
 14542  0A34  07CF               	addwf	_pDst^(0+256),f
 14543                           
 14544                           ;usb_device.c: 1822: byteToSend--;
 14545  0A35  3001               	movlw	1
 14546  0A36  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 14547  0A37                     i1l3953:	
 14548  0A37  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14549  0A38  1903               	btfsc	3,2
 14550  0A39  0008               	return
 14551  0A3A  2A1E               	goto	i1l3945
 14552  0A3B                     __end_ofi1_USBCtrlTrfTxService:	
 14553  007E                     btemp	set	126	;btemp
 14554  007E                     int$flags	set	126
 14555  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    155
    Data        0
    BSS         355
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0h            8      8       8
    BANK1            80     38      66
    BANK2            80      9      80
    BANK3            80      2      66
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0h[16]), RAM(DATA[4096]), SetupPkt(ABS[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(ABS[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), BDT(ABS[48]), 
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(ABS[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 16
		 -> CtrlTrfData(BANK0h[16]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK4[64]), NULL(NULL[0]), cdc_data_rx(BANK3[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 40
		 -> sd002(CODE[40]), sd001(CODE[18]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    process_gpio_cmd@rsp	PTR unsigned char  size(1) Largest target is 64
		 -> gpio_task@usb_tx_buf(BANK6[64]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> gpio_task@usb_tx_buf(BANK6[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> gpio_task@usb_rx_buf(BANK5[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    S304$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S294$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S294$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S269$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S269$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S269$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S269$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S36_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S36_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S36_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S36_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_USBCtrlEPServiceComplete->i1_USBCtrlEPAllowDataStage
    i1_USBCtrlEPAllowDataStage->i1_USBCtrlTrfTxService
    i1_USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    i1_USBCtrlTrfOutHandler->i1_USBCtrlTrfRxService
    i1_USBCtrlTrfRxService->i1_USBCtrlEPAllowStatusStage
    i1_USBCtrlTrfInHandler->i1_USBCtrlTrfTxService

Critical Paths under _main in BANK0h

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0h

    i1_USBWakeFromSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler
    i1_USBStdSetCfgHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBStdFeatureReqHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_CDCInitEP
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _gpio_task->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _SYSTEM_Initialize->_USBDeviceInit

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBDeviceTasks->i1_USBCtrlEPService
    i1_USBCtrlEPService->i1_USBCtrlTrfSetupHandler
    i1_USBCtrlTrfSetupHandler->i1_USBCheckStdRequest
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler

Critical Paths under _main in BANK2

    _usb_task->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBCheckStdRequest->_USBStdFeatureReqHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _usb_task->_USBDeviceTasks

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   51973
                  _SYSTEM_Initialize
                      _USBDeviceInit
                          _gpio_init
                          _gpio_task
                           _usb_task
 ---------------------------------------------------------------------------------
 (1) _usb_task                                             0     0      0   48223
                       _CDCTxService
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (2) _USBDeviceTasks                                       3     3      0   45929
                                              8 BANK2      1     1      0
                                              0 BANK3      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   1     1      0    6196
                                             34 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           1     1      0    6196
                                             34 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBStallHandler                                      1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBIncrement1msInternalTimers                        1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlEPService                                     3     3      0   26877
                                              5 BANK2      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfSetupHandler                               1     1      0   26540
                                             37 BANK1      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPServiceComplete                             2     2      0     136
                                             19 BANK1      2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowDataStage                              2     2      0     136
                                             17 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCheckStdRequest                                   1     1      0   20208
                                             36 BANK1      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStdSetCfgHandler                                  5     5      0    7070
                                             34 BANK1      1     1      0
                                              0 BANK2      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (7) _memset                                               8     2      6     639
                                             14 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (6) _USBStdGetStatusHandler                               3     3      0      68
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (6) _USBStdGetDscHandler                                  3     3      0       0
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (6) _USBStdFeatureReqHandler                              7     7      0    6874
                                             34 BANK1      2     2      0
                                              0 BANK2      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    6196
                                             28 BANK1      6     0      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckCDCRequest                                   1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCInitEP                                            1     1      0    3045
                                             27 BANK1      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBEnableEndpoint                                    6     5      1     952
                                             21 BANK1      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (6) _USBConfigureEndpoint                                 7     6      1     524
                                             14 BANK1      7     6      1
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfOutHandler                                 2     2      0     167
                                             20 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfRxService                                  4     4      0     167
                                             16 BANK1      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                             14 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfInHandler                                  3     3      0     170
                                             17 BANK1      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfTxService                                  3     3      0     136
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         3     3      0    2294
                                             25 BANK1      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _gpio_task                                            6     6      0    2958
                                             29 BANK1      6     6      0
                       _getsUSBUSART
                   _process_gpio_cmd
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     2      1     169
                                             14 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (2) _process_gpio_cmd                                     4     3      1     222
                                             14 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     3      1    2332
                                             25 BANK1      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBTransferOnePacket                                11     7      4    2093
                                             14 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     396
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        5     5      0     396
                                             14 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          1     1      0   15934
                                             13 BANK1      1     1      0
                   i1_USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) i1_USBDeviceTasks                                    3     3      0   15934
                                             10 BANK1      3     3      0
        i1_USBCtrlEPAllowStatusStage
                 i1_USBCtrlEPService
                    i1_USBDeviceInit
    i1_USBIncrement1msInternalTimers
                  i1_USBStallHandler
                       i1_USBSuspend
               i1_USBWakeFromSuspend
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBWakeFromSuspend                                1     1      0    2016
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBSuspend                                        1     1      0    2016
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USBStallHandler                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_USBIncrement1msInternalTimers                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_USBDeviceInit                                     5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlEPService                                  3     3      0    9546
                                              7 BANK1      3     3      0
              i1_USBCtrlTrfInHandler
             i1_USBCtrlTrfOutHandler
           i1_USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfSetupHandler                            1     1      0    9317
                                              6 BANK1      1     1      0
               i1_USBCheckStdRequest
         i1_USBCtrlEPServiceComplete
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPServiceComplete                          2     2      0      92
                                              5 COMMON     2     2      0
          i1_USBCtrlEPAllowDataStage
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlEPAllowDataStage                           2     2      0      92
                                              3 COMMON     2     2      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) i1_USBCheckStdRequest                                1     1      0    7209
                                              5 BANK1      1     1      0
          i1_USBStdFeatureReqHandler
              i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
              i1_USBStdSetCfgHandler
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) i1_USBStdSetCfgHandler                               5     5      0    2453
                                              6 BANK0h     1     1      0
                                              0 BANK1      4     4      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (17) i1_memset                                            8     2      6     202
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (16) i1_USBStdGetStatusHandler                            3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (16) i1_USBStdGetDscHandler                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (16) i1_USBStdFeatureReqHandler                           7     7      0    2694
                                              6 BANK0h     2     2      0
                                              0 BANK1      5     5      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) i1_USER_USB_CALLBACK_EVENT_HANDLER                   6     0      6    2016
                                              0 BANK0h     6     0      6
                        i1_CDCInitEP
               i1_USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) i1_USBCheckCDCRequest                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_CDCInitEP                                         1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i1_USBTransferOnePacket                             11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (15) i1_USBEnableEndpoint                                 6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) i1_USBConfigureEndpoint                              7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfOutHandler                              2     2      0     114
                                              6 COMMON     2     2      0
              i1_USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlTrfRxService                               4     4      0     114
                                              2 COMMON     4     4      0
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlEPAllowStatusStage                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfInHandler                               3     3      0     115
                                              3 COMMON     3     3      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) i1_USBCtrlTrfTxService                               3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _USBDeviceAttach
     _USBDeviceInit
     _WDT_Initialize
   _USBDeviceInit
   _gpio_init
   _gpio_task
     _getsUSBUSART
       _USBTransferOnePacket
     _process_gpio_cmd
     _putUSBUSART
   _usb_task
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
               _memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _USBDeviceInit
       _USBIncrement1msInternalTimers
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest

 _INTERRUPT_InterruptManager (ROOT)
   i1_USBDeviceTasks
     i1_USBCtrlEPAllowStatusStage
     i1_USBCtrlEPService
       i1_USBCtrlTrfInHandler
         i1_USBCtrlTrfTxService
       i1_USBCtrlTrfOutHandler
         i1_USBCtrlTrfRxService
           i1_USBCtrlEPAllowStatusStage
       i1_USBCtrlTrfSetupHandler
         i1_USBCheckStdRequest
           i1_USBStdFeatureReqHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
           i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
           i1_USBStdSetCfgHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
             i1_memset
           i1_USER_USB_CALLBACK_EVENT_HANDLER
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_USBCheckCDCRequest
         i1_USBCtrlEPServiceComplete
           i1_USBCtrlEPAllowDataStage
             i1_USBCtrlTrfTxService
           i1_USBCtrlEPAllowStatusStage
         i1_USER_USB_CALLBACK_EVENT_HANDLER
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_USBCheckCDCRequest
     i1_USBDeviceInit
     i1_USBIncrement1msInternalTimers
     i1_USBStallHandler
     i1_USBSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USBWakeFromSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USER_USB_CALLBACK_EVENT_HANDLER
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_USBCheckCDCRequest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0h            8      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0h               8      8       8       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     26      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      9      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      42      11       82.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1AA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1AA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Aug 29 00:13:40 2017

                                _USB_SD_Ptr 188F                                           pc 0002  
                               __CFG_CP$OFF 0000                                          l46 08F8  
                             _USBDeviceInit 058F                          __size_of_CDCInitEP 003D  
                               __CFG_LVP$ON 0000      i1USER_USB_CALLBACK_EVENT_HANDLER@event 0058  
      USER_USB_CALLBACK_EVENT_HANDLER@event 00BC      i1USER_USB_CALLBACK_EVENT_HANDLER@pdata 005A  
      USER_USB_CALLBACK_EVENT_HANDLER@pdata 00BE                                         l224 13FF  
                                       l241 136E                 __end_of_USBStdGetDscHandler 0C1F  
                                       l183 1047                                         l423 05D6  
                                       l440 0358                                         l521 0A57  
                                       l434 031A                                         l508 0F17  
                                       l444 0383                                         l621 09C2  
                                       l285 1294                                         l445 03DD  
                                       l446 038C                                         l536 0707  
                                       l633 0897                                         l483 1101  
                                       l635 0840                                         l644 086D  
                                       l573 1581                                         l576 15C8  
                                       l577 158A                                         l578 158D  
                                       _BDT 0020                                         l669 0150  
                                       _UIE 0E92                                         _UIR 0E90  
                  i1_USBStdGetStatusHandler 14D2                                  _USBSuspend 1147  
                      USBStdSetCfgHandler@i 016A                        USBStdSetCfgHandler@p 0167  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                            _USBDeviceTasks 02F7                                __CFG_IESO$ON 0000  
                            _USBDeviceState 00DF                                        S7215 1000  
                     ??_USBCtrlTrfRxService 00B0                              ??_getsUSBUSART 00BA  
                  USBEnableEndpoint@options 00B5                  USBConfigureEndpoint@handle 00B4  
                                      l6011 0064                                        l6013 0066  
                                      l5071 13D2                                        l5063 13C7  
                                      l5081 13DC                                        l6041 00E2  
                                      l6033 00C0                                        l6113 0EE2  
                                      l5059 1106                                        l5075 13D4  
                                      l5091 13F0                                        l6051 00FC  
                                      l6027 0095                                        l6211 084D  
                                      l6221 085C                                        l6117 0EE6  
                                      l6055 0108                                        l6039 00D6  
                                      l6223 085F                                        l6207 0847  
                                      l6135 0F26                                        l6143 0F30  
                                      l6081 0188                                        l6065 013B  
                                      l6049 00F5                                        l6233 087D  
                                      l6209 084A                                        l6075 0157  
                                      l6067 0141                                        l6219 0859  
                                      l6173 070F                                        l6421 0835  
                                      l6237 088C                                        l6175 0728  
                                      l5703 08B7                                        l6079 017D  
                                      l5801 0AA9                                        l6185 0756  
                                      l6409 0809                                        l5713 08CE  
                                      l7217 1275                                        l4843 10ED  
                                      l6451 09B6                                        l6435 097E  
                                      l6187 0762                                        l5635 1430  
                                      l5707 08BE                                        l7219 128F  
                                      l7091 1071                                        l6525 05BD  
                                      l6517 05B0                                        l6509 059F  
                                      l6437 0983                                        l5637 1438  
                                      l5645 11CF                                        l5725 08E6  
                                      l6711 04CD                                        l6455 09C7  
                                      l6447 09A7                                        l5719 08DC  
                                      l6537 05DB                                        l5665 0CBC  
                                      l5657 0CAC                                        l5649 11D7  
                                      l5753 126C                                        l5809 10C2  
                                      l5921 0D6C                                        l5905 0D3F  
                                      l5675 0D03                                        l6731 0501  
                                      l5771 0A50                                        l5747 1266  
                                      l5915 0D56                                        l6627 122C  
                                      l6565 0621                                        l5677 0D1B  
                                      l6725 04F8                                        l5845 0AD7  
                                      l5749 1269                                        l6645 161D  
                                      l6629 122E                                        l6821 0349  
                                      l6559 05FE                                        l6743 0520  
                                      l6751 053E                                        l6719 04D8  
                                      l5783 0A73                                        l5791 0A8C  
                                      l5695 08AB                                        l6647 1620  
                                      l6831 035E                                        l6815 0334  
                                      l6753 0543                                        l6761 0561  
                                      l5793 0A90                                        l5945 0BAB  
                                      l5937 0D9A                                        l5881 1724  
                                      l6649 1623                                        l6809 032E  
                                      l6771 0576                                        l6763 0565  
                                      l5971 0C12                                        l6595 11BA  
                                      l6685 1698                                        l6773 058C  
                                      l5965 0C0C                                        l5957 0BE8  
                                      l5949 0BB5                                        l5877 1712  
                                      l6597 11C3                                        l6845 037B  
                                      l6837 0365                                        l6695 16AF  
                                      l5967 0C0F                                        l5959 0BEB  
                                      l5983 159E                                        l6871 03C4  
                                      l6697 16CE                                        l6689 16AD  
                                      l6953 1351                                        l6769 0570  
                                      l5993 15BC                                        l5897 0D2C  
                                      l6873 03D3                                        l6865 03AB  
                                      l6699 16E3                                        l6955 1373  
                                      l6795 0314                                        l6787 0307  
                                      _LATA 010C                                        _LATC 010E  
                                      u6315 0701                                        i1l46 179F  
                     ??_USBCtrlTrfTxService 00AE                                        u5675 1409  
                                      u6725 05C0                                        u5685 140F  
                                      u5925 171B                                        u5695 1417  
                                      _UCFG 0E91                                        _UEP0 0E98  
                                      u6845 15E4                                        _UEP1 0E99  
                                      _UEIE 0E97                                        _UEIR 0E93  
                                      _UCON 0E8E                                ?i1_CDCInitEP 0070  
                                      _WPUA 020C             i1USBCtrlTrfTxService@byteToSend 0072  
                              __CFG_WRT$OFF 0000                               __CFG_FCMEN$ON 0000  
                           _CDCDataInHandle 013E    i1USBStdFeatureReqHandler@current_ep_data 00A2  
    USBStdFeatureReqHandler@current_ep_data 0169                                        _pDst 014F  
                                      _main 1068                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                               _BaudRateGen 0134                                        fsr1l 0006  
                           _USBDeviceAttach 10F0                                        btemp 007E  
                             __CFG_BOREN$ON 0000                     ?i1_USBCtrlTrfOutHandler 0070  
                                      start 0018                         gpio_task@has_output 00C0  
            __size_ofi1_USBCtrlTrfRxService 009D               __end_ofi1_USBCtrlTrfRxService 1000  
                __end_of_USBCheckStdRequest 0898                      ??_USBCtrlTrfOutHandler 00B4  
                             __CFG_MCLRE$ON 0000                         USBDeviceInit@i_1508 00B1  
                 ??_USBStdFeatureReqHandler 00C2              __size_ofi1_USBCtrlTrfTxService 0072  
                     i1_USBStdGetDscHandler 0B21               __end_ofi1_USBCtrlTrfTxService 0A3B  
                  ??_USBStdGetStatusHandler 00AE                              ?_USBDeviceInit 0070  
            __size_of_OSCILLATOR_Initialize 000A               __end_of_OSCILLATOR_Initialize 104B  
                                     ?_main 0070                  i1USBEnableEndpoint@options 0077  
                             __CFG_WDTE$OFF 0000           __size_of_USBCtrlEPServiceComplete 0092  
                    __end_of_USBDeviceTasks 03E0                   ?_USBCtrlEPServiceComplete 0070  
                      i1_USBCheckStdRequest 17A0                                       i1l133 0012  
                                     i1l423 068A                                       i1l440 043D  
                                     i1l521 09E5                                       i1l434 0402  
                                     i1l508 0E85                                       i1l444 0468  
                                     i1l621 095A                                       i1l285 1264  
                                     i1l445 04BA                                       i1l446 0471  
                                     i1l536 0F78                                       i1l633 17FF  
                                     i1l635 17A8                                       i1l644 17D5  
                                     i1l573 14D6                                       i1l576 1519  
                                     i1l577 14DF                                       i1l578 14E2  
                                     i1l669 02A5                                       _UADDR 0E96  
                                     _PORTC 000E                                       u686m0 1619  
                                     _TRISA 008C                                       _TRISC 008E  
                                     _USTAT 0E8F                                  i1memset@p1 0070  
        __size_of_USBCtrlEPAllowStatusStage 0074             __end_of_USBCtrlEPAllowDataStage 1740  
                                     _sd000 1895                                       _sd001 186B  
                                     _sd002 1843     __end_ofi1_USBIncrement1msInternalTimers 10BD  
  __size_ofi1_USBIncrement1msInternalTimers 0018           ??i1_USBIncrement1msInternalTimers 0070  
          ?i1_USBIncrement1msInternalTimers 0070              ?_USBIncrement1msInternalTimers 0070  
           i1_USBIncrement1msInternalTimers 10A5                              _WDT_Initialize 1FFC  
          __end_ofi1_USBCtrlTrfSetupHandler 148A                         gpio_task@bytes_rcvd 00BF  
                         __end_of_CDCInitEP 133E              __end_ofi1_USBCtrlTrfOutHandler 1301  
                                     status 0003                                       wtemp0 007E  
                          __end_ofi1_memset 10A5          __size_ofi1_USBCtrlEPAllowDataStage 005B  
                 __size_ofi1_USBDeviceTasks 00DD                  ?i1_USBCtrlEPAllowDataStage 0070  
                           putUSBUSART@data 00B0                __size_of_USBStdSetCfgHandler 008E  
                           __initialization 001A                                __end_of_main 1078  
                     _control_signal_bitmap 0151                              __CFG_LPBOR$OFF 0000  
               ?_INTERRUPT_InterruptManager 0070                   __size_of_USBCtrlEPService 005A  
                                    ??_main 00C6                       ?i1_USBCheckStdRequest 0070  
                           ?_USBDeviceTasks 0070                                 ?_USBSuspend 0070  
                       __CFG_USBLSCLK$48MHz 0000                             i1_USBDeviceInit 0645  
                    __end_of_WDT_Initialize 2000                                _cdc_mem_type 0152  
                   __end_of_USBDeviceAttach 110C                            _CDCDataOutHandle 0140  
                                    i1S7221 101A                                      _ACTCON 039B  
                                    _APFCON 011D                                      _ANSELA 018C  
                                    _ANSELC 018E                             getsUSBUSART@len 00B9  
                     __size_of_CDCTxService 00D2                                      i1l3401 13AD  
                                    i1l3403 13B5                                      i1l4119 07B5  
                                    i1l4231 0B69                                      i1l4223 0B36  
                                    i1l4151 165C                                      i1l5111 0665  
                                    i1l5103 0654                                      i1l3505 0C82  
                                    i1l4241 0B90                                      i1l4233 0B6C  
                                    i1l3507 0C9A                                      i1l3603 1766  
                                    i1l4219 0B2C                                      i1l4155 166E  
                                    i1l5131 068F                                      i1l3621 178D  
                                    i1l4245 0B93                                      i1l3615 1784  
                                    i1l4239 0B8D                                      i1l5119 0671  
                                    i1l4521 0FD3                                      i1l3609 1776  
                                    i1l4257 14F2                                      i1l5153 06AC  
                                    i1l4507 0F80                                      i1l3475 116E  
                                    i1l4267 150D                                      i1l4451 0E54  
                                    i1l4509 0F99                                      i1l7021 044A  
                                    i1l7005 042E                                      i1l4519 0FC7  
                                    i1l3479 1175                                      i1l3495 0C3B  
                                    i1l3487 0C2B                                      i1l3591 1753  
                                    i1l4447 0E50                                      i1l5159 06CF  
                                    i1l7015 0443                                      i1l6321 01EB  
                                    i1l6305 01BA                                      i1l3923 09DE  
                                    i1l4803 094E                                      i1l6307 01BC  
                                    i1l6251 0DB9                                      i1l5187 1207  
                                    i1l6093 123C                                      i1l6333 022B  
                                    i1l4469 0E94                                      i1l4477 0E9E  
                                    i1l5189 1209                                      i1l7029 0460  
                                    i1l3935 0A01                                      i1l3943 0A1A  
                                    i1l4807 095F                                      i1l3599 175F  
                                    i1l7223 1245                                      i1l6087 1236  
                                    i1l6343 024A                                      i1l6335 0237  
                                    i1l6327 0215                                      i1l7055 04A2  
                                    i1l3945 0A1E                                      i1l3953 0A37  
                                    i1l4761 12D2                                      i1l7225 125F  
                                    i1l6089 1239                                      i1l6361 0296  
                                    i1l6345 0251                                      i1l3961 1091  
                                    i1l7057 04B1                                      i1l7049 048C  
                                    i1l6291 0E29                                      i1l6275 0DF8  
                                    i1l6259 0DCC                                      i1l4773 12FE  
                                    i1l6373 02D1                                      i1l6349 025D  
                                    i1l6269 0DE2                                      i1l6375 02DC  
                                    i1l6359 0290                                      i1l6463 17AF  
                                    i1l6369 02AC                                      i1l6465 17B2  
                                    i1l4787 0916                                      i1l6475 17C1  
                                    i1l6467 17B5                                      i1l4789 091B  
                                    i1l6477 17C4                                      i1l6493 17F4  
                                    i1l6901 11A3                                      i1l4799 093F  
                                    i1l6479 17C7                                      i1l6489 17E5  
                                    i1l6921 1572                                      i1l6917 156C  
                                    i1l6919 156F                                      i1l6971 03EF  
                                    i1l6993 0413                                      i1l6899 119A  
                                    i1l6979 03FC                                      i1l6999 0419  
                                    u421_25 0F72                                      u501_25 0674  
                                    u290_25 1394                                      u374_25 1665  
                                    u288_25 1386                                      u289_25 138C  
                                    _OSCCON 0099                                      u730_25 1535  
                                    _PLLRDY 04D6                               CDCTxService@i 00BA  
                                    _WDTCON 0097                i1USBTransferOnePacket@handle 0079  
                 __size_of_process_gpio_cmd 0041                              __CFG_PWRTE$OFF 0000  
                         _shortPacketStatus 00DD           __end_ofi1_USBCtrlEPAllowDataStage 168A  
                    ?i1_USBStdGetDscHandler 0070                             USBDeviceTasks@i 016F  
               USBStdFeatureReqHandler@pUEP 0167                    USBTransferOnePacket@data 00AF  
                USBCtrlTrfInHandler@lastDTS 00B3                             ??_USBDeviceInit 00AE  
                              ?_putUSBUSART 00AE                              __CFG_STVREN$ON 0000  
                      __end_of_getsUSBUSART 16E5               __size_ofi1_USBWakeFromSuspend 0020  
                       gpio_task@usb_rx_buf 02A0                         gpio_task@usb_tx_buf 0320  
                         _USBEnableEndpoint 11C6             __size_of_USBStdGetStatusHandler 0058  
                   ??i1_USBStdSetCfgHandler 005E                                      _memset 10BD  
             __size_ofi1_USBCheckCDCRequest 0060                        i1USBEnableEndpoint@p 007A  
                        ?_USBEnableEndpoint 00B5               __size_of_USBTransferOnePacket 0081  
                              _CDCTxService 04BD                             ?_WDT_Initialize 0070  
                       ??_USBEnableEndpoint 00B6                            __end_of_usb_task 1059  
              i1USBConfigureEndpoint@handle 0076                  __end_ofi1_USBCtrlEPService 157D  
                               _CtrlTrfData 0060                           i1_USBStallHandler 11E9  
                      _controlTransferState 00DC                           _SYSTEM_Initialize 1059  
                   __end_of__initialization 0049                  i1USBTransferOnePacket@data 0071  
                        ?i1_USBStallHandler 0070                    i1_USBCtrlTrfSetupHandler 1442  
                      __size_ofi1_CDCInitEP 0035                          ?_SYSTEM_Initialize 0070  
                  __size_of_USBStallHandler 0027                              __pcstackBANK0h 0058  
                    i1USBCtrlTrfRxService@i 0074                         __size_of_USBSuspend 001F  
                            __pcstackCOMMON 0070                   __end_of_USBEnableEndpoint 11E9  
                       ??i1_USBStallHandler 0070                               __end_of_sd000 1899  
                             __end_of_sd001 187D                               __end_of_sd002 186B  
                ??i1_USBStdGetStatusHandler 0070                         ??_SYSTEM_Initialize 00B3  
          __size_of_USBCtrlEPAllowDataStage 005B               __size_of_USBConfigureEndpoint 0042  
                   __end_ofi1_USBDeviceInit 06F2                 __end_of_USBCtrlTrfInHandler 09C9  
                    ??i1_USBCheckStdRequest 00A5                              _OPTION_REGbits 0095  
                                 ?i1_memset 0070                                  _cdc_notice 0120  
                                _cdc_rx_len 0155                                  _cdc_tx_len 0153  
                 __end_ofi1_USBStallHandler 120E                    ??_USBCtrlTrfSetupHandler 00C5  
                   _USBTicksSinceSuspendEnd 0146                            ?_USBDeviceAttach 0070  
                 __end_of_SYSTEM_Initialize 1068                      _USBStdGetStatusHandler 157D  
                                __pbssBANK1 00C6                                  __pbssBANK2 0120  
                                __pbssBANK3 01A0                                  __pbssBANK4 0220  
                                __pbssBANK5 02A0                                  __pbssBANK6 0320  
                        __size_of_gpio_init 0004                          __size_of_gpio_task 0040  
                          i1_USBDeviceTasks 03E0                 __size_of_USBWakeFromSuspend 0020  
                             ?i1_USBSuspend 0070                                 _pBDTEntryIn 00CD  
          __end_of_USBCtrlEPServiceComplete 0F63                       i1_USBCtrlTrfInHandler 08F9  
              ??i1_USBCtrlEPServiceComplete 0075                 __size_of_USBCheckCDCRequest 0061  
                                __pmaintext 1068                        USBCtrlTrfRxService@i 00B2  
                           __CFG_PLLMULT$3x 0000                                  __pintentry 0004  
              __size_ofi1_USBEnableEndpoint 0020                                     ?_memset 00AE  
                                _device_dsc 187D                            _USBCtrlEPService 15D5  
                                _ep_data_in 013B                 __end_of_USBCtrlTrfRxService 078F  
                        _USBCheckStdRequest 0838                           _configDescriptor1 1800  
                                ??i1_memset 0076                 __end_of_USBCtrlTrfTxService 0AAD  
                       _USBStdSetCfgHandler 0D20                                     u732_2m0 1568  
                                   _OSCTUNE 0098                         ?_USBCheckStdRequest 0070  
              __size_of_USBStdGetDscHandler 007F                                     _UIEbits 0E92  
       __size_ofi1_USBCtrlEPServiceComplete 0092                                     _UIRbits 0E90  
                             _cdc_trf_state 0154                    ??i1_USBTransferOnePacket 0074  
                          _process_gpio_cmd 13BF                              ??i1_USBSuspend 005E  
                                   _pCDCDst 0142                                     _pCDCSrc 0144  
                     __size_of_getsUSBUSART 005B                 ??i1_USBCtrlEPAllowDataStage 0073  
           ??_USBIncrement1msInternalTimers 00AE                        ?_USBStdSetCfgHandler 0070  
                                 _CDCInitEP 1301                i1USBCtrlTrfInHandler@lastDTS 0075  
                __size_of_USBEnableEndpoint 0023                        ??_USBCheckStdRequest 00C4  
                     i1_USBCtrlTrfRxService 0F63               __size_of_USBCtrlTrfOutHandler 0037  
                          ??_USBDeviceTasks 01E0                           ??_USBStallHandler 00AE  
                                 ?_usb_task 0070                            ?i1_USBDeviceInit 0070  
                     i1_USBCtrlTrfTxService 09C9                        __size_of_putUSBUSART 001A  
                        getsUSBUSART@buffer 00BC                             __size_of_memset 0019  
                 __end_of_configDescriptor1 1843                                     __ptext1 104B  
                                   __ptext2 02F7                                     __ptext3 11A6  
                                   __ptext4 1147                                     __ptext5 120E  
                                   __ptext6 110C                                     __ptext7 15D5  
                                   __ptext8 148A                                     __ptext9 0ED1  
                                   _inPipes 00D3                           __end_of_gpio_init 103B  
               _USBDeferOUTDataStagePackets 0147                           __end_of_gpio_task 137E  
                     _OSCILLATOR_Initialize 1041                                ??_USBSuspend 00C2  
                  ??_PIN_MANAGER_Initialize 00AE                       i1USBEnableEndpoint@ep 007C  
                __size_ofi1_USBStallHandler 0025                          __end_of_USB_CD_Ptr 189B  
                __size_of_SYSTEM_Initialize 000F             __size_of_USBCtrlTrfSetupHandler 0048  
                                   clrloop0 103C                    ??i1_USBConfigureEndpoint 0071  
                      end_of_initialization 0049                                _getsUSBUSART 168A  
                        __end_of_USB_SD_Ptr 1895                         _pBDTEntryEP0OutNext 00D8  
                                   memset@c 00B0                                     memset@n 00B2  
                                   memset@p 00B4                             _USB1msTickCount 0130  
           _dummy_encapsulated_cmd_response 0156                     ??i1_USBStdGetDscHandler 0070  
                  ?_USBStdFeatureReqHandler 0070                      ?i1_USBCtrlTrfInHandler 0070  
                     ??_USBStdSetCfgHandler 00C2                                  ?_CDCInitEP 0070  
                        __end_of_USBSuspend 1166                     _USBCtrlEPAllowDataStage 16E5  
                                ??_usb_task 00C6                    _USBCtrlEPServiceComplete 0ED1  
                _USBStatusStageEnabledFlag1 014A                  _USBStatusStageEnabledFlag2 0149  
                          ??_WDT_Initialize 00AE                          USBEnableEndpoint@p 00B8  
                       process_gpio_cmd@cmd 00B1              __size_ofi1_USBStdSetCfgHandler 0091  
                       process_gpio_cmd@rsp 00AE               __end_ofi1_USBStdSetCfgHandler 0E3F  
                 i1_USBCtrlEPAllowDataStage 162F                            __CFG_FOSC$INTOSC 0000  
                        _BothEP0OutUOWNsSet 014C                  ??i1_USBCtrlTrfSetupHandler 00A6  
                 USBStdSetCfgHandler@i_2173 0169                __end_ofi1_USBWakeFromSuspend 11A6  
                 USBConfigureEndpoint@EPNum 00B3                ?i1_USBCtrlEPAllowStatusStage 0070  
                ?_USBCtrlEPAllowStatusStage 0070                __end_ofi1_USBCheckCDCRequest 17A0  
     i1USER_USB_CALLBACK_EVENT_HANDLER@size 005C         USER_USB_CALLBACK_EVENT_HANDLER@size 00C0  
                                 _USTATcopy 00E0                    i1USBTransferOnePacket@ep 0078  
              __end_of_USBTransferOnePacket 0D20             __size_ofi1_USBTransferOnePacket 0080  
        __end_ofi1_USBCtrlEPServiceComplete 0ED1                  i1_USBCtrlEPServiceComplete 0E3F  
                         putUSBUSART@length 00AE                          i1_USBCtrlEPService 1526  
                        __CFG_PLLEN$ENABLED 0000                       i1USBDeviceInit@i_1508 0073  
                    ?i1_USBCtrlTrfRxService 0070                    process_gpio_cmd@cmd_type 00B0  
                    _USBCtrlTrfSetupHandler 148A                      ?i1_USBCtrlTrfTxService 0070  
                     __end_of_USBDeviceInit 0645       __end_of_USBIncrement1msInternalTimers 1128  
    __size_of_USBIncrement1msInternalTimers 001C               _USBIncrement1msInternalTimers 110C  
                                 i1memset@c 0072                                   i1memset@n 0074  
                                 i1memset@p 0076                         ?i1_USBCtrlEPService 0070  
                  process_gpio_cmd@gpio_dir 0150                      ?_OSCILLATOR_Initialize 0070  
                            __end_of_memset 10D6                           _USBBusIsSuspended 014D  
                      __end_ofi1_USBSuspend 1147                    __end_ofi1_USBDeviceTasks 04BD  
                       start_initialization 001A                     ?_USBStdGetStatusHandler 0070  
             USBCtrlTrfRxService@byteToRead 00B3             __size_of_PIN_MANAGER_Initialize 0015  
                  ??i1_USBCtrlTrfOutHandler 0076                           __size_ofi1_memset 0018  
                               _cdc_data_rx 01A0                                 _cdc_data_tx 0220  
              __end_of_USBConfigureEndpoint 1442             __end_of_USBStdFeatureReqHandler 01A4  
                       i1_USBEnableEndpoint 1166             __size_ofi1_USBConfigureEndpoint 0041  
                             ??i1_CDCInitEP 007D           __end_of_USBCtrlEPAllowStatusStage 0B21  
                      ??i1_USBCtrlEPService 00A7               ??i1_USBCtrlEPAllowStatusStage 0070  
                  __end_of_USBCtrlEPService 162F               i1USBStdFeatureReqHandler@pUEP 00A0  
                 ??_USBCtrlEPAllowDataStage 00B1                                 ??_CDCInitEP 00BB  
                            USBDeviceInit@i 00B2                              USBDeviceInit@p 00AF  
               i1USBStdSetCfgHandler@i_2173 00A2                      _pBDTEntryEP0OutCurrent 00DE  
        __size_ofi1_USBStdFeatureReqHandler 0153                     USBTransferOnePacket@dir 00AE  
                   USBTransferOnePacket@len 00B1                  ?i1_USBStdFeatureReqHandler 0070  
               i1USBConfigureEndpoint@EPNum 0075                         _USBStdGetDscHandler 0BA0  
                      ?i1_USBEnableEndpoint 0077                                    ??_memset 00B4  
                    i1_USBTransferOnePacket 0C1F                    __end_of_process_gpio_cmd 1400  
             __size_ofi1_USBCheckStdRequest 0060                      _USBActiveConfiguration 00E1  
            __end_of_USBStdGetStatusHandler 15D5                   i1USBTransferOnePacket@dir 0070  
                 i1USBTransferOnePacket@len 0073                                   ___latbits 0002  
                             __pcstackBANK1 00A0                               __pcstackBANK2 0167  
                             __pcstackBANK3 01E0                __size_of_USBCtrlTrfInHandler 0068  
         __size_ofi1_USBStdGetStatusHandler 0054                   ?i1_USBStdGetStatusHandler 0070  
                      ?_USBStdGetDscHandler 0070                  __end_of_USBWakeFromSuspend 11C6  
                           _USBStallHandler 120E                                _pBDTEntryOut 012A  
                __end_of_USBCheckCDCRequest 08F9                    __size_of_USBDeviceAttach 001C  
                       __end_ofi1_CDCInitEP 12CA                      _PIN_MANAGER_Initialize 1078  
                     ??i1_USBEnableEndpoint 0078                      i1_USBConfigureEndpoint 137E  
         __end_ofi1_USBStdFeatureReqHandler 02F7                        i1_USBWakeFromSuspend 1186  
      __size_ofi1_USBCtrlEPAllowStatusStage 0070                        i1_USBCheckCDCRequest 1740  
              ??_INTERRUPT_InterruptManager 00AD                                   __pswtext1 1000  
                                 __pswtext2 101A                           __size_of_usb_task 000E  
                      _USBTransferOnePacket 0C9F                                   _gpio_init 1037  
                                 _gpio_task 133E                __end_of_USBCtrlTrfOutHandler 0838  
                     ??_USBStdGetDscHandler 00AE                                 _ep_data_out 0138  
           __size_ofi1_USBCtrlTrfOutHandler 0037                __size_of_USBCtrlTrfRxService 009D  
             USBConfigureEndpoint@direction 00AE             i1USBCtrlTrfRxService@byteToRead 0075  
                   ??i1_USBCtrlTrfInHandler 0073                __size_of_USBCtrlTrfTxService 0072  
                ??_USBCtrlEPServiceComplete 00B3                                   clear_ram0 103B  
                                  _PIE2bits 0092              __size_ofi1_USBStdGetDscHandler 007F  
             __end_ofi1_USBStdGetDscHandler 0BA0         __size_of_INTERRUPT_InterruptManager 0014  
                                  _PIR2bits 0012                               ??_putUSBUSART 00AF  
                                  _UEP0bits 0E98                  _USBDeferINDataStagePackets 0148  
                     ?i1_USBWakeFromSuspend 0070                 __size_of_USBCheckStdRequest 0060  
                                  _UCONbits 0E8E                       ?i1_USBCheckCDCRequest 0070  
                      _USBConfigureEndpoint 1400                       __size_ofi1_USBSuspend 001F  
          __size_of_USBStdFeatureReqHandler 0157                       ?_USBTransferOnePacket 00AE  
                             ?_CDCTxService 0070                                    i1_memset 108D  
                              _RemoteWakeup 014E                             gpio_task@rx_ptr 00C1  
                           gpio_task@tx_ptr 00C2                                  ?_gpio_init 0070  
                                ?_gpio_task 0070                    __size_ofi1_USBDeviceInit 00AD  
                   __end_of_USBStallHandler 1235                 ??_USBCtrlEPAllowStatusStage 00AE  
               __end_of_USBStdSetCfgHandler 0DAE                                 i1_CDCInitEP 1295  
                        __end_of_device_dsc 188F                     ??i1_USBCtrlTrfRxService 0072  
                         i1USBDeviceTasks@i 00AC                     ?_USBCtrlTrfSetupHandler 0070  
               ?i1_USBCtrlEPServiceComplete 0070                                i1_USBSuspend 1128  
                   USBStdGetStatusHandler@p 00AF                     ??i1_USBCtrlTrfTxService 0070  
                    USBTransferOnePacket@ep 00B6                      i1_USBCtrlTrfOutHandler 12CA  
                                  _SetupPkt 0050                     ??_OSCILLATOR_Initialize 00AE  
                     ?_USBConfigureEndpoint 00AE                           ??_USBDeviceAttach 00AE  
                 i1USBStdGetStatusHandler@p 0071                         __end_of_putUSBUSART 10F0  
                               _line_coding 015E                              ??_CDCTxService 00B9  
                     i1_USBStdSetCfgHandler 0DAE                           ?i1_USBDeviceTasks 0070  
                   __size_of_USBDeviceTasks 00E9                                    __ptext10 16E5  
                                  __ptext11 0838                                    __ptext20 11C6  
                                  __ptext12 0D20                                    __ptext21 1400  
                                  __ptext13 10BD                                    __ptext30 13BF  
                                  __ptext22 0801                                    __ptext14 157D  
                                  __ptext31 168A                                    __ptext23 06F2  
                                  __ptext15 0BA0                                    __ptext32 0C9F  
                                  __ptext24 0AAD                                    __ptext16 004D  
                                  __ptext41 03E0                                    __ptext33 1037  
                                  __ptext25 0961                                    __ptext17 1265  
                                  __ptext50 162F                                    __ptext42 1186  
                                  __ptext34 1059                                    __ptext26 0A3B  
                                  __ptext18 0898                                    __ptext51 17A0  
                                  __ptext43 1128                                    __ptext35 1FFC  
                                  __ptext27 04BD                                    __ptext19 1301  
                                  __ptext60 0C1F                                    __ptext52 0DAE  
                                  __ptext44 11E9                                    __ptext36 058F  
                                  __ptext28 133E                                    __ptext61 1166  
                                  __ptext53 108D                                    __ptext45 10A5  
                                  __ptext37 10F0                                    __ptext29 10D6  
                                  __ptext62 137E                                    __ptext54 14D2  
                                  __ptext46 0645                                    __ptext38 1078  
                                  __ptext63 12CA                                    __ptext55 0B21  
                                  __ptext47 1526                                    __ptext39 1041  
                                  __ptext64 0F63                                    __ptext56 01A4  
                                  __ptext48 1442                                    __ptext65 078F  
                                  __ptext57 1235                                    __ptext49 0E3F  
                                  __ptext66 08F9                                    __ptext58 1740  
                                  __ptext67 09C9                                    __ptext59 1295  
                        ??i1_USBDeviceTasks 00AA              __end_of_USBCtrlTrfSetupHandler 14D2  
                             __size_of_main 0010                           ?_USBCtrlEPService 0070  
           i1USBConfigureEndpoint@direction 0070                          ??_USBCtrlEPService 016C  
                       _USBCtrlTrfInHandler 0961           __size_ofi1_USBCtrlTrfSetupHandler 0048  
                    ??i1_USBWakeFromSuspend 005E                   ?i1_USBCtrlTrfSetupHandler 0070  
                                  _outPipes 00C6                 ??i1_USBStdFeatureReqHandler 005E  
                    ??i1_USBCheckCDCRequest 0070                        _USBCtrlTrfOutHandler 0801  
                                  int$flags 007E                     ?i1_USBTransferOnePacket 0070  
                 _USBCtrlEPAllowStatusStage 0AAD                                    _usb_task 104B  
          __end_ofi1_USBStdGetStatusHandler 1526          __end_of_INTERRUPT_InterruptManager 0018  
                _INTERRUPT_InterruptManager 0004                      ??_USBTransferOnePacket 00B2  
                 _USBDeferStatusStagePacket 00DA                    CDCTxService@byte_to_send 00BB  
                         ?_process_gpio_cmd 00AE                            i1USBDeviceInit@i 0074  
                          i1USBDeviceInit@p 0071                                  _INTCONbits 000B  
                      ?_USBCtrlTrfInHandler 0070                                 ??_gpio_init 00AE  
                        ??_process_gpio_cmd 00AF                                 ??_gpio_task 00BD  
             USBCtrlTrfTxService@byteToSend 00B0                                    memset@p1 00AE  
                          ?_USBStallHandler 0070                    USBStdFeatureReqHandler@p 016A  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
                    __size_of_USBDeviceInit 00B6                 __size_ofi1_USBCtrlEPService 0057  
 __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 1265  __size_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 0030  
   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1295    __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0030  
        ?i1_USER_USB_CALLBACK_EVENT_HANDLER 0058         ??i1_USER_USB_CALLBACK_EVENT_HANDLER 007E  
         ??_USER_USB_CALLBACK_EVENT_HANDLER 00C2            ?_USER_USB_CALLBACK_EVENT_HANDLER 00BC  
         i1_USER_USB_CALLBACK_EVENT_HANDLER 1235             _USER_USB_CALLBACK_EVENT_HANDLER 1265  
                         ??i1_USBDeviceInit 0070                __end_ofi1_USBCheckStdRequest 1800  
                   ?_PIN_MANAGER_Initialize 0070                           __CFG_CLKOUTEN$OFF 0000  
                   ?i1_USBConfigureEndpoint 0070              __end_ofi1_USBTransferOnePacket 0C9F  
                    ??_USBConfigureEndpoint 00AF                       ?_USBCtrlTrfOutHandler 0070  
                               _putUSBUSART 10D6                         _USBCtrlTrfRxService 06F2  
                        _USBWakeFromSuspend 11A6                     _USBStdFeatureReqHandler 004D  
                        _USBCheckCDCRequest 0898                         _USBCtrlTrfTxService 0A3B  
                             __pstringtext1 188F                               __pstringtext2 1899  
                             __pstringtext3 1800                               __pstringtext4 1843  
                             __pstringtext5 186B                               __pstringtext6 187D  
                             __pstringtext7 1895                  i1USBStdFeatureReqHandler@p 00A3  
                    ?i1_USBStdSetCfgHandler 0070                      i1USBStdSetCfgHandler@i 00A3  
                    i1USBStdSetCfgHandler@p 00A0                         __CFG_CPUDIV$CLKDIV6 0000  
                       ?_USBWakeFromSuspend 0070                       ??_USBCtrlTrfInHandler 00B1  
                     _USBAlternateInterface 0165                         ?_USBCheckCDCRequest 0070  
                       USBEnableEndpoint@ep 00BA                   i1_USBStdFeatureReqHandler 01A4  
                           _endpoint_number 00DB         __end_ofi1_USBCtrlEPAllowStatusStage 07FF  
               i1_USBCtrlEPAllowStatusStage 078F                        ?_USBCtrlTrfRxService 0070  
                             ?_getsUSBUSART 00B9              __end_of_PIN_MANAGER_Initialize 108D  
                  ?_USBCtrlEPAllowDataStage 0070                        ?_USBCtrlTrfTxService 0070  
            __size_ofi1_USBCtrlTrfInHandler 0068                _USBStatusStageTimeoutCounter 014B  
             __end_ofi1_USBCtrlTrfInHandler 0961              __end_ofi1_USBConfigureEndpoint 13BF  
                      ??_USBWakeFromSuspend 00C2                 __end_ofi1_USBEnableEndpoint 1186  
                USBTransferOnePacket@handle 00B7                        __end_of_CDCTxService 058F  
                      ??_USBCheckCDCRequest 00AE                                  _USB_CD_Ptr 1899  
